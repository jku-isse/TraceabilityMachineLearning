-- MySQL dump 10.13  Distrib 5.7.17, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: databasegantt
-- ------------------------------------------------------
-- Server version	8.0.11

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `parameters`
--

DROP TABLE IF EXISTS `parameters`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `parameters` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `parametername` varchar(200) DEFAULT NULL,
  `parametertype` varchar(200) DEFAULT NULL,
  `parameterclass` int(11) DEFAULT NULL,
  `classid` int(11) DEFAULT NULL,
  `classname` varchar(200) DEFAULT NULL,
  `methodid` int(11) DEFAULT NULL,
  `methodname` longtext,
  `isreturn` tinyint(4) NOT NULL,
  `sourcecode` longtext,
  PRIMARY KEY (`id`),
  UNIQUE KEY `id_UNIQUE` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3844 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `parameters`
--

LOCK TABLES `parameters` WRITE;
/*!40000 ALTER TABLE `parameters` DISABLE KEYS */;
INSERT INTO `parameters` VALUES (1,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,9,'net.sourceforge.ganttproject.ChartComponentBase',1,'net.sourceforge.ganttproject.ChartComponentBase.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.zoom.ZoomManager)',0,'public ChartComponentBase(IGanttProject project, UIFacade uiFacade, ZoomManager zoomManager) {\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myZoomManager = zoomManager;\r\n    myChartViewState = new ChartViewState(project, uiFacade);\r\n    myChartViewState.addStateListener(new ChartViewState.Listener() {\r\n        public void startDateChanged(ChartViewState.ViewStateEvent e) {\r\n            repaint();\r\n        }\r\n\r\n        public void zoomChanged(ZoomEvent e) {\r\n            getImplementation().zoomChanged(e);\r\n        }\r\n    });\r\n    myMouseWheelListener = new ChartComponentBase.MouseWheelListenerBase();\r\n    addMouseListener(getMouseListener());\r\n    addMouseMotionListener(getMouseMotionListener());\r\n    addMouseWheelListener(myMouseWheelListener);\r\n}'),(2,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,9,'net.sourceforge.ganttproject.ChartComponentBase',1,'net.sourceforge.ganttproject.ChartComponentBase.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.zoom.ZoomManager)',0,'public ChartComponentBase(IGanttProject project, UIFacade uiFacade, ZoomManager zoomManager) {\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myZoomManager = zoomManager;\r\n    myChartViewState = new ChartViewState(project, uiFacade);\r\n    myChartViewState.addStateListener(new ChartViewState.Listener() {\r\n        public void startDateChanged(ChartViewState.ViewStateEvent e) {\r\n            repaint();\r\n        }\r\n\r\n        public void zoomChanged(ZoomEvent e) {\r\n            getImplementation().zoomChanged(e);\r\n        }\r\n    });\r\n    myMouseWheelListener = new ChartComponentBase.MouseWheelListenerBase();\r\n    addMouseListener(getMouseListener());\r\n    addMouseMotionListener(getMouseMotionListener());\r\n    addMouseWheelListener(myMouseWheelListener);\r\n}'),(3,'ZoomManager zoomManager','net.sourceforge.ganttproject.gui.zoom.ZoomManager',425,9,'net.sourceforge.ganttproject.ChartComponentBase',1,'net.sourceforge.ganttproject.ChartComponentBase.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.zoom.ZoomManager)',0,'public ChartComponentBase(IGanttProject project, UIFacade uiFacade, ZoomManager zoomManager) {\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myZoomManager = zoomManager;\r\n    myChartViewState = new ChartViewState(project, uiFacade);\r\n    myChartViewState.addStateListener(new ChartViewState.Listener() {\r\n        public void startDateChanged(ChartViewState.ViewStateEvent e) {\r\n            repaint();\r\n        }\r\n\r\n        public void zoomChanged(ZoomEvent e) {\r\n            getImplementation().zoomChanged(e);\r\n        }\r\n    });\r\n    myMouseWheelListener = new ChartComponentBase.MouseWheelListenerBase();\r\n    addMouseListener(getMouseListener());\r\n    addMouseMotionListener(getMouseMotionListener());\r\n    addMouseWheelListener(myMouseWheelListener);\r\n}'),(4,'MouseEvent e','java.awt.event.MouseEvent',0,4,'net.sourceforge.ganttproject.ChartComponentBase$MouseInteractionBase',65,'net.sourceforge.ganttproject.ChartComponentBase$MouseInteractionBase.-init-(java.awt.event.MouseEvent)',0,'protected MouseInteractionBase(MouseEvent e) {\r\n    myStartX = e.getX();\r\n}'),(5,'MouseEvent e','java.awt.event.MouseEvent',0,8,'net.sourceforge.ganttproject.ChartComponentBase$ScrollViewInteraction',83,'net.sourceforge.ganttproject.ChartComponentBase$ScrollViewInteraction.-init-(java.awt.event.MouseEvent)',0,'protected ScrollViewInteraction(MouseEvent e) {\r\n    super(e);\r\n}'),(6,'ChartModelBase chartModel','net.sourceforge.ganttproject.chart.ChartModelBase',170,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',28,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.-init-(net.sourceforge.ganttproject.chart.ChartModelBase)',0,'private AbstractChartImplementation(ChartModelBase chartModel) {\r\n    myChartModel = chartModel;\r\n}'),(7,'Class adapter','java.lang.Class',0,9,'net.sourceforge.ganttproject.ChartComponentBase',10,'net.sourceforge.ganttproject.ChartComponentBase.getAdapter(java.lang.Class)',0,'public Object getAdapter(Class adapter) {\r\n    return null;\r\n}'),(8,'ChartSelection selection','net.sourceforge.ganttproject.chart.ChartSelection',177,9,'net.sourceforge.ganttproject.ChartComponentBase',7,'net.sourceforge.ganttproject.ChartComponentBase.canPaste(net.sourceforge.ganttproject.chart.ChartSelection)',0,'public IStatus canPaste(ChartSelection selection) {\r\n    return getImplementation().canPaste(selection);\r\n}'),(9,'ChartSelection selection','net.sourceforge.ganttproject.chart.ChartSelection',177,9,'net.sourceforge.ganttproject.ChartComponentBase',24,'net.sourceforge.ganttproject.ChartComponentBase.paste(net.sourceforge.ganttproject.chart.ChartSelection)',0,'public void paste(ChartSelection selection) {\r\n    getImplementation().paste(selection);\r\n}'),(10,'ChartSelectionListener listener','net.sourceforge.ganttproject.chart.ChartSelectionListener',178,9,'net.sourceforge.ganttproject.ChartComponentBase',6,'net.sourceforge.ganttproject.ChartComponentBase.addSelectionListener(net.sourceforge.ganttproject.chart.ChartSelectionListener)',0,'public void addSelectionListener(ChartSelectionListener listener) {\r\n    getImplementation().addSelectionListener(listener);\r\n}'),(11,'ChartSelectionListener listener','net.sourceforge.ganttproject.chart.ChartSelectionListener',178,9,'net.sourceforge.ganttproject.ChartComponentBase',25,'net.sourceforge.ganttproject.ChartComponentBase.removeSelectionListener(net.sourceforge.ganttproject.chart.ChartSelectionListener)',0,'public void removeSelectionListener(ChartSelectionListener listener) {\r\n    getImplementation().removeSelectionListener(listener);\r\n}'),(12,'MouseEvent event','java.awt.event.MouseEvent',0,3,'net.sourceforge.ganttproject.ChartComponentBase$MouseInteraction',62,'net.sourceforge.ganttproject.ChartComponentBase$MouseInteraction.apply(java.awt.event.MouseEvent)',0,'abstract void apply(MouseEvent event);'),(13,'Graphics g','java.awt.Graphics',0,3,'net.sourceforge.ganttproject.ChartComponentBase$MouseInteraction',64,'net.sourceforge.ganttproject.ChartComponentBase$MouseInteraction.paint(java.awt.Graphics)',0,'void paint(Graphics g);'),(14,'MouseEvent event','java.awt.event.MouseEvent',0,4,'net.sourceforge.ganttproject.ChartComponentBase$MouseInteractionBase',66,'net.sourceforge.ganttproject.ChartComponentBase$MouseInteractionBase.getLengthDiff(java.awt.event.MouseEvent)',0,'protected float getLengthDiff(MouseEvent event) {\r\n    float diff = getChartModel().calculateLength(myStartX, event.getX(), event.getY());\r\n    return diff;\r\n}'),(15,'Graphics g','java.awt.Graphics',0,4,'net.sourceforge.ganttproject.ChartComponentBase$MouseInteractionBase',68,'net.sourceforge.ganttproject.ChartComponentBase$MouseInteractionBase.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n}'),(16,'MouseEvent event','java.awt.event.MouseEvent',0,8,'net.sourceforge.ganttproject.ChartComponentBase$ScrollViewInteraction',84,'net.sourceforge.ganttproject.ChartComponentBase$ScrollViewInteraction.apply(java.awt.event.MouseEvent)',0,'public void apply(MouseEvent event) {\r\n    float absoluteDiff = getLengthDiff(event);\r\n    float relativeDiff = (myPreviousAbsoluteDiff) - absoluteDiff;\r\n    TaskLength diff = getTaskManager().createLength(getViewState().getBottomTimeUnit(), relativeDiff);\r\n    float daysF = diff.getLength(getTimeUnitStack().getDefaultTimeUnit());\r\n    int days = ((int) (daysF));\r\n    if (days == 0) {\r\n        return;\r\n    }\r\n    if (days > 0) {\r\n        getUIFacade().getScrollingManager().scrollRight();\r\n    }\r\n    if (days < 0) {\r\n        getUIFacade().getScrollingManager().scrollLeft();\r\n    }\r\n    myPreviousAbsoluteDiff = absoluteDiff;\r\n}'),(17,'MouseEvent e','java.awt.event.MouseEvent',0,5,'net.sourceforge.ganttproject.ChartComponentBase$MouseListenerBase',73,'net.sourceforge.ganttproject.ChartComponentBase$MouseListenerBase.mousePressed(java.awt.event.MouseEvent)',0,'public void mousePressed(MouseEvent e) {\r\n    super.mousePressed(e);\r\n    if ((e.isPopupTrigger()) || ((e.getButton()) == (MouseEvent.BUTTON3))) {\r\n        Action[] actions = getPopupMenuActions();\r\n        if ((actions.length) > 0) {\r\n            getUIFacade().showPopupMenu(this, actions, e.getX(), e.getY());\r\n        }\r\n        return;\r\n    }\r\n    switch (e.getButton()) {\r\n        case MouseEvent.BUTTON1 :\r\n            {\r\n                processLeftButton(e);\r\n                break;\r\n            }\r\n        default :\r\n            {\r\n            }\r\n    }\r\n}'),(18,'MouseEvent e','java.awt.event.MouseEvent',0,5,'net.sourceforge.ganttproject.ChartComponentBase$MouseListenerBase',75,'net.sourceforge.ganttproject.ChartComponentBase$MouseListenerBase.processLeftButton(java.awt.event.MouseEvent)',0,'protected void processLeftButton(MouseEvent e) {\r\n    getImplementation().beginScrollViewInteraction(e);\r\n}'),(19,'MouseEvent e','java.awt.event.MouseEvent',0,5,'net.sourceforge.ganttproject.ChartComponentBase$MouseListenerBase',74,'net.sourceforge.ganttproject.ChartComponentBase$MouseListenerBase.mouseReleased(java.awt.event.MouseEvent)',0,'public void mouseReleased(MouseEvent e) {\r\n    super.mouseReleased(e);\r\n    getImplementation().finishInteraction();\r\n}'),(20,'MouseEvent e','java.awt.event.MouseEvent',0,5,'net.sourceforge.ganttproject.ChartComponentBase$MouseListenerBase',71,'net.sourceforge.ganttproject.ChartComponentBase$MouseListenerBase.mouseEntered(java.awt.event.MouseEvent)',0,'public void mouseEntered(MouseEvent e) {\r\n    setDefaultCursor();\r\n}'),(21,'MouseEvent e','java.awt.event.MouseEvent',0,5,'net.sourceforge.ganttproject.ChartComponentBase$MouseListenerBase',72,'net.sourceforge.ganttproject.ChartComponentBase$MouseListenerBase.mouseExited(java.awt.event.MouseEvent)',0,'public void mouseExited(MouseEvent e) {\r\n    setCursor(new Cursor(Cursor.DEFAULT_CURSOR));\r\n}'),(22,'MouseEvent e','java.awt.event.MouseEvent',0,6,'net.sourceforge.ganttproject.ChartComponentBase$MouseMotionListenerBase',77,'net.sourceforge.ganttproject.ChartComponentBase$MouseMotionListenerBase.mouseDragged(java.awt.event.MouseEvent)',0,'public void mouseDragged(MouseEvent e) {\r\n    super.mouseDragged(e);\r\n    ChartComponentBase.MouseInteraction activeInteraction = getImplementation().getActiveInteraction();\r\n    if (activeInteraction != null) {\r\n        activeInteraction.apply(e);\r\n        // myUIFacade.repaint2();\r\n        // e.consume();\r\n        // return;\r\n    }\r\n}'),(23,'MouseWheelEvent e','java.awt.event.MouseWheelEvent',0,7,'net.sourceforge.ganttproject.ChartComponentBase$MouseWheelListenerBase',82,'net.sourceforge.ganttproject.ChartComponentBase$MouseWheelListenerBase.mouseWheelMoved(java.awt.event.MouseWheelEvent)',0,'public void mouseWheelMoved(MouseWheelEvent e) {\r\n    if (isRotationUp(e)) {\r\n        fireZoomOut();\r\n    } else {\r\n        fireZoomIn();\r\n    }\r\n}'),(24,'MouseWheelEvent e','java.awt.event.MouseWheelEvent',0,7,'net.sourceforge.ganttproject.ChartComponentBase$MouseWheelListenerBase',81,'net.sourceforge.ganttproject.ChartComponentBase$MouseWheelListenerBase.isRotationUp(java.awt.event.MouseWheelEvent)',0,'private boolean isRotationUp(MouseWheelEvent e) {\r\n    return (e.getWheelRotation()) < 0;\r\n}'),(25,'MouseEvent e','java.awt.event.MouseEvent',0,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',30,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.beginScrollViewInteraction(java.awt.event.MouseEvent)',0,'public void beginScrollViewInteraction(MouseEvent e) {\r\n    setActiveInteraction(new ChartComponentBase.ScrollViewInteraction(e));\r\n}'),(26,'ChartComponentBase.MouseInteraction myActiveInteraction','net.sourceforge.ganttproject.ChartComponentBase$MouseInteraction',3,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',50,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.setActiveInteraction(net.sourceforge.ganttproject.ChartComponentBase$MouseInteraction)',0,'protected void setActiveInteraction(ChartComponentBase.MouseInteraction myActiveInteraction) {\r\n    this.myActiveInteraction = myActiveInteraction;\r\n}'),(27,'ZoomEvent e','net.sourceforge.ganttproject.gui.zoom.ZoomEvent',422,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',52,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.zoomChanged(net.sourceforge.ganttproject.gui.zoom.ZoomEvent)',0,'public void zoomChanged(ZoomEvent e) {\r\n    invalidate();\r\n    repaint();\r\n}'),(28,'Graphics g','java.awt.Graphics',0,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',46,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.paintComponent(java.awt.Graphics)',0,'public void paintComponent(Graphics g) {\r\n}'),(29,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',43,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.getRenderedImage(net.sourceforge.ganttproject.GanttExportSettings)',0,'// ///////////////////////////////////////////////////////////\r\n// interface Chart\r\npublic RenderedImage getRenderedImage(GanttExportSettings settings) {\r\n    // TODO Auto-generated method stub\r\n    return null;\r\n}'),(30,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',37,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.getChart(net.sourceforge.ganttproject.GanttExportSettings)',0,'public BufferedImage getChart(GanttExportSettings settings) {\r\n    // TODO Auto-generated method stub\r\n    return null;\r\n}'),(31,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',51,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.setTaskManager(net.sourceforge.ganttproject.task.TaskManager)',0,'public void setTaskManager(TaskManager taskManager) {\r\n    throw new UnsupportedOperationException();\r\n}'),(32,'Class arg0','java.lang.Class',0,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',36,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.getAdapter(java.lang.Class)',0,'public Object getAdapter(Class arg0) {\r\n    return null;\r\n}'),(33,'ChartSelection selection','net.sourceforge.ganttproject.chart.ChartSelection',177,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',31,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.canPaste(net.sourceforge.ganttproject.chart.ChartSelection)',0,'public IStatus canPaste(ChartSelection selection) {\r\n    throw new UnsupportedOperationException();\r\n}'),(34,'ChartSelection selection','net.sourceforge.ganttproject.chart.ChartSelection',177,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',47,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.paste(net.sourceforge.ganttproject.chart.ChartSelection)',0,'public void paste(ChartSelection selection) {\r\n    throw new UnsupportedOperationException();\r\n}'),(35,'ChartSelectionListener listener','net.sourceforge.ganttproject.chart.ChartSelectionListener',178,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',29,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.addSelectionListener(net.sourceforge.ganttproject.chart.ChartSelectionListener)',0,'public void addSelectionListener(ChartSelectionListener listener) {\r\n    mySelectionListeners.add(listener);\r\n}'),(36,'ChartSelectionListener listener','net.sourceforge.ganttproject.chart.ChartSelectionListener',178,1,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',48,'net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation.removeSelectionListener(net.sourceforge.ganttproject.chart.ChartSelectionListener)',0,'public void removeSelectionListener(ChartSelectionListener listener) {\r\n    mySelectionListeners.remove(listener);\r\n}'),(37,'CustomPropertyDefinition definition','net.sourceforge.ganttproject.CustomPropertyDefinition',11,12,'net.sourceforge.ganttproject.CustomPropertyHolder',95,'net.sourceforge.ganttproject.CustomPropertyHolder.addCustomProperty(net.sourceforge.ganttproject.CustomPropertyDefinition,java.lang.String)',0,'CustomProperty addCustomProperty(CustomPropertyDefinition definition, String defaultValueAsString);'),(38,'net.sourceforge.ganttproject.CustomProperty','net.sourceforge.ganttproject.CustomProperty',10,12,'net.sourceforge.ganttproject.CustomPropertyHolder',95,'net.sourceforge.ganttproject.CustomPropertyHolder.addCustomProperty(net.sourceforge.ganttproject.CustomPropertyDefinition,java.lang.String)',1,'CustomProperty addCustomProperty(CustomPropertyDefinition definition, String defaultValueAsString);'),(39,'String defaultValueAsString','java.lang.String',0,12,'net.sourceforge.ganttproject.CustomPropertyHolder',95,'net.sourceforge.ganttproject.CustomPropertyHolder.addCustomProperty(net.sourceforge.ganttproject.CustomPropertyDefinition,java.lang.String)',0,'CustomProperty addCustomProperty(CustomPropertyDefinition definition, String defaultValueAsString);'),(40,'String id','java.lang.String',0,14,'net.sourceforge.ganttproject.CustomPropertyManager',98,'net.sourceforge.ganttproject.CustomPropertyManager.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString);'),(41,'net.sourceforge.ganttproject.CustomPropertyDefinition','net.sourceforge.ganttproject.CustomPropertyDefinition',11,14,'net.sourceforge.ganttproject.CustomPropertyManager',98,'net.sourceforge.ganttproject.CustomPropertyManager.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',1,'CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString);'),(42,'String typeAsString','java.lang.String',0,14,'net.sourceforge.ganttproject.CustomPropertyManager',98,'net.sourceforge.ganttproject.CustomPropertyManager.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString);'),(43,'String name','java.lang.String',0,14,'net.sourceforge.ganttproject.CustomPropertyManager',98,'net.sourceforge.ganttproject.CustomPropertyManager.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString);'),(44,'String defaultValueAsString','java.lang.String',0,14,'net.sourceforge.ganttproject.CustomPropertyManager',98,'net.sourceforge.ganttproject.CustomPropertyManager.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString);'),(45,'CustomPropertyManager source','net.sourceforge.ganttproject.CustomPropertyManager',14,14,'net.sourceforge.ganttproject.CustomPropertyManager',100,'net.sourceforge.ganttproject.CustomPropertyManager.importData(net.sourceforge.ganttproject.CustomPropertyManager)',0,'void importData(CustomPropertyManager source);'),(46,'Class fieldType','java.lang.Class',0,13,'net.sourceforge.ganttproject.CustomPropertyManager$PropertyTypeEncoder',103,'net.sourceforge.ganttproject.CustomPropertyManager$PropertyTypeEncoder.encodeFieldType(java.lang.Class)',0,'public static String encodeFieldType(Class fieldType) {\r\n    String result = null;\r\n    if (fieldType.equals(String.class)) {\r\n        result = \"text\";\r\n    } else\r\n        if (fieldType.equals(Boolean.class)) {\r\n            result = \"boolean\";\r\n        } else\r\n            if (fieldType.equals(Integer.class)) {\r\n                result = \"int\";\r\n            } else\r\n                if (fieldType.equals(Double.class)) {\r\n                    result = \"double\";\r\n                } else\r\n                    if (fieldType.isAssignableFrom(GregorianCalendar.class)) {\r\n                        result = \"date\";\r\n                    }\r\n\r\n\r\n\r\n\r\n    return result;\r\n}'),(47,'final String typeAsString','java.lang.String',0,13,'net.sourceforge.ganttproject.CustomPropertyManager$PropertyTypeEncoder',102,'net.sourceforge.ganttproject.CustomPropertyManager$PropertyTypeEncoder.decodeTypeAndDefaultValue(java.lang.String,java.lang.String)',0,'public static CustomPropertyDefinition decodeTypeAndDefaultValue(final String typeAsString, final String valueAsString) {\r\n    final Class type;\r\n    final Object defaultValue;\r\n    if (typeAsString.equals(\"text\")) {\r\n        type = String.class;\r\n        defaultValue = (valueAsString == null) ? null : valueAsString.toString();\r\n    } else\r\n        if (typeAsString.equals(\"boolean\")) {\r\n            type = Boolean.class;\r\n            defaultValue = (valueAsString == null) ? null : Boolean.valueOf(valueAsString);\r\n        } else\r\n            if (typeAsString.equals(\"int\")) {\r\n                type = Integer.class;\r\n                defaultValue = (valueAsString == null) ? null : Integer.valueOf(valueAsString);\r\n            } else\r\n                if (typeAsString.equals(\"double\")) {\r\n                    type = Double.class;\r\n                    defaultValue = (valueAsString == null) ? null : Double.valueOf(valueAsString);\r\n                } else\r\n                    if (typeAsString.equals(\"date\")) {\r\n                        type = GregorianCalendar.class;\r\n                        if (valueAsString != null) {\r\n                            GanttCalendar c = null;\r\n                            try {\r\n                                c = new GanttCalendar(DateParser.parse(valueAsString));\r\n                            } catch (InvalidDateException e) {\r\n                                if (!(GPLogger.log(e))) {\r\n                                    e.printStackTrace(System.err);\r\n                                }\r\n                            }\r\n                            defaultValue = c;\r\n                        } else {\r\n                            defaultValue = null;\r\n                        }\r\n                    } else {\r\n                        type = String.class;// TODO remove if(...text)\r\n\r\n                        defaultValue = \"\";\r\n                    }\r\n\r\n\r\n\r\n\r\n    return new CustomPropertyDefinition() {\r\n        public Object getDefaultValue() {\r\n            return defaultValue;\r\n        }\r\n\r\n        public String getDefaultValueAsString() {\r\n            return valueAsString;\r\n        }\r\n\r\n        public String getID() {\r\n            return null;\r\n        }\r\n\r\n        public String getName() {\r\n            return null;\r\n        }\r\n\r\n        public Class getType() {\r\n            return type;\r\n        }\r\n\r\n        public String getTypeAsString() {\r\n            return typeAsString;\r\n        }\r\n    };\r\n}'),(48,'net.sourceforge.ganttproject.CustomPropertyDefinition','net.sourceforge.ganttproject.CustomPropertyDefinition',11,13,'net.sourceforge.ganttproject.CustomPropertyManager$PropertyTypeEncoder',102,'net.sourceforge.ganttproject.CustomPropertyManager$PropertyTypeEncoder.decodeTypeAndDefaultValue(java.lang.String,java.lang.String)',1,'public static CustomPropertyDefinition decodeTypeAndDefaultValue(final String typeAsString, final String valueAsString) {\r\n    final Class type;\r\n    final Object defaultValue;\r\n    if (typeAsString.equals(\"text\")) {\r\n        type = String.class;\r\n        defaultValue = (valueAsString == null) ? null : valueAsString.toString();\r\n    } else\r\n        if (typeAsString.equals(\"boolean\")) {\r\n            type = Boolean.class;\r\n            defaultValue = (valueAsString == null) ? null : Boolean.valueOf(valueAsString);\r\n        } else\r\n            if (typeAsString.equals(\"int\")) {\r\n                type = Integer.class;\r\n                defaultValue = (valueAsString == null) ? null : Integer.valueOf(valueAsString);\r\n            } else\r\n                if (typeAsString.equals(\"double\")) {\r\n                    type = Double.class;\r\n                    defaultValue = (valueAsString == null) ? null : Double.valueOf(valueAsString);\r\n                } else\r\n                    if (typeAsString.equals(\"date\")) {\r\n                        type = GregorianCalendar.class;\r\n                        if (valueAsString != null) {\r\n                            GanttCalendar c = null;\r\n                            try {\r\n                                c = new GanttCalendar(DateParser.parse(valueAsString));\r\n                            } catch (InvalidDateException e) {\r\n                                if (!(GPLogger.log(e))) {\r\n                                    e.printStackTrace(System.err);\r\n                                }\r\n                            }\r\n                            defaultValue = c;\r\n                        } else {\r\n                            defaultValue = null;\r\n                        }\r\n                    } else {\r\n                        type = String.class;// TODO remove if(...text)\r\n\r\n                        defaultValue = \"\";\r\n                    }\r\n\r\n\r\n\r\n\r\n    return new CustomPropertyDefinition() {\r\n        public Object getDefaultValue() {\r\n            return defaultValue;\r\n        }\r\n\r\n        public String getDefaultValueAsString() {\r\n            return valueAsString;\r\n        }\r\n\r\n        public String getID() {\r\n            return null;\r\n        }\r\n\r\n        public String getName() {\r\n            return null;\r\n        }\r\n\r\n        public Class getType() {\r\n            return type;\r\n        }\r\n\r\n        public String getTypeAsString() {\r\n            return typeAsString;\r\n        }\r\n    };\r\n}'),(49,'final String valueAsString','java.lang.String',0,13,'net.sourceforge.ganttproject.CustomPropertyManager$PropertyTypeEncoder',102,'net.sourceforge.ganttproject.CustomPropertyManager$PropertyTypeEncoder.decodeTypeAndDefaultValue(java.lang.String,java.lang.String)',0,'public static CustomPropertyDefinition decodeTypeAndDefaultValue(final String typeAsString, final String valueAsString) {\r\n    final Class type;\r\n    final Object defaultValue;\r\n    if (typeAsString.equals(\"text\")) {\r\n        type = String.class;\r\n        defaultValue = (valueAsString == null) ? null : valueAsString.toString();\r\n    } else\r\n        if (typeAsString.equals(\"boolean\")) {\r\n            type = Boolean.class;\r\n            defaultValue = (valueAsString == null) ? null : Boolean.valueOf(valueAsString);\r\n        } else\r\n            if (typeAsString.equals(\"int\")) {\r\n                type = Integer.class;\r\n                defaultValue = (valueAsString == null) ? null : Integer.valueOf(valueAsString);\r\n            } else\r\n                if (typeAsString.equals(\"double\")) {\r\n                    type = Double.class;\r\n                    defaultValue = (valueAsString == null) ? null : Double.valueOf(valueAsString);\r\n                } else\r\n                    if (typeAsString.equals(\"date\")) {\r\n                        type = GregorianCalendar.class;\r\n                        if (valueAsString != null) {\r\n                            GanttCalendar c = null;\r\n                            try {\r\n                                c = new GanttCalendar(DateParser.parse(valueAsString));\r\n                            } catch (InvalidDateException e) {\r\n                                if (!(GPLogger.log(e))) {\r\n                                    e.printStackTrace(System.err);\r\n                                }\r\n                            }\r\n                            defaultValue = c;\r\n                        } else {\r\n                            defaultValue = null;\r\n                        }\r\n                    } else {\r\n                        type = String.class;// TODO remove if(...text)\r\n\r\n                        defaultValue = \"\";\r\n                    }\r\n\r\n\r\n\r\n\r\n    return new CustomPropertyDefinition() {\r\n        public Object getDefaultValue() {\r\n            return defaultValue;\r\n        }\r\n\r\n        public String getDefaultValueAsString() {\r\n            return valueAsString;\r\n        }\r\n\r\n        public String getID() {\r\n            return null;\r\n        }\r\n\r\n        public String getName() {\r\n            return null;\r\n        }\r\n\r\n        public Class getType() {\r\n            return type;\r\n        }\r\n\r\n        public String getTypeAsString() {\r\n            return typeAsString;\r\n        }\r\n    };\r\n}'),(50,'UIFacadeImpl uiFacade','net.sourceforge.ganttproject.UIFacadeImpl',103,15,'net.sourceforge.ganttproject.ErrorNotifier',104,'net.sourceforge.ganttproject.ErrorNotifier.-init-(net.sourceforge.ganttproject.UIFacadeImpl)',0,'ErrorNotifier(UIFacadeImpl uiFacade) {\r\n    myUIFacade = uiFacade;\r\n}'),(51,'Throwable e','java.lang.Throwable',0,15,'net.sourceforge.ganttproject.ErrorNotifier',105,'net.sourceforge.ganttproject.ErrorNotifier.add(java.lang.Throwable)',0,'void add(Throwable e) {\r\n    myErrors.add(e.getMessage());\r\n}'),(52,'TreeModel treeModel','javax.swing.tree.TreeModel',0,16,'net.sourceforge.ganttproject.FacadeInvalidator',107,'net.sourceforge.ganttproject.FacadeInvalidator.-init-(javax.swing.tree.TreeModel)',0,'public FacadeInvalidator(TreeModel treeModel) {\r\n    isValid = false;\r\n    treeModel.addTreeModelListener(this);\r\n}'),(53,'TreeModelEvent e','javax.swing.event.TreeModelEvent',0,16,'net.sourceforge.ganttproject.FacadeInvalidator',113,'net.sourceforge.ganttproject.FacadeInvalidator.treeNodesChanged(javax.swing.event.TreeModelEvent)',0,'public void treeNodesChanged(TreeModelEvent e) {\r\n    isValid = false;\r\n}'),(54,'TreeModelEvent e','javax.swing.event.TreeModelEvent',0,16,'net.sourceforge.ganttproject.FacadeInvalidator',114,'net.sourceforge.ganttproject.FacadeInvalidator.treeNodesInserted(javax.swing.event.TreeModelEvent)',0,'public void treeNodesInserted(TreeModelEvent e) {\r\n    isValid = false;\r\n}'),(55,'TreeModelEvent e','javax.swing.event.TreeModelEvent',0,16,'net.sourceforge.ganttproject.FacadeInvalidator',115,'net.sourceforge.ganttproject.FacadeInvalidator.treeNodesRemoved(javax.swing.event.TreeModelEvent)',0,'public void treeNodesRemoved(TreeModelEvent e) {\r\n    isValid = false;\r\n}'),(56,'TreeModelEvent e','javax.swing.event.TreeModelEvent',0,16,'net.sourceforge.ganttproject.FacadeInvalidator',116,'net.sourceforge.ganttproject.FacadeInvalidator.treeStructureChanged(javax.swing.event.TreeModelEvent)',0,'public void treeStructureChanged(TreeModelEvent e) {\r\n    isValid = false;\r\n}'),(57,'Throwable e','java.lang.Throwable',0,17,'net.sourceforge.ganttproject.GPLogger',119,'net.sourceforge.ganttproject.GPLogger.log(java.lang.Throwable)',0,'public static boolean log(Throwable e) {\r\n    if ((GPLogger.ourHandler) == null) {\r\n        return false;\r\n    }\r\n    GPLogger.ourLogger.log(Level.WARNING, e.getMessage(), e);\r\n    if ((GPLogger.ourUIFacade) != null) {\r\n        GPLogger.ourUIFacade.logErrorMessage(e);\r\n    }\r\n    return true;\r\n}'),(58,'String message','java.lang.String',0,17,'net.sourceforge.ganttproject.GPLogger',118,'net.sourceforge.ganttproject.GPLogger.log(java.lang.String)',0,'public static void log(String message) {\r\n    GPLogger.ourLogger.log(Level.INFO, message);\r\n}'),(59,'UIFacade uifacade','net.sourceforge.ganttproject.gui.UIFacade',337,17,'net.sourceforge.ganttproject.GPLogger',120,'net.sourceforge.ganttproject.GPLogger.setUIFacade(net.sourceforge.ganttproject.gui.UIFacade)',0,'public static void setUIFacade(UIFacade uifacade) {\r\n    GPLogger.ourUIFacade = uifacade;\r\n}'),(60,'String title','java.lang.String',0,18,'net.sourceforge.ganttproject.GPToolBar',123,'net.sourceforge.ganttproject.GPToolBar.-init-(java.lang.String,int,net.sourceforge.ganttproject.GanttOptions)',0,'public GPToolBar(String title, int toolBarPosition, GanttOptions options) {\r\n    super(title, toolBarPosition);\r\n    setBorderPainted(true);\r\n    setRollover(true);\r\n    setFloatable(true);\r\n    this.options = options;\r\n}'),(61,'int toolBarPosition','int',0,18,'net.sourceforge.ganttproject.GPToolBar',123,'net.sourceforge.ganttproject.GPToolBar.-init-(java.lang.String,int,net.sourceforge.ganttproject.GanttOptions)',0,'public GPToolBar(String title, int toolBarPosition, GanttOptions options) {\r\n    super(title, toolBarPosition);\r\n    setBorderPainted(true);\r\n    setRollover(true);\r\n    setFloatable(true);\r\n    this.options = options;\r\n}'),(62,'GanttOptions options','net.sourceforge.ganttproject.GanttOptions',48,18,'net.sourceforge.ganttproject.GPToolBar',123,'net.sourceforge.ganttproject.GPToolBar.-init-(java.lang.String,int,net.sourceforge.ganttproject.GanttOptions)',0,'public GPToolBar(String title, int toolBarPosition, GanttOptions options) {\r\n    super(title, toolBarPosition);\r\n    setBorderPainted(true);\r\n    setRollover(true);\r\n    setFloatable(true);\r\n    this.options = options;\r\n}'),(63,'/* <JButton> */\r\nList buttons','java.util.List',0,18,'net.sourceforge.ganttproject.GPToolBar',124,'net.sourceforge.ganttproject.GPToolBar.populate(java.util.List)',0,'void populate(/* <JButton> */\r\nList buttons) {\r\n    removeAll();\r\n    myButtons = new ArrayList(buttons.size());\r\n    for (int i = 0; i < (buttons.size()); i++) {\r\n        Object nextButton = buttons.get(i);\r\n        if (GPToolBar.SEPARATOR_OBJECT.equals(nextButton)) {\r\n            int size = Integer.parseInt(options.getIconSize());\r\n            // toolBar.addSeparator(new Dimension(size, size));\r\n            ImageIcon icon;\r\n            if ((getOrientation()) == (JToolBar.HORIZONTAL)) {\r\n                icon = new ImageIcon(getClass().getResource(\"/icons/sepV_16.png\"));\r\n            } else {\r\n                icon = new ImageIcon(getClass().getResource(\"/icons/sepH_16.png\"));\r\n            }\r\n            add(new JLabel(icon));\r\n        } else {\r\n            add(((AbstractButton) (nextButton)));\r\n            if (nextButton instanceof TestGanttRolloverButton) {\r\n                myButtons.add(nextButton);\r\n            }\r\n        }\r\n    }\r\n    invalidate();\r\n}'),(64,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,20,'net.sourceforge.ganttproject.GPTreeTableBase',126,'net.sourceforge.ganttproject.GPTreeTableBase.-init-(net.sourceforge.ganttproject.IGanttProject,org.jdesktop.swing.treetable.TreeTableModel)',0,'protected GPTreeTableBase(IGanttProject project, TreeTableModel model) {\r\n    super(new JXTreeTable(model) {\r\n        protected boolean processKeyBinding(KeyStroke ks, KeyEvent e, int condition, boolean pressed) {\r\n            if ((e.isAltDown()) || (e.isControlDown())) {\r\n                putClientProperty(\"JTable.autoStartsEdit\", Boolean.FALSE);\r\n            }\r\n            boolean result = super.processKeyBinding(ks, e, condition, pressed);\r\n            putClientProperty(\"JTable.autoStartsEdit\", Boolean.TRUE);\r\n            return result;\r\n        }\r\n    });\r\n    myProject = project;\r\n}'),(65,'TreeTableModel model','org.jdesktop.swing.treetable.TreeTableModel',0,20,'net.sourceforge.ganttproject.GPTreeTableBase',126,'net.sourceforge.ganttproject.GPTreeTableBase.-init-(net.sourceforge.ganttproject.IGanttProject,org.jdesktop.swing.treetable.TreeTableModel)',0,'protected GPTreeTableBase(IGanttProject project, TreeTableModel model) {\r\n    super(new JXTreeTable(model) {\r\n        protected boolean processKeyBinding(KeyStroke ks, KeyEvent e, int condition, boolean pressed) {\r\n            if ((e.isAltDown()) || (e.isControlDown())) {\r\n                putClientProperty(\"JTable.autoStartsEdit\", Boolean.FALSE);\r\n            }\r\n            boolean result = super.processKeyBinding(ks, e, condition, pressed);\r\n            putClientProperty(\"JTable.autoStartsEdit\", Boolean.TRUE);\r\n            return result;\r\n        }\r\n    });\r\n    myProject = project;\r\n}'),(66,'int modelIndex','int',0,20,'net.sourceforge.ganttproject.GPTreeTableBase',130,'net.sourceforge.ganttproject.GPTreeTableBase.newTableColumnExt(int)',0,'protected TableColumnExt newTableColumnExt(int modelIndex) {\r\n    TableColumnExt result = new TableColumnExt(modelIndex);\r\n    TableCellEditor defaultEditor = getTreeTable().getDefaultEditor(getTreeTableModel().getColumnClass(modelIndex));\r\n    if (defaultEditor != null) {\r\n        result.setCellEditor(new TreeTableCellEditorImpl(defaultEditor));\r\n    }\r\n    return result;\r\n}'),(67,'JTable arg0','javax.swing.JTable',0,19,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor',133,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    JTextField result = ((JTextField) (super.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4)));\r\n    result.selectAll();\r\n    return result;\r\n}'),(68,'Object arg1','java.lang.Object',0,19,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor',133,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    JTextField result = ((JTextField) (super.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4)));\r\n    result.selectAll();\r\n    return result;\r\n}'),(69,'boolean arg2','boolean',0,19,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor',133,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    JTextField result = ((JTextField) (super.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4)));\r\n    result.selectAll();\r\n    return result;\r\n}'),(70,'int arg3','int',0,19,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor',133,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    JTextField result = ((JTextField) (super.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4)));\r\n    result.selectAll();\r\n    return result;\r\n}'),(71,'int arg4','int',0,19,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor',133,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    JTextField result = ((JTextField) (super.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4)));\r\n    result.selectAll();\r\n    return result;\r\n}'),(72,'String dateString','java.lang.String',0,19,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor',134,'net.sourceforge.ganttproject.GPTreeTableBase$DateCellEditor.parseDate(java.lang.String)',0,'protected abstract Date parseDate(String dateString);'),(73,'boolean isVisible','boolean',0,22,'net.sourceforge.ganttproject.GPView',137,'net.sourceforge.ganttproject.GPView.setVisible(boolean)',0,'void setVisible(boolean isVisible);'),(74,'IAdaptable adaptable','org.eclipse.core.runtime.IAdaptable',0,23,'net.sourceforge.ganttproject.GPViewManager',138,'net.sourceforge.ganttproject.GPViewManager.createView(org.eclipse.core.runtime.IAdaptable,javax.swing.Icon)',0,'GPView createView(IAdaptable adaptable, Icon icon);'),(75,'net.sourceforge.ganttproject.GPView','net.sourceforge.ganttproject.GPView',22,23,'net.sourceforge.ganttproject.GPViewManager',138,'net.sourceforge.ganttproject.GPViewManager.createView(org.eclipse.core.runtime.IAdaptable,javax.swing.Icon)',1,'GPView createView(IAdaptable adaptable, Icon icon);'),(76,'Icon icon','javax.swing.Icon',0,23,'net.sourceforge.ganttproject.GPViewManager',138,'net.sourceforge.ganttproject.GPViewManager.createView(org.eclipse.core.runtime.IAdaptable,javax.swing.Icon)',0,'GPView createView(IAdaptable adaptable, Icon icon);'),(77,'int year','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',143,'net.sourceforge.ganttproject.GanttCalendar.-init-(int,int,int)',0,'/**\r\n * Constructor with a year, a month and a day\r\n */\r\npublic GanttCalendar(int year, int month, int date) {\r\n    super(year, month, date);\r\n}'),(78,'int month','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',143,'net.sourceforge.ganttproject.GanttCalendar.-init-(int,int,int)',0,'/**\r\n * Constructor with a year, a month and a day\r\n */\r\npublic GanttCalendar(int year, int month, int date) {\r\n    super(year, month, date);\r\n}'),(79,'int date','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',143,'net.sourceforge.ganttproject.GanttCalendar.-init-(int,int,int)',0,'/**\r\n * Constructor with a year, a month and a day\r\n */\r\npublic GanttCalendar(int year, int month, int date) {\r\n    super(year, month, date);\r\n}'),(80,'GanttCalendar g','net.sourceforge.ganttproject.GanttCalendar',24,24,'net.sourceforge.ganttproject.GanttCalendar',144,'net.sourceforge.ganttproject.GanttCalendar.-init-(net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n * Copy constructor\r\n */\r\npublic GanttCalendar(GanttCalendar g) {\r\n    super(g.getYear(), g.getMonth(), g.getDate());\r\n}'),(81,'Date date','java.util.Date',0,24,'net.sourceforge.ganttproject.GanttCalendar',145,'net.sourceforge.ganttproject.GanttCalendar.-init-(java.util.Date)',0,'public GanttCalendar(Date date) {\r\n    super();\r\n    setTime(date);\r\n}'),(82,'boolean fixed','boolean',0,24,'net.sourceforge.ganttproject.GanttCalendar',172,'net.sourceforge.ganttproject.GanttCalendar.setFixed(boolean)',0,'public void setFixed(boolean fixed) {\r\n    isFixed = fixed;\r\n}'),(83,'String s','java.lang.String',0,24,'net.sourceforge.ganttproject.GanttCalendar',170,'net.sourceforge.ganttproject.GanttCalendar.parseXMLDate(java.lang.String)',0,'// ////////////////////////////////////////////////////////////////////////////////////////////////////\r\npublic static GanttCalendar parseXMLDate(String s) {\r\n    GanttCalendar result = new GanttCalendar();\r\n    result.clear();\r\n    try {\r\n        Date date = DateParser.parse(s);\r\n        result.setTime(date);\r\n    } catch (InvalidDateException e) {\r\n        // Get \"/\" caracters\r\n        int fb = s.indexOf(/);\r\n        int sb = s.indexOf(/, (fb + 1));\r\n        // Get all fiels\r\n        String d = s.substring(0, fb);\r\n        String m = s.substring((fb + 1), sb);\r\n        String y = s.substring((sb + 1));\r\n        // Set the date\r\n        result.set(Calendar.YEAR, new Integer(y).hashCode());\r\n        result.set(Calendar.MONTH, ((new Integer(m).hashCode()) - 1));\r\n        result.set(Calendar.DATE, new Integer(d).hashCode());\r\n    }\r\n    return result;\r\n}'),(84,'net.sourceforge.ganttproject.GanttCalendar','net.sourceforge.ganttproject.GanttCalendar',24,24,'net.sourceforge.ganttproject.GanttCalendar',170,'net.sourceforge.ganttproject.GanttCalendar.parseXMLDate(java.lang.String)',1,'// ////////////////////////////////////////////////////////////////////////////////////////////////////\r\npublic static GanttCalendar parseXMLDate(String s) {\r\n    GanttCalendar result = new GanttCalendar();\r\n    result.clear();\r\n    try {\r\n        Date date = DateParser.parse(s);\r\n        result.setTime(date);\r\n    } catch (InvalidDateException e) {\r\n        // Get \"/\" caracters\r\n        int fb = s.indexOf(/);\r\n        int sb = s.indexOf(/, (fb + 1));\r\n        // Get all fiels\r\n        String d = s.substring(0, fb);\r\n        String m = s.substring((fb + 1), sb);\r\n        String y = s.substring((sb + 1));\r\n        // Set the date\r\n        result.set(Calendar.YEAR, new Integer(y).hashCode());\r\n        result.set(Calendar.MONTH, ((new Integer(m).hashCode()) - 1));\r\n        result.set(Calendar.DATE, new Integer(d).hashCode());\r\n    }\r\n    return result;\r\n}'),(85,'int y','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',174,'net.sourceforge.ganttproject.GanttCalendar.setYear(int)',0,'/**\r\n * Change the year of the date\r\n */\r\npublic void setYear(int y) {\r\n    this.set(Calendar.YEAR, y);\r\n}'),(86,'int m','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',173,'net.sourceforge.ganttproject.GanttCalendar.setMonth(int)',0,'/**\r\n * Change the month of the date\r\n */\r\npublic void setMonth(int m) {\r\n    this.set(Calendar.MONTH, m);\r\n}'),(87,'int d','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',171,'net.sourceforge.ganttproject.GanttCalendar.setDay(int)',0,'/**\r\n * Change the date of the date\r\n */\r\npublic void setDay(int d) {\r\n    this.set(Calendar.DAY_OF_MONTH, d);\r\n}'),(88,'int dayNumber','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',147,'net.sourceforge.ganttproject.GanttCalendar.add(int)',0,'/**\r\n * Add a number of day to the current date\r\n */\r\npublic void add(int dayNumber) {\r\n    this.add(Calendar.DATE, dayNumber);\r\n}'),(89,'int dayNumber','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',169,'net.sourceforge.ganttproject.GanttCalendar.newAdd(int)',0,'/**\r\n * Change the year of the date, and return a copy\r\n */\r\npublic GanttCalendar newAdd(int dayNumber) {\r\n    GanttCalendar gc = new GanttCalendar(getYear(), getMonth(), getDate());\r\n    gc.add(Calendar.DATE, dayNumber);\r\n    return gc;\r\n}'),(90,'net.sourceforge.ganttproject.GanttCalendar','net.sourceforge.ganttproject.GanttCalendar',24,24,'net.sourceforge.ganttproject.GanttCalendar',169,'net.sourceforge.ganttproject.GanttCalendar.newAdd(int)',1,'/**\r\n * Change the year of the date, and return a copy\r\n */\r\npublic GanttCalendar newAdd(int dayNumber) {\r\n    GanttCalendar gc = new GanttCalendar(getYear(), getMonth(), getDate());\r\n    gc.add(Calendar.DATE, dayNumber);\r\n    return gc;\r\n}'),(91,'GanttCalendar d','net.sourceforge.ganttproject.GanttCalendar',24,24,'net.sourceforge.ganttproject.GanttCalendar',150,'net.sourceforge.ganttproject.GanttCalendar.diff(net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n *\r\n *\r\n * @deprecated Use TimeUnit related methods\r\nReturn the difference (in day) between two date\r\n */\r\npublic int diff(GanttCalendar d) {\r\n    int res = 0;\r\n    GanttCalendar d1;\r\n    GanttCalendar d2;\r\n    if ((this.compareTo(d)) == 0)\r\n        return res;\r\n    else\r\n        if ((compareTo(d)) < 0) {\r\n            d1 = this.Clone();\r\n            d2 = new GanttCalendar(d);\r\n        } else {\r\n            d1 = new GanttCalendar(d);\r\n            d2 = this.Clone();\r\n        }\r\n\r\n    while ((d1.compareTo(d2)) != 0) {\r\n        d1.add(1);\r\n        res++;\r\n    } \r\n    return res;\r\n}'),(92,'int number','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',168,'net.sourceforge.ganttproject.GanttCalendar.module(int)',0,'/**\r\n * This function returns the signal represented by an int\r\n */\r\nprivate int module(int number) {\r\n    if (number > 0)\r\n        return 1;\r\n    else\r\n        if (number < 0)\r\n            return -1;\r\n        else\r\n            return 0;\r\n\r\n\r\n}'),(93,'GanttCalendar when','net.sourceforge.ganttproject.GanttCalendar',24,24,'net.sourceforge.ganttproject.GanttCalendar',149,'net.sourceforge.ganttproject.GanttCalendar.compareTo(net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n * This function compare two date\r\n *\r\n * @return 0 If the two date are equals\r\n * @return -1 if the date is before when\r\n * @return 1 if the date is after when\r\n */\r\npublic int compareTo(GanttCalendar when) {\r\n    int[] comparissons = new int[]{ Calendar.YEAR, Calendar.MONTH, Calendar.DATE };\r\n    for (int i = 0; i < (comparissons.length); i++) {\r\n        switch (module(((this.get(comparissons[i])) - (when.get(comparissons[i]))))) {\r\n            case -1 :\r\n                return -1;\r\n            case 1 :\r\n                return 1;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    return 0;\r\n}'),(94,'GanttCalendar when','net.sourceforge.ganttproject.GanttCalendar',24,24,'net.sourceforge.ganttproject.GanttCalendar',151,'net.sourceforge.ganttproject.GanttCalendar.equals(net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n * Is the date equals to when\r\n */\r\npublic boolean equals(GanttCalendar when) {\r\n    return (((getYear()) == (when.getYear())) && ((getMonth()) == (when.getMonth()))) && ((getDay()) == (when.getDay()));\r\n}'),(95,'int field','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',164,'net.sourceforge.ganttproject.GanttCalendar.go(int,int)',0,'/**\r\n * Change the value of a filed\r\n */\r\npublic void go(int field, int value) {\r\n    this.add(field, value);\r\n}'),(96,'int value','int',0,24,'net.sourceforge.ganttproject.GanttCalendar',164,'net.sourceforge.ganttproject.GanttCalendar.go(int,int)',0,'/**\r\n * Change the value of a filed\r\n */\r\npublic void go(int field, int value) {\r\n    this.add(field, value);\r\n}'),(97,'Calendar o','java.util.Calendar',0,24,'net.sourceforge.ganttproject.GanttCalendar',148,'net.sourceforge.ganttproject.GanttCalendar.compareTo(java.util.Calendar)',0,'public int compareTo(Calendar o) {\r\n    return compareTo(((GanttCalendar) (o)));\r\n}'),(98,'ArrayList dayList','java.util.ArrayList',0,25,'net.sourceforge.ganttproject.GanttCalendarDays',178,'net.sourceforge.ganttproject.GanttCalendarDays.-init-(java.util.ArrayList)',0,'/* constructor */\r\npublic GanttCalendarDays(ArrayList dayList) {\r\n    this.dayList = dayList;\r\n}'),(99,'GanttCalendar day','net.sourceforge.ganttproject.GanttCalendar',24,25,'net.sourceforge.ganttproject.GanttCalendarDays',179,'net.sourceforge.ganttproject.GanttCalendarDays.insert(net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n * Insert the day on the daylist\r\n */\r\npublic void insert(GanttCalendar day) {\r\n    if (!(dayList.contains(day)))\r\n        dayList.add(day);\r\n\r\n}'),(100,'GanttCalendar day','net.sourceforge.ganttproject.GanttCalendar',24,25,'net.sourceforge.ganttproject.GanttCalendarDays',180,'net.sourceforge.ganttproject.GanttCalendarDays.remove(net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n * Remove the selected day\r\n */\r\npublic void remove(GanttCalendar day) {\r\n    int index = dayList.indexOf(day);\r\n    if (index >= 0)\r\n        dayList.remove(index);\r\n\r\n}'),(101,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,26,'net.sourceforge.ganttproject.GanttChartTabContentPanel',181,'net.sourceforge.ganttproject.GanttChartTabContentPanel.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.TaskTreeUIFacade,java.awt.Component)',0,'GanttChartTabContentPanel(IGanttProject project, UIFacade workbenchFacade, TaskTreeUIFacade treeFacade, Component ganttChart) {\r\n    myProject = project;\r\n    myWorkbenchFacade = workbenchFacade;\r\n    myTreeFacade = treeFacade;\r\n    myTaskTree = treeFacade.getTreeComponent();\r\n    myGanttChart = ganttChart;\r\n}'),(102,'UIFacade workbenchFacade','net.sourceforge.ganttproject.gui.UIFacade',337,26,'net.sourceforge.ganttproject.GanttChartTabContentPanel',181,'net.sourceforge.ganttproject.GanttChartTabContentPanel.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.TaskTreeUIFacade,java.awt.Component)',0,'GanttChartTabContentPanel(IGanttProject project, UIFacade workbenchFacade, TaskTreeUIFacade treeFacade, Component ganttChart) {\r\n    myProject = project;\r\n    myWorkbenchFacade = workbenchFacade;\r\n    myTreeFacade = treeFacade;\r\n    myTaskTree = treeFacade.getTreeComponent();\r\n    myGanttChart = ganttChart;\r\n}'),(103,'TaskTreeUIFacade treeFacade','net.sourceforge.ganttproject.gui.TaskTreeUIFacade',326,26,'net.sourceforge.ganttproject.GanttChartTabContentPanel',181,'net.sourceforge.ganttproject.GanttChartTabContentPanel.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.TaskTreeUIFacade,java.awt.Component)',0,'GanttChartTabContentPanel(IGanttProject project, UIFacade workbenchFacade, TaskTreeUIFacade treeFacade, Component ganttChart) {\r\n    myProject = project;\r\n    myWorkbenchFacade = workbenchFacade;\r\n    myTreeFacade = treeFacade;\r\n    myTaskTree = treeFacade.getTreeComponent();\r\n    myGanttChart = ganttChart;\r\n}'),(104,'Component ganttChart','java.awt.Component',0,26,'net.sourceforge.ganttproject.GanttChartTabContentPanel',181,'net.sourceforge.ganttproject.GanttChartTabContentPanel.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.TaskTreeUIFacade,java.awt.Component)',0,'GanttChartTabContentPanel(IGanttProject project, UIFacade workbenchFacade, TaskTreeUIFacade treeFacade, Component ganttChart) {\r\n    myProject = project;\r\n    myWorkbenchFacade = workbenchFacade;\r\n    myTreeFacade = treeFacade;\r\n    myTaskTree = treeFacade.getTreeComponent();\r\n    myGanttChart = ganttChart;\r\n}'),(105,'int location','int',0,26,'net.sourceforge.ganttproject.GanttChartTabContentPanel',187,'net.sourceforge.ganttproject.GanttChartTabContentPanel.setDividerLocation(int)',0,'void setDividerLocation(int location) {\r\n    mySplitPane.setDividerLocation(location);\r\n}'),(106,'Class adapter','java.lang.Class',0,26,'net.sourceforge.ganttproject.GanttChartTabContentPanel',184,'net.sourceforge.ganttproject.GanttChartTabContentPanel.getAdapter(java.lang.Class)',0,'public Object getAdapter(Class adapter) {\r\n    if (Container.class.equals(adapter)) {\r\n        return getComponent();\r\n    }\r\n    if (Chart.class.equals(adapter)) {\r\n        return myGanttChart;\r\n    }\r\n    return null;\r\n}'),(107,'boolean bName','boolean',0,27,'net.sourceforge.ganttproject.GanttExportSettings',189,'net.sourceforge.ganttproject.GanttExportSettings.-init-(boolean,boolean,boolean,boolean)',0,'public GanttExportSettings(boolean bName, boolean bPercent, boolean bDepend, boolean b3dBorders) {\r\n    name = bName;\r\n    percent = bPercent;\r\n    depend = bDepend;\r\n    border3d = b3dBorders;\r\n    ok = true;\r\n    onlySelectedItems = false;\r\n}'),(108,'boolean bPercent','boolean',0,27,'net.sourceforge.ganttproject.GanttExportSettings',189,'net.sourceforge.ganttproject.GanttExportSettings.-init-(boolean,boolean,boolean,boolean)',0,'public GanttExportSettings(boolean bName, boolean bPercent, boolean bDepend, boolean b3dBorders) {\r\n    name = bName;\r\n    percent = bPercent;\r\n    depend = bDepend;\r\n    border3d = b3dBorders;\r\n    ok = true;\r\n    onlySelectedItems = false;\r\n}'),(109,'boolean bDepend','boolean',0,27,'net.sourceforge.ganttproject.GanttExportSettings',189,'net.sourceforge.ganttproject.GanttExportSettings.-init-(boolean,boolean,boolean,boolean)',0,'public GanttExportSettings(boolean bName, boolean bPercent, boolean bDepend, boolean b3dBorders) {\r\n    name = bName;\r\n    percent = bPercent;\r\n    depend = bDepend;\r\n    border3d = b3dBorders;\r\n    ok = true;\r\n    onlySelectedItems = false;\r\n}'),(110,'boolean b3dBorders','boolean',0,27,'net.sourceforge.ganttproject.GanttExportSettings',189,'net.sourceforge.ganttproject.GanttExportSettings.-init-(boolean,boolean,boolean,boolean)',0,'public GanttExportSettings(boolean bName, boolean bPercent, boolean bDepend, boolean b3dBorders) {\r\n    name = bName;\r\n    percent = bPercent;\r\n    depend = bDepend;\r\n    border3d = b3dBorders;\r\n    ok = true;\r\n    onlySelectedItems = false;\r\n}'),(111,'boolean selected','boolean',0,27,'net.sourceforge.ganttproject.GanttExportSettings',194,'net.sourceforge.ganttproject.GanttExportSettings.setOnlySelectedItem(boolean)',0,'public void setOnlySelectedItem(boolean selected) {\r\n    onlySelectedItems = selected;\r\n}'),(112,'Date date','java.util.Date',0,27,'net.sourceforge.ganttproject.GanttExportSettings',195,'net.sourceforge.ganttproject.GanttExportSettings.setStartDate(java.util.Date)',0,'public void setStartDate(Date date) {\r\n    startDate = date;\r\n}'),(113,'Date date','java.util.Date',0,27,'net.sourceforge.ganttproject.GanttExportSettings',193,'net.sourceforge.ganttproject.GanttExportSettings.setEndDate(java.util.Date)',0,'public void setEndDate(Date date) {\r\n    endDate = date;\r\n}'),(114,'GanttProject app','net.sourceforge.ganttproject.GanttProject',53,45,'net.sourceforge.ganttproject.GanttGraphicArea',196,'net.sourceforge.ganttproject.GanttGraphicArea.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.zoom.ZoomManager,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttGraphicArea(GanttProject app, GanttTree2 ttree, TaskManager taskManager, ZoomManager zoomManager, GPUndoManager undoManager) {\r\n    super(((IGanttProject) (app)), ((UIFacade) (app)), zoomManager);\r\n    this.setBackground(Color.WHITE);\r\n    myTaskManager = taskManager;\r\n    myUndoManager = undoManager;\r\n    // \r\n    myChartModel = new ChartModelImpl(getTaskManager(), app.getTimeUnitStack(), app.getUIConfiguration());\r\n    myChartModel.addOptionChangeListener(new GPOptionChangeListener() {\r\n        public void optionsChanged() {\r\n            repaint();\r\n        }\r\n    });\r\n    getViewState().addStateListener(myChartModel);\r\n    getViewState().setStartDate(CalendarFactory.newCalendar().getTime());\r\n    myTaskManager.addTaskListener(new TaskListenerAdapter() {\r\n        private boolean isRepaintPending;\r\n\r\n        public void taskScheduleChanged(TaskScheduleEvent e) {\r\n            boolean needRepaint = !(isRepaintPending);\r\n            isRepaintPending = true;\r\n            adjustDependencies(((Task) (e.getSource())));\r\n            if (needRepaint) {\r\n                repaint();\r\n                isRepaintPending = false;\r\n            }\r\n        }\r\n\r\n        public void dependencyAdded(TaskDependencyEvent e) {\r\n            adjustDependencies(e.getDependency().getDependee());\r\n            repaint();\r\n        }\r\n\r\n        public void dependencyRemoved(TaskDependencyEvent e) {\r\n            repaint();\r\n        }\r\n\r\n        private void adjustDependencies(Task task) {\r\n            RecalculateTaskScheduleAlgorithm alg = myTaskManager.getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm();\r\n            if (!(alg.isRunning())) {\r\n                try {\r\n                    alg.run(task);\r\n                } catch (TaskDependencyException e) {\r\n                    if (!(GPLogger.log(e))) {\r\n                        e.printStackTrace(System.err);\r\n                    }\r\n                    getUIFacade().showErrorDialog(e);\r\n                }\r\n                // appli.setQuickSave (true);\r\n            }\r\n        }\r\n    });\r\n    // date = new GanttCalendar();\r\n    // \r\n    // date.setDay(1);\r\n    this.tree = ttree;\r\n    margY = 0;\r\n    appli = app;\r\n    // creation of the different color use to paint\r\n    // arrayColor[0] = new Color((float)0.905,(float)0.905,(float)0.905);\r\n    myTableHeader = tree.getTreeTable().getTable().getTableHeader();\r\n    getProject().getTaskCustomColumnManager().addCustomColumnsListener(this);\r\n    myTaskImageGenerator = new TaskTreeImageGenerator(ttree, app.getUIConfiguration());\r\n}'),(115,'GanttTree2 ttree','net.sourceforge.ganttproject.GanttTree2',73,45,'net.sourceforge.ganttproject.GanttGraphicArea',196,'net.sourceforge.ganttproject.GanttGraphicArea.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.zoom.ZoomManager,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttGraphicArea(GanttProject app, GanttTree2 ttree, TaskManager taskManager, ZoomManager zoomManager, GPUndoManager undoManager) {\r\n    super(((IGanttProject) (app)), ((UIFacade) (app)), zoomManager);\r\n    this.setBackground(Color.WHITE);\r\n    myTaskManager = taskManager;\r\n    myUndoManager = undoManager;\r\n    // \r\n    myChartModel = new ChartModelImpl(getTaskManager(), app.getTimeUnitStack(), app.getUIConfiguration());\r\n    myChartModel.addOptionChangeListener(new GPOptionChangeListener() {\r\n        public void optionsChanged() {\r\n            repaint();\r\n        }\r\n    });\r\n    getViewState().addStateListener(myChartModel);\r\n    getViewState().setStartDate(CalendarFactory.newCalendar().getTime());\r\n    myTaskManager.addTaskListener(new TaskListenerAdapter() {\r\n        private boolean isRepaintPending;\r\n\r\n        public void taskScheduleChanged(TaskScheduleEvent e) {\r\n            boolean needRepaint = !(isRepaintPending);\r\n            isRepaintPending = true;\r\n            adjustDependencies(((Task) (e.getSource())));\r\n            if (needRepaint) {\r\n                repaint();\r\n                isRepaintPending = false;\r\n            }\r\n        }\r\n\r\n        public void dependencyAdded(TaskDependencyEvent e) {\r\n            adjustDependencies(e.getDependency().getDependee());\r\n            repaint();\r\n        }\r\n\r\n        public void dependencyRemoved(TaskDependencyEvent e) {\r\n            repaint();\r\n        }\r\n\r\n        private void adjustDependencies(Task task) {\r\n            RecalculateTaskScheduleAlgorithm alg = myTaskManager.getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm();\r\n            if (!(alg.isRunning())) {\r\n                try {\r\n                    alg.run(task);\r\n                } catch (TaskDependencyException e) {\r\n                    if (!(GPLogger.log(e))) {\r\n                        e.printStackTrace(System.err);\r\n                    }\r\n                    getUIFacade().showErrorDialog(e);\r\n                }\r\n                // appli.setQuickSave (true);\r\n            }\r\n        }\r\n    });\r\n    // date = new GanttCalendar();\r\n    // \r\n    // date.setDay(1);\r\n    this.tree = ttree;\r\n    margY = 0;\r\n    appli = app;\r\n    // creation of the different color use to paint\r\n    // arrayColor[0] = new Color((float)0.905,(float)0.905,(float)0.905);\r\n    myTableHeader = tree.getTreeTable().getTable().getTableHeader();\r\n    getProject().getTaskCustomColumnManager().addCustomColumnsListener(this);\r\n    myTaskImageGenerator = new TaskTreeImageGenerator(ttree, app.getUIConfiguration());\r\n}'),(116,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,45,'net.sourceforge.ganttproject.GanttGraphicArea',196,'net.sourceforge.ganttproject.GanttGraphicArea.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.zoom.ZoomManager,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttGraphicArea(GanttProject app, GanttTree2 ttree, TaskManager taskManager, ZoomManager zoomManager, GPUndoManager undoManager) {\r\n    super(((IGanttProject) (app)), ((UIFacade) (app)), zoomManager);\r\n    this.setBackground(Color.WHITE);\r\n    myTaskManager = taskManager;\r\n    myUndoManager = undoManager;\r\n    // \r\n    myChartModel = new ChartModelImpl(getTaskManager(), app.getTimeUnitStack(), app.getUIConfiguration());\r\n    myChartModel.addOptionChangeListener(new GPOptionChangeListener() {\r\n        public void optionsChanged() {\r\n            repaint();\r\n        }\r\n    });\r\n    getViewState().addStateListener(myChartModel);\r\n    getViewState().setStartDate(CalendarFactory.newCalendar().getTime());\r\n    myTaskManager.addTaskListener(new TaskListenerAdapter() {\r\n        private boolean isRepaintPending;\r\n\r\n        public void taskScheduleChanged(TaskScheduleEvent e) {\r\n            boolean needRepaint = !(isRepaintPending);\r\n            isRepaintPending = true;\r\n            adjustDependencies(((Task) (e.getSource())));\r\n            if (needRepaint) {\r\n                repaint();\r\n                isRepaintPending = false;\r\n            }\r\n        }\r\n\r\n        public void dependencyAdded(TaskDependencyEvent e) {\r\n            adjustDependencies(e.getDependency().getDependee());\r\n            repaint();\r\n        }\r\n\r\n        public void dependencyRemoved(TaskDependencyEvent e) {\r\n            repaint();\r\n        }\r\n\r\n        private void adjustDependencies(Task task) {\r\n            RecalculateTaskScheduleAlgorithm alg = myTaskManager.getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm();\r\n            if (!(alg.isRunning())) {\r\n                try {\r\n                    alg.run(task);\r\n                } catch (TaskDependencyException e) {\r\n                    if (!(GPLogger.log(e))) {\r\n                        e.printStackTrace(System.err);\r\n                    }\r\n                    getUIFacade().showErrorDialog(e);\r\n                }\r\n                // appli.setQuickSave (true);\r\n            }\r\n        }\r\n    });\r\n    // date = new GanttCalendar();\r\n    // \r\n    // date.setDay(1);\r\n    this.tree = ttree;\r\n    margY = 0;\r\n    appli = app;\r\n    // creation of the different color use to paint\r\n    // arrayColor[0] = new Color((float)0.905,(float)0.905,(float)0.905);\r\n    myTableHeader = tree.getTreeTable().getTable().getTableHeader();\r\n    getProject().getTaskCustomColumnManager().addCustomColumnsListener(this);\r\n    myTaskImageGenerator = new TaskTreeImageGenerator(ttree, app.getUIConfiguration());\r\n}'),(117,'ZoomManager zoomManager','net.sourceforge.ganttproject.gui.zoom.ZoomManager',425,45,'net.sourceforge.ganttproject.GanttGraphicArea',196,'net.sourceforge.ganttproject.GanttGraphicArea.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.zoom.ZoomManager,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttGraphicArea(GanttProject app, GanttTree2 ttree, TaskManager taskManager, ZoomManager zoomManager, GPUndoManager undoManager) {\r\n    super(((IGanttProject) (app)), ((UIFacade) (app)), zoomManager);\r\n    this.setBackground(Color.WHITE);\r\n    myTaskManager = taskManager;\r\n    myUndoManager = undoManager;\r\n    // \r\n    myChartModel = new ChartModelImpl(getTaskManager(), app.getTimeUnitStack(), app.getUIConfiguration());\r\n    myChartModel.addOptionChangeListener(new GPOptionChangeListener() {\r\n        public void optionsChanged() {\r\n            repaint();\r\n        }\r\n    });\r\n    getViewState().addStateListener(myChartModel);\r\n    getViewState().setStartDate(CalendarFactory.newCalendar().getTime());\r\n    myTaskManager.addTaskListener(new TaskListenerAdapter() {\r\n        private boolean isRepaintPending;\r\n\r\n        public void taskScheduleChanged(TaskScheduleEvent e) {\r\n            boolean needRepaint = !(isRepaintPending);\r\n            isRepaintPending = true;\r\n            adjustDependencies(((Task) (e.getSource())));\r\n            if (needRepaint) {\r\n                repaint();\r\n                isRepaintPending = false;\r\n            }\r\n        }\r\n\r\n        public void dependencyAdded(TaskDependencyEvent e) {\r\n            adjustDependencies(e.getDependency().getDependee());\r\n            repaint();\r\n        }\r\n\r\n        public void dependencyRemoved(TaskDependencyEvent e) {\r\n            repaint();\r\n        }\r\n\r\n        private void adjustDependencies(Task task) {\r\n            RecalculateTaskScheduleAlgorithm alg = myTaskManager.getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm();\r\n            if (!(alg.isRunning())) {\r\n                try {\r\n                    alg.run(task);\r\n                } catch (TaskDependencyException e) {\r\n                    if (!(GPLogger.log(e))) {\r\n                        e.printStackTrace(System.err);\r\n                    }\r\n                    getUIFacade().showErrorDialog(e);\r\n                }\r\n                // appli.setQuickSave (true);\r\n            }\r\n        }\r\n    });\r\n    // date = new GanttCalendar();\r\n    // \r\n    // date.setDay(1);\r\n    this.tree = ttree;\r\n    margY = 0;\r\n    appli = app;\r\n    // creation of the different color use to paint\r\n    // arrayColor[0] = new Color((float)0.905,(float)0.905,(float)0.905);\r\n    myTableHeader = tree.getTreeTable().getTable().getTableHeader();\r\n    getProject().getTaskCustomColumnManager().addCustomColumnsListener(this);\r\n    myTaskImageGenerator = new TaskTreeImageGenerator(ttree, app.getUIConfiguration());\r\n}'),(118,'GPUndoManager undoManager','net.sourceforge.ganttproject.undo.GPUndoManager',657,45,'net.sourceforge.ganttproject.GanttGraphicArea',196,'net.sourceforge.ganttproject.GanttGraphicArea.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.zoom.ZoomManager,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttGraphicArea(GanttProject app, GanttTree2 ttree, TaskManager taskManager, ZoomManager zoomManager, GPUndoManager undoManager) {\r\n    super(((IGanttProject) (app)), ((UIFacade) (app)), zoomManager);\r\n    this.setBackground(Color.WHITE);\r\n    myTaskManager = taskManager;\r\n    myUndoManager = undoManager;\r\n    // \r\n    myChartModel = new ChartModelImpl(getTaskManager(), app.getTimeUnitStack(), app.getUIConfiguration());\r\n    myChartModel.addOptionChangeListener(new GPOptionChangeListener() {\r\n        public void optionsChanged() {\r\n            repaint();\r\n        }\r\n    });\r\n    getViewState().addStateListener(myChartModel);\r\n    getViewState().setStartDate(CalendarFactory.newCalendar().getTime());\r\n    myTaskManager.addTaskListener(new TaskListenerAdapter() {\r\n        private boolean isRepaintPending;\r\n\r\n        public void taskScheduleChanged(TaskScheduleEvent e) {\r\n            boolean needRepaint = !(isRepaintPending);\r\n            isRepaintPending = true;\r\n            adjustDependencies(((Task) (e.getSource())));\r\n            if (needRepaint) {\r\n                repaint();\r\n                isRepaintPending = false;\r\n            }\r\n        }\r\n\r\n        public void dependencyAdded(TaskDependencyEvent e) {\r\n            adjustDependencies(e.getDependency().getDependee());\r\n            repaint();\r\n        }\r\n\r\n        public void dependencyRemoved(TaskDependencyEvent e) {\r\n            repaint();\r\n        }\r\n\r\n        private void adjustDependencies(Task task) {\r\n            RecalculateTaskScheduleAlgorithm alg = myTaskManager.getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm();\r\n            if (!(alg.isRunning())) {\r\n                try {\r\n                    alg.run(task);\r\n                } catch (TaskDependencyException e) {\r\n                    if (!(GPLogger.log(e))) {\r\n                        e.printStackTrace(System.err);\r\n                    }\r\n                    getUIFacade().showErrorDialog(e);\r\n                }\r\n                // appli.setQuickSave (true);\r\n            }\r\n        }\r\n    });\r\n    // date = new GanttCalendar();\r\n    // \r\n    // date.setDay(1);\r\n    this.tree = ttree;\r\n    margY = 0;\r\n    appli = app;\r\n    // creation of the different color use to paint\r\n    // arrayColor[0] = new Color((float)0.905,(float)0.905,(float)0.905);\r\n    myTableHeader = tree.getTreeTable().getTable().getTableHeader();\r\n    getProject().getTaskCustomColumnManager().addCustomColumnsListener(this);\r\n    myTaskImageGenerator = new TaskTreeImageGenerator(ttree, app.getUIConfiguration());\r\n}'),(119,'MouseEvent initiatingEvent','java.awt.event.MouseEvent',0,28,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction',240,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'protected ChangeTaskBoundaryInteraction(MouseEvent initiatingEvent, TaskBoundaryChartItem taskBoundary) {\r\n    super(initiatingEvent);\r\n    myTask = taskBoundary.getTask();\r\n    myInitialDuration = myTask.getDuration().getLength(getViewState().getBottomTimeUnit());\r\n    myInitialEnd = getTask().getEnd();\r\n    myInitialStart = getTask().getStart();\r\n}'),(120,'TaskBoundaryChartItem taskBoundary','net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem',225,28,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction',240,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'protected ChangeTaskBoundaryInteraction(MouseEvent initiatingEvent, TaskBoundaryChartItem taskBoundary) {\r\n    super(initiatingEvent);\r\n    myTask = taskBoundary.getTask();\r\n    myInitialDuration = myTask.getDuration().getLength(getViewState().getBottomTimeUnit());\r\n    myInitialEnd = getTask().getEnd();\r\n    myInitialStart = getTask().getStart();\r\n}'),(121,'MouseEvent initiatingEvent','java.awt.event.MouseEvent',0,29,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskEndInteraction',250,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskEndInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'public ChangeTaskEndInteraction(MouseEvent initiatingEvent, TaskBoundaryChartItem taskBoundary) {\r\n    super(initiatingEvent, taskBoundary);\r\n    setCursor(GanttGraphicArea.E_RESIZE_CURSOR);\r\n    myMutator = getTask().createMutator();\r\n    myInitialEnd = getTask().getEnd();\r\n}'),(122,'TaskBoundaryChartItem taskBoundary','net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem',225,29,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskEndInteraction',250,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskEndInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'public ChangeTaskEndInteraction(MouseEvent initiatingEvent, TaskBoundaryChartItem taskBoundary) {\r\n    super(initiatingEvent, taskBoundary);\r\n    setCursor(GanttGraphicArea.E_RESIZE_CURSOR);\r\n    myMutator = getTask().createMutator();\r\n    myInitialEnd = getTask().getEnd();\r\n}'),(123,'MouseEvent e','java.awt.event.MouseEvent',0,31,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskStartInteraction',260,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskStartInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'ChangeTaskStartInteraction(MouseEvent e, TaskBoundaryChartItem taskBoundary) {\r\n    super(e, taskBoundary);\r\n    setCursor(GanttGraphicArea.W_RESIZE_CURSOR);\r\n    myInitialLength = getTask().getDuration();\r\n    myMutator = getTask().createMutator();\r\n    myInitialStart = getTask().getStart();\r\n}'),(124,'TaskBoundaryChartItem taskBoundary','net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem',225,31,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskStartInteraction',260,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskStartInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'ChangeTaskStartInteraction(MouseEvent e, TaskBoundaryChartItem taskBoundary) {\r\n    super(e, taskBoundary);\r\n    setCursor(GanttGraphicArea.W_RESIZE_CURSOR);\r\n    myInitialLength = getTask().getDuration();\r\n    myMutator = getTask().createMutator();\r\n    myInitialStart = getTask().getStart();\r\n}'),(125,'MouseEvent e','java.awt.event.MouseEvent',0,30,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskProgressInteraction',254,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskProgressInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskProgressChartItem)',0,'public ChangeTaskProgressInteraction(MouseEvent e, TaskProgressChartItem taskProgress) {\r\n    super(e);\r\n    Toolkit toolkit = Toolkit.getDefaultToolkit();\r\n    try {\r\n        setCursor(GanttGraphicArea.CHANGE_PROGRESS_CURSOR);\r\n    } catch (Exception exept) {\r\n        setCursor(GanttGraphicArea.E_RESIZE_CURSOR);\r\n    }\r\n    myTaskProgrssItem = taskProgress;\r\n    myMutator = myTaskProgrssItem.getTask().createMutator();\r\n    myProgressWas = myTaskProgrssItem.getTask().getCompletionPercentage();\r\n}'),(126,'TaskProgressChartItem taskProgress','net.sourceforge.ganttproject.chart.item.TaskProgressChartItem',226,30,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskProgressInteraction',254,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskProgressInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskProgressChartItem)',0,'public ChangeTaskProgressInteraction(MouseEvent e, TaskProgressChartItem taskProgress) {\r\n    super(e);\r\n    Toolkit toolkit = Toolkit.getDefaultToolkit();\r\n    try {\r\n        setCursor(GanttGraphicArea.CHANGE_PROGRESS_CURSOR);\r\n    } catch (Exception exept) {\r\n        setCursor(GanttGraphicArea.E_RESIZE_CURSOR);\r\n    }\r\n    myTaskProgrssItem = taskProgress;\r\n    myMutator = myTaskProgrssItem.getTask().createMutator();\r\n    myProgressWas = myTaskProgrssItem.getTask().getCompletionPercentage();\r\n}'),(127,'MouseEvent initiatingEvent','java.awt.event.MouseEvent',0,37,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction',296,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem,net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport)',0,'public DrawDependencyInteraction(MouseEvent initiatingEvent, TaskRegularAreaChartItem taskArea, GanttGraphicArea.MouseSupport mouseSupport) {\r\n    super(initiatingEvent);\r\n    myStartPoint = initiatingEvent.getPoint();\r\n    myTask = taskArea.getTask();\r\n    myArrow = new DependencyInteractionRenderer(myStartPoint.x, myStartPoint.y, myStartPoint.x, myStartPoint.y);\r\n    myMouseSupport = mouseSupport;\r\n}'),(128,'TaskRegularAreaChartItem taskArea','net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem',227,37,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction',296,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem,net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport)',0,'public DrawDependencyInteraction(MouseEvent initiatingEvent, TaskRegularAreaChartItem taskArea, GanttGraphicArea.MouseSupport mouseSupport) {\r\n    super(initiatingEvent);\r\n    myStartPoint = initiatingEvent.getPoint();\r\n    myTask = taskArea.getTask();\r\n    myArrow = new DependencyInteractionRenderer(myStartPoint.x, myStartPoint.y, myStartPoint.x, myStartPoint.y);\r\n    myMouseSupport = mouseSupport;\r\n}'),(129,'GanttGraphicArea.MouseSupport mouseSupport','net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport',38,37,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction',296,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem,net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport)',0,'public DrawDependencyInteraction(MouseEvent initiatingEvent, TaskRegularAreaChartItem taskArea, GanttGraphicArea.MouseSupport mouseSupport) {\r\n    super(initiatingEvent);\r\n    myStartPoint = initiatingEvent.getPoint();\r\n    myTask = taskArea.getTask();\r\n    myArrow = new DependencyInteractionRenderer(myStartPoint.x, myStartPoint.y, myStartPoint.x, myStartPoint.y);\r\n    myMouseSupport = mouseSupport;\r\n}'),(130,'MouseEvent e','java.awt.event.MouseEvent',0,39,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteraction',305,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.task.Task)',0,'MoveTaskInteraction(MouseEvent e, Task task) {\r\n    super(e);\r\n    myTask = task;\r\n    myMutator = task.createMutator();\r\n    myInitialStart = myTask.getStart();\r\n}'),(131,'Task task','net.sourceforge.ganttproject.task.Task',548,39,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteraction',305,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteraction.-init-(java.awt.event.MouseEvent,net.sourceforge.ganttproject.task.Task)',0,'MoveTaskInteraction(MouseEvent e, Task task) {\r\n    super(e);\r\n    myTask = task;\r\n    myMutator = task.createMutator();\r\n    myInitialStart = myTask.getStart();\r\n}'),(132,'MouseEvent e','java.awt.event.MouseEvent',0,40,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteractions',310,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteractions.-init-(java.awt.event.MouseEvent,java.util.List)',0,'MoveTaskInteractions(MouseEvent e, List tasks) {\r\n    super(e);\r\n    myTasks = tasks;\r\n    myMutators = new ArrayList(myTasks.size());\r\n    myInitialStarts = new ArrayList(myTasks.size());\r\n    Iterator itTasks = myTasks.iterator();\r\n    while (itTasks.hasNext()) {\r\n        Task t = ((Task) (itTasks.next()));\r\n        myMutators.add(t.createMutator());\r\n        myInitialStarts.add(t.getStart());\r\n    } \r\n}'),(133,'List tasks','java.util.List',0,40,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteractions',310,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteractions.-init-(java.awt.event.MouseEvent,java.util.List)',0,'MoveTaskInteractions(MouseEvent e, List tasks) {\r\n    super(e);\r\n    myTasks = tasks;\r\n    myMutators = new ArrayList(myTasks.size());\r\n    myInitialStarts = new ArrayList(myTasks.size());\r\n    Iterator itTasks = myTasks.iterator();\r\n    while (itTasks.hasNext()) {\r\n        Task t = ((Task) (itTasks.next()));\r\n        myMutators.add(t.createMutator());\r\n        myInitialStarts.add(t.getStart());\r\n    } \r\n}'),(134,'ScrollingManager scrollingManager','net.sourceforge.ganttproject.gui.scrolling.ScrollingManager',409,44,'net.sourceforge.ganttproject.GanttGraphicArea$ScrollGanttChartCenterAction',331,'net.sourceforge.ganttproject.GanttGraphicArea$ScrollGanttChartCenterAction.-init-(net.sourceforge.ganttproject.gui.scrolling.ScrollingManager,net.sourceforge.ganttproject.task.TaskSelectionManager,java.lang.String)',0,'public ScrollGanttChartCenterAction(ScrollingManager scrollingManager, TaskSelectionManager taskSelectionManager, String iconSize) {\r\n    super(\"ScrollCenter\", iconSize);\r\n    myScrollingManager = scrollingManager;\r\n    myTaskSelectionManager = taskSelectionManager;\r\n}'),(135,'TaskSelectionManager taskSelectionManager','net.sourceforge.ganttproject.task.TaskSelectionManager',575,44,'net.sourceforge.ganttproject.GanttGraphicArea$ScrollGanttChartCenterAction',331,'net.sourceforge.ganttproject.GanttGraphicArea$ScrollGanttChartCenterAction.-init-(net.sourceforge.ganttproject.gui.scrolling.ScrollingManager,net.sourceforge.ganttproject.task.TaskSelectionManager,java.lang.String)',0,'public ScrollGanttChartCenterAction(ScrollingManager scrollingManager, TaskSelectionManager taskSelectionManager, String iconSize) {\r\n    super(\"ScrollCenter\", iconSize);\r\n    myScrollingManager = scrollingManager;\r\n    myTaskSelectionManager = taskSelectionManager;\r\n}'),(136,'String iconSize','java.lang.String',0,44,'net.sourceforge.ganttproject.GanttGraphicArea$ScrollGanttChartCenterAction',331,'net.sourceforge.ganttproject.GanttGraphicArea$ScrollGanttChartCenterAction.-init-(net.sourceforge.ganttproject.gui.scrolling.ScrollingManager,net.sourceforge.ganttproject.task.TaskSelectionManager,java.lang.String)',0,'public ScrollGanttChartCenterAction(ScrollingManager scrollingManager, TaskSelectionManager taskSelectionManager, String iconSize) {\r\n    super(\"ScrollCenter\", iconSize);\r\n    myScrollingManager = scrollingManager;\r\n    myTaskSelectionManager = taskSelectionManager;\r\n}'),(137,'int position','int',0,36,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$Text',293,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$Text.-init-(int,net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$TaskBar)',0,'Text(int position, GanttGraphicArea.ChartOptionsPreviewPanel.TaskBar refBar) {\r\n    this.position = position;\r\n    this.taskBar = refBar;\r\n}'),(138,'GanttGraphicArea.ChartOptionsPreviewPanel.TaskBar refBar','net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$TaskBar',35,36,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$Text',293,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$Text.-init-(int,net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$TaskBar)',0,'Text(int position, GanttGraphicArea.ChartOptionsPreviewPanel.TaskBar refBar) {\r\n    this.position = position;\r\n    this.taskBar = refBar;\r\n}'),(139,'Color c','java.awt.Color',0,45,'net.sourceforge.ganttproject.GanttGraphicArea',236,'net.sourceforge.ganttproject.GanttGraphicArea.setProjectLevelTaskColor(java.awt.Color)',0,'/**\r\n * Change the color of the task\r\n */\r\npublic void setProjectLevelTaskColor(Color c) {\r\n    myUIConfiguration.setProjectLevelTaskColor(c);\r\n}'),(140,'Graphics g','java.awt.Graphics',0,45,'net.sourceforge.ganttproject.GanttGraphicArea',229,'net.sourceforge.ganttproject.GanttGraphicArea.paintComponent(java.awt.Graphics)',0,'public void paintComponent(Graphics g) {\r\n    myChartModel.setBounds(getSize());\r\n    myChartComponentImpl.paintComponent(g);\r\n}'),(141,'Graphics g','java.awt.Graphics',0,45,'net.sourceforge.ganttproject.GanttGraphicArea',208,'net.sourceforge.ganttproject.GanttGraphicArea.drawGPVersion(java.awt.Graphics)',0,'public void drawGPVersion(Graphics g) {\r\n    g.setColor(Color.black);\r\n    g.setFont(Fonts.GP_VERSION_FONT);\r\n    g.drawString(((\"GanttProject (\" + (GanttProject.version)) + \")\"), 3, ((getHeight()) + 18));\r\n}'),(142,'int v','int',0,45,'net.sourceforge.ganttproject.GanttGraphicArea',237,'net.sourceforge.ganttproject.GanttGraphicArea.setScrollBar(int)',0,'/**\r\n * Change the velue connected to the JTrees Scrollbar\r\n */\r\npublic void setScrollBar(int v) {\r\n    margY = v;\r\n}'),(143,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,45,'net.sourceforge.ganttproject.GanttGraphicArea',209,'net.sourceforge.ganttproject.GanttGraphicArea.getChart(net.sourceforge.ganttproject.GanttExportSettings)',0,'/**\r\n * Return an image with the gantt chart\r\n */\r\n// TODO: 1.11 take into account flags \"render this and dont render that\"\r\npublic BufferedImage getChart(GanttExportSettings settings) {\r\n    RenderedChartImage renderedImage = ((RenderedChartImage) (getRenderedImage(settings)));\r\n    BufferedImage result = renderedImage.getWholeImage();\r\n    repaint();\r\n    return result;\r\n}'),(144,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,45,'net.sourceforge.ganttproject.GanttGraphicArea',222,'net.sourceforge.ganttproject.GanttGraphicArea.getRenderedImage(net.sourceforge.ganttproject.GanttExportSettings)',0,'public RenderedImage getRenderedImage(GanttExportSettings settings) {\r\n    Date dateStart = null;\r\n    Date dateEnd = null;\r\n    List myItemsToConsider = myTaskImageGenerator.getPrintableNodes(settings);\r\n    TimeUnit unit = getViewState().getBottomTimeUnit();\r\n    dateStart = ((settings.getStartDate()) == null) ? getStartDate() : settings.getStartDate();\r\n    dateEnd = ((settings.getEndDate()) == null) ? getEndDate() : settings.getEndDate();\r\n    // dateStart = new GregorianCalendar(2005,2,25).getTime();\r\n    if (dateStart.after(dateEnd)) {\r\n        Date tmp = ((Date) (dateStart.clone()));\r\n        dateStart = ((Date) (dateEnd.clone()));\r\n        dateEnd = tmp;\r\n    }\r\n    // System.out.println(\"GanttGraphicArea dateStart=\" + dateStart);\r\n    // System.out.println(\"GanttGraphicArea dateEnd=\" + dateEnd);\r\n    TaskLength printedLength = getTaskManager().createLength(unit, dateStart, dateEnd);\r\n    BufferedImage taskImage = ((BufferedImage) (myTaskImageGenerator.createImage(myItemsToConsider)));\r\n    int chartWidth = ((int) (((printedLength.getLength(getViewState().getBottomTimeUnit())) + 1) * (getViewState().getBottomUnitWidth())));\r\n    if (chartWidth < (getWidth())) {\r\n        chartWidth = getWidth();\r\n    }\r\n    int chartHeight = taskImage.getHeight(null);\r\n    return new RenderedGanttChartImage(myChartModel, myChartComponentImpl, GanttTree2.convertNodesListToItemList(myItemsToConsider), taskImage, chartWidth, chartHeight);\r\n}'),(145,'int xpos','int',0,38,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport',303,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport.findTaskUnderMousePointer(int,int)',0,'protected Task findTaskUnderMousePointer(int xpos, int ypos) {\r\n    // int taskID = detectPosition(xpos, ypos, false);\r\n    // return taskID==-1 ? null : getTaskManager().getTask(taskID);\r\n    ChartItem chartItem = myChartModel.getChartItemWithCoordinates(xpos, ypos);\r\n    return chartItem == null ? null : chartItem.getTask();\r\n}'),(146,'net.sourceforge.ganttproject.task.Task','net.sourceforge.ganttproject.task.Task',548,38,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport',303,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport.findTaskUnderMousePointer(int,int)',1,'protected Task findTaskUnderMousePointer(int xpos, int ypos) {\r\n    // int taskID = detectPosition(xpos, ypos, false);\r\n    // return taskID==-1 ? null : getTaskManager().getTask(taskID);\r\n    ChartItem chartItem = myChartModel.getChartItemWithCoordinates(xpos, ypos);\r\n    return chartItem == null ? null : chartItem.getTask();\r\n}'),(147,'int ypos','int',0,38,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport',303,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport.findTaskUnderMousePointer(int,int)',0,'protected Task findTaskUnderMousePointer(int xpos, int ypos) {\r\n    // int taskID = detectPosition(xpos, ypos, false);\r\n    // return taskID==-1 ? null : getTaskManager().getTask(taskID);\r\n    ChartItem chartItem = myChartModel.getChartItemWithCoordinates(xpos, ypos);\r\n    return chartItem == null ? null : chartItem.getTask();\r\n}'),(148,'int xpos','int',0,38,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport',304,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport.getChartItemUnderMousePoint(int,int)',0,'protected ChartItem getChartItemUnderMousePoint(int xpos, int ypos) {\r\n    ChartItem result = myChartModel.getChartItemWithCoordinates(xpos, ypos);\r\n    return result;\r\n}'),(149,'net.sourceforge.ganttproject.chart.item.ChartItem','net.sourceforge.ganttproject.chart.item.ChartItem',224,38,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport',304,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport.getChartItemUnderMousePoint(int,int)',1,'protected ChartItem getChartItemUnderMousePoint(int xpos, int ypos) {\r\n    ChartItem result = myChartModel.getChartItemWithCoordinates(xpos, ypos);\r\n    return result;\r\n}'),(150,'int ypos','int',0,38,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport',304,'net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport.getChartItemUnderMousePoint(int,int)',0,'protected ChartItem getChartItemUnderMousePoint(int xpos, int ypos) {\r\n    ChartItem result = myChartModel.getChartItemWithCoordinates(xpos, ypos);\r\n    return result;\r\n}'),(151,'MouseEvent e','java.awt.event.MouseEvent',0,28,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction',243,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction.apply(java.awt.event.MouseEvent)',0,'public void apply(MouseEvent e) {\r\n    if ((myLastNotes) == null) {\r\n        myLastNotes = new TaskInteractionHintRenderer(\"\", e.getX(), e.getY());\r\n    }\r\n    float diff = getLengthDiff(e);\r\n    apply(diff);\r\n    myLastNotes.setString(getNotesText());\r\n    myLastNotes.setX(e.getX());\r\n}'),(152,'final TaskMutator mutator','net.sourceforge.ganttproject.task.TaskMutator',571,28,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction',245,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction.finish(net.sourceforge.ganttproject.task.TaskMutator)',0,'public void finish(final TaskMutator mutator) {\r\n    mutator.setIsolationLevel(TaskMutator.READ_COMMITED);\r\n    // if\r\n    // ((!myInitialEnd.equals(getTask().getEnd()))||(!myInitialStart.equals(getTask().getStart())))\r\n    getUndoManager().undoableEdit(\"Task boundary changed\", new Runnable() {\r\n        public void run() {\r\n            doFinish(mutator);\r\n        }\r\n    });\r\n}'),(153,'TaskMutator mutator','net.sourceforge.ganttproject.task.TaskMutator',571,28,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction',244,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction.doFinish(net.sourceforge.ganttproject.task.TaskMutator)',0,'private void doFinish(TaskMutator mutator) {\r\n    mutator.commit();\r\n    myLastNotes = null;\r\n    try {\r\n        getTaskManager().getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm().run();\r\n    } catch (TaskDependencyException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n        getUIFacade().showErrorDialog(e);\r\n    }\r\n    this.repaint();\r\n}'),(154,'Graphics g','java.awt.Graphics',0,28,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction',249,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n    if ((myLastNotes) != null) {\r\n        myLastNotes.paint(g);\r\n    }\r\n}'),(155,'float diff','float',0,28,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction',242,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskBoundaryInteraction.apply(float)',0,'protected abstract void apply(float diff);'),(156,'float diff','float',0,29,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskEndInteraction',251,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskEndInteraction.apply(float)',0,'protected void apply(float diff) {\r\n    TaskLength newLength = getTaskManager().createLength(getViewState().getBottomTimeUnit(), ((getInitialDuration()) + diff));\r\n    TaskLength translated = getTask().translateDuration(newLength);\r\n    if ((translated.getLength()) != 0) {\r\n        myMutator.setDuration(translated);\r\n    }\r\n}'),(157,'float diff','float',0,31,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskStartInteraction',261,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskStartInteraction.apply(float)',0,'protected void apply(float diff) {\r\n    TaskLength newLength = getTaskManager().createLength(getViewState().getBottomTimeUnit(), ((getInitialDuration()) + diff));\r\n    TaskLength translated = getTask().translateDuration(newLength);\r\n    int dayDiff = ((int) ((translated.getValue()) - (myInitialLength.getValue())));\r\n    // System.err.println(\"[ChangeTaskStart] dayDiff=\"+dayDiff+\"\r\n    // newLength=\"+newLength+\" translated=\"+translated);\r\n    if (dayDiff != 0) {\r\n        // System.err.println(\"[ChangeTaskStartInteraction] apply():\r\n        // oldStart=\"+getTask().getStart());\r\n        GanttCalendar newStart = myInitialStart.newAdd(dayDiff);\r\n        // System.err.println(\"newStart\"+newStart);\r\n        if ((newStart.compareTo(getTask().getEnd())) < 0) {\r\n            myMutator.setStart(newStart);\r\n            if (((getTask().getThird()) != null) && ((getTask().getThirdDateConstraint()) == (TaskImpl.EARLIESTBEGIN)))\r\n                myMutator.setEnd(getTask().getEnd().Clone());\r\n\r\n        }\r\n        // getTask().applyThirdDateConstraint();\r\n        // mutator.commit();\r\n        // myInitialLength = getTask().getDuration();\r\n    }\r\n}'),(158,'MouseEvent event','java.awt.event.MouseEvent',0,30,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskProgressInteraction',256,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskProgressInteraction.apply(java.awt.event.MouseEvent)',0,'public void apply(MouseEvent event) {\r\n    // int deltaProgress =\r\n    // (int)myTaskProgrssItem.getProgressDelta(event.getX());\r\n    float deltaUnits = getLengthDiff(event);\r\n    int deltaPercents = ((int) ((100 * deltaUnits) / (myTaskProgrssItem.getTask().getDuration().getLength(getViewState().getBottomTimeUnit()))));\r\n    int newProgress = (myProgressWas) + deltaPercents;\r\n    if (newProgress > 100) {\r\n        newProgress = 100;\r\n    }\r\n    if (newProgress < 0) {\r\n        newProgress = 0;\r\n    }\r\n    myProgressIs = newProgress;\r\n    myMutator.setCompletionPercentage(newProgress);\r\n    myLastNotes = new TaskInteractionHintRenderer((newProgress + \"%\"), event.getX(), ((event.getY()) - 30));\r\n}'),(159,'TaskMutator mutator','net.sourceforge.ganttproject.task.TaskMutator',571,30,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskProgressInteraction',257,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskProgressInteraction.doFinish(net.sourceforge.ganttproject.task.TaskMutator)',0,'private void doFinish(TaskMutator mutator) {\r\n    mutator.commit();\r\n    myLastNotes = null;\r\n    try {\r\n        getTaskManager().getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm().run();\r\n    } catch (TaskDependencyException e) {\r\n        getUIFacade().showErrorDialog(e);\r\n    }\r\n    if ((myProgressIs) == (myProgressWas)) {\r\n        // getUndoManager ().die ();\r\n        myMutator.commit();\r\n        repaint();\r\n        int myProgressIs = myTaskProgrssItem.getTask().getCompletionPercentage();\r\n        if (myProgressIs != (myProgressWas)) {\r\n            // appli.setQuickSave(true);\r\n            // appli.quickSave (\"Task progress changed\");\r\n        }\r\n    }\r\n}'),(160,'Graphics g','java.awt.Graphics',0,30,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskProgressInteraction',259,'net.sourceforge.ganttproject.GanttGraphicArea$ChangeTaskProgressInteraction.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n    if ((myLastNotes) != null) {\r\n        myLastNotes.paint(g);\r\n    }\r\n}'),(161,'MouseEvent event','java.awt.event.MouseEvent',0,37,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction',298,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction.apply(java.awt.event.MouseEvent)',0,'public void apply(MouseEvent event) {\r\n    myArrow.changePoint2(event.getX(), event.getY());\r\n    // myDependant = myMouseSupport.findTaskUnderMousePointer(\r\n    // event.getX(), event.getY());\r\n    myLastMouseEvent = event;\r\n}'),(162,'final Task dependee','net.sourceforge.ganttproject.task.Task',548,37,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction',299,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction.createDependency(net.sourceforge.ganttproject.task.Task)',0,'private void createDependency(final Task dependee) {\r\n    try {\r\n        getTaskManager().getDependencyCollection().createDependency(myDependant, dependee, new FinishStartConstraintImpl());\r\n    } catch (TaskDependencyException e) {\r\n        getUIFacade().showErrorDialog(e);\r\n    }\r\n    getProject().setModified();\r\n}'),(163,'Graphics g','java.awt.Graphics',0,37,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction',301,'net.sourceforge.ganttproject.GanttGraphicArea$DrawDependencyInteraction.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n    myArrow.paint(g);\r\n}'),(164,'MouseEvent event','java.awt.event.MouseEvent',0,39,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteraction',307,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteraction.apply(java.awt.event.MouseEvent)',0,'public void apply(MouseEvent event) {\r\n    float diff = getChartModel().calculateLengthNoWeekends(getStartX(), event.getX());\r\n    TaskLength bottomUnitLength = getTaskManager().createLength(getViewState().getBottomTimeUnit(), diff);\r\n    TaskLength taskLength = myTask.translateDuration(bottomUnitLength);\r\n    int dayDiff = ((int) (taskLength.getValue()));\r\n    // System.err.println(\"[MoveTaskInteraction] apply():\r\n    // dayDiff=\"+dayDiff+\" bottomUnitLength=\"+bottomUnitLength+\"\r\n    // translated=\"+taskLength);\r\n    if (dayDiff != 0) {\r\n        myMutator.shift(dayDiff);\r\n    }\r\n}'),(165,'MouseEvent event','java.awt.event.MouseEvent',0,40,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteractions',312,'net.sourceforge.ganttproject.GanttGraphicArea$MoveTaskInteractions.apply(java.awt.event.MouseEvent)',0,'public void apply(MouseEvent event) {\r\n    float diff = getLengthDiff(event);\r\n    TaskLength bottomUnitLength = getTaskManager().createLength(getViewState().getBottomTimeUnit(), diff);\r\n    for (int i = 0; i < (myTasks.size()); i++) {\r\n        Task task = ((Task) (myTasks.get(i)));\r\n        TaskLength taskLength = task.translateDuration(bottomUnitLength);\r\n        int dayDiff = ((int) (taskLength.getValue()));\r\n        if (dayDiff != 0) {\r\n            ((TaskMutator) (myMutators.get(i))).shift(dayDiff);\r\n        }\r\n    }\r\n}'),(166,'Graphics g','java.awt.Graphics',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',275,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.paintComponent(java.awt.Graphics)',0,'void paintComponent(Graphics g);'),(167,'Graphics g','java.awt.Graphics',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',276,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.paintComponent(java.awt.Graphics,java.util.List)',0,'void paintComponent(Graphics g, /* <Task> */\r\nList visibleTasks);'),(168,'/* <Task> */\r\nList visibleTasks','java.util.List',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',276,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.paintComponent(java.awt.Graphics,java.util.List)',0,'void paintComponent(Graphics g, /* <Task> */\r\nList visibleTasks);'),(169,'MouseEvent initiatingEvent','java.awt.event.MouseEvent',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',264,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginChangeTaskEndInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'void beginChangeTaskEndInteraction(MouseEvent initiatingEvent, TaskBoundaryChartItem taskBoundary);'),(170,'TaskBoundaryChartItem taskBoundary','net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem',225,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',264,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginChangeTaskEndInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'void beginChangeTaskEndInteraction(MouseEvent initiatingEvent, TaskBoundaryChartItem taskBoundary);'),(171,'MouseEvent e','java.awt.event.MouseEvent',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',266,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginChangeTaskStartInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'void beginChangeTaskStartInteraction(MouseEvent e, TaskBoundaryChartItem taskBoundary);'),(172,'TaskBoundaryChartItem taskBoundary','net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem',225,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',266,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginChangeTaskStartInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'void beginChangeTaskStartInteraction(MouseEvent e, TaskBoundaryChartItem taskBoundary);'),(173,'MouseEvent e','java.awt.event.MouseEvent',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',265,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginChangeTaskProgressInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskProgressChartItem)',0,'void beginChangeTaskProgressInteraction(MouseEvent e, TaskProgressChartItem item);'),(174,'TaskProgressChartItem item','net.sourceforge.ganttproject.chart.item.TaskProgressChartItem',226,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',265,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginChangeTaskProgressInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskProgressChartItem)',0,'void beginChangeTaskProgressInteraction(MouseEvent e, TaskProgressChartItem item);'),(175,'MouseEvent initiatingEvent','java.awt.event.MouseEvent',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',267,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginDrawDependencyInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem,net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport)',0,'void beginDrawDependencyInteraction(MouseEvent initiatingEvent, TaskRegularAreaChartItem taskArea, GanttGraphicArea.MouseSupport mouseSupport);'),(176,'TaskRegularAreaChartItem taskArea','net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem',227,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',267,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginDrawDependencyInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem,net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport)',0,'void beginDrawDependencyInteraction(MouseEvent initiatingEvent, TaskRegularAreaChartItem taskArea, GanttGraphicArea.MouseSupport mouseSupport);'),(177,'GanttGraphicArea.MouseSupport mouseSupport','net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport',38,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',267,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginDrawDependencyInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem,net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport)',0,'void beginDrawDependencyInteraction(MouseEvent initiatingEvent, TaskRegularAreaChartItem taskArea, GanttGraphicArea.MouseSupport mouseSupport);'),(178,'MouseEvent e','java.awt.event.MouseEvent',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',268,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginMoveTaskInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.task.Task)',0,'void beginMoveTaskInteraction(MouseEvent e, Task task);'),(179,'Task task','net.sourceforge.ganttproject.task.Task',548,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',268,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginMoveTaskInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.task.Task)',0,'void beginMoveTaskInteraction(MouseEvent e, Task task);'),(180,'MouseEvent e','java.awt.event.MouseEvent',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',269,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginMoveTaskInteractions(java.awt.event.MouseEvent,java.util.List)',0,'void beginMoveTaskInteractions(MouseEvent e, List tasks);'),(181,'List tasks','java.util.List',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',269,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginMoveTaskInteractions(java.awt.event.MouseEvent,java.util.List)',0,'void beginMoveTaskInteractions(MouseEvent e, List tasks);'),(182,'MouseEvent e','java.awt.event.MouseEvent',0,32,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',270,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation.beginScrollViewInteraction(java.awt.event.MouseEvent)',0,'void beginScrollViewInteraction(MouseEvent e);'),(183,'MouseEvent initiatingEvent','java.awt.event.MouseEvent',0,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',278,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginChangeTaskEndInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'public void beginChangeTaskEndInteraction(MouseEvent initiatingEvent, TaskBoundaryChartItem taskBoundary) {\r\n    setActiveInteraction(new GanttGraphicArea.ChangeTaskEndInteraction(initiatingEvent, taskBoundary));\r\n}'),(184,'TaskBoundaryChartItem taskBoundary','net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem',225,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',278,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginChangeTaskEndInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'public void beginChangeTaskEndInteraction(MouseEvent initiatingEvent, TaskBoundaryChartItem taskBoundary) {\r\n    setActiveInteraction(new GanttGraphicArea.ChangeTaskEndInteraction(initiatingEvent, taskBoundary));\r\n}'),(185,'MouseEvent e','java.awt.event.MouseEvent',0,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',280,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginChangeTaskStartInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'public void beginChangeTaskStartInteraction(MouseEvent e, TaskBoundaryChartItem taskBoundary) {\r\n    setActiveInteraction(new GanttGraphicArea.ChangeTaskStartInteraction(e, taskBoundary));\r\n}'),(186,'TaskBoundaryChartItem taskBoundary','net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem',225,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',280,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginChangeTaskStartInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem)',0,'public void beginChangeTaskStartInteraction(MouseEvent e, TaskBoundaryChartItem taskBoundary) {\r\n    setActiveInteraction(new GanttGraphicArea.ChangeTaskStartInteraction(e, taskBoundary));\r\n}'),(187,'MouseEvent e','java.awt.event.MouseEvent',0,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',279,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginChangeTaskProgressInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskProgressChartItem)',0,'public void beginChangeTaskProgressInteraction(MouseEvent e, TaskProgressChartItem taskProgress) {\r\n    setActiveInteraction(new GanttGraphicArea.ChangeTaskProgressInteraction(e, taskProgress));\r\n}'),(188,'TaskProgressChartItem taskProgress','net.sourceforge.ganttproject.chart.item.TaskProgressChartItem',226,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',279,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginChangeTaskProgressInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskProgressChartItem)',0,'public void beginChangeTaskProgressInteraction(MouseEvent e, TaskProgressChartItem taskProgress) {\r\n    setActiveInteraction(new GanttGraphicArea.ChangeTaskProgressInteraction(e, taskProgress));\r\n}'),(189,'MouseEvent initiatingEvent','java.awt.event.MouseEvent',0,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',281,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginDrawDependencyInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem,net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport)',0,'public void beginDrawDependencyInteraction(MouseEvent initiatingEvent, TaskRegularAreaChartItem taskArea, GanttGraphicArea.MouseSupport mouseSupport) {\r\n    setActiveInteraction(new GanttGraphicArea.DrawDependencyInteraction(initiatingEvent, taskArea, mouseSupport));\r\n}'),(190,'TaskRegularAreaChartItem taskArea','net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem',227,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',281,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginDrawDependencyInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem,net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport)',0,'public void beginDrawDependencyInteraction(MouseEvent initiatingEvent, TaskRegularAreaChartItem taskArea, GanttGraphicArea.MouseSupport mouseSupport) {\r\n    setActiveInteraction(new GanttGraphicArea.DrawDependencyInteraction(initiatingEvent, taskArea, mouseSupport));\r\n}'),(191,'GanttGraphicArea.MouseSupport mouseSupport','net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport',38,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',281,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginDrawDependencyInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem,net.sourceforge.ganttproject.GanttGraphicArea$MouseSupport)',0,'public void beginDrawDependencyInteraction(MouseEvent initiatingEvent, TaskRegularAreaChartItem taskArea, GanttGraphicArea.MouseSupport mouseSupport) {\r\n    setActiveInteraction(new GanttGraphicArea.DrawDependencyInteraction(initiatingEvent, taskArea, mouseSupport));\r\n}'),(192,'MouseEvent e','java.awt.event.MouseEvent',0,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',282,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginMoveTaskInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.task.Task)',0,'public void beginMoveTaskInteraction(MouseEvent e, Task task) {\r\n    setActiveInteraction(new GanttGraphicArea.MoveTaskInteraction(e, task));\r\n}'),(193,'Task task','net.sourceforge.ganttproject.task.Task',548,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',282,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginMoveTaskInteraction(java.awt.event.MouseEvent,net.sourceforge.ganttproject.task.Task)',0,'public void beginMoveTaskInteraction(MouseEvent e, Task task) {\r\n    setActiveInteraction(new GanttGraphicArea.MoveTaskInteraction(e, task));\r\n}'),(194,'MouseEvent e','java.awt.event.MouseEvent',0,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',283,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginMoveTaskInteractions(java.awt.event.MouseEvent,java.util.List)',0,'public void beginMoveTaskInteractions(MouseEvent e, List tasks) {\r\n    setActiveInteraction(new GanttGraphicArea.MoveTaskInteractions(e, tasks));\r\n}'),(195,'List tasks','java.util.List',0,33,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase',283,'net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementationBase.beginMoveTaskInteractions(java.awt.event.MouseEvent,java.util.List)',0,'public void beginMoveTaskInteractions(MouseEvent e, List tasks) {\r\n    setActiveInteraction(new GanttGraphicArea.MoveTaskInteractions(e, tasks));\r\n}'),(196,'Graphics g','java.awt.Graphics',0,41,'net.sourceforge.ganttproject.GanttGraphicArea$NewChartComponentImpl',321,'net.sourceforge.ganttproject.GanttGraphicArea$NewChartComponentImpl.paintComponent(java.awt.Graphics,java.util.List)',0,'public void paintComponent(Graphics g, /* <Task> */\r\nList visibleTasks) {\r\n    synchronized(ChartModelBase.STATIC_MUTEX) {\r\n        GanttGraphicArea.super.paintComponent(g);\r\n        ChartModel model = this.myChartModel;\r\n        model.setTaskContainment(appli.getTaskContainment());\r\n        // model.setBounds(getSize());\r\n        // System.err.println(\"[NewChartComponentImpl] paintComponent. unit\r\n        // width=\"+getViewState().getBottomUnitWidth());\r\n        model.setBottomUnitWidth(getViewState().getBottomUnitWidth());\r\n        model.setRowHeight(((GanttTree2) (tree)).getTreeTable().getRowHeight());\r\n        model.setTopTimeUnit(getViewState().getTopTimeUnit());\r\n        model.setBottomTimeUnit(getViewState().getBottomTimeUnit());\r\n        model.setVisibleTasks(visibleTasks);\r\n        model.paint(g);\r\n        if ((getActiveInteraction()) != null) {\r\n            getActiveInteraction().paint(g);\r\n        }\r\n    }\r\n}'),(197,'/* <Task> */\r\nList visibleTasks','java.util.List',0,41,'net.sourceforge.ganttproject.GanttGraphicArea$NewChartComponentImpl',321,'net.sourceforge.ganttproject.GanttGraphicArea$NewChartComponentImpl.paintComponent(java.awt.Graphics,java.util.List)',0,'public void paintComponent(Graphics g, /* <Task> */\r\nList visibleTasks) {\r\n    synchronized(ChartModelBase.STATIC_MUTEX) {\r\n        GanttGraphicArea.super.paintComponent(g);\r\n        ChartModel model = this.myChartModel;\r\n        model.setTaskContainment(appli.getTaskContainment());\r\n        // model.setBounds(getSize());\r\n        // System.err.println(\"[NewChartComponentImpl] paintComponent. unit\r\n        // width=\"+getViewState().getBottomUnitWidth());\r\n        model.setBottomUnitWidth(getViewState().getBottomUnitWidth());\r\n        model.setRowHeight(((GanttTree2) (tree)).getTreeTable().getRowHeight());\r\n        model.setTopTimeUnit(getViewState().getTopTimeUnit());\r\n        model.setBottomTimeUnit(getViewState().getBottomTimeUnit());\r\n        model.setVisibleTasks(visibleTasks);\r\n        model.paint(g);\r\n        if ((getActiveInteraction()) != null) {\r\n            getActiveInteraction().paint(g);\r\n        }\r\n    }\r\n}'),(198,'Graphics g','java.awt.Graphics',0,41,'net.sourceforge.ganttproject.GanttGraphicArea$NewChartComponentImpl',320,'net.sourceforge.ganttproject.GanttGraphicArea$NewChartComponentImpl.paintComponent(java.awt.Graphics)',0,'public void paintComponent(Graphics g) {\r\n    synchronized(ChartModelBase.STATIC_MUTEX) {\r\n        GanttGraphicArea.super.paintComponent(g);\r\n        ChartModel model = this.myChartModel;\r\n        model.setTaskContainment(appli.getTaskContainment());\r\n        // model.setBounds(getSize());\r\n        // System.err.println(\"[NewChartComponentImpl] paintComponent. unit\r\n        // width=\"+getViewState().getBottomUnitWidth());\r\n        model.setBottomUnitWidth(getViewState().getBottomUnitWidth());\r\n        model.setRowHeight(((GanttTree2) (tree)).getTreeTable().getRowHeight());\r\n        model.setTopTimeUnit(getViewState().getTopTimeUnit());\r\n        model.setBottomTimeUnit(getViewState().getBottomTimeUnit());\r\n        VisibleNodesFilter visibleNodesFilter = new VisibleNodesFilter();\r\n        List visibleTasks = visibleNodesFilter.getVisibleNodes(tree.getJTree(), getScrollBar(), getHeight(), tree.getTreeTable().getRowHeight());\r\n        model.setVisibleTasks(visibleTasks);\r\n        // myChartModel.setExplicitlyHiddenTasks(tree.getHiddenTasks());\r\n        model.setVerticalOffset(((getScrollBar()) % (tree.getTreeTable().getRowHeight())));\r\n        model.paint(g);\r\n        if ((getActiveInteraction()) != null) {\r\n            getActiveInteraction().paint(g);\r\n        }\r\n    }\r\n}'),(199,'ChartSelection selection','net.sourceforge.ganttproject.chart.ChartSelection',177,41,'net.sourceforge.ganttproject.GanttGraphicArea$NewChartComponentImpl',316,'net.sourceforge.ganttproject.GanttGraphicArea$NewChartComponentImpl.canPaste(net.sourceforge.ganttproject.chart.ChartSelection)',0,'public IStatus canPaste(ChartSelection selection) {\r\n    return Status.OK_STATUS;\r\n}'),(200,'ChartSelection selection','net.sourceforge.ganttproject.chart.ChartSelection',177,41,'net.sourceforge.ganttproject.GanttGraphicArea$NewChartComponentImpl',322,'net.sourceforge.ganttproject.GanttGraphicArea$NewChartComponentImpl.paste(net.sourceforge.ganttproject.chart.ChartSelection)',0,'public void paste(ChartSelection selection) {\r\n    tree.pasteNode();\r\n}'),(201,'ScrollingManager scrollMgr','net.sourceforge.ganttproject.gui.scrolling.ScrollingManager',409,45,'net.sourceforge.ganttproject.GanttGraphicArea',224,'net.sourceforge.ganttproject.GanttGraphicArea.getScrollCenterAction(net.sourceforge.ganttproject.gui.scrolling.ScrollingManager,net.sourceforge.ganttproject.task.TaskSelectionManager,java.lang.String)',0,'public Action getScrollCenterAction(ScrollingManager scrollMgr, TaskSelectionManager taskSelMgr, String iconSize) {\r\n    if ((myScrollCenterAction) == null)\r\n        myScrollCenterAction = new GanttGraphicArea.ScrollGanttChartCenterAction(scrollMgr, taskSelMgr, iconSize);\r\n\r\n    return myScrollCenterAction;\r\n}'),(202,'TaskSelectionManager taskSelMgr','net.sourceforge.ganttproject.task.TaskSelectionManager',575,45,'net.sourceforge.ganttproject.GanttGraphicArea',224,'net.sourceforge.ganttproject.GanttGraphicArea.getScrollCenterAction(net.sourceforge.ganttproject.gui.scrolling.ScrollingManager,net.sourceforge.ganttproject.task.TaskSelectionManager,java.lang.String)',0,'public Action getScrollCenterAction(ScrollingManager scrollMgr, TaskSelectionManager taskSelMgr, String iconSize) {\r\n    if ((myScrollCenterAction) == null)\r\n        myScrollCenterAction = new GanttGraphicArea.ScrollGanttChartCenterAction(scrollMgr, taskSelMgr, iconSize);\r\n\r\n    return myScrollCenterAction;\r\n}'),(203,'String iconSize','java.lang.String',0,45,'net.sourceforge.ganttproject.GanttGraphicArea',224,'net.sourceforge.ganttproject.GanttGraphicArea.getScrollCenterAction(net.sourceforge.ganttproject.gui.scrolling.ScrollingManager,net.sourceforge.ganttproject.task.TaskSelectionManager,java.lang.String)',0,'public Action getScrollCenterAction(ScrollingManager scrollMgr, TaskSelectionManager taskSelMgr, String iconSize) {\r\n    if ((myScrollCenterAction) == null)\r\n        myScrollCenterAction = new GanttGraphicArea.ScrollGanttChartCenterAction(scrollMgr, taskSelMgr, iconSize);\r\n\r\n    return myScrollCenterAction;\r\n}'),(204,'ArrayList tasks','java.util.ArrayList',0,45,'net.sourceforge.ganttproject.GanttGraphicArea',235,'net.sourceforge.ganttproject.GanttGraphicArea.setPreviousStateTasks(java.util.ArrayList)',0,'public void setPreviousStateTasks(ArrayList tasks) {\r\n    int rowHeight = myChartModel.setPreviousStateTasks(tasks);\r\n    ((GanttTree2) (appli.getTree())).getTable().setRowHeight(rowHeight);\r\n}'),(205,'ActionEvent e','java.awt.event.ActionEvent',0,44,'net.sourceforge.ganttproject.GanttGraphicArea$ScrollGanttChartCenterAction',332,'net.sourceforge.ganttproject.GanttGraphicArea$ScrollGanttChartCenterAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    getUIFacade().setStatusText(GanttLanguage.getInstance().getText(\"centerOnSelectedTasks\"));\r\n    scroll();\r\n}'),(206,'MouseEvent e','java.awt.event.MouseEvent',0,42,'net.sourceforge.ganttproject.GanttGraphicArea$OldChartMouseListenerImpl',325,'net.sourceforge.ganttproject.GanttGraphicArea$OldChartMouseListenerImpl.mouseClicked(java.awt.event.MouseEvent)',0,'public void mouseClicked(MouseEvent e) {\r\n    if ((e.getButton()) == (MouseEvent.BUTTON1)) {\r\n        Task taskUnderPointer = myMouseSupport.findTaskUnderMousePointer(e.getX(), e.getY());\r\n        if (taskUnderPointer == null) {\r\n            tree.selectTreeRow((-1));\r\n        }\r\n    }\r\n    if (((e.getClickCount()) == 2) && ((e.getButton()) == (MouseEvent.BUTTON1))) {\r\n        if (!(appli.isOnlyViewer))\r\n            appli.propertiesTask();\r\n\r\n    }\r\n}'),(207,'MouseEvent e','java.awt.event.MouseEvent',0,42,'net.sourceforge.ganttproject.GanttGraphicArea$OldChartMouseListenerImpl',327,'net.sourceforge.ganttproject.GanttGraphicArea$OldChartMouseListenerImpl.processLeftButton(java.awt.event.MouseEvent)',0,'protected void processLeftButton(MouseEvent e) {\r\n    boolean isMineEvent = true;\r\n    ChartItem itemUnderPoint = myMouseSupport.getChartItemUnderMousePoint(e.getX(), e.getY());\r\n    if (itemUnderPoint instanceof TaskBoundaryChartItem) {\r\n        TaskBoundaryChartItem taskBoundary = ((TaskBoundaryChartItem) (itemUnderPoint));\r\n        if (taskBoundary.isStartBoundary()) {\r\n            getChartImplementation().beginChangeTaskStartInteraction(e, taskBoundary);\r\n        } else {\r\n            getChartImplementation().beginChangeTaskEndInteraction(e, taskBoundary);\r\n        }\r\n    } else\r\n        if (itemUnderPoint instanceof TaskProgressChartItem) {\r\n            getChartImplementation().beginChangeTaskProgressInteraction(e, ((TaskProgressChartItem) (itemUnderPoint)));\r\n        } else\r\n            if (itemUnderPoint instanceof TaskRegularAreaChartItem) {\r\n                getChartImplementation().beginDrawDependencyInteraction(e, ((TaskRegularAreaChartItem) (itemUnderPoint)), myMouseSupport);\r\n            } else {\r\n                isMineEvent = false;\r\n                super.processLeftButton(e);\r\n            }\r\n\r\n\r\n    if (isMineEvent) {\r\n        repaint();\r\n        appli.recalculateCriticalPath();\r\n    }\r\n}'),(208,'MouseEvent e','java.awt.event.MouseEvent',0,42,'net.sourceforge.ganttproject.GanttGraphicArea$OldChartMouseListenerImpl',326,'net.sourceforge.ganttproject.GanttGraphicArea$OldChartMouseListenerImpl.mousePressed(java.awt.event.MouseEvent)',0,'public void mousePressed(MouseEvent e) {\r\n    tree.stopEditing();\r\n    if (appli.isOnlyViewer)\r\n        return;\r\n\r\n    Task taskUnderPointer = myMouseSupport.findTaskUnderMousePointer(e.getX(), e.getY());\r\n    if ((taskUnderPointer != null) && (!(Mediator.getTaskSelectionManager().isTaskSelected(taskUnderPointer)))) {\r\n        boolean ctrl = ((e.getModifiersEx()) & (InputEvent.CTRL_DOWN_MASK)) == (InputEvent.CTRL_DOWN_MASK);\r\n        tree.selectTask(taskUnderPointer, ctrl);\r\n    }\r\n    super.mousePressed(e);\r\n    if (taskUnderPointer == null) {\r\n        return;\r\n    }\r\n    if ((e.getButton()) == (MouseEvent.BUTTON2)) {\r\n        if (!(Mediator.getTaskSelectionManager().isTaskSelected(taskUnderPointer)))\r\n            tree.selectTask(taskUnderPointer, false);\r\n\r\n        List l = Mediator.getTaskSelectionManager().getSelectedTasks();\r\n        getChartImplementation().beginMoveTaskInteractions(e, l);\r\n    }\r\n}'),(209,'MouseEvent e','java.awt.event.MouseEvent',0,43,'net.sourceforge.ganttproject.GanttGraphicArea$OldMouseMotionListenerImpl',329,'net.sourceforge.ganttproject.GanttGraphicArea$OldMouseMotionListenerImpl.mouseDragged(java.awt.event.MouseEvent)',0,'public void mouseDragged(MouseEvent e) {\r\n    if (appli.isOnlyViewer)\r\n        return;\r\n\r\n    super.mouseDragged(e);\r\n    /* Add the repaint in order to repaint the treetable when an action\n    occurs on the GraphicArea. here mousedragged because all actions\n    modifying task properties on the graphics are made through\n    mousedragged (I think !)\n     */\r\n    // Mediator.getGanttProjectSingleton().repaint();\r\n    // getUIFacade().repaint2();\r\n    if (myUIConfiguration.isCriticalPathOn()) {\r\n        ChartComponentBase.MouseInteraction mi = myChartComponentImpl.getActiveInteraction();\r\n        if (((mi instanceof GanttGraphicArea.ChangeTaskBoundaryInteraction) || (mi instanceof GanttGraphicArea.MoveTaskInteraction)) || (mi instanceof GanttGraphicArea.MoveTaskInteractions))\r\n            appli.recalculateCriticalPath();\r\n\r\n    }\r\n    this.repaint();\r\n    // avant\r\n}'),(210,'MouseEvent e','java.awt.event.MouseEvent',0,43,'net.sourceforge.ganttproject.GanttGraphicArea$OldMouseMotionListenerImpl',330,'net.sourceforge.ganttproject.GanttGraphicArea$OldMouseMotionListenerImpl.mouseMoved(java.awt.event.MouseEvent)',0,'// Move the move on the area\r\npublic void mouseMoved(MouseEvent e) {\r\n    ChartItem itemUnderPoint = myMouseSupport.getChartItemUnderMousePoint(e.getX(), e.getY());\r\n    Task taskUnderPoint = (itemUnderPoint == null) ? null : itemUnderPoint.getTask();\r\n    // System.err.println(\"[OldMouseMotionListenerImpl] mouseMoved:\r\n    // taskUnderPoint=\"+taskUnderPoint);\r\n    if (taskUnderPoint == null) {\r\n        setDefaultCursor();\r\n    } else {\r\n        if (itemUnderPoint instanceof TaskBoundaryChartItem) {\r\n            Cursor cursor = (((TaskBoundaryChartItem) (itemUnderPoint)).isStartBoundary()) ? GanttGraphicArea.W_RESIZE_CURSOR : GanttGraphicArea.E_RESIZE_CURSOR;\r\n            setCursor(cursor);\r\n        } else// special cursor\r\n\r\n            if (itemUnderPoint instanceof TaskProgressChartItem) {\r\n                setCursor(GanttGraphicArea.CHANGE_PROGRESS_CURSOR);\r\n            } else {\r\n                setDefaultCursor();\r\n            }\r\n\r\n        // getUIFacade().repaint2();\r\n        appli.repaint();\r\n    }\r\n}'),(211,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,45,'net.sourceforge.ganttproject.GanttGraphicArea',238,'net.sourceforge.ganttproject.GanttGraphicArea.setTaskManager(net.sourceforge.ganttproject.task.TaskManager)',0,'public void setTaskManager(TaskManager taskManager) {\r\n    // TODO Auto-generated method stub\r\n}'),(212,'CustomColumEvent event','net.sourceforge.ganttproject.task.CustomColumEvent',531,45,'net.sourceforge.ganttproject.GanttGraphicArea',207,'net.sourceforge.ganttproject.GanttGraphicArea.customColumsChange(net.sourceforge.ganttproject.task.CustomColumEvent)',0,'public void customColumsChange(CustomColumEvent event) {\r\n    repaint();\r\n}'),(213,'UIConfiguration configuration','net.sourceforge.ganttproject.gui.UIConfiguration',335,45,'net.sourceforge.ganttproject.GanttGraphicArea',239,'net.sourceforge.ganttproject.GanttGraphicArea.setUIConfiguration(net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public void setUIConfiguration(UIConfiguration configuration) {\r\n    myUIConfiguration = configuration;\r\n}'),(214,'Graphics g','java.awt.Graphics',0,34,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel',289,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n    super.paint(g);\r\n    taskBar.paintMe(g);\r\n    upText.paintMe(g);\r\n    downText.paintMe(g);\r\n    leftText.paintMe(g);\r\n    rightText.paintMe(g);\r\n}'),(215,'ChangeValueEvent event','net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent',375,34,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel',287,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel.changeValue(net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent)',0,'public void changeValue(ChangeValueEvent event) {\r\n    Object id = event.getID();\r\n    if (id.equals(\"up\")) {\r\n        upText.text = GanttGraphicArea.ChartOptionsPreviewPanel.getI18n(event.getNewValue().toString());\r\n    } else\r\n        if (id.equals(\"down\")) {\r\n            downText.text = GanttGraphicArea.ChartOptionsPreviewPanel.getI18n(event.getNewValue().toString());\r\n        } else\r\n            if (id.equals(\"left\")) {\r\n                leftText.text = GanttGraphicArea.ChartOptionsPreviewPanel.getI18n(event.getNewValue().toString());\r\n            } else\r\n                if (id.equals(\"right\")) {\r\n                    rightText.text = GanttGraphicArea.ChartOptionsPreviewPanel.getI18n(event.getNewValue().toString());\r\n                }\r\n\r\n\r\n\r\n    repaint();\r\n}'),(216,'String id','java.lang.String',0,34,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel',288,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel.getI18n(java.lang.String)',0,'static String getI18n(String id) {\r\n    String res = GanttLanguage.getInstance().getText(((\"optionValue.\" + id) + \".label\"));\r\n    if (res.startsWith(GanttLanguage.MISSING_RESOURCE)) {\r\n        res = id;\r\n    }\r\n    return res;\r\n}'),(217,'Graphics g','java.awt.Graphics',0,35,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$TaskBar',292,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$TaskBar.paintMe(java.awt.Graphics)',0,'void paintMe(Graphics g) {\r\n    g.setColor(color);\r\n    g.fillRect(x, y, width, height);\r\n    g.setColor(Color.BLACK);\r\n    g.drawRect(x, y, width, height);\r\n}'),(218,'Graphics g','java.awt.Graphics',0,36,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$Text',295,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$Text.paintMe(java.awt.Graphics)',0,'void paintMe(Graphics g) {\r\n    calculateCoordinates(g);\r\n    g.setFont(GanttGraphicArea.ChartOptionsPreviewPanel.Text.FONT);\r\n    g.drawString(text, x, y);\r\n}'),(219,'Graphics g','java.awt.Graphics',0,36,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$Text',294,'net.sourceforge.ganttproject.GanttGraphicArea$ChartOptionsPreviewPanel$Text.calculateCoordinates(java.awt.Graphics)',0,'private void calculateCoordinates(Graphics g) {\r\n    int textHeight = g.getFontMetrics(GanttGraphicArea.ChartOptionsPreviewPanel.Text.FONT).getHeight();\r\n    int textWidth = g.getFontMetrics(GanttGraphicArea.ChartOptionsPreviewPanel.Text.FONT).stringWidth(text);\r\n    switch (position) {\r\n        case GanttGraphicArea.ChartOptionsPreviewPanel.Text.UP :\r\n            y = (taskBar.y) - (GanttGraphicArea.ChartOptionsPreviewPanel.Text.MARGIN);\r\n            x = ((taskBar.x) + ((taskBar.width) / 2)) - (textWidth / 2);\r\n            break;\r\n        case GanttGraphicArea.ChartOptionsPreviewPanel.Text.DOWN :\r\n            x = ((taskBar.x) + ((taskBar.width) / 2)) - (textWidth / 2);\r\n            y = (((taskBar.y) + (taskBar.height)) + textHeight) - (GanttGraphicArea.ChartOptionsPreviewPanel.Text.MARGIN);\r\n            break;\r\n        case GanttGraphicArea.ChartOptionsPreviewPanel.Text.LEFT :\r\n            y = (((taskBar.y) + ((taskBar.height) / 2)) + (textHeight / 2)) - (GanttGraphicArea.ChartOptionsPreviewPanel.Text.MARGIN);\r\n            x = ((taskBar.x) - (GanttGraphicArea.ChartOptionsPreviewPanel.Text.MARGIN)) - textWidth;\r\n            break;\r\n        case GanttGraphicArea.ChartOptionsPreviewPanel.Text.RIGHT :\r\n            y = (((taskBar.y) + ((taskBar.height) / 2)) + (textHeight / 2)) - (GanttGraphicArea.ChartOptionsPreviewPanel.Text.MARGIN);\r\n            x = ((taskBar.x) + (taskBar.width)) + (GanttGraphicArea.ChartOptionsPreviewPanel.Text.MARGIN);\r\n            break;\r\n    }\r\n}'),(220,'String imagename','java.lang.String',0,46,'net.sourceforge.ganttproject.GanttImagePanel',336,'net.sourceforge.ganttproject.GanttImagePanel.-init-(java.lang.String,int,int)',0,'/**\r\n * Constructor of the panel.\r\n */\r\npublic GanttImagePanel(String imagename, int x, int y) {\r\n    super(new GridBagLayout());\r\n    image = new ImageIcon(getClass().getResource((\"/icons/\" + imagename)));\r\n    this.x = x;\r\n    this.y = y;\r\n    applyComponentOrientation(GanttLanguage.getInstance().getComponentOrientation());\r\n}'),(221,'int x','int',0,46,'net.sourceforge.ganttproject.GanttImagePanel',336,'net.sourceforge.ganttproject.GanttImagePanel.-init-(java.lang.String,int,int)',0,'/**\r\n * Constructor of the panel.\r\n */\r\npublic GanttImagePanel(String imagename, int x, int y) {\r\n    super(new GridBagLayout());\r\n    image = new ImageIcon(getClass().getResource((\"/icons/\" + imagename)));\r\n    this.x = x;\r\n    this.y = y;\r\n    applyComponentOrientation(GanttLanguage.getInstance().getComponentOrientation());\r\n}'),(222,'int y','int',0,46,'net.sourceforge.ganttproject.GanttImagePanel',336,'net.sourceforge.ganttproject.GanttImagePanel.-init-(java.lang.String,int,int)',0,'/**\r\n * Constructor of the panel.\r\n */\r\npublic GanttImagePanel(String imagename, int x, int y) {\r\n    super(new GridBagLayout());\r\n    image = new ImageIcon(getClass().getResource((\"/icons/\" + imagename)));\r\n    this.x = x;\r\n    this.y = y;\r\n    applyComponentOrientation(GanttLanguage.getInstance().getComponentOrientation());\r\n}'),(223,'Graphics g','java.awt.Graphics',0,46,'net.sourceforge.ganttproject.GanttImagePanel',338,'net.sourceforge.ganttproject.GanttImagePanel.paintComponent(java.awt.Graphics)',0,'/**\r\n * Repaint the component\r\n */\r\npublic void paintComponent(Graphics g) {\r\n    image.paintIcon(this, g, 0, 0);\r\n}'),(224,'RoleManager roleManager','net.sourceforge.ganttproject.roles.RoleManager',517,48,'net.sourceforge.ganttproject.GanttOptions',339,'net.sourceforge.ganttproject.GanttOptions.-init-(net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.document.DocumentManager,boolean)',0,'/**\r\n * Default constructor.\r\n */\r\npublic GanttOptions(RoleManager roleManager, DocumentManager documentManager, boolean isOnlyViewer) {\r\n    myDocumentManager = documentManager;\r\n    myRoleManager = roleManager;\r\n    this.isOnlyViewer = isOnlyViewer;\r\n    initByDefault();\r\n    try {\r\n        this.workingDir = System.getProperty(\"user.home\");\r\n    } catch (AccessControlException e) {\r\n        // This can happen when running in a sandbox (Java WebStart)\r\n        System.err.println(((e + \": \") + (e.getMessage())));\r\n    }\r\n}'),(225,'DocumentManager documentManager','net.sourceforge.ganttproject.document.DocumentManager',237,48,'net.sourceforge.ganttproject.GanttOptions',339,'net.sourceforge.ganttproject.GanttOptions.-init-(net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.document.DocumentManager,boolean)',0,'/**\r\n * Default constructor.\r\n */\r\npublic GanttOptions(RoleManager roleManager, DocumentManager documentManager, boolean isOnlyViewer) {\r\n    myDocumentManager = documentManager;\r\n    myRoleManager = roleManager;\r\n    this.isOnlyViewer = isOnlyViewer;\r\n    initByDefault();\r\n    try {\r\n        this.workingDir = System.getProperty(\"user.home\");\r\n    } catch (AccessControlException e) {\r\n        // This can happen when running in a sandbox (Java WebStart)\r\n        System.err.println(((e + \": \") + (e.getMessage())));\r\n    }\r\n}'),(226,'boolean isOnlyViewer','boolean',0,48,'net.sourceforge.ganttproject.GanttOptions',339,'net.sourceforge.ganttproject.GanttOptions.-init-(net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.document.DocumentManager,boolean)',0,'/**\r\n * Default constructor.\r\n */\r\npublic GanttOptions(RoleManager roleManager, DocumentManager documentManager, boolean isOnlyViewer) {\r\n    myDocumentManager = documentManager;\r\n    myRoleManager = roleManager;\r\n    this.isOnlyViewer = isOnlyViewer;\r\n    initByDefault();\r\n    try {\r\n        this.workingDir = System.getProperty(\"user.home\");\r\n    } catch (AccessControlException e) {\r\n        // This can happen when running in a sandbox (Java WebStart)\r\n        System.err.println(((e + \": \") + (e.getMessage())));\r\n    }\r\n}'),(227,'String name','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',436,'net.sourceforge.ganttproject.GanttOptions.startElement(java.lang.String,org.xml.sax.Attributes,javax.xml.transform.sax.TransformerHandler)',0,'// iconListAsIntArray = initIconList ();\r\n/**\r\n * Constructor. public GanttOptions(Color c, int x, int y, int width, int\r\n * height, GanttLookAndFeelInfo lookAndFeel, boolean automatic, boolean\r\n * dragTime, String xslDir, String xslFo,String workingDir, boolean tips,\r\n * boolean redline, int lockDAVMinutes, DocumentsMRU documentsMRU,\r\n * UIConfiguration uiConfiguration, RoleManager roleManager) { myRoleManager =\r\n * roleManager; color = c; this.x = x; this.y = y; this.width = width;\r\n * this.height = height; this.lookAndFeel = lookAndFeel;\r\n * this.automatic=automatic; this.dragTime=dragTime; this.openTips=tips;\r\n * this.redline=redline; this.lockDAVMinutes=lockDAVMinutes; this.myUIConfig =\r\n * uiConfiguration; if(xslFo!=null) this.xslFo=xslFo; if (xslDir != null)\r\n * this.xslDir = xslDir; try { this.workingDir =\r\n * System.getProperty(\"user.home\"); } catch (AccessControlException e) { //\r\n * This can happen when running in a sandbox (Java WebStart)\r\n * System.err.println (e + \": \" + e.getMessage()); } if (workingDir != null &&\r\n * new File(workingDir).exists()) this.workingDir = workingDir;\r\n * this.documentsMRU = documentsMRU; }\r\n */\r\nprivate void startElement(String name, Attributes attrs, TransformerHandler handler) throws SAXException {\r\n    handler.startElement(\"\", name, name, attrs);\r\n}'),(228,'Attributes attrs','org.xml.sax.Attributes',0,48,'net.sourceforge.ganttproject.GanttOptions',436,'net.sourceforge.ganttproject.GanttOptions.startElement(java.lang.String,org.xml.sax.Attributes,javax.xml.transform.sax.TransformerHandler)',0,'// iconListAsIntArray = initIconList ();\r\n/**\r\n * Constructor. public GanttOptions(Color c, int x, int y, int width, int\r\n * height, GanttLookAndFeelInfo lookAndFeel, boolean automatic, boolean\r\n * dragTime, String xslDir, String xslFo,String workingDir, boolean tips,\r\n * boolean redline, int lockDAVMinutes, DocumentsMRU documentsMRU,\r\n * UIConfiguration uiConfiguration, RoleManager roleManager) { myRoleManager =\r\n * roleManager; color = c; this.x = x; this.y = y; this.width = width;\r\n * this.height = height; this.lookAndFeel = lookAndFeel;\r\n * this.automatic=automatic; this.dragTime=dragTime; this.openTips=tips;\r\n * this.redline=redline; this.lockDAVMinutes=lockDAVMinutes; this.myUIConfig =\r\n * uiConfiguration; if(xslFo!=null) this.xslFo=xslFo; if (xslDir != null)\r\n * this.xslDir = xslDir; try { this.workingDir =\r\n * System.getProperty(\"user.home\"); } catch (AccessControlException e) { //\r\n * This can happen when running in a sandbox (Java WebStart)\r\n * System.err.println (e + \": \" + e.getMessage()); } if (workingDir != null &&\r\n * new File(workingDir).exists()) this.workingDir = workingDir;\r\n * this.documentsMRU = documentsMRU; }\r\n */\r\nprivate void startElement(String name, Attributes attrs, TransformerHandler handler) throws SAXException {\r\n    handler.startElement(\"\", name, name, attrs);\r\n}'),(229,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,48,'net.sourceforge.ganttproject.GanttOptions',436,'net.sourceforge.ganttproject.GanttOptions.startElement(java.lang.String,org.xml.sax.Attributes,javax.xml.transform.sax.TransformerHandler)',0,'// iconListAsIntArray = initIconList ();\r\n/**\r\n * Constructor. public GanttOptions(Color c, int x, int y, int width, int\r\n * height, GanttLookAndFeelInfo lookAndFeel, boolean automatic, boolean\r\n * dragTime, String xslDir, String xslFo,String workingDir, boolean tips,\r\n * boolean redline, int lockDAVMinutes, DocumentsMRU documentsMRU,\r\n * UIConfiguration uiConfiguration, RoleManager roleManager) { myRoleManager =\r\n * roleManager; color = c; this.x = x; this.y = y; this.width = width;\r\n * this.height = height; this.lookAndFeel = lookAndFeel;\r\n * this.automatic=automatic; this.dragTime=dragTime; this.openTips=tips;\r\n * this.redline=redline; this.lockDAVMinutes=lockDAVMinutes; this.myUIConfig =\r\n * uiConfiguration; if(xslFo!=null) this.xslFo=xslFo; if (xslDir != null)\r\n * this.xslDir = xslDir; try { this.workingDir =\r\n * System.getProperty(\"user.home\"); } catch (AccessControlException e) { //\r\n * This can happen when running in a sandbox (Java WebStart)\r\n * System.err.println (e + \": \" + e.getMessage()); } if (workingDir != null &&\r\n * new File(workingDir).exists()) this.workingDir = workingDir;\r\n * this.documentsMRU = documentsMRU; }\r\n */\r\nprivate void startElement(String name, Attributes attrs, TransformerHandler handler) throws SAXException {\r\n    handler.startElement(\"\", name, name, attrs);\r\n}'),(230,'String name','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',347,'net.sourceforge.ganttproject.GanttOptions.endElement(java.lang.String,javax.xml.transform.sax.TransformerHandler)',0,'private void endElement(String name, TransformerHandler handler) throws SAXException {\r\n    handler.endElement(\"\", name, name);\r\n}'),(231,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,48,'net.sourceforge.ganttproject.GanttOptions',347,'net.sourceforge.ganttproject.GanttOptions.endElement(java.lang.String,javax.xml.transform.sax.TransformerHandler)',0,'private void endElement(String name, TransformerHandler handler) throws SAXException {\r\n    handler.endElement(\"\", name, name);\r\n}'),(232,'String name','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',342,'net.sourceforge.ganttproject.GanttOptions.addAttribute(java.lang.String,java.lang.String,org.xml.sax.helpers.AttributesImpl)',0,'private void addAttribute(String name, String value, AttributesImpl attrs) {\r\n    if (value != null) {\r\n        attrs.addAttribute(\"\", name, name, \"CDATA\", value);\r\n    } else {\r\n        System.err.println(((\"[GanttOptions] attribute \" + name) + \" is null\"));\r\n    }\r\n}'),(233,'String value','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',342,'net.sourceforge.ganttproject.GanttOptions.addAttribute(java.lang.String,java.lang.String,org.xml.sax.helpers.AttributesImpl)',0,'private void addAttribute(String name, String value, AttributesImpl attrs) {\r\n    if (value != null) {\r\n        attrs.addAttribute(\"\", name, name, \"CDATA\", value);\r\n    } else {\r\n        System.err.println(((\"[GanttOptions] attribute \" + name) + \" is null\"));\r\n    }\r\n}'),(234,'AttributesImpl attrs','org.xml.sax.helpers.AttributesImpl',0,48,'net.sourceforge.ganttproject.GanttOptions',342,'net.sourceforge.ganttproject.GanttOptions.addAttribute(java.lang.String,java.lang.String,org.xml.sax.helpers.AttributesImpl)',0,'private void addAttribute(String name, String value, AttributesImpl attrs) {\r\n    if (value != null) {\r\n        attrs.addAttribute(\"\", name, name, \"CDATA\", value);\r\n    } else {\r\n        System.err.println(((\"[GanttOptions] attribute \" + name) + \" is null\"));\r\n    }\r\n}'),(235,'String name','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',346,'net.sourceforge.ganttproject.GanttOptions.emptyElement(java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'private void emptyElement(String name, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    startElement(name, attrs, handler);\r\n    endElement(name, handler);\r\n    attrs.clear();\r\n}'),(236,'AttributesImpl attrs','org.xml.sax.helpers.AttributesImpl',0,48,'net.sourceforge.ganttproject.GanttOptions',346,'net.sourceforge.ganttproject.GanttOptions.emptyElement(java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'private void emptyElement(String name, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    startElement(name, attrs, handler);\r\n    endElement(name, handler);\r\n    attrs.clear();\r\n}'),(237,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,48,'net.sourceforge.ganttproject.GanttOptions',346,'net.sourceforge.ganttproject.GanttOptions.emptyElement(java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'private void emptyElement(String name, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    startElement(name, attrs, handler);\r\n    endElement(name, handler);\r\n    attrs.clear();\r\n}'),(238,'Font font','java.awt.Font',0,48,'net.sourceforge.ganttproject.GanttOptions',367,'net.sourceforge.ganttproject.GanttOptions.getFontSpec(java.awt.Font)',0,'private String getFontSpec(Font font) {\r\n    return ((((font.getFamily()) + \"-\") + (getFontStyle(font))) + \"-\") + (font.getSize());\r\n}'),(239,'Font font','java.awt.Font',0,48,'net.sourceforge.ganttproject.GanttOptions',368,'net.sourceforge.ganttproject.GanttOptions.getFontStyle(java.awt.Font)',0,'private String getFontStyle(Font font) {\r\n    String result;\r\n    final int BOLDITALIC = (Font.BOLD) + (Font.ITALIC);\r\n    switch (font.getStyle()) {\r\n        case Font.PLAIN :\r\n            {\r\n                result = \"plain\";\r\n                break;\r\n            }\r\n        case Font.BOLD :\r\n            {\r\n                result = \"bold\";\r\n                break;\r\n            }\r\n        case Font.ITALIC :\r\n            {\r\n                result = \"italic\";\r\n                break;\r\n            }\r\n        case BOLDITALIC :\r\n            {\r\n                result = \"bolditalic\";\r\n                break;\r\n            }\r\n        default :\r\n            {\r\n                throw new RuntimeException((((\"Illegal value of font style. style=\" + (font.getStyle())) + \" font=\") + font));\r\n            }\r\n    }\r\n    return result;\r\n}'),(240,'String s','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',345,'net.sourceforge.ganttproject.GanttOptions.correct(java.lang.String)',0,'public String correct(String s) {\r\n    String res;\r\n    res = s.replaceAll(\"&\", \"&#38;\");\r\n    res = res.replaceAll(\"<\", \"&#60;\");\r\n    res = res.replaceAll(\">\", \"&#62;\");\r\n    res = res.replaceAll(\"/\", \"&#47;\");\r\n    res = res.replaceAll(\"\"\", \"&#34;\");\r\n    return res;\r\n}'),(241,'File optionsFile','java.io.File',0,48,'net.sourceforge.ganttproject.GanttOptions',394,'net.sourceforge.ganttproject.GanttOptions.loadRoleSets(java.io.File)',0,'private void loadRoleSets(File optionsFile) {\r\n    GanttXMLOpen loader = new GanttXMLOpen(null);\r\n    IconPositionTagHandler iconHandler = new IconPositionTagHandler();\r\n    loader.addTagHandler(iconHandler);\r\n    loader.addTagHandler(new RoleTagHandler(getRoleManager()));\r\n    loader.load(optionsFile);\r\n    if ((iconHandler.getList()) != null) {\r\n        iconListAsIntArray = iconHandler.getList();\r\n        iconListAsString = iconHandler.getPositions();\r\n    }\r\n    if ((iconHandler.getDeletedList()) != null) {\r\n        deletedIconListAsIntArray = iconHandler.getDeletedList();\r\n        deletedIconListAsString = iconHandler.getDeletedPositions();\r\n    }\r\n}'),(242,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,48,'net.sourceforge.ganttproject.GanttOptions',397,'net.sourceforge.ganttproject.GanttOptions.saveRoleSets(javax.xml.transform.sax.TransformerHandler)',0,'private void saveRoleSets(TransformerHandler handler) throws TransformerConfigurationException, TransformerFactoryConfigurationError, SAXException {\r\n    RoleSet[] roleSets = getRoleManager().getRoleSets();\r\n    for (int i = 0; i < (roleSets.length); i++) {\r\n        AttributesImpl attrs = new AttributesImpl();\r\n        attrs.addAttribute(\"\", \"roleset-name\", \"roleset-name\", \"CDATA\", roleSets[i].getName());\r\n        handler.startElement(\"\", \"roles\", \"roles\", attrs);\r\n        saveRoles(roleSets[i], handler);\r\n        handler.endElement(\"\", \"roles\", \"roles\");\r\n    }\r\n}'),(243,'RoleSet roleSet','net.sourceforge.ganttproject.roles.RoleSet',520,48,'net.sourceforge.ganttproject.GanttOptions',398,'net.sourceforge.ganttproject.GanttOptions.saveRoles(net.sourceforge.ganttproject.roles.RoleSet,javax.xml.transform.sax.TransformerHandler)',0,'private void saveRoles(RoleSet roleSet, TransformerHandler handler) throws SAXException {\r\n    Role[] roles = roleSet.getRoles();\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    for (int i = 0; i < (roles.length); i++) {\r\n        Role next = roles[i];\r\n        addAttribute(\"id\", (\"\" + (next.getID())), attrs);\r\n        addAttribute(\"name\", next.getName(), attrs);\r\n        emptyElement(\"role\", attrs, handler);\r\n    }\r\n}'),(244,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,48,'net.sourceforge.ganttproject.GanttOptions',398,'net.sourceforge.ganttproject.GanttOptions.saveRoles(net.sourceforge.ganttproject.roles.RoleSet,javax.xml.transform.sax.TransformerHandler)',0,'private void saveRoles(RoleSet roleSet, TransformerHandler handler) throws SAXException {\r\n    Role[] roles = roleSet.getRoles();\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    for (int i = 0; i < (roles.length); i++) {\r\n        Role next = roles[i];\r\n        addAttribute(\"id\", (\"\" + (next.getID())), attrs);\r\n        addAttribute(\"name\", next.getName(), attrs);\r\n        emptyElement(\"role\", attrs, handler);\r\n    }\r\n}'),(245,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,48,'net.sourceforge.ganttproject.GanttOptions',396,'net.sourceforge.ganttproject.GanttOptions.saveIconPositions(javax.xml.transform.sax.TransformerHandler)',0,'private void saveIconPositions(TransformerHandler handler) throws TransformerConfigurationException, TransformerFactoryConfigurationError, SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"icons-list\", iconListAsString, attrs);\r\n    addAttribute(\"deletedIcons-list\", deletedIconListAsString, attrs);\r\n    emptyElement(\"positions\", attrs, handler);\r\n}'),(246,'String namespaceURI','java.lang.String',0,47,'net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser',438,'net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    int r = 0;\r\n    int g = 0;\r\n    int b = 0;\r\n    if (\"option\".equals(qName)) {\r\n        GPOption option = ((GPOption) (myGPOptions.get(attrs.getValue(\"id\"))));\r\n        if (option != null) {\r\n            option.lock();\r\n            option.loadPersistentValue(attrs.getValue(\"value\"));\r\n            option.commit();\r\n        }\r\n        return;\r\n    }\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getQName(i);// Attr name\r\n\r\n            String value = attrs.getValue(i);\r\n            String tagDotAttribute = (qName + \".\") + aName;\r\n            GP1XOptionConverter converter = ((GP1XOptionConverter) (myTagDotAttribute_Converter.get(tagDotAttribute)));\r\n            if (converter != null) {\r\n                converter.loadValue(value);\r\n                continue;\r\n            }\r\n            if (qName.equals(\"language\")) {\r\n                if (aName == \"selection\") {\r\n                    if ((value.equals(\"English\")) || (value.equals(\"en\"))) {\r\n                        language.setLocale(Locale.US);\r\n                    } else\r\n                        if ((value.equals(\"English (UK)\")) || (value.equals(\"en_GB\"))) {\r\n                            language.setLocale(Locale.UK);\r\n                        } else\r\n                            if ((value.equals(\"Franu00e7ais\")) || (value.equals(\"fr\"))) {\r\n                                language.setLocale(Locale.FRANCE);\r\n                            } else\r\n                                if ((value.equals(\"Espau00f1ol\")) || (value.equals(\"es\"))) {\r\n                                    language.setLocale(new Locale(\"es\", \"ES\"));\r\n                                } else\r\n                                    if ((value.equals(\"Portugues\")) || (value.equals(\"pt\"))) {\r\n                                        language.setLocale(new Locale(\"pt\", \"PT\"));\r\n                                    } else\r\n                                        if ((value.equals(\"Portuguu00eas do Brasil\")) || (value.equals(\"pt_BR\"))) {\r\n                                            language.setLocale(new Locale(\"pt\", \"BR\"));\r\n                                        } else\r\n                                            if ((value.equals(\"Deutsch\")) || (value.equals(\"de\"))) {\r\n                                                language.setLocale(Locale.GERMANY);\r\n                                            } else\r\n                                                if ((value.equals(\"Norsk\")) || (value.equals(\"no\"))) {\r\n                                                    language.setLocale(new Locale(\"no\", \"NO\"));\r\n                                                } else\r\n                                                    if ((value.equals(\"Italiano\")) || (value.equals(\"it\"))) {\r\n                                                        language.setLocale(Locale.ITALY);\r\n                                                    } else\r\n                                                        if ((value.equals(\"Japanese\")) || (value.equals(\"jpn\"))) {\r\n                                                            language.setLocale(new Locale(\"ja\", \"JP\"));\r\n                                                        } else\r\n                                                            if ((value.equals(\"Tu00fcrku00e7e\")) || (value.equals(\"tr\"))) {\r\n                                                                language.setLocale(new Locale(\"tr\", \"TR\"));\r\n                                                            } else\r\n                                                                if ((((value.equals(\"Simplified Chinese\")) || (value.equals(\"SIMPLIFIED_CHINESE\"))) || (value.equals(\"CHINA\"))) || (value.equals(\"zh_CN\"))) {\r\n                                                                    language.setLocale(Locale.CHINA);\r\n                                                                } else\r\n                                                                    if ((((value.equals(\"Traditional Chinese\")) || (value.equals(\"TRADITIONAL_CHINESE\"))) || (value.equals(\"TAIWAN\"))) || (value.equals(\"zh_TW\"))) {\r\n                                                                        language.setLocale(Locale.TAIWAN);\r\n                                                                    } else\r\n                                                                        if ((value.equals(\"Polski\")) || (value.equals(\"pl\"))) {\r\n                                                                            language.setLocale(new Locale(\"pl\", \"PL\"));\r\n                                                                        } else\r\n                                                                            if ((value.equals(\"u0420u0443u0441u0441u043au0438u0439\")) || (value.equals(\"ru\"))) {\r\n                                                                                language.setLocale(new Locale(\"ru\", \"RU\"));\r\n                                                                            } else\r\n                                                                                if ((value.equals(\"Estonian\")) || (value.equals(\"et\"))) {\r\n                                                                                    language.setLocale(new Locale(\"et\", \"ET\"));\r\n                                                                                } else\r\n                                                                                    if (value.equals(\"fi\")) {\r\n                                                                                        language.setLocale(new Locale(\"fi\", \"FI\"));\r\n                                                                                    } else\r\n                                                                                        if ((value.equals(\"Hungarian\")) || (value.equals(\"hu\"))) {\r\n                                                                                            language.setLocale(new Locale(\"hu\", \"HU\"));\r\n                                                                                        } else\r\n                                                                                            if ((value.equals(\"Hrvatski\")) || (value.equals(\"hr\"))) {\r\n                                                                                                language.setLocale(new Locale(\"hr\", \"HR\"));\r\n                                                                                            } else\r\n                                                                                                if ((value.equals(\"u05d0u05e0u05d2u05dcu05d9u05ea\")) || (value.equals(\"iw\"))) {\r\n                                                                                                    language.setLocale(new Locale(\"iw\", \"IW\"));\r\n                                                                                                } else\r\n                                                                                                    if ((value.equals(\"Slovenu0161u010dina\")) || (value.equals(\"si\"))) {\r\n                                                                                                        language.setLocale(new Locale(\"sl\", \"SL\"));\r\n                                                                                                    } else\r\n                                                                                                        if ((value.equals(\"Slovensky\")) || (value.equals(\"sk\"))) {\r\n                                                                                                            language.setLocale(new Locale(\"sk\", \"SK\"));\r\n                                                                                                        } else\r\n                                                                                                            if ((value.equals(\"Svenska\")) || (value.equals(\"sv\"))) {\r\n                                                                                                                language.setLocale(new Locale(\"sv\", \"SV\"));\r\n                                                                                                            } else\r\n                                                                                                                if ((value.equals(\"Romanian\")) || (value.equals(\"ro\"))) {\r\n                                                                                                                    language.setLocale(new Locale(\"ro\", \"RO\"));\r\n                                                                                                                } else\r\n                                                                                                                    if ((value.equals(\"Nederlands\")) || (value.equals(\"nl\"))) {\r\n                                                                                                                        language.setLocale(new Locale(\"nl\", \"NL\"));\r\n                                                                                                                    } else\r\n                                                                                                                        if ((value.equals(\"u010cesky\")) || (value.equals(\"cz\"))) {\r\n                                                                                                                            language.setLocale(new Locale(\"cs\", \"CZ\"));\r\n                                                                                                                        } else\r\n                                                                                                                            if ((value.equals(\"Dansk\")) || (value.equals(\"da\"))) {\r\n                                                                                                                                language.setLocale(new Locale(\"da\", \"DK\"));\r\n                                                                                                                            } else\r\n                                                                                                                                if ((value.equals(\"Tiu1ebfng anh\")) || (value.equals(\"vi\"))) {\r\n                                                                                                                                    language.setLocale(new Locale(\"vi\", \"VN\"));\r\n                                                                                                                                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n            } else\r\n                if (qName.equals(\"task-color\")) {\r\n                    if (aName.equals(\"red\")) {\r\n                        r = new Integer(value).hashCode();\r\n                    } else\r\n                        if (aName.equals(\"green\")) {\r\n                            g = new Integer(value).hashCode();\r\n                        } else\r\n                            if (aName.equals(\"blue\")) {\r\n                                b = new Integer(value).hashCode();\r\n                            }\r\n\r\n\r\n                } else\r\n                    if (qName.equals(\"geometry\")) {\r\n                        if (aName.equals(\"x\")) {\r\n                            x = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"y\")) {\r\n                            y = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"width\")) {\r\n                            width = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"height\")) {\r\n                            height = new Integer(value).hashCode();\r\n                        }\r\n                    } else\r\n                        if (qName.equals(\"looknfeel\")) {\r\n                            if (aName.equals(\"name\")) {\r\n                                styleName = value;\r\n                            }\r\n                            if (aName.equals(\"class\")) {\r\n                                styleClass = value;\r\n                            }\r\n                        } else\r\n                            if (qName.equals(\"file\")) {\r\n                                if (aName.equals(\"path\")) {\r\n                                    documentsMRU.append(myDocumentManager.getDocument(value));\r\n                                }\r\n                            } else\r\n                                if (qName.equals(\"automatic-launch\")) {\r\n                                    if (aName.equals(\"value\")) {\r\n                                        automatic = new Boolean(value).booleanValue();\r\n                                    }\r\n                                } else\r\n                                    if (qName.equals(\"tips-on-startup\")) {\r\n                                        if (aName.equals(\"value\")) {\r\n                                            openTips = new Boolean(value).booleanValue();\r\n                                        }\r\n                                    } else\r\n                                        if (qName.equals(\"lockdavminutes\")) {\r\n                                            if (aName.equals(\"value\")) {\r\n                                                lockDAVMinutes = new Integer(value).intValue();\r\n                                            }\r\n                                        } else\r\n                                            if (qName.equals(\"xsl-dir\")) {\r\n                                                if (aName.equals(\"dir\")) {\r\n                                                    if (new File(value).exists())\r\n                                                        xslDir = value;\r\n\r\n                                                }\r\n                                            } else\r\n                                                if (qName.equals(\"xsl-fo\")) {\r\n                                                    if (aName.equals(\"file\")) {\r\n                                                        if (new File(value).exists())\r\n                                                            xslFo = value;\r\n\r\n                                                    }\r\n                                                } else\r\n                                                    if (qName.equals(\"working-dir\")) {\r\n                                                        if (aName.equals(\"dir\")) {\r\n                                                            if (new File(value).exists())\r\n                                                                workingDir = value;\r\n\r\n                                                        }\r\n                                                    } else\r\n                                                        if (qName.equals(\"task-name\")) {\r\n                                                            if (aName.equals(\"prefix\"))\r\n                                                                sTaskNamePrefix = value;\r\n\r\n                                                        } else\r\n                                                            if (qName.equals(\"toolBar\")) {\r\n                                                                if (aName.equals(\"position\"))\r\n                                                                    toolBarPosition = new Integer(value).intValue();\r\n                                                                else\r\n                                                                    if (aName.equals(\"icon-size\"))\r\n                                                                        iconSize = value;\r\n                                                                    else\r\n                                                                        if (aName.equals(\"show\"))\r\n                                                                            buttonsshow = new Integer(value).intValue();\r\n\r\n\r\n\r\n                                                            } else\r\n                                                                if (qName.equals(\"statusBar\")) {\r\n                                                                    if (aName.equals(\"show\"))\r\n                                                                        bShowStatusBar = new Boolean(value).booleanValue();\r\n\r\n                                                                } else\r\n                                                                    if (qName.equals(\"export\")) {\r\n                                                                        if (aName.equals(\"name\"))\r\n                                                                            bExportName = new Boolean(value).booleanValue();\r\n                                                                        else\r\n                                                                            if (aName.equals(\"complete\"))\r\n                                                                                bExportComplete = new Boolean(value).booleanValue();\r\n                                                                            else\r\n                                                                                if (aName.equals(\"relations\"))\r\n                                                                                    bExportRelations = new Boolean(value).booleanValue();\r\n                                                                                else\r\n                                                                                    if (aName.equals(\"border3d\"))\r\n                                                                                        bExport3DBorders = new Boolean(value).booleanValue();\r\n\r\n\r\n\r\n\r\n                                                                    } else\r\n                                                                        if (qName.equals(\"colors\")) {\r\n                                                                            if (aName.equals(\"resources\")) {\r\n                                                                                Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                if (colorR != null)\r\n                                                                                    setResourceColor(colorR);\r\n\r\n                                                                            } else\r\n                                                                                if (aName.equals(\"resourcesOverload\")) {\r\n                                                                                    Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                    if (colorR != null)\r\n                                                                                        setResourceOverloadColor(colorR);\r\n\r\n                                                                                } else\r\n                                                                                    if (aName.equals(\"resourcesUnderload\")) {\r\n                                                                                        Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                        if (colorR != null)\r\n                                                                                            setResourceUnderloadColor(colorR);\r\n\r\n                                                                                    } else\r\n                                                                                        if (aName.equals(\"weekEnd\")) {\r\n                                                                                            Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                            if (colorR != null)\r\n                                                                                                setWeekEndColor(colorR);\r\n\r\n                                                                                        } else\r\n                                                                                            if (aName.equals(\"daysOff\")) {\r\n                                                                                                Color colorD = ColorConvertion.determineColor(value);\r\n                                                                                                if (colorD != null)\r\n                                                                                                    setDaysOffColor(colorD);\r\n\r\n                                                                                            }\r\n\r\n\r\n\r\n\r\n                                                                        } else\r\n                                                                            if (qName.equals(\"csv-general\")) {\r\n                                                                                if (aName.equals(\"fixed\"))\r\n                                                                                    csvOptions.bFixedSize = new Boolean(value).booleanValue();\r\n\r\n                                                                                if (aName.equals(\"separatedChar\"))\r\n                                                                                    csvOptions.sSeparatedChar = value;\r\n\r\n                                                                                if (aName.equals(\"separatedTextChar\"))\r\n                                                                                    csvOptions.sSeparatedTextChar = value;\r\n\r\n                                                                            } else\r\n                                                                                if (qName.equals(\"csv-tasks\")) {\r\n                                                                                    if (aName.equals(\"id\"))\r\n                                                                                        csvOptions.bExportTaskID = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"name\"))\r\n                                                                                        csvOptions.bExportTaskName = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"start-date\"))\r\n                                                                                        csvOptions.bExportTaskStartDate = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"end-date\"))\r\n                                                                                        csvOptions.bExportTaskEndDate = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"percent\"))\r\n                                                                                        csvOptions.bExportTaskPercent = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"duration\"))\r\n                                                                                        csvOptions.bExportTaskDuration = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"webLink\"))\r\n                                                                                        csvOptions.bExportTaskWebLink = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"resources\"))\r\n                                                                                        csvOptions.bExportTaskResources = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"notes\"))\r\n                                                                                        csvOptions.bExportTaskNotes = new Boolean(value).booleanValue();\r\n\r\n                                                                                } else\r\n                                                                                    if (qName.equals(\"csv-resources\")) {\r\n                                                                                        if (aName.equals(\"id\"))\r\n                                                                                            csvOptions.bExportResourceID = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"name\"))\r\n                                                                                            csvOptions.bExportResourceName = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"mail\"))\r\n                                                                                            csvOptions.bExportResourceMail = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"phone\"))\r\n                                                                                            csvOptions.bExportResourcePhone = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"role\"))\r\n                                                                                            csvOptions.bExportResourceRole = new Boolean(value).booleanValue();\r\n\r\n                                                                                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n    // old version of the color version\r\n    if (qName.equals(\"task-color\")) {\r\n        // Color color = new Color(r, g, b);\r\n        // getUIConfiguration().setTaskColor(color);\r\n        setDefaultTaskColor(new Color(r, g, b));\r\n    }\r\n    if (qName.equals(\"font\")) {\r\n        String category = attrs.getValue(\"category\");\r\n        if (\"menu\".equals(category)) {\r\n            myMenuFont = Font.decode(attrs.getValue(\"spec\"));\r\n        } else\r\n            if (\"chart-main\".equals(category)) {\r\n                myChartMainFont = Font.decode(attrs.getValue(\"spec\"));\r\n            }\r\n\r\n    }\r\n}'),(247,'String sName','java.lang.String',0,47,'net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser',438,'net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    int r = 0;\r\n    int g = 0;\r\n    int b = 0;\r\n    if (\"option\".equals(qName)) {\r\n        GPOption option = ((GPOption) (myGPOptions.get(attrs.getValue(\"id\"))));\r\n        if (option != null) {\r\n            option.lock();\r\n            option.loadPersistentValue(attrs.getValue(\"value\"));\r\n            option.commit();\r\n        }\r\n        return;\r\n    }\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getQName(i);// Attr name\r\n\r\n            String value = attrs.getValue(i);\r\n            String tagDotAttribute = (qName + \".\") + aName;\r\n            GP1XOptionConverter converter = ((GP1XOptionConverter) (myTagDotAttribute_Converter.get(tagDotAttribute)));\r\n            if (converter != null) {\r\n                converter.loadValue(value);\r\n                continue;\r\n            }\r\n            if (qName.equals(\"language\")) {\r\n                if (aName == \"selection\") {\r\n                    if ((value.equals(\"English\")) || (value.equals(\"en\"))) {\r\n                        language.setLocale(Locale.US);\r\n                    } else\r\n                        if ((value.equals(\"English (UK)\")) || (value.equals(\"en_GB\"))) {\r\n                            language.setLocale(Locale.UK);\r\n                        } else\r\n                            if ((value.equals(\"Franu00e7ais\")) || (value.equals(\"fr\"))) {\r\n                                language.setLocale(Locale.FRANCE);\r\n                            } else\r\n                                if ((value.equals(\"Espau00f1ol\")) || (value.equals(\"es\"))) {\r\n                                    language.setLocale(new Locale(\"es\", \"ES\"));\r\n                                } else\r\n                                    if ((value.equals(\"Portugues\")) || (value.equals(\"pt\"))) {\r\n                                        language.setLocale(new Locale(\"pt\", \"PT\"));\r\n                                    } else\r\n                                        if ((value.equals(\"Portuguu00eas do Brasil\")) || (value.equals(\"pt_BR\"))) {\r\n                                            language.setLocale(new Locale(\"pt\", \"BR\"));\r\n                                        } else\r\n                                            if ((value.equals(\"Deutsch\")) || (value.equals(\"de\"))) {\r\n                                                language.setLocale(Locale.GERMANY);\r\n                                            } else\r\n                                                if ((value.equals(\"Norsk\")) || (value.equals(\"no\"))) {\r\n                                                    language.setLocale(new Locale(\"no\", \"NO\"));\r\n                                                } else\r\n                                                    if ((value.equals(\"Italiano\")) || (value.equals(\"it\"))) {\r\n                                                        language.setLocale(Locale.ITALY);\r\n                                                    } else\r\n                                                        if ((value.equals(\"Japanese\")) || (value.equals(\"jpn\"))) {\r\n                                                            language.setLocale(new Locale(\"ja\", \"JP\"));\r\n                                                        } else\r\n                                                            if ((value.equals(\"Tu00fcrku00e7e\")) || (value.equals(\"tr\"))) {\r\n                                                                language.setLocale(new Locale(\"tr\", \"TR\"));\r\n                                                            } else\r\n                                                                if ((((value.equals(\"Simplified Chinese\")) || (value.equals(\"SIMPLIFIED_CHINESE\"))) || (value.equals(\"CHINA\"))) || (value.equals(\"zh_CN\"))) {\r\n                                                                    language.setLocale(Locale.CHINA);\r\n                                                                } else\r\n                                                                    if ((((value.equals(\"Traditional Chinese\")) || (value.equals(\"TRADITIONAL_CHINESE\"))) || (value.equals(\"TAIWAN\"))) || (value.equals(\"zh_TW\"))) {\r\n                                                                        language.setLocale(Locale.TAIWAN);\r\n                                                                    } else\r\n                                                                        if ((value.equals(\"Polski\")) || (value.equals(\"pl\"))) {\r\n                                                                            language.setLocale(new Locale(\"pl\", \"PL\"));\r\n                                                                        } else\r\n                                                                            if ((value.equals(\"u0420u0443u0441u0441u043au0438u0439\")) || (value.equals(\"ru\"))) {\r\n                                                                                language.setLocale(new Locale(\"ru\", \"RU\"));\r\n                                                                            } else\r\n                                                                                if ((value.equals(\"Estonian\")) || (value.equals(\"et\"))) {\r\n                                                                                    language.setLocale(new Locale(\"et\", \"ET\"));\r\n                                                                                } else\r\n                                                                                    if (value.equals(\"fi\")) {\r\n                                                                                        language.setLocale(new Locale(\"fi\", \"FI\"));\r\n                                                                                    } else\r\n                                                                                        if ((value.equals(\"Hungarian\")) || (value.equals(\"hu\"))) {\r\n                                                                                            language.setLocale(new Locale(\"hu\", \"HU\"));\r\n                                                                                        } else\r\n                                                                                            if ((value.equals(\"Hrvatski\")) || (value.equals(\"hr\"))) {\r\n                                                                                                language.setLocale(new Locale(\"hr\", \"HR\"));\r\n                                                                                            } else\r\n                                                                                                if ((value.equals(\"u05d0u05e0u05d2u05dcu05d9u05ea\")) || (value.equals(\"iw\"))) {\r\n                                                                                                    language.setLocale(new Locale(\"iw\", \"IW\"));\r\n                                                                                                } else\r\n                                                                                                    if ((value.equals(\"Slovenu0161u010dina\")) || (value.equals(\"si\"))) {\r\n                                                                                                        language.setLocale(new Locale(\"sl\", \"SL\"));\r\n                                                                                                    } else\r\n                                                                                                        if ((value.equals(\"Slovensky\")) || (value.equals(\"sk\"))) {\r\n                                                                                                            language.setLocale(new Locale(\"sk\", \"SK\"));\r\n                                                                                                        } else\r\n                                                                                                            if ((value.equals(\"Svenska\")) || (value.equals(\"sv\"))) {\r\n                                                                                                                language.setLocale(new Locale(\"sv\", \"SV\"));\r\n                                                                                                            } else\r\n                                                                                                                if ((value.equals(\"Romanian\")) || (value.equals(\"ro\"))) {\r\n                                                                                                                    language.setLocale(new Locale(\"ro\", \"RO\"));\r\n                                                                                                                } else\r\n                                                                                                                    if ((value.equals(\"Nederlands\")) || (value.equals(\"nl\"))) {\r\n                                                                                                                        language.setLocale(new Locale(\"nl\", \"NL\"));\r\n                                                                                                                    } else\r\n                                                                                                                        if ((value.equals(\"u010cesky\")) || (value.equals(\"cz\"))) {\r\n                                                                                                                            language.setLocale(new Locale(\"cs\", \"CZ\"));\r\n                                                                                                                        } else\r\n                                                                                                                            if ((value.equals(\"Dansk\")) || (value.equals(\"da\"))) {\r\n                                                                                                                                language.setLocale(new Locale(\"da\", \"DK\"));\r\n                                                                                                                            } else\r\n                                                                                                                                if ((value.equals(\"Tiu1ebfng anh\")) || (value.equals(\"vi\"))) {\r\n                                                                                                                                    language.setLocale(new Locale(\"vi\", \"VN\"));\r\n                                                                                                                                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n            } else\r\n                if (qName.equals(\"task-color\")) {\r\n                    if (aName.equals(\"red\")) {\r\n                        r = new Integer(value).hashCode();\r\n                    } else\r\n                        if (aName.equals(\"green\")) {\r\n                            g = new Integer(value).hashCode();\r\n                        } else\r\n                            if (aName.equals(\"blue\")) {\r\n                                b = new Integer(value).hashCode();\r\n                            }\r\n\r\n\r\n                } else\r\n                    if (qName.equals(\"geometry\")) {\r\n                        if (aName.equals(\"x\")) {\r\n                            x = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"y\")) {\r\n                            y = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"width\")) {\r\n                            width = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"height\")) {\r\n                            height = new Integer(value).hashCode();\r\n                        }\r\n                    } else\r\n                        if (qName.equals(\"looknfeel\")) {\r\n                            if (aName.equals(\"name\")) {\r\n                                styleName = value;\r\n                            }\r\n                            if (aName.equals(\"class\")) {\r\n                                styleClass = value;\r\n                            }\r\n                        } else\r\n                            if (qName.equals(\"file\")) {\r\n                                if (aName.equals(\"path\")) {\r\n                                    documentsMRU.append(myDocumentManager.getDocument(value));\r\n                                }\r\n                            } else\r\n                                if (qName.equals(\"automatic-launch\")) {\r\n                                    if (aName.equals(\"value\")) {\r\n                                        automatic = new Boolean(value).booleanValue();\r\n                                    }\r\n                                } else\r\n                                    if (qName.equals(\"tips-on-startup\")) {\r\n                                        if (aName.equals(\"value\")) {\r\n                                            openTips = new Boolean(value).booleanValue();\r\n                                        }\r\n                                    } else\r\n                                        if (qName.equals(\"lockdavminutes\")) {\r\n                                            if (aName.equals(\"value\")) {\r\n                                                lockDAVMinutes = new Integer(value).intValue();\r\n                                            }\r\n                                        } else\r\n                                            if (qName.equals(\"xsl-dir\")) {\r\n                                                if (aName.equals(\"dir\")) {\r\n                                                    if (new File(value).exists())\r\n                                                        xslDir = value;\r\n\r\n                                                }\r\n                                            } else\r\n                                                if (qName.equals(\"xsl-fo\")) {\r\n                                                    if (aName.equals(\"file\")) {\r\n                                                        if (new File(value).exists())\r\n                                                            xslFo = value;\r\n\r\n                                                    }\r\n                                                } else\r\n                                                    if (qName.equals(\"working-dir\")) {\r\n                                                        if (aName.equals(\"dir\")) {\r\n                                                            if (new File(value).exists())\r\n                                                                workingDir = value;\r\n\r\n                                                        }\r\n                                                    } else\r\n                                                        if (qName.equals(\"task-name\")) {\r\n                                                            if (aName.equals(\"prefix\"))\r\n                                                                sTaskNamePrefix = value;\r\n\r\n                                                        } else\r\n                                                            if (qName.equals(\"toolBar\")) {\r\n                                                                if (aName.equals(\"position\"))\r\n                                                                    toolBarPosition = new Integer(value).intValue();\r\n                                                                else\r\n                                                                    if (aName.equals(\"icon-size\"))\r\n                                                                        iconSize = value;\r\n                                                                    else\r\n                                                                        if (aName.equals(\"show\"))\r\n                                                                            buttonsshow = new Integer(value).intValue();\r\n\r\n\r\n\r\n                                                            } else\r\n                                                                if (qName.equals(\"statusBar\")) {\r\n                                                                    if (aName.equals(\"show\"))\r\n                                                                        bShowStatusBar = new Boolean(value).booleanValue();\r\n\r\n                                                                } else\r\n                                                                    if (qName.equals(\"export\")) {\r\n                                                                        if (aName.equals(\"name\"))\r\n                                                                            bExportName = new Boolean(value).booleanValue();\r\n                                                                        else\r\n                                                                            if (aName.equals(\"complete\"))\r\n                                                                                bExportComplete = new Boolean(value).booleanValue();\r\n                                                                            else\r\n                                                                                if (aName.equals(\"relations\"))\r\n                                                                                    bExportRelations = new Boolean(value).booleanValue();\r\n                                                                                else\r\n                                                                                    if (aName.equals(\"border3d\"))\r\n                                                                                        bExport3DBorders = new Boolean(value).booleanValue();\r\n\r\n\r\n\r\n\r\n                                                                    } else\r\n                                                                        if (qName.equals(\"colors\")) {\r\n                                                                            if (aName.equals(\"resources\")) {\r\n                                                                                Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                if (colorR != null)\r\n                                                                                    setResourceColor(colorR);\r\n\r\n                                                                            } else\r\n                                                                                if (aName.equals(\"resourcesOverload\")) {\r\n                                                                                    Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                    if (colorR != null)\r\n                                                                                        setResourceOverloadColor(colorR);\r\n\r\n                                                                                } else\r\n                                                                                    if (aName.equals(\"resourcesUnderload\")) {\r\n                                                                                        Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                        if (colorR != null)\r\n                                                                                            setResourceUnderloadColor(colorR);\r\n\r\n                                                                                    } else\r\n                                                                                        if (aName.equals(\"weekEnd\")) {\r\n                                                                                            Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                            if (colorR != null)\r\n                                                                                                setWeekEndColor(colorR);\r\n\r\n                                                                                        } else\r\n                                                                                            if (aName.equals(\"daysOff\")) {\r\n                                                                                                Color colorD = ColorConvertion.determineColor(value);\r\n                                                                                                if (colorD != null)\r\n                                                                                                    setDaysOffColor(colorD);\r\n\r\n                                                                                            }\r\n\r\n\r\n\r\n\r\n                                                                        } else\r\n                                                                            if (qName.equals(\"csv-general\")) {\r\n                                                                                if (aName.equals(\"fixed\"))\r\n                                                                                    csvOptions.bFixedSize = new Boolean(value).booleanValue();\r\n\r\n                                                                                if (aName.equals(\"separatedChar\"))\r\n                                                                                    csvOptions.sSeparatedChar = value;\r\n\r\n                                                                                if (aName.equals(\"separatedTextChar\"))\r\n                                                                                    csvOptions.sSeparatedTextChar = value;\r\n\r\n                                                                            } else\r\n                                                                                if (qName.equals(\"csv-tasks\")) {\r\n                                                                                    if (aName.equals(\"id\"))\r\n                                                                                        csvOptions.bExportTaskID = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"name\"))\r\n                                                                                        csvOptions.bExportTaskName = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"start-date\"))\r\n                                                                                        csvOptions.bExportTaskStartDate = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"end-date\"))\r\n                                                                                        csvOptions.bExportTaskEndDate = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"percent\"))\r\n                                                                                        csvOptions.bExportTaskPercent = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"duration\"))\r\n                                                                                        csvOptions.bExportTaskDuration = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"webLink\"))\r\n                                                                                        csvOptions.bExportTaskWebLink = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"resources\"))\r\n                                                                                        csvOptions.bExportTaskResources = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"notes\"))\r\n                                                                                        csvOptions.bExportTaskNotes = new Boolean(value).booleanValue();\r\n\r\n                                                                                } else\r\n                                                                                    if (qName.equals(\"csv-resources\")) {\r\n                                                                                        if (aName.equals(\"id\"))\r\n                                                                                            csvOptions.bExportResourceID = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"name\"))\r\n                                                                                            csvOptions.bExportResourceName = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"mail\"))\r\n                                                                                            csvOptions.bExportResourceMail = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"phone\"))\r\n                                                                                            csvOptions.bExportResourcePhone = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"role\"))\r\n                                                                                            csvOptions.bExportResourceRole = new Boolean(value).booleanValue();\r\n\r\n                                                                                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n    // old version of the color version\r\n    if (qName.equals(\"task-color\")) {\r\n        // Color color = new Color(r, g, b);\r\n        // getUIConfiguration().setTaskColor(color);\r\n        setDefaultTaskColor(new Color(r, g, b));\r\n    }\r\n    if (qName.equals(\"font\")) {\r\n        String category = attrs.getValue(\"category\");\r\n        if (\"menu\".equals(category)) {\r\n            myMenuFont = Font.decode(attrs.getValue(\"spec\"));\r\n        } else\r\n            if (\"chart-main\".equals(category)) {\r\n                myChartMainFont = Font.decode(attrs.getValue(\"spec\"));\r\n            }\r\n\r\n    }\r\n}'),(248,'// simple\r\n// name\r\nString qName','java.lang.String',0,47,'net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser',438,'net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    int r = 0;\r\n    int g = 0;\r\n    int b = 0;\r\n    if (\"option\".equals(qName)) {\r\n        GPOption option = ((GPOption) (myGPOptions.get(attrs.getValue(\"id\"))));\r\n        if (option != null) {\r\n            option.lock();\r\n            option.loadPersistentValue(attrs.getValue(\"value\"));\r\n            option.commit();\r\n        }\r\n        return;\r\n    }\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getQName(i);// Attr name\r\n\r\n            String value = attrs.getValue(i);\r\n            String tagDotAttribute = (qName + \".\") + aName;\r\n            GP1XOptionConverter converter = ((GP1XOptionConverter) (myTagDotAttribute_Converter.get(tagDotAttribute)));\r\n            if (converter != null) {\r\n                converter.loadValue(value);\r\n                continue;\r\n            }\r\n            if (qName.equals(\"language\")) {\r\n                if (aName == \"selection\") {\r\n                    if ((value.equals(\"English\")) || (value.equals(\"en\"))) {\r\n                        language.setLocale(Locale.US);\r\n                    } else\r\n                        if ((value.equals(\"English (UK)\")) || (value.equals(\"en_GB\"))) {\r\n                            language.setLocale(Locale.UK);\r\n                        } else\r\n                            if ((value.equals(\"Franu00e7ais\")) || (value.equals(\"fr\"))) {\r\n                                language.setLocale(Locale.FRANCE);\r\n                            } else\r\n                                if ((value.equals(\"Espau00f1ol\")) || (value.equals(\"es\"))) {\r\n                                    language.setLocale(new Locale(\"es\", \"ES\"));\r\n                                } else\r\n                                    if ((value.equals(\"Portugues\")) || (value.equals(\"pt\"))) {\r\n                                        language.setLocale(new Locale(\"pt\", \"PT\"));\r\n                                    } else\r\n                                        if ((value.equals(\"Portuguu00eas do Brasil\")) || (value.equals(\"pt_BR\"))) {\r\n                                            language.setLocale(new Locale(\"pt\", \"BR\"));\r\n                                        } else\r\n                                            if ((value.equals(\"Deutsch\")) || (value.equals(\"de\"))) {\r\n                                                language.setLocale(Locale.GERMANY);\r\n                                            } else\r\n                                                if ((value.equals(\"Norsk\")) || (value.equals(\"no\"))) {\r\n                                                    language.setLocale(new Locale(\"no\", \"NO\"));\r\n                                                } else\r\n                                                    if ((value.equals(\"Italiano\")) || (value.equals(\"it\"))) {\r\n                                                        language.setLocale(Locale.ITALY);\r\n                                                    } else\r\n                                                        if ((value.equals(\"Japanese\")) || (value.equals(\"jpn\"))) {\r\n                                                            language.setLocale(new Locale(\"ja\", \"JP\"));\r\n                                                        } else\r\n                                                            if ((value.equals(\"Tu00fcrku00e7e\")) || (value.equals(\"tr\"))) {\r\n                                                                language.setLocale(new Locale(\"tr\", \"TR\"));\r\n                                                            } else\r\n                                                                if ((((value.equals(\"Simplified Chinese\")) || (value.equals(\"SIMPLIFIED_CHINESE\"))) || (value.equals(\"CHINA\"))) || (value.equals(\"zh_CN\"))) {\r\n                                                                    language.setLocale(Locale.CHINA);\r\n                                                                } else\r\n                                                                    if ((((value.equals(\"Traditional Chinese\")) || (value.equals(\"TRADITIONAL_CHINESE\"))) || (value.equals(\"TAIWAN\"))) || (value.equals(\"zh_TW\"))) {\r\n                                                                        language.setLocale(Locale.TAIWAN);\r\n                                                                    } else\r\n                                                                        if ((value.equals(\"Polski\")) || (value.equals(\"pl\"))) {\r\n                                                                            language.setLocale(new Locale(\"pl\", \"PL\"));\r\n                                                                        } else\r\n                                                                            if ((value.equals(\"u0420u0443u0441u0441u043au0438u0439\")) || (value.equals(\"ru\"))) {\r\n                                                                                language.setLocale(new Locale(\"ru\", \"RU\"));\r\n                                                                            } else\r\n                                                                                if ((value.equals(\"Estonian\")) || (value.equals(\"et\"))) {\r\n                                                                                    language.setLocale(new Locale(\"et\", \"ET\"));\r\n                                                                                } else\r\n                                                                                    if (value.equals(\"fi\")) {\r\n                                                                                        language.setLocale(new Locale(\"fi\", \"FI\"));\r\n                                                                                    } else\r\n                                                                                        if ((value.equals(\"Hungarian\")) || (value.equals(\"hu\"))) {\r\n                                                                                            language.setLocale(new Locale(\"hu\", \"HU\"));\r\n                                                                                        } else\r\n                                                                                            if ((value.equals(\"Hrvatski\")) || (value.equals(\"hr\"))) {\r\n                                                                                                language.setLocale(new Locale(\"hr\", \"HR\"));\r\n                                                                                            } else\r\n                                                                                                if ((value.equals(\"u05d0u05e0u05d2u05dcu05d9u05ea\")) || (value.equals(\"iw\"))) {\r\n                                                                                                    language.setLocale(new Locale(\"iw\", \"IW\"));\r\n                                                                                                } else\r\n                                                                                                    if ((value.equals(\"Slovenu0161u010dina\")) || (value.equals(\"si\"))) {\r\n                                                                                                        language.setLocale(new Locale(\"sl\", \"SL\"));\r\n                                                                                                    } else\r\n                                                                                                        if ((value.equals(\"Slovensky\")) || (value.equals(\"sk\"))) {\r\n                                                                                                            language.setLocale(new Locale(\"sk\", \"SK\"));\r\n                                                                                                        } else\r\n                                                                                                            if ((value.equals(\"Svenska\")) || (value.equals(\"sv\"))) {\r\n                                                                                                                language.setLocale(new Locale(\"sv\", \"SV\"));\r\n                                                                                                            } else\r\n                                                                                                                if ((value.equals(\"Romanian\")) || (value.equals(\"ro\"))) {\r\n                                                                                                                    language.setLocale(new Locale(\"ro\", \"RO\"));\r\n                                                                                                                } else\r\n                                                                                                                    if ((value.equals(\"Nederlands\")) || (value.equals(\"nl\"))) {\r\n                                                                                                                        language.setLocale(new Locale(\"nl\", \"NL\"));\r\n                                                                                                                    } else\r\n                                                                                                                        if ((value.equals(\"u010cesky\")) || (value.equals(\"cz\"))) {\r\n                                                                                                                            language.setLocale(new Locale(\"cs\", \"CZ\"));\r\n                                                                                                                        } else\r\n                                                                                                                            if ((value.equals(\"Dansk\")) || (value.equals(\"da\"))) {\r\n                                                                                                                                language.setLocale(new Locale(\"da\", \"DK\"));\r\n                                                                                                                            } else\r\n                                                                                                                                if ((value.equals(\"Tiu1ebfng anh\")) || (value.equals(\"vi\"))) {\r\n                                                                                                                                    language.setLocale(new Locale(\"vi\", \"VN\"));\r\n                                                                                                                                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n            } else\r\n                if (qName.equals(\"task-color\")) {\r\n                    if (aName.equals(\"red\")) {\r\n                        r = new Integer(value).hashCode();\r\n                    } else\r\n                        if (aName.equals(\"green\")) {\r\n                            g = new Integer(value).hashCode();\r\n                        } else\r\n                            if (aName.equals(\"blue\")) {\r\n                                b = new Integer(value).hashCode();\r\n                            }\r\n\r\n\r\n                } else\r\n                    if (qName.equals(\"geometry\")) {\r\n                        if (aName.equals(\"x\")) {\r\n                            x = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"y\")) {\r\n                            y = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"width\")) {\r\n                            width = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"height\")) {\r\n                            height = new Integer(value).hashCode();\r\n                        }\r\n                    } else\r\n                        if (qName.equals(\"looknfeel\")) {\r\n                            if (aName.equals(\"name\")) {\r\n                                styleName = value;\r\n                            }\r\n                            if (aName.equals(\"class\")) {\r\n                                styleClass = value;\r\n                            }\r\n                        } else\r\n                            if (qName.equals(\"file\")) {\r\n                                if (aName.equals(\"path\")) {\r\n                                    documentsMRU.append(myDocumentManager.getDocument(value));\r\n                                }\r\n                            } else\r\n                                if (qName.equals(\"automatic-launch\")) {\r\n                                    if (aName.equals(\"value\")) {\r\n                                        automatic = new Boolean(value).booleanValue();\r\n                                    }\r\n                                } else\r\n                                    if (qName.equals(\"tips-on-startup\")) {\r\n                                        if (aName.equals(\"value\")) {\r\n                                            openTips = new Boolean(value).booleanValue();\r\n                                        }\r\n                                    } else\r\n                                        if (qName.equals(\"lockdavminutes\")) {\r\n                                            if (aName.equals(\"value\")) {\r\n                                                lockDAVMinutes = new Integer(value).intValue();\r\n                                            }\r\n                                        } else\r\n                                            if (qName.equals(\"xsl-dir\")) {\r\n                                                if (aName.equals(\"dir\")) {\r\n                                                    if (new File(value).exists())\r\n                                                        xslDir = value;\r\n\r\n                                                }\r\n                                            } else\r\n                                                if (qName.equals(\"xsl-fo\")) {\r\n                                                    if (aName.equals(\"file\")) {\r\n                                                        if (new File(value).exists())\r\n                                                            xslFo = value;\r\n\r\n                                                    }\r\n                                                } else\r\n                                                    if (qName.equals(\"working-dir\")) {\r\n                                                        if (aName.equals(\"dir\")) {\r\n                                                            if (new File(value).exists())\r\n                                                                workingDir = value;\r\n\r\n                                                        }\r\n                                                    } else\r\n                                                        if (qName.equals(\"task-name\")) {\r\n                                                            if (aName.equals(\"prefix\"))\r\n                                                                sTaskNamePrefix = value;\r\n\r\n                                                        } else\r\n                                                            if (qName.equals(\"toolBar\")) {\r\n                                                                if (aName.equals(\"position\"))\r\n                                                                    toolBarPosition = new Integer(value).intValue();\r\n                                                                else\r\n                                                                    if (aName.equals(\"icon-size\"))\r\n                                                                        iconSize = value;\r\n                                                                    else\r\n                                                                        if (aName.equals(\"show\"))\r\n                                                                            buttonsshow = new Integer(value).intValue();\r\n\r\n\r\n\r\n                                                            } else\r\n                                                                if (qName.equals(\"statusBar\")) {\r\n                                                                    if (aName.equals(\"show\"))\r\n                                                                        bShowStatusBar = new Boolean(value).booleanValue();\r\n\r\n                                                                } else\r\n                                                                    if (qName.equals(\"export\")) {\r\n                                                                        if (aName.equals(\"name\"))\r\n                                                                            bExportName = new Boolean(value).booleanValue();\r\n                                                                        else\r\n                                                                            if (aName.equals(\"complete\"))\r\n                                                                                bExportComplete = new Boolean(value).booleanValue();\r\n                                                                            else\r\n                                                                                if (aName.equals(\"relations\"))\r\n                                                                                    bExportRelations = new Boolean(value).booleanValue();\r\n                                                                                else\r\n                                                                                    if (aName.equals(\"border3d\"))\r\n                                                                                        bExport3DBorders = new Boolean(value).booleanValue();\r\n\r\n\r\n\r\n\r\n                                                                    } else\r\n                                                                        if (qName.equals(\"colors\")) {\r\n                                                                            if (aName.equals(\"resources\")) {\r\n                                                                                Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                if (colorR != null)\r\n                                                                                    setResourceColor(colorR);\r\n\r\n                                                                            } else\r\n                                                                                if (aName.equals(\"resourcesOverload\")) {\r\n                                                                                    Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                    if (colorR != null)\r\n                                                                                        setResourceOverloadColor(colorR);\r\n\r\n                                                                                } else\r\n                                                                                    if (aName.equals(\"resourcesUnderload\")) {\r\n                                                                                        Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                        if (colorR != null)\r\n                                                                                            setResourceUnderloadColor(colorR);\r\n\r\n                                                                                    } else\r\n                                                                                        if (aName.equals(\"weekEnd\")) {\r\n                                                                                            Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                            if (colorR != null)\r\n                                                                                                setWeekEndColor(colorR);\r\n\r\n                                                                                        } else\r\n                                                                                            if (aName.equals(\"daysOff\")) {\r\n                                                                                                Color colorD = ColorConvertion.determineColor(value);\r\n                                                                                                if (colorD != null)\r\n                                                                                                    setDaysOffColor(colorD);\r\n\r\n                                                                                            }\r\n\r\n\r\n\r\n\r\n                                                                        } else\r\n                                                                            if (qName.equals(\"csv-general\")) {\r\n                                                                                if (aName.equals(\"fixed\"))\r\n                                                                                    csvOptions.bFixedSize = new Boolean(value).booleanValue();\r\n\r\n                                                                                if (aName.equals(\"separatedChar\"))\r\n                                                                                    csvOptions.sSeparatedChar = value;\r\n\r\n                                                                                if (aName.equals(\"separatedTextChar\"))\r\n                                                                                    csvOptions.sSeparatedTextChar = value;\r\n\r\n                                                                            } else\r\n                                                                                if (qName.equals(\"csv-tasks\")) {\r\n                                                                                    if (aName.equals(\"id\"))\r\n                                                                                        csvOptions.bExportTaskID = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"name\"))\r\n                                                                                        csvOptions.bExportTaskName = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"start-date\"))\r\n                                                                                        csvOptions.bExportTaskStartDate = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"end-date\"))\r\n                                                                                        csvOptions.bExportTaskEndDate = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"percent\"))\r\n                                                                                        csvOptions.bExportTaskPercent = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"duration\"))\r\n                                                                                        csvOptions.bExportTaskDuration = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"webLink\"))\r\n                                                                                        csvOptions.bExportTaskWebLink = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"resources\"))\r\n                                                                                        csvOptions.bExportTaskResources = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"notes\"))\r\n                                                                                        csvOptions.bExportTaskNotes = new Boolean(value).booleanValue();\r\n\r\n                                                                                } else\r\n                                                                                    if (qName.equals(\"csv-resources\")) {\r\n                                                                                        if (aName.equals(\"id\"))\r\n                                                                                            csvOptions.bExportResourceID = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"name\"))\r\n                                                                                            csvOptions.bExportResourceName = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"mail\"))\r\n                                                                                            csvOptions.bExportResourceMail = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"phone\"))\r\n                                                                                            csvOptions.bExportResourcePhone = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"role\"))\r\n                                                                                            csvOptions.bExportResourceRole = new Boolean(value).booleanValue();\r\n\r\n                                                                                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n    // old version of the color version\r\n    if (qName.equals(\"task-color\")) {\r\n        // Color color = new Color(r, g, b);\r\n        // getUIConfiguration().setTaskColor(color);\r\n        setDefaultTaskColor(new Color(r, g, b));\r\n    }\r\n    if (qName.equals(\"font\")) {\r\n        String category = attrs.getValue(\"category\");\r\n        if (\"menu\".equals(category)) {\r\n            myMenuFont = Font.decode(attrs.getValue(\"spec\"));\r\n        } else\r\n            if (\"chart-main\".equals(category)) {\r\n                myChartMainFont = Font.decode(attrs.getValue(\"spec\"));\r\n            }\r\n\r\n    }\r\n}'),(249,'// qualified name\r\nAttributes attrs','org.xml.sax.Attributes',0,47,'net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser',438,'net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    int r = 0;\r\n    int g = 0;\r\n    int b = 0;\r\n    if (\"option\".equals(qName)) {\r\n        GPOption option = ((GPOption) (myGPOptions.get(attrs.getValue(\"id\"))));\r\n        if (option != null) {\r\n            option.lock();\r\n            option.loadPersistentValue(attrs.getValue(\"value\"));\r\n            option.commit();\r\n        }\r\n        return;\r\n    }\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getQName(i);// Attr name\r\n\r\n            String value = attrs.getValue(i);\r\n            String tagDotAttribute = (qName + \".\") + aName;\r\n            GP1XOptionConverter converter = ((GP1XOptionConverter) (myTagDotAttribute_Converter.get(tagDotAttribute)));\r\n            if (converter != null) {\r\n                converter.loadValue(value);\r\n                continue;\r\n            }\r\n            if (qName.equals(\"language\")) {\r\n                if (aName == \"selection\") {\r\n                    if ((value.equals(\"English\")) || (value.equals(\"en\"))) {\r\n                        language.setLocale(Locale.US);\r\n                    } else\r\n                        if ((value.equals(\"English (UK)\")) || (value.equals(\"en_GB\"))) {\r\n                            language.setLocale(Locale.UK);\r\n                        } else\r\n                            if ((value.equals(\"Franu00e7ais\")) || (value.equals(\"fr\"))) {\r\n                                language.setLocale(Locale.FRANCE);\r\n                            } else\r\n                                if ((value.equals(\"Espau00f1ol\")) || (value.equals(\"es\"))) {\r\n                                    language.setLocale(new Locale(\"es\", \"ES\"));\r\n                                } else\r\n                                    if ((value.equals(\"Portugues\")) || (value.equals(\"pt\"))) {\r\n                                        language.setLocale(new Locale(\"pt\", \"PT\"));\r\n                                    } else\r\n                                        if ((value.equals(\"Portuguu00eas do Brasil\")) || (value.equals(\"pt_BR\"))) {\r\n                                            language.setLocale(new Locale(\"pt\", \"BR\"));\r\n                                        } else\r\n                                            if ((value.equals(\"Deutsch\")) || (value.equals(\"de\"))) {\r\n                                                language.setLocale(Locale.GERMANY);\r\n                                            } else\r\n                                                if ((value.equals(\"Norsk\")) || (value.equals(\"no\"))) {\r\n                                                    language.setLocale(new Locale(\"no\", \"NO\"));\r\n                                                } else\r\n                                                    if ((value.equals(\"Italiano\")) || (value.equals(\"it\"))) {\r\n                                                        language.setLocale(Locale.ITALY);\r\n                                                    } else\r\n                                                        if ((value.equals(\"Japanese\")) || (value.equals(\"jpn\"))) {\r\n                                                            language.setLocale(new Locale(\"ja\", \"JP\"));\r\n                                                        } else\r\n                                                            if ((value.equals(\"Tu00fcrku00e7e\")) || (value.equals(\"tr\"))) {\r\n                                                                language.setLocale(new Locale(\"tr\", \"TR\"));\r\n                                                            } else\r\n                                                                if ((((value.equals(\"Simplified Chinese\")) || (value.equals(\"SIMPLIFIED_CHINESE\"))) || (value.equals(\"CHINA\"))) || (value.equals(\"zh_CN\"))) {\r\n                                                                    language.setLocale(Locale.CHINA);\r\n                                                                } else\r\n                                                                    if ((((value.equals(\"Traditional Chinese\")) || (value.equals(\"TRADITIONAL_CHINESE\"))) || (value.equals(\"TAIWAN\"))) || (value.equals(\"zh_TW\"))) {\r\n                                                                        language.setLocale(Locale.TAIWAN);\r\n                                                                    } else\r\n                                                                        if ((value.equals(\"Polski\")) || (value.equals(\"pl\"))) {\r\n                                                                            language.setLocale(new Locale(\"pl\", \"PL\"));\r\n                                                                        } else\r\n                                                                            if ((value.equals(\"u0420u0443u0441u0441u043au0438u0439\")) || (value.equals(\"ru\"))) {\r\n                                                                                language.setLocale(new Locale(\"ru\", \"RU\"));\r\n                                                                            } else\r\n                                                                                if ((value.equals(\"Estonian\")) || (value.equals(\"et\"))) {\r\n                                                                                    language.setLocale(new Locale(\"et\", \"ET\"));\r\n                                                                                } else\r\n                                                                                    if (value.equals(\"fi\")) {\r\n                                                                                        language.setLocale(new Locale(\"fi\", \"FI\"));\r\n                                                                                    } else\r\n                                                                                        if ((value.equals(\"Hungarian\")) || (value.equals(\"hu\"))) {\r\n                                                                                            language.setLocale(new Locale(\"hu\", \"HU\"));\r\n                                                                                        } else\r\n                                                                                            if ((value.equals(\"Hrvatski\")) || (value.equals(\"hr\"))) {\r\n                                                                                                language.setLocale(new Locale(\"hr\", \"HR\"));\r\n                                                                                            } else\r\n                                                                                                if ((value.equals(\"u05d0u05e0u05d2u05dcu05d9u05ea\")) || (value.equals(\"iw\"))) {\r\n                                                                                                    language.setLocale(new Locale(\"iw\", \"IW\"));\r\n                                                                                                } else\r\n                                                                                                    if ((value.equals(\"Slovenu0161u010dina\")) || (value.equals(\"si\"))) {\r\n                                                                                                        language.setLocale(new Locale(\"sl\", \"SL\"));\r\n                                                                                                    } else\r\n                                                                                                        if ((value.equals(\"Slovensky\")) || (value.equals(\"sk\"))) {\r\n                                                                                                            language.setLocale(new Locale(\"sk\", \"SK\"));\r\n                                                                                                        } else\r\n                                                                                                            if ((value.equals(\"Svenska\")) || (value.equals(\"sv\"))) {\r\n                                                                                                                language.setLocale(new Locale(\"sv\", \"SV\"));\r\n                                                                                                            } else\r\n                                                                                                                if ((value.equals(\"Romanian\")) || (value.equals(\"ro\"))) {\r\n                                                                                                                    language.setLocale(new Locale(\"ro\", \"RO\"));\r\n                                                                                                                } else\r\n                                                                                                                    if ((value.equals(\"Nederlands\")) || (value.equals(\"nl\"))) {\r\n                                                                                                                        language.setLocale(new Locale(\"nl\", \"NL\"));\r\n                                                                                                                    } else\r\n                                                                                                                        if ((value.equals(\"u010cesky\")) || (value.equals(\"cz\"))) {\r\n                                                                                                                            language.setLocale(new Locale(\"cs\", \"CZ\"));\r\n                                                                                                                        } else\r\n                                                                                                                            if ((value.equals(\"Dansk\")) || (value.equals(\"da\"))) {\r\n                                                                                                                                language.setLocale(new Locale(\"da\", \"DK\"));\r\n                                                                                                                            } else\r\n                                                                                                                                if ((value.equals(\"Tiu1ebfng anh\")) || (value.equals(\"vi\"))) {\r\n                                                                                                                                    language.setLocale(new Locale(\"vi\", \"VN\"));\r\n                                                                                                                                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n            } else\r\n                if (qName.equals(\"task-color\")) {\r\n                    if (aName.equals(\"red\")) {\r\n                        r = new Integer(value).hashCode();\r\n                    } else\r\n                        if (aName.equals(\"green\")) {\r\n                            g = new Integer(value).hashCode();\r\n                        } else\r\n                            if (aName.equals(\"blue\")) {\r\n                                b = new Integer(value).hashCode();\r\n                            }\r\n\r\n\r\n                } else\r\n                    if (qName.equals(\"geometry\")) {\r\n                        if (aName.equals(\"x\")) {\r\n                            x = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"y\")) {\r\n                            y = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"width\")) {\r\n                            width = new Integer(value).hashCode();\r\n                        }\r\n                        if (aName.equals(\"height\")) {\r\n                            height = new Integer(value).hashCode();\r\n                        }\r\n                    } else\r\n                        if (qName.equals(\"looknfeel\")) {\r\n                            if (aName.equals(\"name\")) {\r\n                                styleName = value;\r\n                            }\r\n                            if (aName.equals(\"class\")) {\r\n                                styleClass = value;\r\n                            }\r\n                        } else\r\n                            if (qName.equals(\"file\")) {\r\n                                if (aName.equals(\"path\")) {\r\n                                    documentsMRU.append(myDocumentManager.getDocument(value));\r\n                                }\r\n                            } else\r\n                                if (qName.equals(\"automatic-launch\")) {\r\n                                    if (aName.equals(\"value\")) {\r\n                                        automatic = new Boolean(value).booleanValue();\r\n                                    }\r\n                                } else\r\n                                    if (qName.equals(\"tips-on-startup\")) {\r\n                                        if (aName.equals(\"value\")) {\r\n                                            openTips = new Boolean(value).booleanValue();\r\n                                        }\r\n                                    } else\r\n                                        if (qName.equals(\"lockdavminutes\")) {\r\n                                            if (aName.equals(\"value\")) {\r\n                                                lockDAVMinutes = new Integer(value).intValue();\r\n                                            }\r\n                                        } else\r\n                                            if (qName.equals(\"xsl-dir\")) {\r\n                                                if (aName.equals(\"dir\")) {\r\n                                                    if (new File(value).exists())\r\n                                                        xslDir = value;\r\n\r\n                                                }\r\n                                            } else\r\n                                                if (qName.equals(\"xsl-fo\")) {\r\n                                                    if (aName.equals(\"file\")) {\r\n                                                        if (new File(value).exists())\r\n                                                            xslFo = value;\r\n\r\n                                                    }\r\n                                                } else\r\n                                                    if (qName.equals(\"working-dir\")) {\r\n                                                        if (aName.equals(\"dir\")) {\r\n                                                            if (new File(value).exists())\r\n                                                                workingDir = value;\r\n\r\n                                                        }\r\n                                                    } else\r\n                                                        if (qName.equals(\"task-name\")) {\r\n                                                            if (aName.equals(\"prefix\"))\r\n                                                                sTaskNamePrefix = value;\r\n\r\n                                                        } else\r\n                                                            if (qName.equals(\"toolBar\")) {\r\n                                                                if (aName.equals(\"position\"))\r\n                                                                    toolBarPosition = new Integer(value).intValue();\r\n                                                                else\r\n                                                                    if (aName.equals(\"icon-size\"))\r\n                                                                        iconSize = value;\r\n                                                                    else\r\n                                                                        if (aName.equals(\"show\"))\r\n                                                                            buttonsshow = new Integer(value).intValue();\r\n\r\n\r\n\r\n                                                            } else\r\n                                                                if (qName.equals(\"statusBar\")) {\r\n                                                                    if (aName.equals(\"show\"))\r\n                                                                        bShowStatusBar = new Boolean(value).booleanValue();\r\n\r\n                                                                } else\r\n                                                                    if (qName.equals(\"export\")) {\r\n                                                                        if (aName.equals(\"name\"))\r\n                                                                            bExportName = new Boolean(value).booleanValue();\r\n                                                                        else\r\n                                                                            if (aName.equals(\"complete\"))\r\n                                                                                bExportComplete = new Boolean(value).booleanValue();\r\n                                                                            else\r\n                                                                                if (aName.equals(\"relations\"))\r\n                                                                                    bExportRelations = new Boolean(value).booleanValue();\r\n                                                                                else\r\n                                                                                    if (aName.equals(\"border3d\"))\r\n                                                                                        bExport3DBorders = new Boolean(value).booleanValue();\r\n\r\n\r\n\r\n\r\n                                                                    } else\r\n                                                                        if (qName.equals(\"colors\")) {\r\n                                                                            if (aName.equals(\"resources\")) {\r\n                                                                                Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                if (colorR != null)\r\n                                                                                    setResourceColor(colorR);\r\n\r\n                                                                            } else\r\n                                                                                if (aName.equals(\"resourcesOverload\")) {\r\n                                                                                    Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                    if (colorR != null)\r\n                                                                                        setResourceOverloadColor(colorR);\r\n\r\n                                                                                } else\r\n                                                                                    if (aName.equals(\"resourcesUnderload\")) {\r\n                                                                                        Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                        if (colorR != null)\r\n                                                                                            setResourceUnderloadColor(colorR);\r\n\r\n                                                                                    } else\r\n                                                                                        if (aName.equals(\"weekEnd\")) {\r\n                                                                                            Color colorR = ColorConvertion.determineColor(value);\r\n                                                                                            if (colorR != null)\r\n                                                                                                setWeekEndColor(colorR);\r\n\r\n                                                                                        } else\r\n                                                                                            if (aName.equals(\"daysOff\")) {\r\n                                                                                                Color colorD = ColorConvertion.determineColor(value);\r\n                                                                                                if (colorD != null)\r\n                                                                                                    setDaysOffColor(colorD);\r\n\r\n                                                                                            }\r\n\r\n\r\n\r\n\r\n                                                                        } else\r\n                                                                            if (qName.equals(\"csv-general\")) {\r\n                                                                                if (aName.equals(\"fixed\"))\r\n                                                                                    csvOptions.bFixedSize = new Boolean(value).booleanValue();\r\n\r\n                                                                                if (aName.equals(\"separatedChar\"))\r\n                                                                                    csvOptions.sSeparatedChar = value;\r\n\r\n                                                                                if (aName.equals(\"separatedTextChar\"))\r\n                                                                                    csvOptions.sSeparatedTextChar = value;\r\n\r\n                                                                            } else\r\n                                                                                if (qName.equals(\"csv-tasks\")) {\r\n                                                                                    if (aName.equals(\"id\"))\r\n                                                                                        csvOptions.bExportTaskID = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"name\"))\r\n                                                                                        csvOptions.bExportTaskName = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"start-date\"))\r\n                                                                                        csvOptions.bExportTaskStartDate = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"end-date\"))\r\n                                                                                        csvOptions.bExportTaskEndDate = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"percent\"))\r\n                                                                                        csvOptions.bExportTaskPercent = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"duration\"))\r\n                                                                                        csvOptions.bExportTaskDuration = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"webLink\"))\r\n                                                                                        csvOptions.bExportTaskWebLink = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"resources\"))\r\n                                                                                        csvOptions.bExportTaskResources = new Boolean(value).booleanValue();\r\n\r\n                                                                                    if (aName.equals(\"notes\"))\r\n                                                                                        csvOptions.bExportTaskNotes = new Boolean(value).booleanValue();\r\n\r\n                                                                                } else\r\n                                                                                    if (qName.equals(\"csv-resources\")) {\r\n                                                                                        if (aName.equals(\"id\"))\r\n                                                                                            csvOptions.bExportResourceID = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"name\"))\r\n                                                                                            csvOptions.bExportResourceName = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"mail\"))\r\n                                                                                            csvOptions.bExportResourceMail = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"phone\"))\r\n                                                                                            csvOptions.bExportResourcePhone = new Boolean(value).booleanValue();\r\n\r\n                                                                                        if (aName.equals(\"role\"))\r\n                                                                                            csvOptions.bExportResourceRole = new Boolean(value).booleanValue();\r\n\r\n                                                                                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n    // old version of the color version\r\n    if (qName.equals(\"task-color\")) {\r\n        // Color color = new Color(r, g, b);\r\n        // getUIConfiguration().setTaskColor(color);\r\n        setDefaultTaskColor(new Color(r, g, b));\r\n    }\r\n    if (qName.equals(\"font\")) {\r\n        String category = attrs.getValue(\"category\");\r\n        if (\"menu\".equals(category)) {\r\n            myMenuFont = Font.decode(attrs.getValue(\"spec\"));\r\n        } else\r\n            if (\"chart-main\".equals(category)) {\r\n                myChartMainFont = Font.decode(attrs.getValue(\"spec\"));\r\n            }\r\n\r\n    }\r\n}'),(250,'String value','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',366,'net.sourceforge.ganttproject.GanttOptions.getFilePath(java.lang.String)',0,'private String getFilePath(String value) {\r\n    String result = null;\r\n    String filePath;\r\n    try {\r\n        URL fileUrl = new URL(value);\r\n        filePath = fileUrl.getPath();\r\n    } catch (MalformedURLException e) {\r\n        filePath = value;\r\n    }\r\n    if (new File(filePath).exists()) {\r\n        result = filePath;\r\n    }\r\n    return result;\r\n}'),(251,'boolean showStatusBar','boolean',0,48,'net.sourceforge.ganttproject.GanttOptions',425,'net.sourceforge.ganttproject.GanttOptions.setShowStatusBar(boolean)',0,'/**\r\n * set show the status bar.\r\n */\r\npublic void setShowStatusBar(boolean showStatusBar) {\r\n    bShowStatusBar = showStatusBar;\r\n}'),(252,'boolean exportName','boolean',0,48,'net.sourceforge.ganttproject.GanttOptions',408,'net.sourceforge.ganttproject.GanttOptions.setExportName(boolean)',0,'public void setExportName(boolean exportName) {\r\n    bExportName = exportName;\r\n}'),(253,'boolean exportComplete','boolean',0,48,'net.sourceforge.ganttproject.GanttOptions',407,'net.sourceforge.ganttproject.GanttOptions.setExportComplete(boolean)',0,'public void setExportComplete(boolean exportComplete) {\r\n    bExportComplete = exportComplete;\r\n}'),(254,'boolean eportRelations','boolean',0,48,'net.sourceforge.ganttproject.GanttOptions',409,'net.sourceforge.ganttproject.GanttOptions.setExportRelations(boolean)',0,'public void setExportRelations(boolean eportRelations) {\r\n    bExportRelations = eportRelations;\r\n}'),(255,'boolean borders3d','boolean',0,48,'net.sourceforge.ganttproject.GanttOptions',406,'net.sourceforge.ganttproject.GanttOptions.setExport3dBorders(boolean)',0,'public void setExport3dBorders(boolean borders3d) {\r\n    bExport3DBorders = borders3d;\r\n}'),(256,'String list','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',414,'net.sourceforge.ganttproject.GanttOptions.setIconList(java.lang.String)',0,'public void setIconList(String list) {\r\n    iconListAsString = list;\r\n}'),(257,'String list','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',403,'net.sourceforge.ganttproject.GanttOptions.setDeletedIconList(java.lang.String)',0,'public void setDeletedIconList(String list) {\r\n    deletedIconListAsString = list;\r\n}'),(258,'int buttonShow','int',0,48,'net.sourceforge.ganttproject.GanttOptions',400,'net.sourceforge.ganttproject.GanttOptions.setButtonShow(int)',0,'/**\r\n * set a new button show value must be GanttOptions.ICONS or\r\n * GanttOptions.TEXT ir GanttOptions.ICONS_TEXT\r\n */\r\npublic void setButtonShow(int buttonShow) {\r\n    if (((buttonShow != (GanttOptions.ICONS)) && (buttonShow != (GanttOptions.TEXT))) && (buttonShow != (GanttOptions.ICONS_TEXT)))\r\n        buttonShow = GanttOptions.ICONS;\r\n\r\n    buttonsshow = buttonShow;\r\n}'),(259,'String sIconSize','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',415,'net.sourceforge.ganttproject.GanttOptions.setIconSize(java.lang.String)',0,'/**\r\n * Set a new icon size. Must be 16, 24 (or 32 exceptionnally)\r\n */\r\npublic void setIconSize(String sIconSize) {\r\n    iconSize = sIconSize;\r\n}'),(260,'int iToolBarPosition','int',0,48,'net.sourceforge.ganttproject.GanttOptions',427,'net.sourceforge.ganttproject.GanttOptions.setToolBarPosition(int)',0,'/**\r\n * set the toolbar position.\r\n */\r\npublic void setToolBarPosition(int iToolBarPosition) {\r\n    toolBarPosition = iToolBarPosition;\r\n}'),(261,'int x','int',0,48,'net.sourceforge.ganttproject.GanttOptions',431,'net.sourceforge.ganttproject.GanttOptions.setWindowPosition(int,int)',0,'/**\r\n * Set new window position (top left corner)\r\n */\r\npublic void setWindowPosition(int x, int y) {\r\n    this.x = x;\r\n    this.y = y;\r\n}'),(262,'int y','int',0,48,'net.sourceforge.ganttproject.GanttOptions',431,'net.sourceforge.ganttproject.GanttOptions.setWindowPosition(int,int)',0,'/**\r\n * Set new window position (top left corner)\r\n */\r\npublic void setWindowPosition(int x, int y) {\r\n    this.x = x;\r\n    this.y = y;\r\n}'),(263,'int width','int',0,48,'net.sourceforge.ganttproject.GanttOptions',432,'net.sourceforge.ganttproject.GanttOptions.setWindowSize(int,int)',0,'/**\r\n * Set new window position (top left corner)\r\n */\r\npublic void setWindowSize(int width, int height) {\r\n    this.width = width;\r\n    this.height = height;\r\n}'),(264,'int height','int',0,48,'net.sourceforge.ganttproject.GanttOptions',432,'net.sourceforge.ganttproject.GanttOptions.setWindowSize(int,int)',0,'/**\r\n * Set new window position (top left corner)\r\n */\r\npublic void setWindowSize(int width, int height) {\r\n    this.width = width;\r\n    this.height = height;\r\n}'),(265,'String workingDirectory','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',433,'net.sourceforge.ganttproject.GanttOptions.setWorkingDirectory(java.lang.String)',0,'/**\r\n * Set new working directory value.\r\n */\r\npublic void setWorkingDirectory(String workingDirectory) {\r\n    workingDir = workingDirectory;\r\n}'),(266,'int minuteslock','int',0,48,'net.sourceforge.ganttproject.GanttOptions',417,'net.sourceforge.ganttproject.GanttOptions.setLockDAVMinutes(int)',0,'/**\r\n * set a new value for web dav locking.\r\n */\r\npublic void setLockDAVMinutes(int minuteslock) {\r\n    lockDAVMinutes = minuteslock;\r\n}'),(267,'int number','int',0,48,'net.sourceforge.ganttproject.GanttOptions',429,'net.sourceforge.ganttproject.GanttOptions.setUndoNumber(int)',0,'/**\r\n * set a new value for undo number.\r\n */\r\npublic void setUndoNumber(int number) {\r\n    undoNumber = number;\r\n}'),(268,'Color color','java.awt.Color',0,48,'net.sourceforge.ganttproject.GanttOptions',402,'net.sourceforge.ganttproject.GanttOptions.setDefaultTaskColor(java.awt.Color)',0,'/**\r\n * set a new default tasks color.\r\n */\r\npublic void setDefaultTaskColor(Color color) {\r\n    getUIConfiguration().setTaskColor(color);\r\n}'),(269,'Color color','java.awt.Color',0,48,'net.sourceforge.ganttproject.GanttOptions',422,'net.sourceforge.ganttproject.GanttOptions.setResourceColor(java.awt.Color)',0,'/**\r\n * set a new default resources color.\r\n */\r\npublic void setResourceColor(Color color) {\r\n    getUIConfiguration().setResourceColor(color);\r\n}'),(270,'Color color','java.awt.Color',0,48,'net.sourceforge.ganttproject.GanttOptions',423,'net.sourceforge.ganttproject.GanttOptions.setResourceOverloadColor(java.awt.Color)',0,'/**\r\n * set a new resources overload tasks color.\r\n */\r\npublic void setResourceOverloadColor(Color color) {\r\n    getUIConfiguration().setResourceOverloadColor(color);\r\n}'),(271,'Color color','java.awt.Color',0,48,'net.sourceforge.ganttproject.GanttOptions',424,'net.sourceforge.ganttproject.GanttOptions.setResourceUnderloadColor(java.awt.Color)',0,'/**\r\n * set a new resources underload tasks color.\r\n */\r\npublic void setResourceUnderloadColor(Color color) {\r\n    getUIConfiguration().setResourceUnderloadColor(color);\r\n}'),(272,'Color color','java.awt.Color',0,48,'net.sourceforge.ganttproject.GanttOptions',420,'net.sourceforge.ganttproject.GanttOptions.setPreviousTaskColor(java.awt.Color)',0,'/**\r\n * set a new previous tasks color.\r\n */\r\npublic void setPreviousTaskColor(Color color) {\r\n    getUIConfiguration().setPreviousTaskColor(color);\r\n}'),(273,'Color color','java.awt.Color',0,48,'net.sourceforge.ganttproject.GanttOptions',405,'net.sourceforge.ganttproject.GanttOptions.setEarlierPreviousTaskColor(java.awt.Color)',0,'/**\r\n * set a new earlier previous tasks color.\r\n */\r\npublic void setEarlierPreviousTaskColor(Color color) {\r\n    getUIConfiguration().setEarlierPreviousTaskColor(color);\r\n}'),(274,'Color color','java.awt.Color',0,48,'net.sourceforge.ganttproject.GanttOptions',416,'net.sourceforge.ganttproject.GanttOptions.setLaterPreviousTaskColor(java.awt.Color)',0,'/**\r\n * set a new later previous tasks color.\r\n */\r\npublic void setLaterPreviousTaskColor(Color color) {\r\n    getUIConfiguration().setLaterPreviousTaskColor(color);\r\n}'),(275,'Color color','java.awt.Color',0,48,'net.sourceforge.ganttproject.GanttOptions',430,'net.sourceforge.ganttproject.GanttOptions.setWeekEndColor(java.awt.Color)',0,'/**\r\n * Set a new week end color.\r\n */\r\npublic void setWeekEndColor(Color color) {\r\n    getUIConfiguration().setWeekEndColor(color);\r\n}'),(276,'Color color','java.awt.Color',0,48,'net.sourceforge.ganttproject.GanttOptions',401,'net.sourceforge.ganttproject.GanttOptions.setDaysOffColor(java.awt.Color)',0,'/**\r\n * Set a new week end color.\r\n */\r\npublic void setDaysOffColor(Color color) {\r\n    getUIConfiguration().setDayOffColor(color);\r\n}'),(277,'String xslDir','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',434,'net.sourceforge.ganttproject.GanttOptions.setXslDir(java.lang.String)',0,'/**\r\n * Set a new xsl directory for html export.\r\n */\r\npublic void setXslDir(String xslDir) {\r\n    this.xslDir = xslDir;\r\n}'),(278,'String xslFo','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',435,'net.sourceforge.ganttproject.GanttOptions.setXslFo(java.lang.String)',0,'/**\r\n * Set a new xsl-fo file for pdf export.\r\n */\r\npublic void setXslFo(String xslFo) {\r\n    this.xslFo = xslFo;\r\n}'),(279,'DocumentsMRU documentsMRU','net.sourceforge.ganttproject.document.DocumentsMRU',238,48,'net.sourceforge.ganttproject.GanttOptions',404,'net.sourceforge.ganttproject.GanttOptions.setDocumentsMRU(net.sourceforge.ganttproject.document.DocumentsMRU)',0,'public void setDocumentsMRU(DocumentsMRU documentsMRU) {\r\n    this.documentsMRU = documentsMRU;\r\n}'),(280,'UIConfiguration uiConfiguration','net.sourceforge.ganttproject.gui.UIConfiguration',335,48,'net.sourceforge.ganttproject.GanttOptions',428,'net.sourceforge.ganttproject.GanttOptions.setUIConfiguration(net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public void setUIConfiguration(UIConfiguration uiConfiguration) {\r\n    this.myUIConfig = uiConfiguration;\r\n}'),(281,'boolean openTips','boolean',0,48,'net.sourceforge.ganttproject.GanttOptions',419,'net.sourceforge.ganttproject.GanttOptions.setOpenTips(boolean)',0,'/**\r\n * set new open tips value.\r\n */\r\npublic void setOpenTips(boolean openTips) {\r\n    this.openTips = openTips;\r\n}'),(282,'boolean automatic','boolean',0,48,'net.sourceforge.ganttproject.GanttOptions',399,'net.sourceforge.ganttproject.GanttOptions.setAutomatic(boolean)',0,'/**\r\n * set new automatic launch value.\r\n */\r\npublic void setAutomatic(boolean automatic) {\r\n    this.automatic = automatic;\r\n}'),(283,'GanttLookAndFeelInfo lookAndFeel','net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo',301,48,'net.sourceforge.ganttproject.GanttOptions',418,'net.sourceforge.ganttproject.GanttOptions.setLookAndFeel(net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo)',0,'/**\r\n * set new drag time with mouse value.\r\n */\r\n// public void setDragTime(boolean dragTime){\r\n// this.dragTime = dragTime;\r\n// }\r\npublic void setLookAndFeel(GanttLookAndFeelInfo lookAndFeel) {\r\n    this.lookAndFeel = lookAndFeel;\r\n}'),(284,'String taskNamePrefix','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',426,'net.sourceforge.ganttproject.GanttOptions.setTaskNamePrefix(java.lang.String)',0,'public void setTaskNamePrefix(String taskNamePrefix) {\r\n    sTaskNamePrefix = taskNamePrefix;\r\n}'),(285,'boolean isOn','boolean',0,48,'net.sourceforge.ganttproject.GanttOptions',421,'net.sourceforge.ganttproject.GanttOptions.setRedline(boolean)',0,'public void setRedline(boolean isOn) {\r\n    this.redline = isOn;\r\n    getUIConfiguration().setRedlineOn(isOn);\r\n}'),(286,'String pvString','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',410,'net.sourceforge.ganttproject.GanttOptions.setFTPDirectory(java.lang.String)',0,'/**\r\n *\r\n *\r\n * @param pvString\r\n * 		\r\n */\r\npublic void setFTPDirectory(String pvString) {\r\n    FTPDirectory = pvString;\r\n}'),(287,'String pvString','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',411,'net.sourceforge.ganttproject.GanttOptions.setFTPPwd(java.lang.String)',0,'/**\r\n *\r\n *\r\n * @param pvString\r\n * 		\r\n */\r\npublic void setFTPPwd(String pvString) {\r\n    FTPPwd = pvString;\r\n}'),(288,'String pvString','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',412,'net.sourceforge.ganttproject.GanttOptions.setFTPUrl(java.lang.String)',0,'/**\r\n *\r\n *\r\n * @param pvString\r\n * 		\r\n */\r\npublic void setFTPUrl(String pvString) {\r\n    FTPUrl = pvString;\r\n}'),(289,'String pvString','java.lang.String',0,48,'net.sourceforge.ganttproject.GanttOptions',413,'net.sourceforge.ganttproject.GanttOptions.setFTPUser(java.lang.String)',0,'/**\r\n *\r\n *\r\n * @param pvString\r\n * 		\r\n */\r\npublic void setFTPUser(String pvString) {\r\n    FTPUser = pvString;\r\n}'),(290,'int[] tabInt','int[]',0,48,'net.sourceforge.ganttproject.GanttOptions',379,'net.sourceforge.ganttproject.GanttOptions.getStringList(int[])',0,'private static String getStringList(int[] tabInt) {\r\n    String res = \"\";\r\n    int i = 0;\r\n    for (i = 0; i < ((tabInt.length) - 1); i++) {\r\n        res += (tabInt[i]) + \",\";\r\n    }\r\n    res += tabInt[i];\r\n    return res;\r\n}'),(291,'GPOptionGroup[] optionGroups','net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[]',0,48,'net.sourceforge.ganttproject.GanttOptions',343,'net.sourceforge.ganttproject.GanttOptions.addOptionGroups(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[])',0,'public void addOptionGroups(GPOptionGroup[] optionGroups) {\r\n    for (int i = 0; i < (optionGroups.length); i++) {\r\n        GPOptionGroup nextGroup = optionGroups[i];\r\n        addOptions(nextGroup);\r\n    }\r\n}'),(292,'GPOptionGroup optionGroup','net.sourceforge.ganttproject.gui.options.model.GPOptionGroup',389,48,'net.sourceforge.ganttproject.GanttOptions',344,'net.sourceforge.ganttproject.GanttOptions.addOptions(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup)',0,'private void addOptions(GPOptionGroup optionGroup) {\r\n    GPOption[] options = optionGroup.getOptions();\r\n    for (int i = 0; i < (options.length); i++) {\r\n        GPOption nextOption = options[i];\r\n        myGPOptions.put((((optionGroup.getID()) + \".\") + (nextOption.getID())), nextOption);\r\n        if (nextOption instanceof GP1XOptionConverter) {\r\n            GP1XOptionConverter nextConverter = ((GP1XOptionConverter) (nextOption));\r\n            myTagDotAttribute_Converter.put((((nextConverter.getTagName()) + \".\") + (nextConverter.getAttributeName())), nextConverter);\r\n        }\r\n    }\r\n}'),(293,'String name','java.lang.String',0,49,'net.sourceforge.ganttproject.GanttPreviousState',439,'net.sourceforge.ganttproject.GanttPreviousState.-init-(java.lang.String,net.sourceforge.ganttproject.GanttProject)',0,'// constructor for a new previous state\r\npublic GanttPreviousState(String name, GanttProject project) throws IOException {\r\n    myName = name;\r\n    myTree = ((GanttTree2) (project.getTree()));\r\n    myProject = project;\r\n    myFile = createTemporaryFile();\r\n    myFile.deleteOnExit();\r\n    os = new OutputStreamWriter(new FileOutputStream(myFile), \"UTF-8\");\r\n    saveFile();\r\n}'),(294,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,49,'net.sourceforge.ganttproject.GanttPreviousState',439,'net.sourceforge.ganttproject.GanttPreviousState.-init-(java.lang.String,net.sourceforge.ganttproject.GanttProject)',0,'// constructor for a new previous state\r\npublic GanttPreviousState(String name, GanttProject project) throws IOException {\r\n    myName = name;\r\n    myTree = ((GanttTree2) (project.getTree()));\r\n    myProject = project;\r\n    myFile = createTemporaryFile();\r\n    myFile.deleteOnExit();\r\n    os = new OutputStreamWriter(new FileOutputStream(myFile), \"UTF-8\");\r\n    saveFile();\r\n}'),(295,'String name','java.lang.String',0,49,'net.sourceforge.ganttproject.GanttPreviousState',440,'net.sourceforge.ganttproject.GanttPreviousState.-init-(java.lang.String)',0,'// constructor for a loaded previous state\r\npublic GanttPreviousState(String name) throws IOException {\r\n    myName = name;\r\n    myFile = createTemporaryFile();\r\n    myFile.deleteOnExit();\r\n    os = new OutputStreamWriter(new FileOutputStream(myFile), \"UTF-8\");\r\n}'),(296,'ArrayList tasks','java.util.ArrayList',0,49,'net.sourceforge.ganttproject.GanttPreviousState',449,'net.sourceforge.ganttproject.GanttPreviousState.saveFilesFromLoaded(java.util.ArrayList)',0,'public void saveFilesFromLoaded(ArrayList tasks) {\r\n    try {\r\n        AttributesImpl attrs = new AttributesImpl();\r\n        StreamResult result = new StreamResult(os);\r\n        SAXTransformerFactory factory = ((SAXTransformerFactory) (SAXTransformerFactory.newInstance()));\r\n        TransformerHandler handler = factory.newTransformerHandler();\r\n        Transformer serializer = handler.getTransformer();\r\n        serializer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\r\n        serializer.setOutputProperty(OutputKeys.INDENT, \"yes\");\r\n        serializer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\r\n        handler.setResult(result);\r\n        handler.startDocument();\r\n        handler.endDocument();\r\n        writeTasksFromLoaded(tasks);\r\n        os.close();\r\n    } catch (Throwable e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n}'),(297,'ArrayList tasks','java.util.ArrayList',0,49,'net.sourceforge.ganttproject.GanttPreviousState',453,'net.sourceforge.ganttproject.GanttPreviousState.writeTasksFromLoaded(java.util.ArrayList)',0,'public void writeTasksFromLoaded(ArrayList tasks) throws IOException {\r\n    write(((((s) + \"<previous-tasks name=\"\") + (myName)) + \"\">\n\"));\r\n    for (int i = 0; i < (tasks.size()); i++) {\r\n        os.write((((((s) + (s)) + \"<previous-task id=\"\") + (((GanttPreviousStateTask) (tasks.get(i))).getId())) + \"\"\"));\r\n        os.write(((\" start=\"\" + (((GanttPreviousStateTask) (tasks.get(i))).getStart().toXMLString())) + \"\"\"));\r\n        os.write(((\" duration=\"\" + (((GanttPreviousStateTask) (tasks.get(i))).getDuration())) + \"\"\"));\r\n        os.write(((\" meeting=\"\" + (((GanttPreviousStateTask) (tasks.get(i))).isMilestone())) + \"\"\"));\r\n        os.write(((\" super=\"\" + (((GanttPreviousStateTask) (tasks.get(i))).hasNested())) + \"\"\"));\r\n        os.write(\"/>\n\");\r\n    }\r\n    write(((s) + \"</previous-tasks>\"));\r\n}'),(298,'String s','java.lang.String',0,49,'net.sourceforge.ganttproject.GanttPreviousState',450,'net.sourceforge.ganttproject.GanttPreviousState.write(java.lang.String)',0,'public void write(String s) {\r\n    try {\r\n        os.write(s);\r\n    } catch (IOException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n}'),(299,'Writer fout','java.io.Writer',0,49,'net.sourceforge.ganttproject.GanttPreviousState',451,'net.sourceforge.ganttproject.GanttPreviousState.writeTask(java.io.Writer,javax.swing.tree.DefaultMutableTreeNode)',0,'/**\r\n * Simple write information of tasks\r\n */\r\npublic void writeTask(Writer fout, DefaultMutableTreeNode node) {\r\n    ArrayList lot = new ArrayList();\r\n    try {\r\n        GanttTask task = ((GanttTask) (node.getUserObject()));\r\n        if ((task.getTaskID()) == (-1))\r\n            throw new RuntimeException(\"A task can not has a number equal to -1\");\r\n\r\n        int id = task.getTaskID();\r\n        /* if (id >= lot.size()) { return; } */\r\n        boolean haschild = false;\r\n        ArrayList child = myTree.getAllChildTask(node);\r\n        if ((child.size()) != 0) {\r\n            haschild = true;\r\n        }\r\n        // Writes data of task\r\n        fout.write((((((s) + (s)) + \"<previous-task id=\"\") + (task.getTaskID()))// lots.indexOf(task.toString())\r\n         + // +\r\n        // //By\r\n        // CL\r\n        \"\"\"));\r\n        fout.write(((\" start=\"\" + (task.getStart().toXMLString())) + \"\"\"));\r\n        fout.write(((\" duration=\"\" + (task.getLength())) + \"\"\"));\r\n        fout.write(((\" meeting=\"\" + (task.isMilestone())) + \"\"\"));\r\n        fout.write(((\" super=\"\" + haschild) + \"\"\"));\r\n        fout.write(\"/>\n\");\r\n        // Write the child of the task\r\n        if (haschild) {\r\n            for (int i = 0; i < (child.size()); i++) {\r\n                Task task2 = ((Task) (((DefaultMutableTreeNode) (child.get(i))).getUserObject()));\r\n                int newid = -1;// lot.lastIndexOf(task2);\r\n\r\n                for (int j = 0; j < (lot.size()); j++) {\r\n                    String a = task2.toString();\r\n                    if (a == null)\r\n                        System.out.println(\"nul\");\r\n\r\n                    String b = lot.get(j).toString();\r\n                    if (a.equals(b)) {\r\n                        newid = j;\r\n                    }\r\n                }\r\n                writeTask(fout, ((DefaultMutableTreeNode) (child.get(i))));\r\n            }\r\n        }\r\n        // end of task section\r\n    } catch (Exception e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n}'),(300,'DefaultMutableTreeNode node','javax.swing.tree.DefaultMutableTreeNode',0,49,'net.sourceforge.ganttproject.GanttPreviousState',451,'net.sourceforge.ganttproject.GanttPreviousState.writeTask(java.io.Writer,javax.swing.tree.DefaultMutableTreeNode)',0,'/**\r\n * Simple write information of tasks\r\n */\r\npublic void writeTask(Writer fout, DefaultMutableTreeNode node) {\r\n    ArrayList lot = new ArrayList();\r\n    try {\r\n        GanttTask task = ((GanttTask) (node.getUserObject()));\r\n        if ((task.getTaskID()) == (-1))\r\n            throw new RuntimeException(\"A task can not has a number equal to -1\");\r\n\r\n        int id = task.getTaskID();\r\n        /* if (id >= lot.size()) { return; } */\r\n        boolean haschild = false;\r\n        ArrayList child = myTree.getAllChildTask(node);\r\n        if ((child.size()) != 0) {\r\n            haschild = true;\r\n        }\r\n        // Writes data of task\r\n        fout.write((((((s) + (s)) + \"<previous-task id=\"\") + (task.getTaskID()))// lots.indexOf(task.toString())\r\n         + // +\r\n        // //By\r\n        // CL\r\n        \"\"\"));\r\n        fout.write(((\" start=\"\" + (task.getStart().toXMLString())) + \"\"\"));\r\n        fout.write(((\" duration=\"\" + (task.getLength())) + \"\"\"));\r\n        fout.write(((\" meeting=\"\" + (task.isMilestone())) + \"\"\"));\r\n        fout.write(((\" super=\"\" + haschild) + \"\"\"));\r\n        fout.write(\"/>\n\");\r\n        // Write the child of the task\r\n        if (haschild) {\r\n            for (int i = 0; i < (child.size()); i++) {\r\n                Task task2 = ((Task) (((DefaultMutableTreeNode) (child.get(i))).getUserObject()));\r\n                int newid = -1;// lot.lastIndexOf(task2);\r\n\r\n                for (int j = 0; j < (lot.size()); j++) {\r\n                    String a = task2.toString();\r\n                    if (a == null)\r\n                        System.out.println(\"nul\");\r\n\r\n                    String b = lot.get(j).toString();\r\n                    if (a.equals(b)) {\r\n                        newid = j;\r\n                    }\r\n                }\r\n                writeTask(fout, ((DefaultMutableTreeNode) (child.get(i))));\r\n            }\r\n        }\r\n        // end of task section\r\n    } catch (Exception e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n}'),(301,'String s','java.lang.String',0,49,'net.sourceforge.ganttproject.GanttPreviousState',441,'net.sourceforge.ganttproject.GanttPreviousState.correct(java.lang.String)',0,'/**\r\n * Correct the charcters to be compatible with xml format\r\n */\r\npublic String correct(String s) {\r\n    String res;\r\n    if (s != null) {\r\n        res = s.replaceAll(\"&\", \"&#38;\");\r\n        res = res.replaceAll(\"<\", \"&#60;\");\r\n        res = res.replaceAll(\">\", \"&#62;\");\r\n        res = res.replaceAll(\"/\", \"&#47;\");\r\n        res = res.replaceAll(\"\"\", \"&#34;\");\r\n    } else\r\n        res = s;\r\n\r\n    return res;\r\n}'),(302,'String notes','java.lang.String',0,49,'net.sourceforge.ganttproject.GanttPreviousState',447,'net.sourceforge.ganttproject.GanttPreviousState.replaceAll(java.lang.String,java.lang.String,java.lang.String)',0,'public String replaceAll(String notes, String s1, String s2) {\r\n    return notes.replaceAll(s1, s2);\r\n}'),(303,'String s1','java.lang.String',0,49,'net.sourceforge.ganttproject.GanttPreviousState',447,'net.sourceforge.ganttproject.GanttPreviousState.replaceAll(java.lang.String,java.lang.String,java.lang.String)',0,'public String replaceAll(String notes, String s1, String s2) {\r\n    return notes.replaceAll(s1, s2);\r\n}'),(304,'String s2','java.lang.String',0,49,'net.sourceforge.ganttproject.GanttPreviousState',447,'net.sourceforge.ganttproject.GanttPreviousState.replaceAll(java.lang.String,java.lang.String,java.lang.String)',0,'public String replaceAll(String notes, String s1, String s2) {\r\n    return notes.replaceAll(s1, s2);\r\n}'),(305,'int id','int',0,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',454,'net.sourceforge.ganttproject.GanttPreviousStateTask.-init-(int,net.sourceforge.ganttproject.GanttCalendar,int,boolean,boolean)',0,'public GanttPreviousStateTask(int id, GanttCalendar start, int duration, boolean isMilestone, boolean hasNested) {\r\n    myId = id;\r\n    myStart = start;\r\n    myDuration = duration;\r\n    this.isMilestone = isMilestone;\r\n    this.hasNested = hasNested;\r\n}'),(306,'GanttCalendar start','net.sourceforge.ganttproject.GanttCalendar',24,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',454,'net.sourceforge.ganttproject.GanttPreviousStateTask.-init-(int,net.sourceforge.ganttproject.GanttCalendar,int,boolean,boolean)',0,'public GanttPreviousStateTask(int id, GanttCalendar start, int duration, boolean isMilestone, boolean hasNested) {\r\n    myId = id;\r\n    myStart = start;\r\n    myDuration = duration;\r\n    this.isMilestone = isMilestone;\r\n    this.hasNested = hasNested;\r\n}'),(307,'int duration','int',0,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',454,'net.sourceforge.ganttproject.GanttPreviousStateTask.-init-(int,net.sourceforge.ganttproject.GanttCalendar,int,boolean,boolean)',0,'public GanttPreviousStateTask(int id, GanttCalendar start, int duration, boolean isMilestone, boolean hasNested) {\r\n    myId = id;\r\n    myStart = start;\r\n    myDuration = duration;\r\n    this.isMilestone = isMilestone;\r\n    this.hasNested = hasNested;\r\n}'),(308,'boolean isMilestone','boolean',0,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',454,'net.sourceforge.ganttproject.GanttPreviousStateTask.-init-(int,net.sourceforge.ganttproject.GanttCalendar,int,boolean,boolean)',0,'public GanttPreviousStateTask(int id, GanttCalendar start, int duration, boolean isMilestone, boolean hasNested) {\r\n    myId = id;\r\n    myStart = start;\r\n    myDuration = duration;\r\n    this.isMilestone = isMilestone;\r\n    this.hasNested = hasNested;\r\n}'),(309,'boolean hasNested','boolean',0,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',454,'net.sourceforge.ganttproject.GanttPreviousStateTask.-init-(int,net.sourceforge.ganttproject.GanttCalendar,int,boolean,boolean)',0,'public GanttPreviousStateTask(int id, GanttCalendar start, int duration, boolean isMilestone, boolean hasNested) {\r\n    myId = id;\r\n    myStart = start;\r\n    myDuration = duration;\r\n    this.isMilestone = isMilestone;\r\n    this.hasNested = hasNested;\r\n}'),(310,'GPCalendar calendar','net.sourceforge.ganttproject.calendar.GPCalendar',146,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',456,'net.sourceforge.ganttproject.GanttPreviousStateTask.getEnd(net.sourceforge.ganttproject.calendar.GPCalendar)',0,'public GanttCalendar getEnd(GPCalendar calendar) {\r\n    int duration = myDuration;\r\n    GanttCalendar end = myStart.newAdd(myDuration);\r\n    for (int i = 0; i < duration; i++) {\r\n        // if (myId == 1)\r\n        // System.out.println (myStart.newAdd(i).getTime() + \" is workingDay : \" + calendar.isNonWorkingDay(myStart.newAdd(i).getTime()));\r\n        if (calendar.isNonWorkingDay(myStart.newAdd(i).getTime())) {\r\n            end.add(1);\r\n            duration++;\r\n        }\r\n    }\r\n    return end;\r\n}'),(311,'net.sourceforge.ganttproject.GanttCalendar','net.sourceforge.ganttproject.GanttCalendar',24,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',456,'net.sourceforge.ganttproject.GanttPreviousStateTask.getEnd(net.sourceforge.ganttproject.calendar.GPCalendar)',1,'public GanttCalendar getEnd(GPCalendar calendar) {\r\n    int duration = myDuration;\r\n    GanttCalendar end = myStart.newAdd(myDuration);\r\n    for (int i = 0; i < duration; i++) {\r\n        // if (myId == 1)\r\n        // System.out.println (myStart.newAdd(i).getTime() + \" is workingDay : \" + calendar.isNonWorkingDay(myStart.newAdd(i).getTime()));\r\n        if (calendar.isNonWorkingDay(myStart.newAdd(i).getTime())) {\r\n            end.add(1);\r\n            duration++;\r\n        }\r\n    }\r\n    return end;\r\n}'),(312,'int state','int',0,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',464,'net.sourceforge.ganttproject.GanttPreviousStateTask.setState(int)',0,'public void setState(int state) {\r\n    myState = state;\r\n}'),(313,'Task task','net.sourceforge.ganttproject.task.Task',548,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',465,'net.sourceforge.ganttproject.GanttPreviousStateTask.setState(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.calendar.GPCalendar)',0,'public void setState(Task task, GPCalendar calendar) {\r\n    if (task.getEnd().before(getEnd(calendar)))\r\n        setState(GanttPreviousStateTask.EARLIER);\r\n    else\r\n        if (task.getEnd().after(getEnd(calendar)))\r\n            setState(GanttPreviousStateTask.LATER);\r\n        else\r\n            setState(GanttPreviousStateTask.NORMAL);\r\n\r\n\r\n}'),(314,'GPCalendar calendar','net.sourceforge.ganttproject.calendar.GPCalendar',146,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',465,'net.sourceforge.ganttproject.GanttPreviousStateTask.setState(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.calendar.GPCalendar)',0,'public void setState(Task task, GPCalendar calendar) {\r\n    if (task.getEnd().before(getEnd(calendar)))\r\n        setState(GanttPreviousStateTask.EARLIER);\r\n    else\r\n        if (task.getEnd().after(getEnd(calendar)))\r\n            setState(GanttPreviousStateTask.LATER);\r\n        else\r\n            setState(GanttPreviousStateTask.NORMAL);\r\n\r\n\r\n}'),(315,'boolean isAPart','boolean',0,50,'net.sourceforge.ganttproject.GanttPreviousStateTask',463,'net.sourceforge.ganttproject.GanttPreviousStateTask.setIsAPart(boolean)',0,'public void setIsAPart(boolean isAPart) {\r\n    this.isAPart = isAPart;\r\n}'),(316,'boolean isOnlyViewer','boolean',0,53,'net.sourceforge.ganttproject.GanttProject',466,'net.sourceforge.ganttproject.GanttProject.-init-(boolean,boolean)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttProject(boolean isOnlyViewer, boolean isApplet) {\r\n    System.err.println(\"Creating main frame...\");\r\n    ToolTipManager.sharedInstance().setInitialDelay(200);\r\n    ToolTipManager.sharedInstance().setDismissDelay(60000);\r\n    TaskSelectionManager taskSelectionManager = new TaskSelectionManager();\r\n    Mediator.registerTaskSelectionManager(taskSelectionManager);\r\n    /* [bbaranne] I add a Mediator object so that we can get the GanttProject\n    singleton whereever we are in the source code. Perhaps some of you\n    dont like this, but I believe that it is practical...\n     */\r\n    Mediator.registerGanttProject(this);\r\n    this.isOnlyViewer = isOnlyViewer;\r\n    if (!isOnlyViewer)\r\n        setTitle(language.getText(\"appliTitle\"));\r\n    else\r\n        setTitle(\"GanttViewer\");\r\n\r\n    setFocusable(true);\r\n    System.err.println(\"1. loading looknfeels\");\r\n    lookAndFeel = GanttLookAndFeels.getGanttLookAndFeels().getDefaultInfo();\r\n    options = new GanttOptions(getRoleManager(), getDocumentManager(), isOnlyViewer);\r\n    myUIConfiguration = options.getUIConfiguration();\r\n    class TaskManagerConfigImpl implements TaskManagerConfig {\r\n        public Color getDefaultColor() {\r\n            return myUIConfiguration.getTaskColor();\r\n        }\r\n\r\n        public GPCalendar getCalendar() {\r\n            return GanttProject.this.getActiveCalendar();\r\n        }\r\n\r\n        public TimeUnitStack getTimeUnitStack() {\r\n            return GanttProject.this.getTimeUnitStack();\r\n        }\r\n\r\n        public ResourceManager getResourceManager() {\r\n            return GanttProject.this.getHumanResourceManager();\r\n        }\r\n\r\n        public URL getProjectDocumentURL() {\r\n            try {\r\n                return getDocument().getURI().toURL();\r\n            } catch (MalformedURLException e) {\r\n                e.printStackTrace();\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    TaskManagerConfig taskConfig = new TaskManagerConfigImpl();\r\n    myTaskManager = TaskManager.Access.newInstance(new TaskContainmentHierarchyFacade.Factory() {\r\n        public TaskContainmentHierarchyFacade createFacede() {\r\n            return GanttProject.this.getTaskContainment();\r\n        }\r\n    }, taskConfig, getCustomColumnsStorage());\r\n    ImageIcon icon = new ImageIcon(getClass().getResource(\"/icons/ganttproject.png\"));\r\n    setIconImage(icon.getImage());\r\n    // Create each objects\r\n    myFacadeInvalidator = new FacadeInvalidator(getTree().getJTree().getModel());\r\n    getProject().addProjectEventListener(myFacadeInvalidator);\r\n    area = new GanttGraphicArea(this, getTree(), getTaskManager(), getZoomManager(), getUndoManager());\r\n    options.addOptionGroups(getUIFacade().getGanttChart().getOptionGroups());\r\n    options.addOptionGroups(getUIFacade().getResourceChart().getOptionGroups());\r\n    options.addOptionGroups(new GPOptionGroup[]{ getProjectUIFacade().getOptionGroup() });\r\n    options.addOptionGroups(getDocumentManager().getNetworkOptionGroups());\r\n    myRowHeightAligner = new GanttProjectBase.RowHeightAligner(tree, area.getMyChartModel());\r\n    area.getMyChartModel().addOptionChangeListener(myRowHeightAligner);\r\n    System.err.println(\"2. loading options\");\r\n    initOptions();\r\n    area.setUIConfiguration(myUIConfiguration);\r\n    getTree().setGraphicArea(area);\r\n    // \r\n    miChartOptions = new JMenuItem(area.getOptionsDialogAction());\r\n    getZoomManager().addZoomListener(area.getZoomListener());\r\n    /* myCopyAction = new CopyAction((GanttTree2) getTree(), options\n    .getIconSize());\n     */\r\n    // myCopyAction = new CopyAction(this, options.getIconSize());\r\n    // \r\n    // /*myPasteAction = new PasteAction((GanttTree2) getTree(), options\r\n    // .getIconSize());*/\r\n    // \r\n    // myPasteAction = new PasteAction(this, options.getIconSize());\r\n    // \r\n    // /*myCutAction = new CutAction((GanttTree2) getTree(), options\r\n    // .getIconSize());*/\r\n    // \r\n    // myCutAction = new CutAction(this, options.getIconSize());\r\n    System.err.println(\"3. creating menu...\");\r\n    myRefreshAction = new RefreshViewAction(getUIFacade(), options);\r\n    // myRolloverActions.add(myCopyAction);\r\n    // myRolloverActions.add(myPasteAction);\r\n    // myRolloverActions.add(myCutAction);\r\n    myRolloverActions.add(myRefreshAction);\r\n    getTree().setActions();\r\n    // Create the menus\r\n    bar = new JMenuBar();\r\n    if (!isOnlyViewer)\r\n        setJMenuBar(bar);\r\n\r\n    // Allocation of the menus\r\n    mProject = new JMenu();\r\n    mMRU = new JMenu();\r\n    mMRU.setIcon(new ImageIcon(getClass().getResource(\"/icons/recent_16.gif\")));\r\n    mEdit = new JMenu();\r\n    // mView = new JMenu ();\r\n    mTask = new JMenu();\r\n    mHuman = new JMenu();\r\n    mHelp = new JMenu();\r\n    mCalendar = new JMenu();\r\n    miUndo = new JMenuItem(new UndoAction(getUndoManager(), \"16\", this));\r\n    mEdit.add(miUndo);\r\n    // miUndo.setEnabled(false);\r\n    miRedo = new JMenuItem(new RedoAction(getUndoManager(), \"16\", this));\r\n    mEdit.add(miRedo);\r\n    // miRedo.setEnabled(false);\r\n    mEdit.addSeparator();\r\n    createProjectMenu();\r\n    miRefresh = new JMenuItem(myRefreshAction);\r\n    // miRefresh.setAccelerator((KeyStroke)myRefreshAction.getValue(Action.ACCELERATOR_KEY));\r\n    mEdit.add(miRefresh);\r\n    mEdit.addSeparator();\r\n    // miCut = new JMenuItem(myCutAction);\r\n    mEdit.add(getViewManager().getCutAction());\r\n    // miCopy = new JMenuItem(myCopyAction);\r\n    mEdit.add(getViewManager().getCopyAction());\r\n    // miPaste = new JMenuItem(myPasteAction);\r\n    mEdit.add(getViewManager().getPasteAction());\r\n    mEdit.addSeparator();\r\n    miOptions = createNewItem(\"/icons/settings_16.gif\");\r\n    mEdit.add(miOptions);\r\n    myNewTaskAction = new NewTaskAction(((IGanttProject) (this)));\r\n    mTask.add(myNewTaskAction);\r\n    miDeleteTask = createNewItem(\"/icons/delete_16.gif\");\r\n    mTask.add(miDeleteTask);\r\n    myTaskPropertiesAction = new TaskPropertiesAction(getProject(), Mediator.getTaskSelectionManager(), getUIFacade());\r\n    mTask.add(myTaskPropertiesAction);\r\n    getTree().setTaskPropertiesAction(myTaskPropertiesAction);\r\n    getResourcePanel().setTaskPropertiesAction(myTaskPropertiesAction);\r\n    // \r\n    // \r\n    myNewHumanAction = new NewHumanAction(getHumanResourceManager(), getRoleManager(), this, this) {\r\n        public void actionPerformed(ActionEvent event) {\r\n            super.actionPerformed(event);\r\n            getTabs().setSelectedIndex(UIFacade.RESOURCES_INDEX);\r\n        }\r\n    };\r\n    mHuman.add(myNewHumanAction);\r\n    myDeleteHumanAction = getResourceActions().getDeleteHumanAction();\r\n    miDelHuman = new JMenuItem(myDeleteHumanAction);\r\n    mHuman.add(miDelHuman);\r\n    // miPropHuman = createNewItem(\"/icons/properties_16.gif\");\r\n    // mHuman.add(miPropHuman);\r\n    mHuman.add(getResourcePanel().getResourcePropertiesAction());\r\n    miSendMailHuman = createNewItem(\"/icons/send_mail_16.gif\");\r\n    mHuman.add(miSendMailHuman);\r\n    mHuman.add(new ImportResources(getHumanResourceManager(), getTaskManager(), getRoleManager(), this));\r\n    miEditCalendar = createNewItem(\"/icons/clock_16.gif\");\r\n    mCalendar.add(miEditCalendar);\r\n    miPrjCal = createNewItem(\"/icons/default_calendar_16.gif\");\r\n    mCalendar.add(miPrjCal);\r\n    miWebPage = createNewItem(\"/icons/home_16.gif\");\r\n    mHelp.add(miWebPage);\r\n    miManual = createNewItem(\"/icons/help_16.gif\");\r\n    try {\r\n        // See if helpgui library is on the classpath\r\n        Class.forName(\"net.sourceforge.helpgui.HelpGui\");\r\n        mHelp.add(miManual);\r\n        miManual.setAccelerator(KeyStroke.getKeyStroke(\"F1\"));\r\n    } catch (Exception ex) {\r\n        // Not add the help button on the ui\r\n    }\r\n    miTips = createNewItem(\"/icons/about_16.gif\");\r\n    mHelp.add(miTips);\r\n    miAbout = createNewItem(\"/icons/manual_16.gif\");\r\n    mHelp.add(miAbout);\r\n    if (!isApplet) {\r\n        bar.add(mProject);// for a applet veiwer, Project menu is not\r\n\r\n        // neccessary By CL\r\n    }\r\n    bar.add(mEdit);\r\n    JMenu viewMenu = createViewMenu();\r\n    if (viewMenu != null)\r\n        bar.add(viewMenu);\r\n\r\n    // bar.add (mView);\r\n    bar.add(mTask);\r\n    bar.add(mHuman);\r\n    // bar.add(mCalendar);\r\n    bar.add(mHelp);\r\n    setMemonic();\r\n    // to create a default project\r\n    // createDefaultTree(tree);\r\n    System.err.println(\"4. creating views...\");\r\n    myGanttChartTabContent = new GanttChartTabContentPanel(getProject(), getUIFacade(), tree, area);\r\n    GPView ganttView = getViewManager().createView(myGanttChartTabContent, new ImageIcon(getClass().getResource(\"/icons/tasks_16.gif\")));\r\n    ganttView.setVisible(true);\r\n    myResourceChartTabContent = new ResourceChartTabContentPanel(getResourcePanel(), getResourcePanel().area);\r\n    GPView resourceView = getViewManager().createView(myResourceChartTabContent, new ImageIcon(getClass().getResource(\"/icons/res_16.gif\")));\r\n    resourceView.setVisible(true);\r\n    getTabs().setSelectedIndex(0);\r\n    this.resp.setActions();\r\n    // pert area\r\n    // getTabs().setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\r\n    getTabs().addChangeListener(new ChangeListener() {\r\n        public void stateChanged(ChangeEvent e) {\r\n            bCritical.setEnabled(((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)));\r\n            bScrollCenter.setEnabled(((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)));\r\n            bComparePrev.setEnabled(((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)));\r\n            bSaveCurrent.setEnabled(((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)));\r\n            bNewTask.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bDelete.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bProperties.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bZoomIn.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bZoomOut.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bPrev.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bNext.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            if ((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) {\r\n                // Gantt\r\n                // Chart\r\n                bNewTask.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"createTask\"))));\r\n                bDelete.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"deleteTask\"))));\r\n                bProperties.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"propertiesTask\"))));\r\n                if ((options.getButtonShow()) != (GanttOptions.ICONS)) {\r\n                    bNewTask.setText(GanttProject.correctLabel(language.getText(\"createTask\")));\r\n                    bDelete.setText(GanttProject.correctLabel(language.getText(\"deleteTask\")));\r\n                    bProperties.setText(GanttProject.correctLabel(language.getText(\"propertiesTask\")));\r\n                }\r\n            } else\r\n                if ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX)) {\r\n                    // Resources\r\n                    // Chart\r\n                    bNewTask.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"newHuman\"))));\r\n                    bDelete.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"deleteHuman\"))));\r\n                    bProperties.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"propertiesHuman\"))));\r\n                    if ((options.getButtonShow()) != (GanttOptions.ICONS)) {\r\n                        bNewTask.setText(GanttProject.correctLabel(language.getText(\"newHuman\")));\r\n                        bDelete.setText(GanttProject.correctLabel(language.getText(\"deleteHuman\")));\r\n                        bProperties.setText(GanttProject.correctLabel(language.getText(\"propertiesHuman\")));\r\n                    }\r\n                }\r\n\r\n        }\r\n    });\r\n    // Add tabpan on the content pane\r\n    getContentPane().add(getTabs(), BorderLayout.CENTER);\r\n    // Add toolbar\r\n    toolBar = new GPToolBar(\"GanttProject\", options.getToolBarPosition(), getOptions());\r\n    toolBar.addComponentListener(new ComponentListener() {\r\n        public void componentResized(ComponentEvent arg0) {\r\n            setHiddens();\r\n            refresh();\r\n        }\r\n\r\n        public void componentMoved(ComponentEvent arg0) {\r\n        }\r\n\r\n        public void componentShown(ComponentEvent arg0) {\r\n        }\r\n\r\n        public void componentHidden(ComponentEvent arg0) {\r\n        }\r\n    });\r\n    this.addButtons(toolBar);\r\n    getContentPane().add(toolBar, ((toolBar.getOrientation()) == (JToolBar.HORIZONTAL) ? BorderLayout.NORTH : BorderLayout.WEST));\r\n    // add the status bar\r\n    if (!isOnlyViewer)\r\n        getContentPane().add(getStatusBar(), BorderLayout.SOUTH);\r\n\r\n    getStatusBar().setVisible(options.getShowStatusBar());\r\n    // add a keyboard listener\r\n    addKeyListener(this);\r\n    SwitchViewAction switchAction = new SwitchViewAction(this);\r\n    JMenuItem invisibleItem = new JMenuItem(switchAction);\r\n    invisibleItem.setVisible(false);\r\n    bar.add(invisibleItem);\r\n    // update 18-03-2003\r\n    addWindowListener(new WindowAdapter() {\r\n        public void windowClosing(WindowEvent evt) {\r\n            exitForm(evt);\r\n        }\r\n\r\n        public void windowOpened(WindowEvent e) {\r\n            myRowHeightAligner.optionsChanged();\r\n        }\r\n    });\r\n    // update 18-03-2003\r\n    System.err.println(\"5. calculating size and packing...\");\r\n    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);\r\n    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\r\n    Dimension windowSize = getPreferredSize();\r\n    // Put the frame at the middle of the screen\r\n    setLocation((((screenSize.width) / 2) - ((windowSize.width) / 2)), (((screenSize.height) / 2) - ((windowSize.height) / 2)));\r\n    this.pack();\r\n    System.err.println(\"6. changing language ...\");\r\n    changeLanguage();\r\n    // changeUndoNumber ();\r\n    System.err.println(\"7. changing looknfeel ...\");\r\n    changeLookAndFeel(lookAndFeel);\r\n    changeLookAndFeel(lookAndFeel);// Twice call for update font on menu\r\n\r\n    if (options.isLoaded()) {\r\n        setBounds(options.getX(), options.getY(), options.getWidth(), options.getHeight());\r\n    }\r\n    if ((options.getOpenTips()) && (!(GanttProject.byCommandLine))) {\r\n        TipsDialog tips = new TipsDialog(this, options.getOpenTips());\r\n        tips.show();\r\n        tips.toFront();// somehow assure, that the TipsDialog is the top\r\n\r\n        // window an MacOS\r\n    }\r\n    System.err.println(\"8. finalizing...\");\r\n    applyComponentOrientation(GanttLanguage.getInstance().getComponentOrientation());\r\n    myTaskManager.addTaskListener(new TaskModelModificationListener(this));\r\n    if ((GanttProject.ourWindowListener) != null) {\r\n        addWindowListener(GanttProject.ourWindowListener);\r\n    }\r\n    addMouseListenerToAllContainer(this.getComponents());\r\n    myDelayManager = new DelayManager(myTaskManager, tree);\r\n    Mediator.registerDelayManager(myDelayManager);\r\n    myDelayManager.addObserver(tree);\r\n    myTaskManager.addTaskListener(myDelayManager);\r\n    getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), \"refresh\");\r\n    getRootPane().getActionMap().put(\"refresh\", new AbstractAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            getActiveChart().reset();\r\n            repaint();\r\n        }\r\n    });\r\n}'),(317,'boolean isApplet','boolean',0,53,'net.sourceforge.ganttproject.GanttProject',466,'net.sourceforge.ganttproject.GanttProject.-init-(boolean,boolean)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttProject(boolean isOnlyViewer, boolean isApplet) {\r\n    System.err.println(\"Creating main frame...\");\r\n    ToolTipManager.sharedInstance().setInitialDelay(200);\r\n    ToolTipManager.sharedInstance().setDismissDelay(60000);\r\n    TaskSelectionManager taskSelectionManager = new TaskSelectionManager();\r\n    Mediator.registerTaskSelectionManager(taskSelectionManager);\r\n    /* [bbaranne] I add a Mediator object so that we can get the GanttProject\n    singleton whereever we are in the source code. Perhaps some of you\n    dont like this, but I believe that it is practical...\n     */\r\n    Mediator.registerGanttProject(this);\r\n    this.isOnlyViewer = isOnlyViewer;\r\n    if (!isOnlyViewer)\r\n        setTitle(language.getText(\"appliTitle\"));\r\n    else\r\n        setTitle(\"GanttViewer\");\r\n\r\n    setFocusable(true);\r\n    System.err.println(\"1. loading looknfeels\");\r\n    lookAndFeel = GanttLookAndFeels.getGanttLookAndFeels().getDefaultInfo();\r\n    options = new GanttOptions(getRoleManager(), getDocumentManager(), isOnlyViewer);\r\n    myUIConfiguration = options.getUIConfiguration();\r\n    class TaskManagerConfigImpl implements TaskManagerConfig {\r\n        public Color getDefaultColor() {\r\n            return myUIConfiguration.getTaskColor();\r\n        }\r\n\r\n        public GPCalendar getCalendar() {\r\n            return GanttProject.this.getActiveCalendar();\r\n        }\r\n\r\n        public TimeUnitStack getTimeUnitStack() {\r\n            return GanttProject.this.getTimeUnitStack();\r\n        }\r\n\r\n        public ResourceManager getResourceManager() {\r\n            return GanttProject.this.getHumanResourceManager();\r\n        }\r\n\r\n        public URL getProjectDocumentURL() {\r\n            try {\r\n                return getDocument().getURI().toURL();\r\n            } catch (MalformedURLException e) {\r\n                e.printStackTrace();\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    TaskManagerConfig taskConfig = new TaskManagerConfigImpl();\r\n    myTaskManager = TaskManager.Access.newInstance(new TaskContainmentHierarchyFacade.Factory() {\r\n        public TaskContainmentHierarchyFacade createFacede() {\r\n            return GanttProject.this.getTaskContainment();\r\n        }\r\n    }, taskConfig, getCustomColumnsStorage());\r\n    ImageIcon icon = new ImageIcon(getClass().getResource(\"/icons/ganttproject.png\"));\r\n    setIconImage(icon.getImage());\r\n    // Create each objects\r\n    myFacadeInvalidator = new FacadeInvalidator(getTree().getJTree().getModel());\r\n    getProject().addProjectEventListener(myFacadeInvalidator);\r\n    area = new GanttGraphicArea(this, getTree(), getTaskManager(), getZoomManager(), getUndoManager());\r\n    options.addOptionGroups(getUIFacade().getGanttChart().getOptionGroups());\r\n    options.addOptionGroups(getUIFacade().getResourceChart().getOptionGroups());\r\n    options.addOptionGroups(new GPOptionGroup[]{ getProjectUIFacade().getOptionGroup() });\r\n    options.addOptionGroups(getDocumentManager().getNetworkOptionGroups());\r\n    myRowHeightAligner = new GanttProjectBase.RowHeightAligner(tree, area.getMyChartModel());\r\n    area.getMyChartModel().addOptionChangeListener(myRowHeightAligner);\r\n    System.err.println(\"2. loading options\");\r\n    initOptions();\r\n    area.setUIConfiguration(myUIConfiguration);\r\n    getTree().setGraphicArea(area);\r\n    // \r\n    miChartOptions = new JMenuItem(area.getOptionsDialogAction());\r\n    getZoomManager().addZoomListener(area.getZoomListener());\r\n    /* myCopyAction = new CopyAction((GanttTree2) getTree(), options\n    .getIconSize());\n     */\r\n    // myCopyAction = new CopyAction(this, options.getIconSize());\r\n    // \r\n    // /*myPasteAction = new PasteAction((GanttTree2) getTree(), options\r\n    // .getIconSize());*/\r\n    // \r\n    // myPasteAction = new PasteAction(this, options.getIconSize());\r\n    // \r\n    // /*myCutAction = new CutAction((GanttTree2) getTree(), options\r\n    // .getIconSize());*/\r\n    // \r\n    // myCutAction = new CutAction(this, options.getIconSize());\r\n    System.err.println(\"3. creating menu...\");\r\n    myRefreshAction = new RefreshViewAction(getUIFacade(), options);\r\n    // myRolloverActions.add(myCopyAction);\r\n    // myRolloverActions.add(myPasteAction);\r\n    // myRolloverActions.add(myCutAction);\r\n    myRolloverActions.add(myRefreshAction);\r\n    getTree().setActions();\r\n    // Create the menus\r\n    bar = new JMenuBar();\r\n    if (!isOnlyViewer)\r\n        setJMenuBar(bar);\r\n\r\n    // Allocation of the menus\r\n    mProject = new JMenu();\r\n    mMRU = new JMenu();\r\n    mMRU.setIcon(new ImageIcon(getClass().getResource(\"/icons/recent_16.gif\")));\r\n    mEdit = new JMenu();\r\n    // mView = new JMenu ();\r\n    mTask = new JMenu();\r\n    mHuman = new JMenu();\r\n    mHelp = new JMenu();\r\n    mCalendar = new JMenu();\r\n    miUndo = new JMenuItem(new UndoAction(getUndoManager(), \"16\", this));\r\n    mEdit.add(miUndo);\r\n    // miUndo.setEnabled(false);\r\n    miRedo = new JMenuItem(new RedoAction(getUndoManager(), \"16\", this));\r\n    mEdit.add(miRedo);\r\n    // miRedo.setEnabled(false);\r\n    mEdit.addSeparator();\r\n    createProjectMenu();\r\n    miRefresh = new JMenuItem(myRefreshAction);\r\n    // miRefresh.setAccelerator((KeyStroke)myRefreshAction.getValue(Action.ACCELERATOR_KEY));\r\n    mEdit.add(miRefresh);\r\n    mEdit.addSeparator();\r\n    // miCut = new JMenuItem(myCutAction);\r\n    mEdit.add(getViewManager().getCutAction());\r\n    // miCopy = new JMenuItem(myCopyAction);\r\n    mEdit.add(getViewManager().getCopyAction());\r\n    // miPaste = new JMenuItem(myPasteAction);\r\n    mEdit.add(getViewManager().getPasteAction());\r\n    mEdit.addSeparator();\r\n    miOptions = createNewItem(\"/icons/settings_16.gif\");\r\n    mEdit.add(miOptions);\r\n    myNewTaskAction = new NewTaskAction(((IGanttProject) (this)));\r\n    mTask.add(myNewTaskAction);\r\n    miDeleteTask = createNewItem(\"/icons/delete_16.gif\");\r\n    mTask.add(miDeleteTask);\r\n    myTaskPropertiesAction = new TaskPropertiesAction(getProject(), Mediator.getTaskSelectionManager(), getUIFacade());\r\n    mTask.add(myTaskPropertiesAction);\r\n    getTree().setTaskPropertiesAction(myTaskPropertiesAction);\r\n    getResourcePanel().setTaskPropertiesAction(myTaskPropertiesAction);\r\n    // \r\n    // \r\n    myNewHumanAction = new NewHumanAction(getHumanResourceManager(), getRoleManager(), this, this) {\r\n        public void actionPerformed(ActionEvent event) {\r\n            super.actionPerformed(event);\r\n            getTabs().setSelectedIndex(UIFacade.RESOURCES_INDEX);\r\n        }\r\n    };\r\n    mHuman.add(myNewHumanAction);\r\n    myDeleteHumanAction = getResourceActions().getDeleteHumanAction();\r\n    miDelHuman = new JMenuItem(myDeleteHumanAction);\r\n    mHuman.add(miDelHuman);\r\n    // miPropHuman = createNewItem(\"/icons/properties_16.gif\");\r\n    // mHuman.add(miPropHuman);\r\n    mHuman.add(getResourcePanel().getResourcePropertiesAction());\r\n    miSendMailHuman = createNewItem(\"/icons/send_mail_16.gif\");\r\n    mHuman.add(miSendMailHuman);\r\n    mHuman.add(new ImportResources(getHumanResourceManager(), getTaskManager(), getRoleManager(), this));\r\n    miEditCalendar = createNewItem(\"/icons/clock_16.gif\");\r\n    mCalendar.add(miEditCalendar);\r\n    miPrjCal = createNewItem(\"/icons/default_calendar_16.gif\");\r\n    mCalendar.add(miPrjCal);\r\n    miWebPage = createNewItem(\"/icons/home_16.gif\");\r\n    mHelp.add(miWebPage);\r\n    miManual = createNewItem(\"/icons/help_16.gif\");\r\n    try {\r\n        // See if helpgui library is on the classpath\r\n        Class.forName(\"net.sourceforge.helpgui.HelpGui\");\r\n        mHelp.add(miManual);\r\n        miManual.setAccelerator(KeyStroke.getKeyStroke(\"F1\"));\r\n    } catch (Exception ex) {\r\n        // Not add the help button on the ui\r\n    }\r\n    miTips = createNewItem(\"/icons/about_16.gif\");\r\n    mHelp.add(miTips);\r\n    miAbout = createNewItem(\"/icons/manual_16.gif\");\r\n    mHelp.add(miAbout);\r\n    if (!isApplet) {\r\n        bar.add(mProject);// for a applet veiwer, Project menu is not\r\n\r\n        // neccessary By CL\r\n    }\r\n    bar.add(mEdit);\r\n    JMenu viewMenu = createViewMenu();\r\n    if (viewMenu != null)\r\n        bar.add(viewMenu);\r\n\r\n    // bar.add (mView);\r\n    bar.add(mTask);\r\n    bar.add(mHuman);\r\n    // bar.add(mCalendar);\r\n    bar.add(mHelp);\r\n    setMemonic();\r\n    // to create a default project\r\n    // createDefaultTree(tree);\r\n    System.err.println(\"4. creating views...\");\r\n    myGanttChartTabContent = new GanttChartTabContentPanel(getProject(), getUIFacade(), tree, area);\r\n    GPView ganttView = getViewManager().createView(myGanttChartTabContent, new ImageIcon(getClass().getResource(\"/icons/tasks_16.gif\")));\r\n    ganttView.setVisible(true);\r\n    myResourceChartTabContent = new ResourceChartTabContentPanel(getResourcePanel(), getResourcePanel().area);\r\n    GPView resourceView = getViewManager().createView(myResourceChartTabContent, new ImageIcon(getClass().getResource(\"/icons/res_16.gif\")));\r\n    resourceView.setVisible(true);\r\n    getTabs().setSelectedIndex(0);\r\n    this.resp.setActions();\r\n    // pert area\r\n    // getTabs().setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\r\n    getTabs().addChangeListener(new ChangeListener() {\r\n        public void stateChanged(ChangeEvent e) {\r\n            bCritical.setEnabled(((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)));\r\n            bScrollCenter.setEnabled(((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)));\r\n            bComparePrev.setEnabled(((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)));\r\n            bSaveCurrent.setEnabled(((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)));\r\n            bNewTask.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bDelete.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bProperties.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bZoomIn.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bZoomOut.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bPrev.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            bNext.setEnabled((((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) || ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX))));\r\n            if ((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) {\r\n                // Gantt\r\n                // Chart\r\n                bNewTask.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"createTask\"))));\r\n                bDelete.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"deleteTask\"))));\r\n                bProperties.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"propertiesTask\"))));\r\n                if ((options.getButtonShow()) != (GanttOptions.ICONS)) {\r\n                    bNewTask.setText(GanttProject.correctLabel(language.getText(\"createTask\")));\r\n                    bDelete.setText(GanttProject.correctLabel(language.getText(\"deleteTask\")));\r\n                    bProperties.setText(GanttProject.correctLabel(language.getText(\"propertiesTask\")));\r\n                }\r\n            } else\r\n                if ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX)) {\r\n                    // Resources\r\n                    // Chart\r\n                    bNewTask.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"newHuman\"))));\r\n                    bDelete.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"deleteHuman\"))));\r\n                    bProperties.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"propertiesHuman\"))));\r\n                    if ((options.getButtonShow()) != (GanttOptions.ICONS)) {\r\n                        bNewTask.setText(GanttProject.correctLabel(language.getText(\"newHuman\")));\r\n                        bDelete.setText(GanttProject.correctLabel(language.getText(\"deleteHuman\")));\r\n                        bProperties.setText(GanttProject.correctLabel(language.getText(\"propertiesHuman\")));\r\n                    }\r\n                }\r\n\r\n        }\r\n    });\r\n    // Add tabpan on the content pane\r\n    getContentPane().add(getTabs(), BorderLayout.CENTER);\r\n    // Add toolbar\r\n    toolBar = new GPToolBar(\"GanttProject\", options.getToolBarPosition(), getOptions());\r\n    toolBar.addComponentListener(new ComponentListener() {\r\n        public void componentResized(ComponentEvent arg0) {\r\n            setHiddens();\r\n            refresh();\r\n        }\r\n\r\n        public void componentMoved(ComponentEvent arg0) {\r\n        }\r\n\r\n        public void componentShown(ComponentEvent arg0) {\r\n        }\r\n\r\n        public void componentHidden(ComponentEvent arg0) {\r\n        }\r\n    });\r\n    this.addButtons(toolBar);\r\n    getContentPane().add(toolBar, ((toolBar.getOrientation()) == (JToolBar.HORIZONTAL) ? BorderLayout.NORTH : BorderLayout.WEST));\r\n    // add the status bar\r\n    if (!isOnlyViewer)\r\n        getContentPane().add(getStatusBar(), BorderLayout.SOUTH);\r\n\r\n    getStatusBar().setVisible(options.getShowStatusBar());\r\n    // add a keyboard listener\r\n    addKeyListener(this);\r\n    SwitchViewAction switchAction = new SwitchViewAction(this);\r\n    JMenuItem invisibleItem = new JMenuItem(switchAction);\r\n    invisibleItem.setVisible(false);\r\n    bar.add(invisibleItem);\r\n    // update 18-03-2003\r\n    addWindowListener(new WindowAdapter() {\r\n        public void windowClosing(WindowEvent evt) {\r\n            exitForm(evt);\r\n        }\r\n\r\n        public void windowOpened(WindowEvent e) {\r\n            myRowHeightAligner.optionsChanged();\r\n        }\r\n    });\r\n    // update 18-03-2003\r\n    System.err.println(\"5. calculating size and packing...\");\r\n    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);\r\n    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\r\n    Dimension windowSize = getPreferredSize();\r\n    // Put the frame at the middle of the screen\r\n    setLocation((((screenSize.width) / 2) - ((windowSize.width) / 2)), (((screenSize.height) / 2) - ((windowSize.height) / 2)));\r\n    this.pack();\r\n    System.err.println(\"6. changing language ...\");\r\n    changeLanguage();\r\n    // changeUndoNumber ();\r\n    System.err.println(\"7. changing looknfeel ...\");\r\n    changeLookAndFeel(lookAndFeel);\r\n    changeLookAndFeel(lookAndFeel);// Twice call for update font on menu\r\n\r\n    if (options.isLoaded()) {\r\n        setBounds(options.getX(), options.getY(), options.getWidth(), options.getHeight());\r\n    }\r\n    if ((options.getOpenTips()) && (!(GanttProject.byCommandLine))) {\r\n        TipsDialog tips = new TipsDialog(this, options.getOpenTips());\r\n        tips.show();\r\n        tips.toFront();// somehow assure, that the TipsDialog is the top\r\n\r\n        // window an MacOS\r\n    }\r\n    System.err.println(\"8. finalizing...\");\r\n    applyComponentOrientation(GanttLanguage.getInstance().getComponentOrientation());\r\n    myTaskManager.addTaskListener(new TaskModelModificationListener(this));\r\n    if ((GanttProject.ourWindowListener) != null) {\r\n        addWindowListener(GanttProject.ourWindowListener);\r\n    }\r\n    addMouseListenerToAllContainer(this.getComponents());\r\n    myDelayManager = new DelayManager(myTaskManager, tree);\r\n    Mediator.registerDelayManager(myDelayManager);\r\n    myDelayManager.addObserver(tree);\r\n    myTaskManager.addTaskListener(myDelayManager);\r\n    getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), \"refresh\");\r\n    getRootPane().getActionMap().put(\"refresh\", new AbstractAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            getActiveChart().reset();\r\n            repaint();\r\n        }\r\n    });\r\n}'),(318,'boolean isOnlyViewer','boolean',0,53,'net.sourceforge.ganttproject.GanttProject',469,'net.sourceforge.ganttproject.GanttProject.-init-(boolean)',0,'public GanttProject(boolean isOnlyViewer) {\r\n    this(isOnlyViewer, false);\r\n}'),(319,'File file','java.io.File',0,51,'net.sourceforge.ganttproject.GanttProject$ExportFileInfo',595,'net.sourceforge.ganttproject.GanttProject$ExportFileInfo.-init-(java.io.File,int,net.sourceforge.ganttproject.GanttExportSettings)',0,'public ExportFileInfo(File file, int format, GanttExportSettings options) {\r\n    myFile = file;\r\n    myFormat = format;\r\n    myStorageOptions = options;\r\n}'),(320,'int format','int',0,51,'net.sourceforge.ganttproject.GanttProject$ExportFileInfo',595,'net.sourceforge.ganttproject.GanttProject$ExportFileInfo.-init-(java.io.File,int,net.sourceforge.ganttproject.GanttExportSettings)',0,'public ExportFileInfo(File file, int format, GanttExportSettings options) {\r\n    myFile = file;\r\n    myFormat = format;\r\n    myStorageOptions = options;\r\n}'),(321,'GanttExportSettings options','net.sourceforge.ganttproject.GanttExportSettings',27,51,'net.sourceforge.ganttproject.GanttProject$ExportFileInfo',595,'net.sourceforge.ganttproject.GanttProject$ExportFileInfo.-init-(java.io.File,int,net.sourceforge.ganttproject.GanttExportSettings)',0,'public ExportFileInfo(File file, int format, GanttExportSettings options) {\r\n    myFile = file;\r\n    myFormat = format;\r\n    myStorageOptions = options;\r\n}'),(322,'Component[] cont','java.awt.Component[]',0,53,'net.sourceforge.ganttproject.GanttProject',476,'net.sourceforge.ganttproject.GanttProject.addMouseListenerToAllContainer(java.awt.Component[])',0,'private void addMouseListenerToAllContainer(Component[] cont) {\r\n    for (int i = 0; i < (cont.length); i++) {\r\n        cont[i].addMouseListener(getStopEditingMouseListener());\r\n        if ((cont[i]) instanceof Container)\r\n            addMouseListenerToAllContainer(((Container) (cont[i])).getComponents());\r\n\r\n    }\r\n}'),(323,'String label','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',492,'net.sourceforge.ganttproject.GanttProject.createNewItemText(java.lang.String)',0,'/**\r\n * Create an item with a label\r\n */\r\npublic JMenuItem createNewItemText(String label) {\r\n    JMenuItem item = new JMenuItem(label);\r\n    item.addActionListener(this);\r\n    return item;\r\n}'),(324,'String icon','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',490,'net.sourceforge.ganttproject.GanttProject.createNewItem(java.lang.String)',0,'/**\r\n * Create an item with an icon\r\n */\r\npublic JMenuItem createNewItem(String icon) {\r\n    URL url = getClass().getResource(icon);\r\n    JMenuItem item = (url == null) ? new JMenuItem() : new JMenuItem(new ImageIcon(url));\r\n    item.addActionListener(this);\r\n    return item;\r\n}'),(325,'String label','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',491,'net.sourceforge.ganttproject.GanttProject.createNewItem(java.lang.String,java.lang.String)',0,'/**\r\n * Create an item with a label and an icon\r\n */\r\npublic JMenuItem createNewItem(String label, String icon) {\r\n    JMenuItem item = new JMenuItem(label, new ImageIcon(getClass().getResource(icon)));\r\n    item.addActionListener(this);\r\n    return item;\r\n}'),(326,'String icon','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',491,'net.sourceforge.ganttproject.GanttProject.createNewItem(java.lang.String,java.lang.String)',0,'/**\r\n * Create an item with a label and an icon\r\n */\r\npublic JMenuItem createNewItem(String label, String icon) {\r\n    JMenuItem item = new JMenuItem(label, new ImageIcon(getClass().getResource(icon)));\r\n    item.addActionListener(this);\r\n    return item;\r\n}'),(327,'GanttLookAndFeelInfo lookAndFeel','net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo',301,53,'net.sourceforge.ganttproject.GanttProject',480,'net.sourceforge.ganttproject.GanttProject.changeLookAndFeel(net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo)',0,'/**\r\n * Change the style of the application\r\n */\r\npublic void changeLookAndFeel(GanttLookAndFeelInfo lookAndFeel) {\r\n    try {\r\n        UIManager.setLookAndFeel(lookAndFeel.getClassName());\r\n        SwingUtilities.updateComponentTreeUI(this);\r\n        this.lookAndFeel = lookAndFeel;\r\n    } catch (Exception e) {\r\n        GanttLookAndFeelInfo info = GanttLookAndFeels.getGanttLookAndFeels().getDefaultInfo();\r\n        System.out.println((((((\"Can	 find the LookAndFeel\n\" + (lookAndFeel.getClassName())) + \"\n\") + (lookAndFeel.getName())) + \"\nSetting the default Look\nFeel\") + (info.getName())));\r\n        try {\r\n            UIManager.setLookAndFeel(info.getClassName());\r\n            SwingUtilities.updateComponentTreeUI(this);\r\n            this.lookAndFeel = info;\r\n        } catch (Exception ex) {\r\n        }\r\n    }\r\n    // MetalLookAndFeel.setCurrentTheme(new GanttMetalTheme());\r\n    // must force to do that instead of the task on tree are not in\r\n    // continuity of the calendar\r\n    if ((tree.getTable().getRowHeight()) <= 22)\r\n        tree.getTable().setRowHeight(20);\r\n\r\n}'),(328,'String label','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',489,'net.sourceforge.ganttproject.GanttProject.correctLabel(java.lang.String)',0,'/**\r\n *\r\n *\r\n * @unknown Use GanttLanguage.correctLabel\r\n */\r\npublic static String correctLabel(String label) {\r\n    return GanttLanguage.getInstance().correctLabel(label);\r\n}'),(329,'JMenu menu','javax.swing.JMenu',0,53,'net.sourceforge.ganttproject.GanttProject',482,'net.sourceforge.ganttproject.GanttProject.changeMenuLabel(javax.swing.JMenu,java.lang.String)',0,'/**\r\n * Change the label for menu, in fact check in the label contains a mnemonic\r\n */\r\npublic JMenu changeMenuLabel(JMenu menu, String label) {\r\n    int index = label.indexOf($);\r\n    if ((index != (-1)) && (((label.length()) - index) > 1)) {\r\n        menu.setText(label.substring(0, index).concat(label.substring((++index))));\r\n        menu.setMnemonic(Character.toLowerCase(label.charAt(index)));\r\n    } else {\r\n        menu.setText(label);\r\n        // menu.setMnemonic();\r\n    }\r\n    return menu;\r\n}'),(330,'String label','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',482,'net.sourceforge.ganttproject.GanttProject.changeMenuLabel(javax.swing.JMenu,java.lang.String)',0,'/**\r\n * Change the label for menu, in fact check in the label contains a mnemonic\r\n */\r\npublic JMenu changeMenuLabel(JMenu menu, String label) {\r\n    int index = label.indexOf($);\r\n    if ((index != (-1)) && (((label.length()) - index) > 1)) {\r\n        menu.setText(label.substring(0, index).concat(label.substring((++index))));\r\n        menu.setMnemonic(Character.toLowerCase(label.charAt(index)));\r\n    } else {\r\n        menu.setText(label);\r\n        // menu.setMnemonic();\r\n    }\r\n    return menu;\r\n}'),(331,'JMenuItem menu','javax.swing.JMenuItem',0,53,'net.sourceforge.ganttproject.GanttProject',483,'net.sourceforge.ganttproject.GanttProject.changeMenuLabel(javax.swing.JMenuItem,java.lang.String)',0,'/**\r\n * Change the label for menuItem, in fact check in the label contains a\r\n * mnemonic\r\n */\r\npublic JMenuItem changeMenuLabel(JMenuItem menu, String label) {\r\n    int index = label.indexOf($);\r\n    if ((index != (-1)) && (((label.length()) - index) > 1)) {\r\n        menu.setText(label.substring(0, index).concat(label.substring((++index))));\r\n        menu.setMnemonic(Character.toLowerCase(label.charAt(index)));\r\n    } else {\r\n        menu.setText(label);\r\n        // menu.setMnemonic();\r\n    }\r\n    return menu;\r\n}'),(332,'String label','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',483,'net.sourceforge.ganttproject.GanttProject.changeMenuLabel(javax.swing.JMenuItem,java.lang.String)',0,'/**\r\n * Change the label for menuItem, in fact check in the label contains a\r\n * mnemonic\r\n */\r\npublic JMenuItem changeMenuLabel(JMenuItem menu, String label) {\r\n    int index = label.indexOf($);\r\n    if ((index != (-1)) && (((label.length()) - index) > 1)) {\r\n        menu.setText(label.substring(0, index).concat(label.substring((++index))));\r\n        menu.setMnemonic(Character.toLowerCase(label.charAt(index)));\r\n    } else {\r\n        menu.setText(label);\r\n        // menu.setMnemonic();\r\n    }\r\n    return menu;\r\n}'),(333,'JCheckBoxMenuItem menu','javax.swing.JCheckBoxMenuItem',0,53,'net.sourceforge.ganttproject.GanttProject',481,'net.sourceforge.ganttproject.GanttProject.changeMenuLabel(javax.swing.JCheckBoxMenuItem,java.lang.String)',0,'/**\r\n * Change the label for JCheckBoxmenuItem, in fact check in the label\r\n * contains a mnemonic\r\n */\r\npublic JCheckBoxMenuItem changeMenuLabel(JCheckBoxMenuItem menu, String label) {\r\n    int index = label.indexOf($);\r\n    if ((index != (-1)) && (((label.length()) - index) > 1)) {\r\n        menu.setText(label.substring(0, index).concat(label.substring((++index))));\r\n        menu.setMnemonic(Character.toLowerCase(label.charAt(index)));\r\n    } else {\r\n        menu.setText(label);\r\n        // menu.setMnemonic();\r\n    }\r\n    return menu;\r\n}'),(334,'String label','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',481,'net.sourceforge.ganttproject.GanttProject.changeMenuLabel(javax.swing.JCheckBoxMenuItem,java.lang.String)',0,'/**\r\n * Change the label for JCheckBoxmenuItem, in fact check in the label\r\n * contains a mnemonic\r\n */\r\npublic JCheckBoxMenuItem changeMenuLabel(JCheckBoxMenuItem menu, String label) {\r\n    int index = label.indexOf($);\r\n    if ((index != (-1)) && (((label.length()) - index) > 1)) {\r\n        menu.setText(label.substring(0, index).concat(label.substring((++index))));\r\n        menu.setMnemonic(Character.toLowerCase(label.charAt(index)));\r\n    } else {\r\n        menu.setText(label);\r\n        // menu.setMnemonic();\r\n    }\r\n    return menu;\r\n}'),(335,'KeyEvent e','java.awt.event.KeyEvent',0,53,'net.sourceforge.ganttproject.GanttProject',543,'net.sourceforge.ganttproject.GanttProject.keyPressed(java.awt.event.KeyEvent)',0,'/**\r\n * Invoked when a key has been pressed.\r\n */\r\npublic void keyPressed(KeyEvent e) {\r\n    // System.out.println(e.getKeyCode());\r\n    /* Consume the event to prevent it to go farther. */\r\n    int code = e.getKeyCode();\r\n    int modifiers = e.getModifiersEx();\r\n    if (code == (KeyEvent.KEY_LOCATION_UNKNOWN))\r\n        e.consume();\r\n\r\n    switch (code) {\r\n        case KeyEvent.VK_DELETE :\r\n            e.consume();\r\n            if (!(isOnlyViewer)) {\r\n                if ((getViewIndex()) == (UIFacade.GANTT_INDEX))\r\n                    deleteTasks(true);\r\n                else\r\n                    if ((getViewIndex()) == (UIFacade.RESOURCES_INDEX)) {\r\n                        deleteResources();\r\n                    }\r\n\r\n            }\r\n            break;\r\n        case KeyEvent.VK_ENTER :\r\n            break;\r\n        case KeyEvent.VK_F5 :\r\n            {\r\n                e.consume();\r\n                getActiveChart().reset();\r\n                repaint();\r\n                break;\r\n            }\r\n    }\r\n}'),(336,'KeyEvent e','java.awt.event.KeyEvent',0,53,'net.sourceforge.ganttproject.GanttProject',544,'net.sourceforge.ganttproject.GanttProject.keyReleased(java.awt.event.KeyEvent)',0,'/**\r\n * Invoked when a key has been released.\r\n */\r\npublic void keyReleased(KeyEvent e) {\r\n}'),(337,'KeyEvent e','java.awt.event.KeyEvent',0,53,'net.sourceforge.ganttproject.GanttProject',545,'net.sourceforge.ganttproject.GanttProject.keyTyped(java.awt.event.KeyEvent)',0,'/**\r\n * Invoked when a key has been typed.\r\n */\r\npublic void keyTyped(KeyEvent e) {\r\n}'),(338,'String msg','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',532,'net.sourceforge.ganttproject.GanttProject.getToolTip(java.lang.String)',0,'/**\r\n * Return the tooltip in html (with yello bgcolor\r\n */\r\npublic static String getToolTip(String msg) {\r\n    return (\"<html><body bgcolor=#EAEAEA>\" + msg) + \"</body></html>\";\r\n}'),(339,'JToolBar toolBar','javax.swing.JToolBar',0,53,'net.sourceforge.ganttproject.GanttProject',475,'net.sourceforge.ganttproject.GanttProject.addButtons(javax.swing.JToolBar)',0,'/**\r\n * Create the button on toolbar\r\n */\r\npublic void addButtons(JToolBar toolBar) {\r\n    // toolBar.addSeparator(new Dimension(20,0));\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    bNew = new TestGanttRolloverButton(myProjectMenu.getNewProjectAction());\r\n    bOpen = new TestGanttRolloverButton(myProjectMenu.getOpenProjectAction());\r\n    bSave = new TestGanttRolloverButton(myProjectMenu.getSaveProjectAction());\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    bImport = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(((\"/icons/import_\" + (options.getIconSize())) + \".gif\"))));\r\n    bImport.addActionListener(this);\r\n    // toolBar.add(bImport);\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    bExport = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(((\"/icons/export_\" + (options.getIconSize())) + \".gif\"))));\r\n    bExport.addActionListener(this);\r\n    // toolBar.add(bExport);\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    bPrint = new TestGanttRolloverButton(myProjectMenu.getPrintAction());\r\n    bPreviewPrint = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(((\"/icons/preview_\" + (options.getIconSize())) + \".gif\"))));\r\n    bPreviewPrint.addActionListener(this);\r\n    // toolBar.add(bPrint);\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // toolBar.addSeparator(new Dimension(20,0));\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    bComparePrev = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(((\"/icons/comparePrev_\" + (options.getIconSize())) + \".gif\"))));\r\n    bComparePrev.setEnabled(false);\r\n    bComparePrev.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            compareToPreviousState();\r\n            if ((myPreviousStates.size()) == 0)\r\n                bComparePrev.setEnabled(false);\r\n\r\n        }\r\n    });\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    bSaveCurrent = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(((\"/icons/saveCurrentAsPrev_\" + (options.getIconSize())) + \".gif\"))));\r\n    bSaveCurrent.setEnabled(false);\r\n    bSaveCurrent.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            saveAsPreviousState();\r\n        }\r\n    });\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    bCut = new TestGanttRolloverButton(getCutAction());\r\n    bCopy = new TestGanttRolloverButton(getCopyAction());\r\n    bPaste = new TestGanttRolloverButton(getPasteAction());\r\n    myNewArtefactAction = new NewArtefactAction(new NewArtefactAction.ActiveActionProvider() {\r\n        public AbstractAction getActiveAction() {\r\n            return (getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX) ? ((AbstractAction) (myNewTaskAction)) : ((AbstractAction) (myNewHumanAction));\r\n        }\r\n    }, options.getIconSize());\r\n    bNewTask = new TestGanttRolloverButton(myNewArtefactAction);\r\n    myRolloverActions.add(myNewArtefactAction);\r\n    bDelete = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(((\"/icons/delete_\" + (options.getIconSize())) + \".gif\"))));\r\n    bDelete.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            if ((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) {\r\n                // Gantt\r\n                // Chart\r\n                // deleteTask();\r\n                deleteTasks(true);\r\n            } else\r\n                if ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX)) {\r\n                    // Resource\r\n                    // chart\r\n                    final ProjectResource[] context = getResourcePanel().getContext().getResources();\r\n                    if ((context.length) > 0) {\r\n                        UIFacade.Choice choice = getUIFacade().showConfirmationDialog((((getLanguage().getText(\"msg6\")) + (getDisplayName(context))) + \"?\"), getLanguage().getText(\"question\"));\r\n                        if (choice == (UIFacade.Choice.YES)) {\r\n                            getUndoManager().undoableEdit(\"Delete Human OK\", new Runnable() {\r\n                                public void run() {\r\n                                    for (int i = 0; i < (context.length); i++) {\r\n                                        context[i].delete();\r\n                                    }\r\n                                }\r\n                            });\r\n                            repaint2();\r\n                            refreshProjectInfos();\r\n                        }\r\n                    }\r\n                }\r\n\r\n        }\r\n    });\r\n    // if(!isOnlyViewer) toolBar.add(bDelete);\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    bProperties = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(((\"/icons/properties_\" + (options.getIconSize())) + \".gif\"))));\r\n    bProperties.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            if ((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) {\r\n                // Gantt\r\n                // Chart\r\n                propertiesTask();\r\n            } else\r\n                if ((getTabs().getSelectedIndex()) == (UIFacade.RESOURCES_INDEX)) {\r\n                    // Resource\r\n                    // chart\r\n                    getResourcePanel().getResourcePropertiesAction().actionPerformed(null);\r\n                }\r\n\r\n        }\r\n    });\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ScrollingManager scrollingManager = getScrollingManager();\r\n    scrollingManager.addScrollingListener(area.getViewState());\r\n    scrollingManager.addScrollingListener(getResourcePanel().area.getViewState());\r\n    Action scrollLeft = new ScrollGanttChartLeftAction(scrollingManager, options.getIconSize());\r\n    myRolloverActions.add(scrollLeft);\r\n    bPrev = new TestGanttRolloverButton(scrollLeft);\r\n    bPrev.setAutoRepeatMousePressedEvent(300);\r\n    // toolBar.add(bPrev);\r\n    Action scrollCenter = area.getScrollCenterAction(scrollingManager, Mediator.getTaskSelectionManager(), options.getIconSize());\r\n    myRolloverActions.add(scrollCenter);\r\n    bScrollCenter = new TestGanttRolloverButton(scrollCenter);\r\n    bScrollCenter.setAutoRepeatMousePressedEvent(300);\r\n    // toolBar.add(bScrollCenter);\r\n    Action scrollRight = new ScrollGanttChartRightAction(scrollingManager, options.getIconSize());\r\n    myRolloverActions.add(scrollRight);\r\n    bNext = new TestGanttRolloverButton(scrollRight);\r\n    bNext.setAutoRepeatMousePressedEvent(300);\r\n    // toolBar.add(bNext);\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Action zoomOut = new ZoomOutAction(getZoomManager(), options.getIconSize());\r\n    myRolloverActions.add(zoomOut);\r\n    bZoomOut = new TestGanttRolloverButton(zoomOut);\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    Action zoomIn = new ZoomInAction(getZoomManager(), options.getIconSize());\r\n    myRolloverActions.add(zoomIn);\r\n    bZoomIn = new TestGanttRolloverButton(zoomIn);\r\n    // toolBar.add(bZoomIn);\r\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    bAbout = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(((\"/icons/manual_\" + (options.getIconSize())) + \".gif\"))));\r\n    bAbout.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            aboutDialog();\r\n        }\r\n    });\r\n    Action undo = new UndoAction(getUndoManager(), options.getIconSize(), this);\r\n    myRolloverActions.add(undo);\r\n    bUndo = new TestGanttRolloverButton(undo);\r\n    Action redo = new RedoAction(getUndoManager(), options.getIconSize(), this);\r\n    myRolloverActions.add(redo);\r\n    bRedo = new TestGanttRolloverButton(redo);\r\n    Action critic = new CalculateCriticalPathAction(getTaskManager(), tree, options, getUIConfiguration(), this);\r\n    myRolloverActions.add(critic);\r\n    bCritical = new TestGanttRolloverButton(critic);\r\n    bRefresh = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(((\"/icons/refresh_\" + (options.getIconSize())) + \".gif\"))));\r\n    bRefresh.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            getUIFacade().setStatusText(GanttLanguage.getInstance().getText(\"refresh\"));\r\n            getUIFacade().refresh();\r\n        }\r\n    });\r\n    bShowHiddens = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/showHiddens.gif\")));\r\n    bShowHiddens.addActionListener(this);\r\n    iconList = initIconList();\r\n    deletedIconList = initDeletedIconList();\r\n    addButtons();\r\n    applyButtonOptions();\r\n}'),(340,'Object[] objs','java.lang.Object[]',0,53,'net.sourceforge.ganttproject.GanttProject',506,'net.sourceforge.ganttproject.GanttProject.getDisplayName(java.lang.Object[])',0,'private String getDisplayName(Object[] objs) {\r\n    if ((objs.length) == 1) {\r\n        return objs[0].toString();\r\n    }\r\n    StringBuffer result = new StringBuffer();\r\n    for (int i = 0; i < (objs.length); i++) {\r\n        result.append(objs[i].toString());\r\n        if (i < ((objs.length) - 1)) {\r\n            result.append(\", \");\r\n        }\r\n    }\r\n    return result.toString();\r\n}'),(341,'WindowEvent evt','java.awt.event.WindowEvent',0,53,'net.sourceforge.ganttproject.GanttProject',497,'net.sourceforge.ganttproject.GanttProject.exitForm(java.awt.event.WindowEvent)',0,'/**\r\n * Exit the Application\r\n */\r\nprivate void exitForm(WindowEvent evt) {\r\n    quitApplication();\r\n}'),(342,'ActionEvent evt','java.awt.event.ActionEvent',0,53,'net.sourceforge.ganttproject.GanttProject',472,'net.sourceforge.ganttproject.GanttProject.actionPerformed(java.awt.event.ActionEvent)',0,'/**\r\n * A menu has been activate\r\n */\r\npublic void actionPerformed(ActionEvent evt) {\r\n    if ((evt.getSource()) instanceof JMenuItem) {\r\n        String arg = evt.getActionCommand();\r\n        // /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        if (arg.equals(language.getText(\"hideTask\"))) {\r\n            tree.hideSelectedNodes();\r\n        } else\r\n            if (arg.equals(language.getText(\"displayHiddenTasks\"))) {\r\n                tree.displayHiddenTasks();\r\n            } else// /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n                if (arg.equals(GanttProject.correctLabel(language.getText(\"preview\")))) {\r\n                    previewPrint();\r\n                } else// /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n                    if (arg.equals(GanttProject.correctLabel(language.getText(\"deleteTask\")))) {\r\n                        deleteTasks(true);\r\n                    } else// /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n                        if (arg.equals(GanttProject.correctLabel(language.getText(\"editCalendars\")))) {\r\n                            GanttDialogCalendar dialogCalendar = new GanttDialogCalendar(this);\r\n                            dialogCalendar.show();\r\n                        } else// /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n                            if (arg.equals(GanttProject.correctLabel(language.getText(\"projectCalendar\")))) {\r\n                                System.out.println(\"Project calendar\");\r\n                            } else// /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n                                if (arg.equals(GanttProject.correctLabel(language.getText(\"webPage\")))) {\r\n                                    try {\r\n                                        openWebPage();\r\n                                    } catch (Exception e) {\r\n                                        System.err.println(e);\r\n                                    }\r\n                                } else// /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n                                    if (arg.equals(GanttProject.correctLabel(language.getText(\"tipsOfTheDay\")))) {\r\n                                        TipsDialog tips = new TipsDialog(this, options.getOpenTips());\r\n                                        tips.show();\r\n                                    } else// /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n                                        if (arg.equals(GanttProject.correctLabel(language.getText(\"manual\")))) {\r\n                                            if ((helpFrame) == null) {\r\n                                                try {\r\n                                                    helpFrame = new MainFrame(\"/docs/help/\", \"eclipse\");\r\n                                                    // Other sort of manual\r\n                                                    String sl = language.getText(\"shortLanguage\");\r\n                                                    if ((sl.equals(\"fr\")) || (sl.equals(\"bg\")))\r\n                                                        helpFrame = new MainFrame(((\"/docs/help_\" + sl) + \"/\"), \"eclipse\");\r\n\r\n                                                    helpFrame.setTitle(language.getText(\"ganttManual\"));\r\n                                                    ImageIcon icon = new ImageIcon(getClass().getResource(\"/icons/ganttproject.png\"));\r\n                                                    helpFrame.setIconImage(icon.getImage());\r\n                                                    helpFrame.setSize(((int) ((Toolkit.getDefaultToolkit().getScreenSize().getWidth()) * 0.75)), ((int) ((Toolkit.getDefaultToolkit().getScreenSize().getHeight()) * 0.75)));\r\n                                                    helpFrame.setLocationRelativeTo(null);\r\n                                                } catch (Exception e) {\r\n                                                }\r\n                                            }\r\n                                            helpFrame.setVisible(true);\r\n                                        } else// /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n                                            if (arg.equals(GanttProject.correctLabel(language.getText(\"about\")))) {\r\n                                                aboutDialog();\r\n                                            } else// /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n                                                if (arg.equals(GanttProject.correctLabel(language.getText(\"sendMail\")))) {\r\n                                                    getTabs().setSelectedIndex(1);\r\n                                                    getResourcePanel().sendMail(this);\r\n                                                } else\r\n                                                    if (arg.equals(GanttProject.correctLabel(language.getText(\"settings\")))) {\r\n                                                        launchOptionsDialog();\r\n                                                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    } else\r\n        if ((evt.getSource()) instanceof Document) {\r\n            if (checkCurrentProject()) {\r\n                final ActionEvent ae = evt;\r\n                getUndoManager().undoableEdit(\"StartupDocument\", new Runnable() {\r\n                    public void run() {\r\n                        openStartupDocument(((Document) (ae.getSource())));\r\n                    }\r\n                });\r\n            }\r\n        } else // //////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        // Test if its buttons actions\r\n        {\r\n            if ((evt.getSource()) == (bImport)) {\r\n                // import\r\n                ImportFileWizardImpl wizard = new ImportFileWizardImpl(this.getUIFacade(), this);\r\n                wizard.show();\r\n            } else\r\n                if ((evt.getSource()) == (bPreviewPrint)) {\r\n                    // print\r\n                    previewPrint();\r\n                } else\r\n                    if ((evt.getSource()) == (bShowHiddens)) {\r\n                        showHiddenButtonsPaneMenu();\r\n                    }\r\n\r\n\r\n        }\r\n\r\n    // repaint();\r\n}'),(343,'boolean confirmation','boolean',0,53,'net.sourceforge.ganttproject.GanttProject',496,'net.sourceforge.ganttproject.GanttProject.deleteTasks(boolean)',0,'/**\r\n * Delete the currant task\r\n *\r\n * @param confirmation\r\n * 		TODO\r\n */\r\npublic void deleteTasks(boolean confirmation) {\r\n    getTabs().setSelectedIndex(UIFacade.GANTT_INDEX);\r\n    final DefaultMutableTreeNode[] cdmtn = tree.getSelectedNodes();\r\n    if ((cdmtn == null) || ((cdmtn.length) == 0)) {\r\n        getUIFacade().setStatusText(language.getText(\"msg21\"));\r\n        return;\r\n    }\r\n    UIFacade.Choice choice = getUIFacade().showConfirmationDialog(language.getText(\"msg19\"), language.getText(\"question\"));\r\n    if (choice == (UIFacade.Choice.YES)) {\r\n        getUndoManager().undoableEdit(\"Task removed\", new Runnable() {\r\n            public void run() {\r\n                ArrayList fathers = new ArrayList();\r\n                tree.stopEditing();\r\n                for (int i = 0; i < (cdmtn.length); i++) {\r\n                    if (((cdmtn[i]) != null) && ((cdmtn[i]) instanceof TaskNode)) {\r\n                        Task ttask = ((Task) (cdmtn[i].getUserObject()));\r\n                        getTaskManager().deleteTask(ttask);\r\n                        ttask.delete();\r\n                        DefaultMutableTreeNode father = tree.getFatherNode(ttask);\r\n                        tree.removeCurrentNode(cdmtn[i]);\r\n                        if (father != null) {\r\n                            GanttTask taskFather = ((GanttTask) (father.getUserObject()));\r\n                            AdjustTaskBoundsAlgorithm alg = getTaskManager().getAlgorithmCollection().getAdjustTaskBoundsAlgorithm();\r\n                            alg.run(taskFather);\r\n                            // taskFather.refreshDateAndAdvancement(tree);\r\n                            father.setUserObject(taskFather);\r\n                            fathers.add(father);\r\n                        }\r\n                    } else\r\n                        if (((cdmtn[i]) != null) && ((cdmtn[i]) instanceof BlankLineNode)) {\r\n                            ((GanttTreeTableModel) (tree.getTreeTable().getTreeTableModel())).removeNodeFromParent(cdmtn[i]);\r\n                        }\r\n\r\n                }\r\n                for (int i = 0; i < (fathers.size()); i++) {\r\n                    DefaultMutableTreeNode father = ((DefaultMutableTreeNode) (fathers.get(i)));\r\n                    if ((father.getChildCount()) == 0)\r\n                        ((Task) (father.getUserObject())).setProjectTask(false);\r\n\r\n                }\r\n            }\r\n        });\r\n        refreshProjectInfos();\r\n        area.repaint();\r\n        this.repaint2();\r\n        getResourcePanel().area.repaint();\r\n        setAskForSave(true);\r\n        // setQuickSave (true);\r\n        // quickSave(\"deleteTasks\");\r\n    }\r\n}'),(344,'Document document','net.sourceforge.ganttproject.document.Document',233,53,'net.sourceforge.ganttproject.GanttProject',551,'net.sourceforge.ganttproject.GanttProject.open(net.sourceforge.ganttproject.document.Document)',0,'public void open(Document document) throws IOException {\r\n    openDocument(document);\r\n    if ((document.getPortfolio()) != null) {\r\n        Document defaultDocument = document.getPortfolio().getDefaultDocument();\r\n        openDocument(defaultDocument);\r\n    }\r\n}'),(345,'Document document','net.sourceforge.ganttproject.document.Document',233,53,'net.sourceforge.ganttproject.GanttProject',552,'net.sourceforge.ganttproject.GanttProject.openDocument(net.sourceforge.ganttproject.document.Document)',0,'private void openDocument(Document document) throws IOException {\r\n    if ((document.getDescription().toLowerCase().endsWith(\".xml\")) || (document.getDescription().toLowerCase().endsWith(\".gan\"))) {\r\n        boolean locked = document.acquireLock();\r\n        if (!locked) {\r\n            getUIFacade().logErrorMessage(new Exception(language.getText(\"msg13\")));\r\n        }\r\n        document.read();\r\n        if (documentsMRU.add(document)) {\r\n            updateMenuMRU();\r\n        }\r\n        if (locked) {\r\n            projectDocument = document;\r\n        }\r\n        this.setTitle(((((language.getText(\"appliTitle\")) + \" [\") + (document.getDescription())) + \"]\"));\r\n        setAskForSave(false);\r\n        if ((myPreviousStates.size()) != 0) {\r\n            bComparePrev.setEnabled(true);\r\n        }\r\n    } else {\r\n        String errorMessage = ((language.getText(\"msg2\")) + \"\n\") + (document.getDescription());\r\n        throw new IOException(errorMessage);\r\n    }\r\n    Chart[] charts = Mediator.getPluginManager().getCharts();\r\n    for (int i = 0; i < (charts.length); i++) {\r\n        charts[i].setTaskManager(myTaskManager);\r\n        charts[i].reset();\r\n    }\r\n    // myDelayManager.fireDelayObservation(); // it is done in repaint2\r\n    addMouseListenerToAllContainer(this.getComponents());\r\n    getTaskManager().processCriticalPath(((TaskNode) (tree.getRoot())));\r\n    ArrayList projectTasks = tree.getProjectTasks();\r\n    if ((projectTasks.size()) != 0)\r\n        for (int i = 0; i < (projectTasks.size()); i++)\r\n            getTaskManager().processCriticalPath(((TaskNode) (projectTasks.get(i))));\r\n\r\n\r\n    // repaint2();\r\n}'),(346,'String path','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',554,'net.sourceforge.ganttproject.GanttProject.openStartupDocument(java.lang.String)',0,'public void openStartupDocument(String path) {\r\n    if (path != null) {\r\n        final Document document = getDocumentManager().getDocument(path);\r\n        // openStartupDocument(document);\r\n        getUndoManager().undoableEdit(\"OpenFile\", new Runnable() {\r\n            public void run() {\r\n                try {\r\n                    getProjectUIFacade().openProject(document, getProject());\r\n                } catch (IOException e) {\r\n                    if (!(tryImportDocument(document))) {\r\n                        getUIFacade().showErrorDialog(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}'),(347,'Document document','net.sourceforge.ganttproject.document.Document',233,53,'net.sourceforge.ganttproject.GanttProject',592,'net.sourceforge.ganttproject.GanttProject.tryImportDocument(net.sourceforge.ganttproject.document.Document)',0,'private boolean tryImportDocument(Document document) {\r\n    boolean success = false;\r\n    Importer[] importers = ((Importer[]) (Mediator.getPluginManager().getExtensions(Importer.EXTENSION_POINT_ID, Importer.class)));\r\n    for (int i = 0; i < (importers.length); i++) {\r\n        Importer nextImporter = importers[i];\r\n        if (Pattern.matches(((\".*(\" + (nextImporter.getFileNamePattern())) + \")$\"), document.getFilePath())) {\r\n            try {\r\n                nextImporter.run(this, getUIFacade(), new File(document.getFilePath()), false);\r\n                success = true;\r\n                break;\r\n            } catch (Throwable e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return success;\r\n}'),(348,'Document document','net.sourceforge.ganttproject.document.Document',233,53,'net.sourceforge.ganttproject.GanttProject',555,'net.sourceforge.ganttproject.GanttProject.openStartupDocument(net.sourceforge.ganttproject.document.Document)',0,'private void openStartupDocument(Document document) {\r\n    try {\r\n        getProjectUIFacade().openProject(document, getProject());\r\n    } catch (IOException e) {\r\n        getUIFacade().showErrorDialog(e);\r\n    }\r\n}'),(349,'String newWorkDir','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',485,'net.sourceforge.ganttproject.GanttProject.changeWorkingDirectory(java.lang.String)',0,'public void changeWorkingDirectory(String newWorkDir) {\r\n    if (null != newWorkDir)\r\n        options.setWorkingDirectory(newWorkDir);\r\n\r\n}'),(350,'boolean afs','boolean',0,53,'net.sourceforge.ganttproject.GanttProject',575,'net.sourceforge.ganttproject.GanttProject.setAskForSave(boolean)',0,'// change by G. Herrmann\r\npublic void setAskForSave(boolean afs) {\r\n    if (isOnlyViewer)\r\n        return;\r\n\r\n    fireProjectModified(afs);\r\n    String title = getTitle();\r\n    // String last = title.substring(title.length() - 11, title.length());\r\n    if ((getTabs().getSelectedIndex()) == (UIFacade.GANTT_INDEX)) {\r\n        if (afs)\r\n            bSaveCurrent.setEnabled(afs);\r\n\r\n        if ((myPreviousStates.size()) != 0)\r\n            bComparePrev.setEnabled(true);\r\n\r\n    }\r\n    askForSave = afs;\r\n    try {\r\n        if ((System.getProperty(\"mrj.version\")) != null) {\r\n            rootPane.putClientProperty(\"windowModified\", Boolean.valueOf(afs));\r\n            // see http://developer.apple.com/qa/qa2001/qa1146.html\r\n        } else {\r\n            if (askForSave) {\r\n                /* if (!last.equals(\" (modified)\")) { setTitle(getTitle() + \"\n                (modified)\"); }\n                 */\r\n                if (!(title.endsWith(\" *\"))) {\r\n                    setTitle(((getTitle()) + \" *\"));\r\n                }\r\n            }\r\n        }\r\n    } catch (AccessControlException e) {\r\n        // This can happen when running in a sandbox (Java WebStart)\r\n        System.err.println(((e + \": \") + (e.getMessage())));\r\n    }\r\n}'),(351,'String[] arg','java.lang.String[]',0,53,'net.sourceforge.ganttproject.GanttProject',547,'net.sourceforge.ganttproject.GanttProject.main(java.lang.String[])',0,'/**\r\n * The main\r\n */\r\npublic static void main(String[] arg) {\r\n    CommandLineExportApplication cmdlineApplication = new CommandLineExportApplication();\r\n    HashMap parsedArgs = new HashMap();\r\n    String argName = \"\";\r\n    for (int i = 0; i < (arg.length); i++) {\r\n        String nextWord = arg[i];\r\n        if ((nextWord.charAt(0)) == -) {\r\n            if ((argName.length()) != 0) {\r\n                parsedArgs.put(argName, Collections.EMPTY_LIST);\r\n            }\r\n            argName = nextWord.toLowerCase();\r\n        } else {\r\n            List values = ((List) (parsedArgs.get(argName)));\r\n            if ((values == null) || (values == (Collections.EMPTY_LIST))) {\r\n                values = new ArrayList();\r\n                parsedArgs.put(argName, values);\r\n            }\r\n            values.add(nextWord);\r\n            if (!(cmdlineApplication.getCommandLineFlags().contains(argName))) {\r\n                argName = \"\";\r\n            }\r\n        }\r\n    }\r\n    if (((argName.length()) > 0) && (!(parsedArgs.containsKey(argName)))) {\r\n        parsedArgs.put(argName, Collections.EMPTY_LIST);\r\n    }\r\n    if ((parsedArgs.containsKey(\"-h\")) || (parsedArgs.containsKey(\"--help\"))) {\r\n        GanttProject.usage();\r\n        System.exit(0);\r\n    }\r\n    if (parsedArgs.containsKey(\"-log\")) {\r\n        List values = ((List) (parsedArgs.get(\"-log\")));\r\n        String logFileName = (values.isEmpty()) ? (System.getProperty(\"user.home\")) + \"/.ganttproject.log\" : String.valueOf(values.get(0));\r\n        File logFile = new File(logFileName);\r\n        try {\r\n            System.setErr(new PrintStream(new FileOutputStream(logFile)));\r\n            System.out.println((\"Writing log to \" + (logFile.getAbsolutePath())));\r\n        } catch (FileNotFoundException e) {\r\n            System.err.println((\"Failed to redirect error log to file=\" + logFileName));\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    if (false == (cmdlineApplication.export(parsedArgs))) {\r\n        GanttSplash splash = new GanttSplash();\r\n        try {\r\n            splash.setVisible(true);\r\n            GanttProject ganttFrame = new GanttProject(false);\r\n            System.err.println(\"Main frame created\");\r\n            String startupDocument = null;\r\n            if (parsedArgs.containsKey(\"\")) {\r\n                List values = ((List) (parsedArgs.get(\"\")));\r\n                startupDocument = ((String) (values.get(0)));\r\n            } else\r\n                if (parsedArgs.containsKey(\"-open\")) {\r\n                    List values = ((List) (parsedArgs.get(\"-open\")));\r\n                    startupDocument = (values.isEmpty()) ? null : ((String) (values.get(0)));\r\n                }\r\n\r\n            if (startupDocument != null) {\r\n                ganttFrame.openStartupDocument(startupDocument);\r\n            }\r\n            ganttFrame.setVisible(true);\r\n            if (System.getProperty(\"os.name\").toLowerCase().startsWith(\"mac os x\")) {\r\n                OSXAdapter.registerMacOSXApplication(ganttFrame);\r\n            }\r\n        } catch (Throwable e) {\r\n            e.printStackTrace();\r\n            return;\r\n        } finally {\r\n            splash.close();\r\n            System.err.println(\"Splash closed\");\r\n        }\r\n    }\r\n}'),(352,'String projectName','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',585,'net.sourceforge.ganttproject.GanttProject.setProjectName(java.lang.String)',0,'public void setProjectName(String projectName) {\r\n    prjInfos._sProjectName = projectName;\r\n    setAskForSave(true);\r\n}'),(353,'String description','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',577,'net.sourceforge.ganttproject.GanttProject.setDescription(java.lang.String)',0,'public void setDescription(String description) {\r\n    prjInfos._sDescription = description;\r\n    setAskForSave(true);\r\n}'),(354,'String organization','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',584,'net.sourceforge.ganttproject.GanttProject.setOrganization(java.lang.String)',0,'public void setOrganization(String organization) {\r\n    prjInfos._sOrganization = organization;\r\n    setAskForSave(true);\r\n}'),(355,'String webLink','java.lang.String',0,53,'net.sourceforge.ganttproject.GanttProject',589,'net.sourceforge.ganttproject.GanttProject.setWebLink(java.lang.String)',0,'public void setWebLink(String webLink) {\r\n    prjInfos._sWebLink = webLink;\r\n    setAskForSave(true);\r\n}'),(356,'Document document','net.sourceforge.ganttproject.document.Document',233,53,'net.sourceforge.ganttproject.GanttProject',578,'net.sourceforge.ganttproject.GanttProject.setDocument(net.sourceforge.ganttproject.document.Document)',0,'public void setDocument(Document document) {\r\n    projectDocument = document;\r\n}'),(357,'boolean modified','boolean',0,53,'net.sourceforge.ganttproject.GanttProject',583,'net.sourceforge.ganttproject.GanttProject.setModified(boolean)',0,'public void setModified(boolean modified) {\r\n    setAskForSave(modified);\r\n}'),(358,'ResourceEvent event','net.sourceforge.ganttproject.resource.ResourceEvent',508,53,'net.sourceforge.ganttproject.GanttProject',566,'net.sourceforge.ganttproject.GanttProject.resourceAdded(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'// ///////////////////////////////////////////////////////////////\r\n// ResourceView implementation\r\npublic void resourceAdded(ResourceEvent event) {\r\n    if ((getStatusBar()) != null) {\r\n        // tabpane.setSelectedIndex(1);\r\n        getUIFacade().setStatusText(GanttLanguage.getInstance().correctLabel(GanttLanguage.getInstance().getText(\"newHuman\")));\r\n        setAskForSave(true);\r\n        refreshProjectInfos();\r\n    }\r\n}'),(359,'ResourceEvent event','net.sourceforge.ganttproject.resource.ResourceEvent',508,53,'net.sourceforge.ganttproject.GanttProject',569,'net.sourceforge.ganttproject.GanttProject.resourcesRemoved(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'public void resourcesRemoved(ResourceEvent event) {\r\n    refreshProjectInfos();\r\n    setAskForSave(true);\r\n}'),(360,'ResourceEvent e','net.sourceforge.ganttproject.resource.ResourceEvent',508,53,'net.sourceforge.ganttproject.GanttProject',568,'net.sourceforge.ganttproject.GanttProject.resourceChanged(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'public void resourceChanged(ResourceEvent e) {\r\n    setAskForSave(true);\r\n}'),(361,'ResourceEvent e','net.sourceforge.ganttproject.resource.ResourceEvent',508,53,'net.sourceforge.ganttproject.GanttProject',567,'net.sourceforge.ganttproject.GanttProject.resourceAssignmentsChanged(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'public void resourceAssignmentsChanged(ResourceEvent e) {\r\n    setAskForSave(true);\r\n}'),(362,'int location','int',0,53,'net.sourceforge.ganttproject.GanttProject',579,'net.sourceforge.ganttproject.GanttProject.setGanttDividerLocation(int)',0,'public void setGanttDividerLocation(int location) {\r\n    myGanttChartTabContent.setDividerLocation(location);\r\n}'),(363,'int location','int',0,53,'net.sourceforge.ganttproject.GanttProject',586,'net.sourceforge.ganttproject.GanttProject.setResourceDividerLocation(int)',0,'public void setResourceDividerLocation(int location) {\r\n    getResourcePanel().setDividerLocation(location);\r\n}'),(364,'int value','int',0,53,'net.sourceforge.ganttproject.GanttProject',587,'net.sourceforge.ganttproject.GanttProject.setRowHeight(int)',0,'public void setRowHeight(int value) {\r\n    tree.getTreeTable().getTable().setRowHeight(value);\r\n}'),(365,'DefaultListModel buttonList','javax.swing.DefaultListModel',0,53,'net.sourceforge.ganttproject.GanttProject',484,'net.sourceforge.ganttproject.GanttProject.changeOrder(javax.swing.DefaultListModel,javax.swing.DefaultListModel)',0,'public void changeOrder(DefaultListModel buttonList, DefaultListModel deletedButtonList) {\r\n    iconList = new DefaultListModel();\r\n    for (int i = 0; i < (buttonList.size()); i++)\r\n        iconList.addElement(buttonList.getElementAt(i));\r\n\r\n    deletedIconList = new DefaultListModel();\r\n    for (int i = 0; i < (deletedButtonList.size()); i++)\r\n        deletedIconList.addElement(deletedButtonList.getElementAt(i));\r\n\r\n    addButtons();\r\n    options.setIconList(getIconPositions(iconList));\r\n    options.setDeletedIconList(getIconPositions(deletedIconList));\r\n    setHiddens();\r\n    refresh();\r\n}'),(366,'DefaultListModel deletedButtonList','javax.swing.DefaultListModel',0,53,'net.sourceforge.ganttproject.GanttProject',484,'net.sourceforge.ganttproject.GanttProject.changeOrder(javax.swing.DefaultListModel,javax.swing.DefaultListModel)',0,'public void changeOrder(DefaultListModel buttonList, DefaultListModel deletedButtonList) {\r\n    iconList = new DefaultListModel();\r\n    for (int i = 0; i < (buttonList.size()); i++)\r\n        iconList.addElement(buttonList.getElementAt(i));\r\n\r\n    deletedIconList = new DefaultListModel();\r\n    for (int i = 0; i < (deletedButtonList.size()); i++)\r\n        deletedIconList.addElement(deletedButtonList.getElementAt(i));\r\n\r\n    addButtons();\r\n    options.setIconList(getIconPositions(iconList));\r\n    options.setDeletedIconList(getIconPositions(deletedIconList));\r\n    setHiddens();\r\n    refresh();\r\n}'),(367,'DefaultListModel list','javax.swing.DefaultListModel',0,53,'net.sourceforge.ganttproject.GanttProject',512,'net.sourceforge.ganttproject.GanttProject.getIconPositions(javax.swing.DefaultListModel)',0,'private String getIconPositions(DefaultListModel list) {\r\n    String sIcons = \"\";\r\n    if (list != null) {\r\n        int i = 0;\r\n        if (list.equals(deletedIconList))\r\n            i++;\r\n\r\n        for (; i < (list.size()); i++) {\r\n            if (!(sIcons.equals(\"\")))\r\n                sIcons = sIcons + \",\";\r\n\r\n            if (list.elementAt(i).equals(GPToolBar.SEPARATOR_OBJECT))\r\n                sIcons = sIcons + (GanttOptions.SEPARATOR);\r\n            else\r\n                if (((TestGanttRolloverButton) (list.elementAt(i))) == (bNew))\r\n                    sIcons = sIcons + (GanttOptions.NEW);\r\n                else\r\n                    if (((TestGanttRolloverButton) (list.elementAt(i))) == (bOpen))\r\n                        sIcons = sIcons + (GanttOptions.OPEN);\r\n                    else\r\n                        if (((TestGanttRolloverButton) (list.elementAt(i))) == (bSave))\r\n                            sIcons = sIcons + (GanttOptions.SAVE);\r\n                        else\r\n                            if (((TestGanttRolloverButton) (list.elementAt(i))) == (bImport))\r\n                                sIcons = sIcons + (GanttOptions.IMPORT);\r\n                            else\r\n                                if (((TestGanttRolloverButton) (list.elementAt(i))) == (bExport))\r\n                                    sIcons = sIcons + (GanttOptions.EXPORT);\r\n                                else\r\n                                    if (((TestGanttRolloverButton) (list.elementAt(i))) == (bPrint))\r\n                                        sIcons = sIcons + (GanttOptions.PRINT);\r\n                                    else\r\n                                        if (((TestGanttRolloverButton) (list.elementAt(i))) == (bPreviewPrint))\r\n                                            sIcons = sIcons + (GanttOptions.PREVIEWPRINT);\r\n                                        else\r\n                                            if (((TestGanttRolloverButton) (list.elementAt(i))) == (bCut))\r\n                                                sIcons = sIcons + (GanttOptions.CUT);\r\n                                            else\r\n                                                if (((TestGanttRolloverButton) (list.elementAt(i))) == (bCopy))\r\n                                                    sIcons = sIcons + (GanttOptions.COPY);\r\n                                                else\r\n                                                    if (((TestGanttRolloverButton) (list.elementAt(i))) == (bPaste))\r\n                                                        sIcons = sIcons + (GanttOptions.PASTE);\r\n                                                    else\r\n                                                        if (((TestGanttRolloverButton) (list.elementAt(i))) == (bNewTask))\r\n                                                            sIcons = sIcons + (GanttOptions.NEWTASK);\r\n                                                        else\r\n                                                            if (((TestGanttRolloverButton) (list.elementAt(i))) == (bDelete))\r\n                                                                sIcons = sIcons + (GanttOptions.DELETE);\r\n                                                            else\r\n                                                                if (((TestGanttRolloverButton) (list.elementAt(i))) == (bProperties))\r\n                                                                    sIcons = sIcons + (GanttOptions.PROPERTIES);\r\n                                                                else// else if ((TestGanttRolloverButton) list.elementAt(i) == bUnlink)\r\n                                                                // sIcons = sIcons + GanttOptions.UNLINK;\r\n                                                                // else if ((TestGanttRolloverButton) list.elementAt(i) == bLink)\r\n                                                                // sIcons = sIcons + GanttOptions.LINK;\r\n                                                                // else if ((TestGanttRolloverButton) list.elementAt(i) == bInd)\r\n                                                                // sIcons = sIcons + GanttOptions.IND;\r\n                                                                // else if ((TestGanttRolloverButton) list.elementAt(i) == bUnind)\r\n                                                                // sIcons = sIcons + GanttOptions.UNIND;\r\n                                                                // else if ((TestGanttRolloverButton) list.elementAt(i) == bUp)\r\n                                                                // sIcons = sIcons + GanttOptions.UP;\r\n                                                                // else if ((TestGanttRolloverButton) list.elementAt(i) == bDown)\r\n                                                                // sIcons = sIcons + GanttOptions.DOWN;\r\n\r\n                                                                    if (((TestGanttRolloverButton) (list.elementAt(i))) == (bPrev))\r\n                                                                        sIcons = sIcons + (GanttOptions.PREV);\r\n                                                                    else\r\n                                                                        if (((TestGanttRolloverButton) (list.elementAt(i))) == (bScrollCenter))\r\n                                                                            sIcons = sIcons + (GanttOptions.CENTER);\r\n                                                                        else\r\n                                                                            if (((TestGanttRolloverButton) (list.elementAt(i))) == (bNext))\r\n                                                                                sIcons = sIcons + (GanttOptions.NEXT);\r\n                                                                            else\r\n                                                                                if (((TestGanttRolloverButton) (list.elementAt(i))) == (bZoomOut))\r\n                                                                                    sIcons = sIcons + (GanttOptions.ZOOMOUT);\r\n                                                                                else\r\n                                                                                    if (((TestGanttRolloverButton) (list.elementAt(i))) == (bZoomIn))\r\n                                                                                        sIcons = sIcons + (GanttOptions.ZOOMIN);\r\n                                                                                    else\r\n                                                                                        if (((TestGanttRolloverButton) (list.elementAt(i))) == (bUndo))\r\n                                                                                            sIcons = sIcons + (GanttOptions.UNDO);\r\n                                                                                        else\r\n                                                                                            if (((TestGanttRolloverButton) (list.elementAt(i))) == (bRedo))\r\n                                                                                                sIcons = sIcons + (GanttOptions.REDO);\r\n                                                                                            else\r\n                                                                                                if (((TestGanttRolloverButton) (list.elementAt(i))) == (bCritical))\r\n                                                                                                    sIcons = sIcons + (GanttOptions.CRITICAL);\r\n                                                                                                else\r\n                                                                                                    if (((TestGanttRolloverButton) (list.elementAt(i))) == (bAbout))\r\n                                                                                                        sIcons = sIcons + (GanttOptions.ABOUT);\r\n                                                                                                    else\r\n                                                                                                        if (((TestGanttRolloverButton) (list.elementAt(i))) == (bSaveCurrent))\r\n                                                                                                            sIcons = sIcons + (GanttOptions.SAVECURRENT);\r\n                                                                                                        else\r\n                                                                                                            if (((TestGanttRolloverButton) (list.elementAt(i))) == (bComparePrev))\r\n                                                                                                                sIcons = sIcons + (GanttOptions.COMPAREPREV);\r\n                                                                                                            else\r\n                                                                                                                if (((TestGanttRolloverButton) (list.elementAt(i))) == (bRefresh))\r\n                                                                                                                    sIcons = sIcons + (GanttOptions.REFRESH);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n    return sIcons;\r\n}'),(368,'int icon','int',0,53,'net.sourceforge.ganttproject.GanttProject',473,'net.sourceforge.ganttproject.GanttProject.addButton(int,javax.swing.DefaultListModel)',0,'public void addButton(int icon, DefaultListModel list) {\r\n    switch (icon) {\r\n        case GanttOptions.SEPARATOR :\r\n            list.addElement(GPToolBar.SEPARATOR_OBJECT);\r\n            break;\r\n        case GanttOptions.NEW :\r\n            list.addElement(bNew);\r\n            break;\r\n        case GanttOptions.OPEN :\r\n            list.addElement(bOpen);\r\n            break;\r\n        case GanttOptions.SAVE :\r\n            list.addElement(bSave);\r\n            break;\r\n        case GanttOptions.IMPORT :\r\n            list.addElement(bImport);\r\n            break;\r\n        case GanttOptions.EXPORT :\r\n            list.addElement(bExport);\r\n            break;\r\n        case GanttOptions.PRINT :\r\n            list.addElement(bPrint);\r\n            break;\r\n        case GanttOptions.PREVIEWPRINT :\r\n            list.addElement(bPreviewPrint);\r\n            break;\r\n        case GanttOptions.CUT :\r\n            list.addElement(bCut);\r\n            break;\r\n        case GanttOptions.COPY :\r\n            list.addElement(bCopy);\r\n            break;\r\n        case GanttOptions.PASTE :\r\n            list.addElement(bPaste);\r\n            break;\r\n        case GanttOptions.NEWTASK :\r\n            list.addElement(bNewTask);\r\n            break;\r\n        case GanttOptions.DELETE :\r\n            list.addElement(bDelete);\r\n            break;\r\n        case GanttOptions.PROPERTIES :\r\n            list.addElement(bProperties);\r\n            break;\r\n        case GanttOptions.PREV :\r\n            list.addElement(bPrev);\r\n            break;\r\n        case GanttOptions.CENTER :\r\n            list.addElement(bScrollCenter);\r\n            break;\r\n        case GanttOptions.NEXT :\r\n            list.addElement(bNext);\r\n            break;\r\n        case GanttOptions.ZOOMOUT :\r\n            list.addElement(bZoomOut);\r\n            break;\r\n        case GanttOptions.ZOOMIN :\r\n            list.addElement(bZoomIn);\r\n            break;\r\n        case GanttOptions.UNDO :\r\n            list.addElement(bUndo);\r\n            break;\r\n        case GanttOptions.REDO :\r\n            list.addElement(bRedo);\r\n            break;\r\n        case GanttOptions.CRITICAL :\r\n            list.addElement(bCritical);\r\n            break;\r\n        case GanttOptions.ABOUT :\r\n            list.addElement(bAbout);\r\n            break;\r\n        case GanttOptions.SAVECURRENT :\r\n            list.addElement(bSaveCurrent);\r\n            break;\r\n        case GanttOptions.COMPAREPREV :\r\n            list.addElement(bComparePrev);\r\n            break;\r\n        case GanttOptions.REFRESH :\r\n            list.addElement(bRefresh);\r\n            break;\r\n        default :\r\n            break;\r\n    }\r\n}'),(369,'DefaultListModel list','javax.swing.DefaultListModel',0,53,'net.sourceforge.ganttproject.GanttProject',473,'net.sourceforge.ganttproject.GanttProject.addButton(int,javax.swing.DefaultListModel)',0,'public void addButton(int icon, DefaultListModel list) {\r\n    switch (icon) {\r\n        case GanttOptions.SEPARATOR :\r\n            list.addElement(GPToolBar.SEPARATOR_OBJECT);\r\n            break;\r\n        case GanttOptions.NEW :\r\n            list.addElement(bNew);\r\n            break;\r\n        case GanttOptions.OPEN :\r\n            list.addElement(bOpen);\r\n            break;\r\n        case GanttOptions.SAVE :\r\n            list.addElement(bSave);\r\n            break;\r\n        case GanttOptions.IMPORT :\r\n            list.addElement(bImport);\r\n            break;\r\n        case GanttOptions.EXPORT :\r\n            list.addElement(bExport);\r\n            break;\r\n        case GanttOptions.PRINT :\r\n            list.addElement(bPrint);\r\n            break;\r\n        case GanttOptions.PREVIEWPRINT :\r\n            list.addElement(bPreviewPrint);\r\n            break;\r\n        case GanttOptions.CUT :\r\n            list.addElement(bCut);\r\n            break;\r\n        case GanttOptions.COPY :\r\n            list.addElement(bCopy);\r\n            break;\r\n        case GanttOptions.PASTE :\r\n            list.addElement(bPaste);\r\n            break;\r\n        case GanttOptions.NEWTASK :\r\n            list.addElement(bNewTask);\r\n            break;\r\n        case GanttOptions.DELETE :\r\n            list.addElement(bDelete);\r\n            break;\r\n        case GanttOptions.PROPERTIES :\r\n            list.addElement(bProperties);\r\n            break;\r\n        case GanttOptions.PREV :\r\n            list.addElement(bPrev);\r\n            break;\r\n        case GanttOptions.CENTER :\r\n            list.addElement(bScrollCenter);\r\n            break;\r\n        case GanttOptions.NEXT :\r\n            list.addElement(bNext);\r\n            break;\r\n        case GanttOptions.ZOOMOUT :\r\n            list.addElement(bZoomOut);\r\n            break;\r\n        case GanttOptions.ZOOMIN :\r\n            list.addElement(bZoomIn);\r\n            break;\r\n        case GanttOptions.UNDO :\r\n            list.addElement(bUndo);\r\n            break;\r\n        case GanttOptions.REDO :\r\n            list.addElement(bRedo);\r\n            break;\r\n        case GanttOptions.CRITICAL :\r\n            list.addElement(bCritical);\r\n            break;\r\n        case GanttOptions.ABOUT :\r\n            list.addElement(bAbout);\r\n            break;\r\n        case GanttOptions.SAVECURRENT :\r\n            list.addElement(bSaveCurrent);\r\n            break;\r\n        case GanttOptions.COMPAREPREV :\r\n            list.addElement(bComparePrev);\r\n            break;\r\n        case GanttOptions.REFRESH :\r\n            list.addElement(bRefresh);\r\n            break;\r\n        default :\r\n            break;\r\n    }\r\n}'),(370,'int viewIndex','int',0,53,'net.sourceforge.ganttproject.GanttProject',588,'net.sourceforge.ganttproject.GanttProject.setViewIndex(int)',0,'public void setViewIndex(int viewIndex) {\r\n    if ((getTabs().getTabCount()) > viewIndex) {\r\n        getTabs().setSelectedIndex(viewIndex);\r\n    }\r\n}'),(371,'WindowListener windowListener','java.awt.event.WindowListener',0,53,'net.sourceforge.ganttproject.GanttProject',590,'net.sourceforge.ganttproject.GanttProject.setWindowListener(java.awt.event.WindowListener)',0,'public static void setWindowListener(WindowListener windowListener) {\r\n    GanttProject.ourWindowListener = windowListener;\r\n}'),(372,'GanttTabbedPane tabs','net.sourceforge.ganttproject.gui.GanttTabbedPane',311,56,'net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl',663,'net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl.-init-(net.sourceforge.ganttproject.gui.GanttTabbedPane)',0,'ViewManagerImpl(GanttTabbedPane tabs) {\r\n    myTabs = tabs;\r\n    myTabs.addChangeListener(new ChangeListener() {\r\n        public void stateChanged(ChangeEvent e) {\r\n            GanttProjectBase.GPViewImpl selectedView = ((GanttProjectBase.GPViewImpl) (myTabs.getSelectedUserObject()));\r\n            if ((mySelectedView) == selectedView) {\r\n                return;\r\n            }\r\n            if ((mySelectedView) != null) {\r\n                mySelectedView.setActive(false);\r\n            }\r\n            mySelectedView = selectedView;\r\n            mySelectedView.setActive(true);\r\n        }\r\n    });\r\n}'),(373,'GanttProjectBase.ViewManagerImpl manager','net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl',56,54,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl',655,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl.-init-(net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl,net.sourceforge.ganttproject.gui.GanttTabbedPane,java.awt.Container,net.sourceforge.ganttproject.chart.Chart,javax.swing.Icon)',0,'GPViewImpl(GanttProjectBase.ViewManagerImpl manager, GanttTabbedPane tabs, Container component, Chart chart, Icon icon) {\r\n    myManager = manager;\r\n    myTabs = tabs;\r\n    myComponent = component;\r\n    myIcon = icon;\r\n    myChart = chart;\r\n    assert (myChart) != null;\r\n}'),(374,'GanttTabbedPane tabs','net.sourceforge.ganttproject.gui.GanttTabbedPane',311,54,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl',655,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl.-init-(net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl,net.sourceforge.ganttproject.gui.GanttTabbedPane,java.awt.Container,net.sourceforge.ganttproject.chart.Chart,javax.swing.Icon)',0,'GPViewImpl(GanttProjectBase.ViewManagerImpl manager, GanttTabbedPane tabs, Container component, Chart chart, Icon icon) {\r\n    myManager = manager;\r\n    myTabs = tabs;\r\n    myComponent = component;\r\n    myIcon = icon;\r\n    myChart = chart;\r\n    assert (myChart) != null;\r\n}'),(375,'Container component','java.awt.Container',0,54,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl',655,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl.-init-(net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl,net.sourceforge.ganttproject.gui.GanttTabbedPane,java.awt.Container,net.sourceforge.ganttproject.chart.Chart,javax.swing.Icon)',0,'GPViewImpl(GanttProjectBase.ViewManagerImpl manager, GanttTabbedPane tabs, Container component, Chart chart, Icon icon) {\r\n    myManager = manager;\r\n    myTabs = tabs;\r\n    myComponent = component;\r\n    myIcon = icon;\r\n    myChart = chart;\r\n    assert (myChart) != null;\r\n}'),(376,'Chart chart','net.sourceforge.ganttproject.chart.Chart',159,54,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl',655,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl.-init-(net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl,net.sourceforge.ganttproject.gui.GanttTabbedPane,java.awt.Container,net.sourceforge.ganttproject.chart.Chart,javax.swing.Icon)',0,'GPViewImpl(GanttProjectBase.ViewManagerImpl manager, GanttTabbedPane tabs, Container component, Chart chart, Icon icon) {\r\n    myManager = manager;\r\n    myTabs = tabs;\r\n    myComponent = component;\r\n    myIcon = icon;\r\n    myChart = chart;\r\n    assert (myChart) != null;\r\n}'),(377,'Icon icon','javax.swing.Icon',0,54,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl',655,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl.-init-(net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl,net.sourceforge.ganttproject.gui.GanttTabbedPane,java.awt.Container,net.sourceforge.ganttproject.chart.Chart,javax.swing.Icon)',0,'GPViewImpl(GanttProjectBase.ViewManagerImpl manager, GanttTabbedPane tabs, Container component, Chart chart, Icon icon) {\r\n    myManager = manager;\r\n    myTabs = tabs;\r\n    myComponent = component;\r\n    myIcon = icon;\r\n    myChart = chart;\r\n    assert (myChart) != null;\r\n}'),(378,'GanttTree2 treeView','net.sourceforge.ganttproject.GanttTree2',73,55,'net.sourceforge.ganttproject.GanttProjectBase$RowHeightAligner',661,'net.sourceforge.ganttproject.GanttProjectBase$RowHeightAligner.-init-(net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.chart.ChartModelImpl)',0,'// TODO: 1.12 refactor and get rid of using concrete implementations of\r\n// gantt view model\r\n// and tree view\r\npublic RowHeightAligner(GanttTree2 treeView, ChartModelImpl ganttViewModel) {\r\n    myGanttViewModel = ganttViewModel;\r\n    myTreeView = treeView;\r\n}'),(379,'ChartModelImpl ganttViewModel','net.sourceforge.ganttproject.chart.ChartModelImpl',172,55,'net.sourceforge.ganttproject.GanttProjectBase$RowHeightAligner',661,'net.sourceforge.ganttproject.GanttProjectBase$RowHeightAligner.-init-(net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.chart.ChartModelImpl)',0,'// TODO: 1.12 refactor and get rid of using concrete implementations of\r\n// gantt view model\r\n// and tree view\r\npublic RowHeightAligner(GanttTree2 treeView, ChartModelImpl ganttViewModel) {\r\n    myGanttViewModel = ganttViewModel;\r\n    myTreeView = treeView;\r\n}'),(380,'ProjectEventListener listener','net.sourceforge.ganttproject.ProjectEventListener',88,57,'net.sourceforge.ganttproject.GanttProjectBase',606,'net.sourceforge.ganttproject.GanttProjectBase.addProjectEventListener(net.sourceforge.ganttproject.ProjectEventListener)',0,'public void addProjectEventListener(ProjectEventListener listener) {\r\n    myModifiedStateChangeListeners.add(listener);\r\n}'),(381,'ProjectEventListener listener','net.sourceforge.ganttproject.ProjectEventListener',88,57,'net.sourceforge.ganttproject.GanttProjectBase',641,'net.sourceforge.ganttproject.GanttProjectBase.removeProjectEventListener(net.sourceforge.ganttproject.ProjectEventListener)',0,'public void removeProjectEventListener(ProjectEventListener listener) {\r\n    myModifiedStateChangeListeners.remove(listener);\r\n}'),(382,'boolean isModified','boolean',0,57,'net.sourceforge.ganttproject.GanttProjectBase',609,'net.sourceforge.ganttproject.GanttProjectBase.fireProjectModified(boolean)',0,'protected void fireProjectModified(boolean isModified) {\r\n    for (int i = 0; i < (myModifiedStateChangeListeners.size()); i++) {\r\n        ProjectEventListener next = ((ProjectEventListener) (myModifiedStateChangeListeners.get(i)));\r\n        try {\r\n            if (isModified) {\r\n                next.projectModified();\r\n            } else {\r\n                next.projectSaved();\r\n            }\r\n        } catch (Exception e) {\r\n            showErrorDialog(e);\r\n        }\r\n    }\r\n}'),(383,'String text','java.lang.String',0,57,'net.sourceforge.ganttproject.GanttProjectBase',646,'net.sourceforge.ganttproject.GanttProjectBase.setStatusText(java.lang.String)',0,'public void setStatusText(String text) {\r\n    myUIFacade.setStatusText(text);\r\n}'),(384,'Component content','java.awt.Component',0,57,'net.sourceforge.ganttproject.GanttProjectBase',650,'net.sourceforge.ganttproject.GanttProjectBase.showDialog(java.awt.Component,javax.swing.Action[])',0,'public void showDialog(Component content, Action[] actions) {\r\n    myUIFacade.showDialog(content, actions);\r\n}'),(385,'Action[] actions','javax.swing.Action[]',0,57,'net.sourceforge.ganttproject.GanttProjectBase',650,'net.sourceforge.ganttproject.GanttProjectBase.showDialog(java.awt.Component,javax.swing.Action[])',0,'public void showDialog(Component content, Action[] actions) {\r\n    myUIFacade.showDialog(content, actions);\r\n}'),(386,'Component content','java.awt.Component',0,57,'net.sourceforge.ganttproject.GanttProjectBase',651,'net.sourceforge.ganttproject.GanttProjectBase.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'public void showDialog(Component content, Action[] actions, String title) {\r\n    myUIFacade.showDialog(content, actions, title);\r\n}'),(387,'Action[] actions','javax.swing.Action[]',0,57,'net.sourceforge.ganttproject.GanttProjectBase',651,'net.sourceforge.ganttproject.GanttProjectBase.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'public void showDialog(Component content, Action[] actions, String title) {\r\n    myUIFacade.showDialog(content, actions, title);\r\n}'),(388,'String title','java.lang.String',0,57,'net.sourceforge.ganttproject.GanttProjectBase',651,'net.sourceforge.ganttproject.GanttProjectBase.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'public void showDialog(Component content, Action[] actions, String title) {\r\n    myUIFacade.showDialog(content, actions, title);\r\n}'),(389,'String message','java.lang.String',0,57,'net.sourceforge.ganttproject.GanttProjectBase',649,'net.sourceforge.ganttproject.GanttProjectBase.showConfirmationDialog(java.lang.String,java.lang.String)',0,'public UIFacade.Choice showConfirmationDialog(String message, String title) {\r\n    return myUIFacade.showConfirmationDialog(message, title);\r\n}'),(390,'String title','java.lang.String',0,57,'net.sourceforge.ganttproject.GanttProjectBase',649,'net.sourceforge.ganttproject.GanttProjectBase.showConfirmationDialog(java.lang.String,java.lang.String)',0,'public UIFacade.Choice showConfirmationDialog(String message, String title) {\r\n    return myUIFacade.showConfirmationDialog(message, title);\r\n}'),(391,'String message','java.lang.String',0,57,'net.sourceforge.ganttproject.GanttProjectBase',652,'net.sourceforge.ganttproject.GanttProjectBase.showErrorDialog(java.lang.String)',0,'public void showErrorDialog(String message) {\r\n    myUIFacade.showErrorDialog(message);\r\n}'),(392,'Throwable e','java.lang.Throwable',0,57,'net.sourceforge.ganttproject.GanttProjectBase',653,'net.sourceforge.ganttproject.GanttProjectBase.showErrorDialog(java.lang.Throwable)',0,'public void showErrorDialog(Throwable e) {\r\n    myUIFacade.showErrorDialog(e);\r\n}'),(393,'Throwable e','java.lang.Throwable',0,57,'net.sourceforge.ganttproject.GanttProjectBase',639,'net.sourceforge.ganttproject.GanttProjectBase.logErrorMessage(java.lang.Throwable)',0,'public void logErrorMessage(Throwable e) {\r\n    myUIFacade.logErrorMessage(e);\r\n}'),(394,'Component invoker','java.awt.Component',0,57,'net.sourceforge.ganttproject.GanttProjectBase',654,'net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    myUIFacade.showPopupMenu(invoker, actions, x, y);\r\n}'),(395,'Action[] actions','javax.swing.Action[]',0,57,'net.sourceforge.ganttproject.GanttProjectBase',654,'net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    myUIFacade.showPopupMenu(invoker, actions, x, y);\r\n}'),(396,'int x','int',0,57,'net.sourceforge.ganttproject.GanttProjectBase',654,'net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    myUIFacade.showPopupMenu(invoker, actions, x, y);\r\n}'),(397,'int y','int',0,57,'net.sourceforge.ganttproject.GanttProjectBase',654,'net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    myUIFacade.showPopupMenu(invoker, actions, x, y);\r\n}'),(398,'String title','java.lang.String',0,57,'net.sourceforge.ganttproject.GanttProjectBase',648,'net.sourceforge.ganttproject.GanttProjectBase.setWorkbenchTitle(java.lang.String)',0,'// public void changeWorkingDirectory(File directory) {\r\n// myUIFacade.changeWorkingDirectory(directory);\r\n// }\r\npublic void setWorkbenchTitle(String title) {\r\n    myUIFacade.setWorkbenchTitle(title);\r\n}'),(399,'IAdaptable adaptable','org.eclipse.core.runtime.IAdaptable',0,56,'net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl',665,'net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl.createView(org.eclipse.core.runtime.IAdaptable,javax.swing.Icon)',0,'public GPView createView(IAdaptable adaptable, Icon icon) {\r\n    GPView view = new GanttProjectBase.GPViewImpl(this, myTabs, ((Container) (adaptable.getAdapter(Container.class))), ((Chart) (adaptable.getAdapter(Chart.class))), icon);\r\n    myViews.add(view);\r\n    return view;\r\n}'),(400,'net.sourceforge.ganttproject.GPView','net.sourceforge.ganttproject.GPView',22,56,'net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl',665,'net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl.createView(org.eclipse.core.runtime.IAdaptable,javax.swing.Icon)',1,'public GPView createView(IAdaptable adaptable, Icon icon) {\r\n    GPView view = new GanttProjectBase.GPViewImpl(this, myTabs, ((Container) (adaptable.getAdapter(Container.class))), ((Chart) (adaptable.getAdapter(Chart.class))), icon);\r\n    myViews.add(view);\r\n    return view;\r\n}'),(401,'Icon icon','javax.swing.Icon',0,56,'net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl',665,'net.sourceforge.ganttproject.GanttProjectBase$ViewManagerImpl.createView(org.eclipse.core.runtime.IAdaptable,javax.swing.Icon)',0,'public GPView createView(IAdaptable adaptable, Icon icon) {\r\n    GPView view = new GanttProjectBase.GPViewImpl(this, myTabs, ((Container) (adaptable.getAdapter(Container.class))), ((Chart) (adaptable.getAdapter(Chart.class))), icon);\r\n    myViews.add(view);\r\n    return view;\r\n}'),(402,'boolean active','boolean',0,54,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl',659,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl.setActive(boolean)',0,'public void setActive(boolean active) {\r\n    if (active) {\r\n        myChart.addSelectionListener(this);\r\n    } else {\r\n        myChart.removeSelectionListener(this);\r\n    }\r\n}'),(403,'boolean isVisible','boolean',0,54,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl',660,'net.sourceforge.ganttproject.GanttProjectBase$GPViewImpl.setVisible(boolean)',0,'public void setVisible(boolean isVisible) {\r\n    String tabName = \"New view\";\r\n    JScrollPane jsp = new JScrollPane();\r\n    if (isVisible) {\r\n        myChart.setTaskManager(this.getTaskManager());\r\n        tabName = myChart.getName();\r\n        jsp.getViewport().add(myComponent);\r\n        myTabs.addTab(tabName, myIcon, jsp, tabName, this);\r\n        myTabs.setSelectedComponent(jsp);\r\n        myIndex = myTabs.getSelectedIndex();\r\n    } else {\r\n        myTabs.remove(myIndex);\r\n    }\r\n    this.isVisible = isVisible;\r\n}'),(404,'String projectName','java.lang.String',0,57,'net.sourceforge.ganttproject.GanttProjectBase',645,'net.sourceforge.ganttproject.GanttProjectBase.setProjectName(java.lang.String)',0,'public abstract void setProjectName(String projectName);'),(405,'String description','java.lang.String',0,57,'net.sourceforge.ganttproject.GanttProjectBase',642,'net.sourceforge.ganttproject.GanttProjectBase.setDescription(java.lang.String)',0,'public abstract void setDescription(String description);'),(406,'String organization','java.lang.String',0,57,'net.sourceforge.ganttproject.GanttProjectBase',644,'net.sourceforge.ganttproject.GanttProjectBase.setOrganization(java.lang.String)',0,'public abstract void setOrganization(String organization);'),(407,'String webLink','java.lang.String',0,57,'net.sourceforge.ganttproject.GanttProjectBase',647,'net.sourceforge.ganttproject.GanttProjectBase.setWebLink(java.lang.String)',0,'public abstract void setWebLink(String webLink);'),(408,'ResourceManager resourceManager','net.sourceforge.ganttproject.resource.ResourceManager',509,58,'net.sourceforge.ganttproject.GanttProjectImpl$TaskManagerConfigImpl',706,'net.sourceforge.ganttproject.GanttProjectImpl$TaskManagerConfigImpl.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.language.GanttLanguage)',0,'private TaskManagerConfigImpl(ResourceManager resourceManager, GanttLanguage i18n) {\r\n    myResourceManager = resourceManager;\r\n    myTimeUnitStack = new GPTimeUnitStack(i18n);\r\n    myCalendar = new WeekendCalendarImpl();\r\n}'),(409,'GanttLanguage i18n','net.sourceforge.ganttproject.language.GanttLanguage',461,58,'net.sourceforge.ganttproject.GanttProjectImpl$TaskManagerConfigImpl',706,'net.sourceforge.ganttproject.GanttProjectImpl$TaskManagerConfigImpl.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.language.GanttLanguage)',0,'private TaskManagerConfigImpl(ResourceManager resourceManager, GanttLanguage i18n) {\r\n    myResourceManager = resourceManager;\r\n    myTimeUnitStack = new GPTimeUnitStack(i18n);\r\n    myCalendar = new WeekendCalendarImpl();\r\n}'),(410,'String projectName','java.lang.String',0,59,'net.sourceforge.ganttproject.GanttProjectImpl',704,'net.sourceforge.ganttproject.GanttProjectImpl.setProjectName(java.lang.String)',0,'public void setProjectName(String projectName) {\r\n    myProjectName = projectName;\r\n}'),(411,'String description','java.lang.String',0,59,'net.sourceforge.ganttproject.GanttProjectImpl',699,'net.sourceforge.ganttproject.GanttProjectImpl.setDescription(java.lang.String)',0,'public void setDescription(String description) {\r\n    myDescription = description;\r\n}'),(412,'String organization','java.lang.String',0,59,'net.sourceforge.ganttproject.GanttProjectImpl',703,'net.sourceforge.ganttproject.GanttProjectImpl.setOrganization(java.lang.String)',0,'public void setOrganization(String organization) {\r\n    myOrganization = organization;\r\n}'),(413,'String webLink','java.lang.String',0,59,'net.sourceforge.ganttproject.GanttProjectImpl',705,'net.sourceforge.ganttproject.GanttProjectImpl.setWebLink(java.lang.String)',0,'public void setWebLink(String webLink) {\r\n    myWebLink = webLink;\r\n}'),(414,'boolean modified','boolean',0,59,'net.sourceforge.ganttproject.GanttProjectImpl',702,'net.sourceforge.ganttproject.GanttProjectImpl.setModified(boolean)',0,'public void setModified(boolean modified) {\r\n    // TODO Auto-generated method stub\r\n}'),(415,'Document document','net.sourceforge.ganttproject.document.Document',233,59,'net.sourceforge.ganttproject.GanttProjectImpl',700,'net.sourceforge.ganttproject.GanttProjectImpl.setDocument(net.sourceforge.ganttproject.document.Document)',0,'public void setDocument(Document document) {\r\n    myDocument = document;\r\n}'),(416,'ProjectEventListener listener','net.sourceforge.ganttproject.ProjectEventListener',88,59,'net.sourceforge.ganttproject.GanttProjectImpl',675,'net.sourceforge.ganttproject.GanttProjectImpl.addProjectEventListener(net.sourceforge.ganttproject.ProjectEventListener)',0,'public void addProjectEventListener(ProjectEventListener listener) {\r\n    myListeners.add(listener);\r\n}'),(417,'ProjectEventListener listener','net.sourceforge.ganttproject.ProjectEventListener',88,59,'net.sourceforge.ganttproject.GanttProjectImpl',698,'net.sourceforge.ganttproject.GanttProjectImpl.removeProjectEventListener(net.sourceforge.ganttproject.ProjectEventListener)',0,'public void removeProjectEventListener(ProjectEventListener listener) {\r\n    myListeners.remove(listener);\r\n}'),(418,'Document document','net.sourceforge.ganttproject.document.Document',233,59,'net.sourceforge.ganttproject.GanttProjectImpl',697,'net.sourceforge.ganttproject.GanttProjectImpl.open(net.sourceforge.ganttproject.document.Document)',0,'public void open(Document document) throws IOException {\r\n    // TODO Auto-generated method stub\r\n}'),(419,'final GanttProject prj','net.sourceforge.ganttproject.GanttProject',53,61,'net.sourceforge.ganttproject.GanttResourcePanel',713,'net.sourceforge.ganttproject.GanttResourcePanel.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GanttResourcePanel(final GanttProject prj, GanttTree2 tree, UIFacade uiFacade) {\r\n    super();\r\n    myUIFacade = uiFacade;\r\n    myDeleteAssignmentAction = new DeleteAssignmentAction(prj.getProject().getHumanResourceManager(), ((AssignmentContext) (this)), prj);\r\n    prj.addProjectEventListener(this);\r\n    appli = prj;\r\n    model = new ResourceTreeTableModel(appli.getHumanResourceManager(), prj.getTaskManager());\r\n    table = new ResourceTreeTable(appli.getProject(), model);\r\n    setLayout(new BorderLayout());\r\n    GanttImagePanel but = new GanttImagePanel(\"big.png\", 300, 42);\r\n    myImagePanel = but;\r\n    left = new JPanel(new BorderLayout());\r\n    table.setRowHeight(20);\r\n    left.add(but, \"North\");\r\n    left.setBackground(new Color(102, 153, 153));\r\n    scrollpane = new JScrollPane();\r\n    setLayout(new BorderLayout());\r\n    add(scrollpane, BorderLayout.CENTER);\r\n    scrollpane.getViewport().add(table);\r\n    scrollpane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);\r\n    vbar = table.getVerticalScrollBar();\r\n    final JPanel jp = new JPanel(new BorderLayout());\r\n    jp.add(vbar, BorderLayout.CENTER);\r\n    // jp.setBorder(BorderFactory.createEmptyBorder(2,1,2,0));\r\n    // jp.setBorder(BorderFactory.createBevelBorder(BevelBorder.LOWERED));\r\n    jp.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));\r\n    jp.setVisible(false);\r\n    vbar.addAdjustmentListener(new AdjustmentListener() {\r\n        public void adjustmentValueChanged(AdjustmentEvent e) {\r\n            if (((table.getSize().getHeight()) - 20) < (e.getAdjustable().getMaximum()))\r\n                jp.setVisible(true);\r\n            else\r\n                jp.setVisible(false);\r\n\r\n            repaint();\r\n        }\r\n    });\r\n    left.add(jp, BorderLayout.WEST);\r\n    vbar.addAdjustmentListener(new GanttResourcePanel.GanttAdjustmentListener());\r\n    left.add(scrollpane, \"Center\");\r\n    // A splitpane is use\r\n    mySplitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);\r\n    area = new ResourceLoadGraphicArea(prj, prj.getZoomManager()) {\r\n        protected int getHeaderHeight() {\r\n            return (myImagePanel.getHeight()) + (table.getTable().getTableHeader().getHeight());\r\n        }\r\n\r\n        public boolean isExpanded(ProjectResource pr) {\r\n            return getResourceTreeTable().isExpanded(pr);\r\n        }\r\n\r\n        protected int getRowHeight() {\r\n            return table.getRowHeight();\r\n        }\r\n    };\r\n    prj.getZoomManager().addZoomListener(area.getZoomListener());\r\n    area.getChartModel().setRowHeight(table.getRowHeight());\r\n    if ((lang.getComponentOrientation()) == (ComponentOrientation.LEFT_TO_RIGHT)) {\r\n        mySplitPane.setLeftComponent(left);\r\n        mySplitPane.setRightComponent(area);\r\n    } else {\r\n        mySplitPane.setRightComponent(left);\r\n        mySplitPane.setLeftComponent(area);\r\n        mySplitPane.setDividerLocation(((int) ((Toolkit.getDefaultToolkit().getScreenSize().getWidth()) - (left.getPreferredSize().getWidth()))));\r\n    }\r\n    mySplitPane.setOneTouchExpandable(true);\r\n    mySplitPane.setPreferredSize(new Dimension(800, 500));\r\n    add(mySplitPane, BorderLayout.CENTER);\r\n    scrollpane.getViewport().setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    left.setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    table.setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n    this.setBackground(new Color(0.0F, 0.0F, 0.0F));\r\n    applyComponentOrientation(lang.getComponentOrientation());\r\n    table.addKeyListener(prj);// callback for keyboard pressed\r\n\r\n    // Add listener for mouse click\r\n    MouseListener ml = new MouseAdapter() {\r\n        public void mousePressed(MouseEvent e) {\r\n            TreePath selPath = table.getTreeTable().getPathForLocation(e.getX(), e.getY());\r\n            table.getTreeTable().getTree().setSelectionPath(selPath);\r\n            handlePopupTrigger(e);\r\n        }\r\n\r\n        public void mouseReleased(MouseEvent e) {\r\n            handlePopupTrigger(e);\r\n        }\r\n\r\n        public void mouseClicked(MouseEvent e) {\r\n            e.consume();\r\n            if (((e.getClickCount()) == 2) && ((e.getButton()) == (MouseEvent.BUTTON1))) {\r\n                handleDoubleClick(e);\r\n            } else {\r\n                handlePopupTrigger(e);\r\n            }\r\n        }\r\n    };\r\n    table.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, KeyEvent.ALT_DOWN_MASK), \"properties\");\r\n    table.getActionMap().put(\"properties\", myPropertiesAction);\r\n    table.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0), \"delete\");\r\n    table.getActionMap().put(\"delete\", myDeleteAssignmentAction);\r\n    table.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(GPAction.getKeyStroke(\"newArtifact.shortcut\"), \"newHuman\");\r\n    table.getActionMap().put(\"newHuman\", new AbstractAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            prj.newHumanResource();\r\n        }\r\n    });\r\n    if (!(prj.isOnlyViewer)) {\r\n        table.addMouseListener(ml);\r\n        table.getTreeTable().getParent().addMouseListener(ml);\r\n    }\r\n    myResourcePropertiesAction = new ResourcePropertiesAction(prj.getProject(), prj.getUIFacade());\r\n    myContextListener = new ListSelectionListener() {\r\n        public void valueChanged(ListSelectionEvent e) {\r\n            myResourcePropertiesAction.setContext(getContext());\r\n        }\r\n    };\r\n    table.getTable().getSelectionModel().addListSelectionListener(myContextListener);\r\n}'),(420,'GanttTree2 tree','net.sourceforge.ganttproject.GanttTree2',73,61,'net.sourceforge.ganttproject.GanttResourcePanel',713,'net.sourceforge.ganttproject.GanttResourcePanel.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GanttResourcePanel(final GanttProject prj, GanttTree2 tree, UIFacade uiFacade) {\r\n    super();\r\n    myUIFacade = uiFacade;\r\n    myDeleteAssignmentAction = new DeleteAssignmentAction(prj.getProject().getHumanResourceManager(), ((AssignmentContext) (this)), prj);\r\n    prj.addProjectEventListener(this);\r\n    appli = prj;\r\n    model = new ResourceTreeTableModel(appli.getHumanResourceManager(), prj.getTaskManager());\r\n    table = new ResourceTreeTable(appli.getProject(), model);\r\n    setLayout(new BorderLayout());\r\n    GanttImagePanel but = new GanttImagePanel(\"big.png\", 300, 42);\r\n    myImagePanel = but;\r\n    left = new JPanel(new BorderLayout());\r\n    table.setRowHeight(20);\r\n    left.add(but, \"North\");\r\n    left.setBackground(new Color(102, 153, 153));\r\n    scrollpane = new JScrollPane();\r\n    setLayout(new BorderLayout());\r\n    add(scrollpane, BorderLayout.CENTER);\r\n    scrollpane.getViewport().add(table);\r\n    scrollpane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);\r\n    vbar = table.getVerticalScrollBar();\r\n    final JPanel jp = new JPanel(new BorderLayout());\r\n    jp.add(vbar, BorderLayout.CENTER);\r\n    // jp.setBorder(BorderFactory.createEmptyBorder(2,1,2,0));\r\n    // jp.setBorder(BorderFactory.createBevelBorder(BevelBorder.LOWERED));\r\n    jp.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));\r\n    jp.setVisible(false);\r\n    vbar.addAdjustmentListener(new AdjustmentListener() {\r\n        public void adjustmentValueChanged(AdjustmentEvent e) {\r\n            if (((table.getSize().getHeight()) - 20) < (e.getAdjustable().getMaximum()))\r\n                jp.setVisible(true);\r\n            else\r\n                jp.setVisible(false);\r\n\r\n            repaint();\r\n        }\r\n    });\r\n    left.add(jp, BorderLayout.WEST);\r\n    vbar.addAdjustmentListener(new GanttResourcePanel.GanttAdjustmentListener());\r\n    left.add(scrollpane, \"Center\");\r\n    // A splitpane is use\r\n    mySplitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);\r\n    area = new ResourceLoadGraphicArea(prj, prj.getZoomManager()) {\r\n        protected int getHeaderHeight() {\r\n            return (myImagePanel.getHeight()) + (table.getTable().getTableHeader().getHeight());\r\n        }\r\n\r\n        public boolean isExpanded(ProjectResource pr) {\r\n            return getResourceTreeTable().isExpanded(pr);\r\n        }\r\n\r\n        protected int getRowHeight() {\r\n            return table.getRowHeight();\r\n        }\r\n    };\r\n    prj.getZoomManager().addZoomListener(area.getZoomListener());\r\n    area.getChartModel().setRowHeight(table.getRowHeight());\r\n    if ((lang.getComponentOrientation()) == (ComponentOrientation.LEFT_TO_RIGHT)) {\r\n        mySplitPane.setLeftComponent(left);\r\n        mySplitPane.setRightComponent(area);\r\n    } else {\r\n        mySplitPane.setRightComponent(left);\r\n        mySplitPane.setLeftComponent(area);\r\n        mySplitPane.setDividerLocation(((int) ((Toolkit.getDefaultToolkit().getScreenSize().getWidth()) - (left.getPreferredSize().getWidth()))));\r\n    }\r\n    mySplitPane.setOneTouchExpandable(true);\r\n    mySplitPane.setPreferredSize(new Dimension(800, 500));\r\n    add(mySplitPane, BorderLayout.CENTER);\r\n    scrollpane.getViewport().setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    left.setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    table.setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n    this.setBackground(new Color(0.0F, 0.0F, 0.0F));\r\n    applyComponentOrientation(lang.getComponentOrientation());\r\n    table.addKeyListener(prj);// callback for keyboard pressed\r\n\r\n    // Add listener for mouse click\r\n    MouseListener ml = new MouseAdapter() {\r\n        public void mousePressed(MouseEvent e) {\r\n            TreePath selPath = table.getTreeTable().getPathForLocation(e.getX(), e.getY());\r\n            table.getTreeTable().getTree().setSelectionPath(selPath);\r\n            handlePopupTrigger(e);\r\n        }\r\n\r\n        public void mouseReleased(MouseEvent e) {\r\n            handlePopupTrigger(e);\r\n        }\r\n\r\n        public void mouseClicked(MouseEvent e) {\r\n            e.consume();\r\n            if (((e.getClickCount()) == 2) && ((e.getButton()) == (MouseEvent.BUTTON1))) {\r\n                handleDoubleClick(e);\r\n            } else {\r\n                handlePopupTrigger(e);\r\n            }\r\n        }\r\n    };\r\n    table.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, KeyEvent.ALT_DOWN_MASK), \"properties\");\r\n    table.getActionMap().put(\"properties\", myPropertiesAction);\r\n    table.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0), \"delete\");\r\n    table.getActionMap().put(\"delete\", myDeleteAssignmentAction);\r\n    table.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(GPAction.getKeyStroke(\"newArtifact.shortcut\"), \"newHuman\");\r\n    table.getActionMap().put(\"newHuman\", new AbstractAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            prj.newHumanResource();\r\n        }\r\n    });\r\n    if (!(prj.isOnlyViewer)) {\r\n        table.addMouseListener(ml);\r\n        table.getTreeTable().getParent().addMouseListener(ml);\r\n    }\r\n    myResourcePropertiesAction = new ResourcePropertiesAction(prj.getProject(), prj.getUIFacade());\r\n    myContextListener = new ListSelectionListener() {\r\n        public void valueChanged(ListSelectionEvent e) {\r\n            myResourcePropertiesAction.setContext(getContext());\r\n        }\r\n    };\r\n    table.getTable().getSelectionModel().addListSelectionListener(myContextListener);\r\n}'),(421,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,61,'net.sourceforge.ganttproject.GanttResourcePanel',713,'net.sourceforge.ganttproject.GanttResourcePanel.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GanttResourcePanel(final GanttProject prj, GanttTree2 tree, UIFacade uiFacade) {\r\n    super();\r\n    myUIFacade = uiFacade;\r\n    myDeleteAssignmentAction = new DeleteAssignmentAction(prj.getProject().getHumanResourceManager(), ((AssignmentContext) (this)), prj);\r\n    prj.addProjectEventListener(this);\r\n    appli = prj;\r\n    model = new ResourceTreeTableModel(appli.getHumanResourceManager(), prj.getTaskManager());\r\n    table = new ResourceTreeTable(appli.getProject(), model);\r\n    setLayout(new BorderLayout());\r\n    GanttImagePanel but = new GanttImagePanel(\"big.png\", 300, 42);\r\n    myImagePanel = but;\r\n    left = new JPanel(new BorderLayout());\r\n    table.setRowHeight(20);\r\n    left.add(but, \"North\");\r\n    left.setBackground(new Color(102, 153, 153));\r\n    scrollpane = new JScrollPane();\r\n    setLayout(new BorderLayout());\r\n    add(scrollpane, BorderLayout.CENTER);\r\n    scrollpane.getViewport().add(table);\r\n    scrollpane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);\r\n    vbar = table.getVerticalScrollBar();\r\n    final JPanel jp = new JPanel(new BorderLayout());\r\n    jp.add(vbar, BorderLayout.CENTER);\r\n    // jp.setBorder(BorderFactory.createEmptyBorder(2,1,2,0));\r\n    // jp.setBorder(BorderFactory.createBevelBorder(BevelBorder.LOWERED));\r\n    jp.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));\r\n    jp.setVisible(false);\r\n    vbar.addAdjustmentListener(new AdjustmentListener() {\r\n        public void adjustmentValueChanged(AdjustmentEvent e) {\r\n            if (((table.getSize().getHeight()) - 20) < (e.getAdjustable().getMaximum()))\r\n                jp.setVisible(true);\r\n            else\r\n                jp.setVisible(false);\r\n\r\n            repaint();\r\n        }\r\n    });\r\n    left.add(jp, BorderLayout.WEST);\r\n    vbar.addAdjustmentListener(new GanttResourcePanel.GanttAdjustmentListener());\r\n    left.add(scrollpane, \"Center\");\r\n    // A splitpane is use\r\n    mySplitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);\r\n    area = new ResourceLoadGraphicArea(prj, prj.getZoomManager()) {\r\n        protected int getHeaderHeight() {\r\n            return (myImagePanel.getHeight()) + (table.getTable().getTableHeader().getHeight());\r\n        }\r\n\r\n        public boolean isExpanded(ProjectResource pr) {\r\n            return getResourceTreeTable().isExpanded(pr);\r\n        }\r\n\r\n        protected int getRowHeight() {\r\n            return table.getRowHeight();\r\n        }\r\n    };\r\n    prj.getZoomManager().addZoomListener(area.getZoomListener());\r\n    area.getChartModel().setRowHeight(table.getRowHeight());\r\n    if ((lang.getComponentOrientation()) == (ComponentOrientation.LEFT_TO_RIGHT)) {\r\n        mySplitPane.setLeftComponent(left);\r\n        mySplitPane.setRightComponent(area);\r\n    } else {\r\n        mySplitPane.setRightComponent(left);\r\n        mySplitPane.setLeftComponent(area);\r\n        mySplitPane.setDividerLocation(((int) ((Toolkit.getDefaultToolkit().getScreenSize().getWidth()) - (left.getPreferredSize().getWidth()))));\r\n    }\r\n    mySplitPane.setOneTouchExpandable(true);\r\n    mySplitPane.setPreferredSize(new Dimension(800, 500));\r\n    add(mySplitPane, BorderLayout.CENTER);\r\n    scrollpane.getViewport().setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    left.setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    table.setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n    this.setBackground(new Color(0.0F, 0.0F, 0.0F));\r\n    applyComponentOrientation(lang.getComponentOrientation());\r\n    table.addKeyListener(prj);// callback for keyboard pressed\r\n\r\n    // Add listener for mouse click\r\n    MouseListener ml = new MouseAdapter() {\r\n        public void mousePressed(MouseEvent e) {\r\n            TreePath selPath = table.getTreeTable().getPathForLocation(e.getX(), e.getY());\r\n            table.getTreeTable().getTree().setSelectionPath(selPath);\r\n            handlePopupTrigger(e);\r\n        }\r\n\r\n        public void mouseReleased(MouseEvent e) {\r\n            handlePopupTrigger(e);\r\n        }\r\n\r\n        public void mouseClicked(MouseEvent e) {\r\n            e.consume();\r\n            if (((e.getClickCount()) == 2) && ((e.getButton()) == (MouseEvent.BUTTON1))) {\r\n                handleDoubleClick(e);\r\n            } else {\r\n                handlePopupTrigger(e);\r\n            }\r\n        }\r\n    };\r\n    table.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, KeyEvent.ALT_DOWN_MASK), \"properties\");\r\n    table.getActionMap().put(\"properties\", myPropertiesAction);\r\n    table.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0), \"delete\");\r\n    table.getActionMap().put(\"delete\", myDeleteAssignmentAction);\r\n    table.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(GPAction.getKeyStroke(\"newArtifact.shortcut\"), \"newHuman\");\r\n    table.getActionMap().put(\"newHuman\", new AbstractAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            prj.newHumanResource();\r\n        }\r\n    });\r\n    if (!(prj.isOnlyViewer)) {\r\n        table.addMouseListener(ml);\r\n        table.getTreeTable().getParent().addMouseListener(ml);\r\n    }\r\n    myResourcePropertiesAction = new ResourcePropertiesAction(prj.getProject(), prj.getUIFacade());\r\n    myContextListener = new ListSelectionListener() {\r\n        public void valueChanged(ListSelectionEvent e) {\r\n            myResourcePropertiesAction.setContext(getContext());\r\n        }\r\n    };\r\n    table.getTable().getSelectionModel().addListSelectionListener(myContextListener);\r\n}'),(422,'MouseEvent e','java.awt.event.MouseEvent',0,61,'net.sourceforge.ganttproject.GanttResourcePanel',735,'net.sourceforge.ganttproject.GanttResourcePanel.handlePopupTrigger(java.awt.event.MouseEvent)',0,'private void handlePopupTrigger(MouseEvent e) {\r\n    if ((e.isPopupTrigger()) || ((e.getButton()) == (MouseEvent.BUTTON3))) {\r\n        DefaultMutableTreeNode[] selectedNodes = table.getSelectedNodes();\r\n        if (((selectedNodes.length) == 1) && ((selectedNodes[0]) instanceof AssignmentNode)) {\r\n            AssignmentNode assignmentNode = ((AssignmentNode) (selectedNodes[0]));\r\n            Mediator.getTaskSelectionManager().clear();\r\n            Mediator.getTaskSelectionManager().addTask(assignmentNode.getTask());\r\n            Point popupPoint = getPopupMenuPoint(e);\r\n            getUIFacade().showPopupMenu(this, new Action[]{ getTaskPropertiesAction(), myDeleteAssignmentAction }, popupPoint.x, popupPoint.y);\r\n        } else {\r\n            createPopupMenu(e);\r\n        }\r\n    }\r\n}'),(423,'MouseEvent e','java.awt.event.MouseEvent',0,61,'net.sourceforge.ganttproject.GanttResourcePanel',734,'net.sourceforge.ganttproject.GanttResourcePanel.handleDoubleClick(java.awt.event.MouseEvent)',0,'private void handleDoubleClick(MouseEvent e) {\r\n    myPropertiesAction.actionPerformed(null);\r\n}'),(424,'MouseEvent popupTriggerEvent','java.awt.event.MouseEvent',0,61,'net.sourceforge.ganttproject.GanttResourcePanel',724,'net.sourceforge.ganttproject.GanttResourcePanel.getPopupMenuPoint(java.awt.event.MouseEvent)',0,'private Point getPopupMenuPoint(MouseEvent popupTriggerEvent) {\r\n    final int x = ((popupTriggerEvent.getX()) - (scrollpane.getHorizontalScrollBar().getValue())) + (vbar.isVisible() ? vbar.getWidth() : 0);\r\n    final int y = ((popupTriggerEvent.getY()) + (table.getRowHeight())) + (+(myImagePanel.getHeight()));\r\n    return new Point(x, y);\r\n}'),(425,'MouseEvent e','java.awt.event.MouseEvent',0,61,'net.sourceforge.ganttproject.GanttResourcePanel',716,'net.sourceforge.ganttproject.GanttResourcePanel.createPopupMenu(java.awt.event.MouseEvent)',0,'/* Create the popup menu */\r\nprivate void createPopupMenu(MouseEvent e) {\r\n    JPopupMenu menu = new JPopupMenu();\r\n    AbstractAction[] resourceActions = myResourceActionSet.getActions();\r\n    menu.add(resourceActions[0]);\r\n    if ((table.getSelectedNodes().length) == 1) {\r\n        menu.add(myResourcePropertiesAction);\r\n        for (int i = 1; i < (resourceActions.length); i++) {\r\n            menu.add(resourceActions[i]);\r\n        }\r\n        menu.add(appli.createNewItem(GanttProject.correctLabel(lang.getText(\"sendMail\")), \"/icons/send_mail_16.gif\"));\r\n        menu.addSeparator();\r\n        menu.add(myMoveUpAction);\r\n        menu.add(myMoveDownAction);\r\n        menu.addSeparator();\r\n        menu.add(appli.getCutAction());\r\n        menu.add(appli.getCopyAction());\r\n        menu.add(appli.getPasteAction());\r\n    }\r\n    menu.applyComponentOrientation(lang.getComponentOrientation());\r\n    Point popupPoint = getPopupMenuPoint(e);\r\n    menu.show(this, popupPoint.x, popupPoint.y);\r\n}'),(426,'GanttLanguage language','net.sourceforge.ganttproject.language.GanttLanguage',461,61,'net.sourceforge.ganttproject.GanttResourcePanel',742,'net.sourceforge.ganttproject.GanttResourcePanel.refresh(net.sourceforge.ganttproject.language.GanttLanguage)',0,'/**\r\n * Function called when the language is changed\r\n */\r\npublic void refresh(GanttLanguage language) {\r\n    lang = language;\r\n    model.changeLanguage(lang);\r\n}'),(427,'ResourceEvent event','net.sourceforge.ganttproject.resource.ResourceEvent',508,61,'net.sourceforge.ganttproject.GanttResourcePanel',744,'net.sourceforge.ganttproject.GanttResourcePanel.resourceAdded(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'public void resourceAdded(ResourceEvent event) {\r\n    newHuman(((HumanResource) (event.getResource())));\r\n}'),(428,'ResourceEvent event','net.sourceforge.ganttproject.resource.ResourceEvent',508,61,'net.sourceforge.ganttproject.GanttResourcePanel',747,'net.sourceforge.ganttproject.GanttResourcePanel.resourcesRemoved(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'public void resourcesRemoved(ResourceEvent event) {\r\n    table.getTable().editingStopped(new ChangeEvent(table.getTable()));\r\n    model.deleteResources(event.getResources());\r\n}'),(429,'ResourceEvent e','net.sourceforge.ganttproject.resource.ResourceEvent',508,61,'net.sourceforge.ganttproject.GanttResourcePanel',746,'net.sourceforge.ganttproject.GanttResourcePanel.resourceChanged(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'public void resourceChanged(ResourceEvent e) {\r\n    model.resourceChanged(e.getResource());\r\n    ((HumanResource) (e.getResource())).resetLoads();\r\n    repaint();\r\n}'),(430,'ResourceEvent e','net.sourceforge.ganttproject.resource.ResourceEvent',508,61,'net.sourceforge.ganttproject.GanttResourcePanel',745,'net.sourceforge.ganttproject.GanttResourcePanel.resourceAssignmentsChanged(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'public void resourceAssignmentsChanged(ResourceEvent e) {\r\n    model.resourceAssignmentsChanged(e.getResources());\r\n}'),(431,'AdjustmentEvent e','java.awt.event.AdjustmentEvent',0,60,'net.sourceforge.ganttproject.GanttResourcePanel$GanttAdjustmentListener',756,'net.sourceforge.ganttproject.GanttResourcePanel$GanttAdjustmentListener.adjustmentValueChanged(java.awt.event.AdjustmentEvent)',0,'public void adjustmentValueChanged(AdjustmentEvent e) {\r\n    if ((area) != null) {\r\n        area.setScrollBar(e.getValue());\r\n        area.repaint();\r\n    }\r\n}'),(432,'HumanResource people','net.sourceforge.ganttproject.resource.HumanResource',499,61,'net.sourceforge.ganttproject.GanttResourcePanel',737,'net.sourceforge.ganttproject.GanttResourcePanel.newHuman(net.sourceforge.ganttproject.resource.HumanResource)',0,'/**\r\n * Create a new Human\r\n */\r\npublic void newHuman(HumanResource people) {\r\n    if (people != null) {\r\n        DefaultMutableTreeNode result = model.addResource(people);\r\n        table.getTree().scrollPathToVisible(new TreePath(result.getPath()));\r\n    }\r\n}'),(433,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,61,'net.sourceforge.ganttproject.GanttResourcePanel',749,'net.sourceforge.ganttproject.GanttResourcePanel.sendMail(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Send an Email to the current resource\r\n */\r\npublic void sendMail(GanttProject parent) {\r\n    if ((((table) != null) && ((table.getSelectedNodes()) != null)) && ((table.getSelectedNodes().length) > 0)) {\r\n        HumanResource people = ((HumanResource) (table.getSelectedNodes()[0].getUserObject()));\r\n        if (people != null) {\r\n            try {\r\n                BrowserControl.displayURL((\"mailto:\" + (people.getMail())));\r\n            } catch (Exception e) {\r\n                System.err.println(e);\r\n            }\r\n        }\r\n    } else {\r\n        GanttDialogInfo gdi = new GanttDialogInfo(appli, GanttDialogInfo.INFO, GanttDialogInfo.YES_OPTION, GanttLanguage.getInstance().getText(\"msg26\"), GanttLanguage.getInstance().getText(\"sendMail\"));\r\n        gdi.show();\r\n    }\r\n}'),(434,'ResourceActionSet actionSet','net.sourceforge.ganttproject.action.ResourceActionSet',119,61,'net.sourceforge.ganttproject.GanttResourcePanel',752,'net.sourceforge.ganttproject.GanttResourcePanel.setResourceActions(net.sourceforge.ganttproject.action.ResourceActionSet)',0,'public void setResourceActions(ResourceActionSet actionSet) {\r\n    myResourceActionSet = actionSet;\r\n}'),(435,'int location','int',0,61,'net.sourceforge.ganttproject.GanttResourcePanel',751,'net.sourceforge.ganttproject.GanttResourcePanel.setDividerLocation(int)',0,'public void setDividerLocation(int location) {\r\n    mySplitPane.setDividerLocation(location);\r\n}'),(436,'boolean cut','boolean',0,61,'net.sourceforge.ganttproject.GanttResourcePanel',748,'net.sourceforge.ganttproject.GanttResourcePanel.saveSelectionToClipboard(boolean)',0,'public void saveSelectionToClipboard(boolean cut) {\r\n    DefaultMutableTreeNode[] selectedNodes = this.table.getSelectedNodes();\r\n    if (selectedNodes == null)\r\n        return;\r\n\r\n    /* count instances of ResourceNode */\r\n    int count = 0;\r\n    for (int i = 0; i < (selectedNodes.length); i++) {\r\n        if ((selectedNodes[i]) instanceof ResourceNode) {\r\n            count++;\r\n        }\r\n    }\r\n    this.clipboard = new ProjectResource[count];\r\n    int index = 0;\r\n    for (int i = 0; i < (selectedNodes.length); i++) {\r\n        if ((selectedNodes[i]) instanceof ResourceNode) {\r\n            ResourceNode rn = ((ResourceNode) (selectedNodes[i]));\r\n            this.clipboard[index] = ((HumanResource) (rn.getUserObject()));\r\n            if (cut) {\r\n                this.appli.getHumanResourceManager().remove(this.clipboard[index], this.appli.getUndoManager());\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n}'),(437,'Action action','javax.swing.Action',0,61,'net.sourceforge.ganttproject.GanttResourcePanel',753,'net.sourceforge.ganttproject.GanttResourcePanel.setTaskPropertiesAction(javax.swing.Action)',0,'void setTaskPropertiesAction(Action action) {\r\n    myTaskPropertiesAction = action;\r\n}'),(438,'Graphics2D graphics','java.awt.Graphics2D',0,62,'net.sourceforge.ganttproject.GanttSplash',760,'net.sourceforge.ganttproject.GanttSplash.drawTextWithShadow(java.awt.Graphics2D,java.lang.String,int,int)',0,'private void drawTextWithShadow(Graphics2D graphics, String text, int xpos, int ypos) {\r\n    graphics.setColor(Color.white);\r\n    graphics.drawString(text, xpos, ypos);\r\n}'),(439,'String text','java.lang.String',0,62,'net.sourceforge.ganttproject.GanttSplash',760,'net.sourceforge.ganttproject.GanttSplash.drawTextWithShadow(java.awt.Graphics2D,java.lang.String,int,int)',0,'private void drawTextWithShadow(Graphics2D graphics, String text, int xpos, int ypos) {\r\n    graphics.setColor(Color.white);\r\n    graphics.drawString(text, xpos, ypos);\r\n}'),(440,'int xpos','int',0,62,'net.sourceforge.ganttproject.GanttSplash',760,'net.sourceforge.ganttproject.GanttSplash.drawTextWithShadow(java.awt.Graphics2D,java.lang.String,int,int)',0,'private void drawTextWithShadow(Graphics2D graphics, String text, int xpos, int ypos) {\r\n    graphics.setColor(Color.white);\r\n    graphics.drawString(text, xpos, ypos);\r\n}'),(441,'int ypos','int',0,62,'net.sourceforge.ganttproject.GanttSplash',760,'net.sourceforge.ganttproject.GanttSplash.drawTextWithShadow(java.awt.Graphics2D,java.lang.String,int,int)',0,'private void drawTextWithShadow(Graphics2D graphics, String text, int xpos, int ypos) {\r\n    graphics.setColor(Color.white);\r\n    graphics.drawString(text, xpos, ypos);\r\n}'),(442,'boolean b','boolean',0,62,'net.sourceforge.ganttproject.GanttSplash',763,'net.sourceforge.ganttproject.GanttSplash.setVisible(boolean)',0,'public void setVisible(boolean b) {\r\n    if (b) {\r\n        getContentPane().add(mySplashComponent, BorderLayout.CENTER);\r\n        pack();\r\n        DialogAligner.center(this);\r\n    }\r\n    super.setVisible(b);\r\n}'),(443,'String name','java.lang.String',0,63,'net.sourceforge.ganttproject.GanttTask',764,'net.sourceforge.ganttproject.GanttTask.-init-(java.lang.String,net.sourceforge.ganttproject.GanttCalendar,long,net.sourceforge.ganttproject.task.TaskManager,int)',0,'// ///////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Constructor\r\n *\r\n * @param taskID\r\n * 		\r\n */\r\npublic GanttTask(String name, GanttCalendar start, long length, TaskManager taskManager, int taskID) {\r\n    super(taskManager, taskID);\r\n    TaskMutator mutator = createMutator();\r\n    mutator.setName(name);\r\n    mutator.setStart(start);\r\n    mutator.setDuration(taskManager.createLength(length));\r\n    mutator.commit();\r\n    enableEvents(true);\r\n}'),(444,'GanttCalendar start','net.sourceforge.ganttproject.GanttCalendar',24,63,'net.sourceforge.ganttproject.GanttTask',764,'net.sourceforge.ganttproject.GanttTask.-init-(java.lang.String,net.sourceforge.ganttproject.GanttCalendar,long,net.sourceforge.ganttproject.task.TaskManager,int)',0,'// ///////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Constructor\r\n *\r\n * @param taskID\r\n * 		\r\n */\r\npublic GanttTask(String name, GanttCalendar start, long length, TaskManager taskManager, int taskID) {\r\n    super(taskManager, taskID);\r\n    TaskMutator mutator = createMutator();\r\n    mutator.setName(name);\r\n    mutator.setStart(start);\r\n    mutator.setDuration(taskManager.createLength(length));\r\n    mutator.commit();\r\n    enableEvents(true);\r\n}'),(445,'long length','long',0,63,'net.sourceforge.ganttproject.GanttTask',764,'net.sourceforge.ganttproject.GanttTask.-init-(java.lang.String,net.sourceforge.ganttproject.GanttCalendar,long,net.sourceforge.ganttproject.task.TaskManager,int)',0,'// ///////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Constructor\r\n *\r\n * @param taskID\r\n * 		\r\n */\r\npublic GanttTask(String name, GanttCalendar start, long length, TaskManager taskManager, int taskID) {\r\n    super(taskManager, taskID);\r\n    TaskMutator mutator = createMutator();\r\n    mutator.setName(name);\r\n    mutator.setStart(start);\r\n    mutator.setDuration(taskManager.createLength(length));\r\n    mutator.commit();\r\n    enableEvents(true);\r\n}'),(446,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,63,'net.sourceforge.ganttproject.GanttTask',764,'net.sourceforge.ganttproject.GanttTask.-init-(java.lang.String,net.sourceforge.ganttproject.GanttCalendar,long,net.sourceforge.ganttproject.task.TaskManager,int)',0,'// ///////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Constructor\r\n *\r\n * @param taskID\r\n * 		\r\n */\r\npublic GanttTask(String name, GanttCalendar start, long length, TaskManager taskManager, int taskID) {\r\n    super(taskManager, taskID);\r\n    TaskMutator mutator = createMutator();\r\n    mutator.setName(name);\r\n    mutator.setStart(start);\r\n    mutator.setDuration(taskManager.createLength(length));\r\n    mutator.commit();\r\n    enableEvents(true);\r\n}'),(447,'int taskID','int',0,63,'net.sourceforge.ganttproject.GanttTask',764,'net.sourceforge.ganttproject.GanttTask.-init-(java.lang.String,net.sourceforge.ganttproject.GanttCalendar,long,net.sourceforge.ganttproject.task.TaskManager,int)',0,'// ///////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Constructor\r\n *\r\n * @param taskID\r\n * 		\r\n */\r\npublic GanttTask(String name, GanttCalendar start, long length, TaskManager taskManager, int taskID) {\r\n    super(taskManager, taskID);\r\n    TaskMutator mutator = createMutator();\r\n    mutator.setName(name);\r\n    mutator.setStart(start);\r\n    mutator.setDuration(taskManager.createLength(length));\r\n    mutator.commit();\r\n    enableEvents(true);\r\n}'),(448,'GanttTask copy','net.sourceforge.ganttproject.GanttTask',63,63,'net.sourceforge.ganttproject.GanttTask',765,'net.sourceforge.ganttproject.GanttTask.-init-(net.sourceforge.ganttproject.GanttTask)',0,'public GanttTask(GanttTask copy) {\r\n    super(copy, false);\r\n    // for (int i = 0; i < getPredecessorsOld().size(); i++) {\r\n    // GanttTaskRelationship tempRel = (GanttTaskRelationship) ( (\r\n    // GanttTaskRelationship) getPredecessorsOld().get(i)).clone();\r\n    // addPredecessor(tempRel);\r\n    // }\r\n    // for (int i = 0; i < successors.size(); i++) {\r\n    // GanttTaskRelationship tempRel = (GanttTaskRelationship) ( (\r\n    // GanttTaskRelationship) successors.get(i)).clone();\r\n    // addSuccessor(tempRel);\r\n    // }\r\n    enableEvents(true);\r\n}'),(449,'int l','int',0,63,'net.sourceforge.ganttproject.GanttTask',768,'net.sourceforge.ganttproject.GanttTask.setLength(int)',0,'/**\r\n *\r\n *\r\n * @deprecated Use setDuration()\r\n */\r\npublic void setLength(int l) {\r\n    if (l <= 0) {\r\n        throw new IllegalArgumentException((((\"Length of task must be >=0. Youve passed length=\" + l) + \" to task=\") + (this)));\r\n    }\r\n    TaskMutator mutator = createMutator();\r\n    mutator.setDuration(getManager().createLength(getDuration().getTimeUnit(), l));\r\n    mutator.commit();\r\n}'),(450,'int taskID','int',0,63,'net.sourceforge.ganttproject.GanttTask',769,'net.sourceforge.ganttproject.GanttTask.setTaskID(int)',0,'/**\r\n * set the task ID. the uniquness of ID should be check before using this\r\n * method\r\n *\r\n * @param taskID\r\n * 		\r\n */\r\npublic void setTaskID(int taskID) {\r\n    setTaskIDHack(taskID);\r\n}'),(451,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,64,'net.sourceforge.ganttproject.GanttTaskRelationship',771,'net.sourceforge.ganttproject.GanttTaskRelationship.-init-(net.sourceforge.ganttproject.task.TaskManager)',0,'public GanttTaskRelationship(TaskManager taskManager) {\r\n    myTaskManager = taskManager;\r\n}'),(452,'int predecessorTaskID','int',0,64,'net.sourceforge.ganttproject.GanttTaskRelationship',772,'net.sourceforge.ganttproject.GanttTaskRelationship.-init-(int,int,int,int,net.sourceforge.ganttproject.task.TaskManager)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttTaskRelationship(int predecessorTaskID, int successorTaskID, int relationshipType, int difference, TaskManager taskManager) {\r\n    this(taskManager);\r\n    this.predecessorTaskID = predecessorTaskID;\r\n    this.successorTaskID = successorTaskID;\r\n    this.relationshipType = relationshipType;\r\n    this.difference = difference;\r\n}'),(453,'int successorTaskID','int',0,64,'net.sourceforge.ganttproject.GanttTaskRelationship',772,'net.sourceforge.ganttproject.GanttTaskRelationship.-init-(int,int,int,int,net.sourceforge.ganttproject.task.TaskManager)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttTaskRelationship(int predecessorTaskID, int successorTaskID, int relationshipType, int difference, TaskManager taskManager) {\r\n    this(taskManager);\r\n    this.predecessorTaskID = predecessorTaskID;\r\n    this.successorTaskID = successorTaskID;\r\n    this.relationshipType = relationshipType;\r\n    this.difference = difference;\r\n}'),(454,'int relationshipType','int',0,64,'net.sourceforge.ganttproject.GanttTaskRelationship',772,'net.sourceforge.ganttproject.GanttTaskRelationship.-init-(int,int,int,int,net.sourceforge.ganttproject.task.TaskManager)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttTaskRelationship(int predecessorTaskID, int successorTaskID, int relationshipType, int difference, TaskManager taskManager) {\r\n    this(taskManager);\r\n    this.predecessorTaskID = predecessorTaskID;\r\n    this.successorTaskID = successorTaskID;\r\n    this.relationshipType = relationshipType;\r\n    this.difference = difference;\r\n}'),(455,'int difference','int',0,64,'net.sourceforge.ganttproject.GanttTaskRelationship',772,'net.sourceforge.ganttproject.GanttTaskRelationship.-init-(int,int,int,int,net.sourceforge.ganttproject.task.TaskManager)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttTaskRelationship(int predecessorTaskID, int successorTaskID, int relationshipType, int difference, TaskManager taskManager) {\r\n    this(taskManager);\r\n    this.predecessorTaskID = predecessorTaskID;\r\n    this.successorTaskID = successorTaskID;\r\n    this.relationshipType = relationshipType;\r\n    this.difference = difference;\r\n}'),(456,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,64,'net.sourceforge.ganttproject.GanttTaskRelationship',772,'net.sourceforge.ganttproject.GanttTaskRelationship.-init-(int,int,int,int,net.sourceforge.ganttproject.task.TaskManager)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttTaskRelationship(int predecessorTaskID, int successorTaskID, int relationshipType, int difference, TaskManager taskManager) {\r\n    this(taskManager);\r\n    this.predecessorTaskID = predecessorTaskID;\r\n    this.successorTaskID = successorTaskID;\r\n    this.relationshipType = relationshipType;\r\n    this.difference = difference;\r\n}'),(457,'Task predecessorTask','net.sourceforge.ganttproject.task.Task',548,64,'net.sourceforge.ganttproject.GanttTaskRelationship',783,'net.sourceforge.ganttproject.GanttTaskRelationship.setPredecessorTask(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * set the predecessor task by GanttTask object\r\n */\r\npublic void setPredecessorTask(Task predecessorTask) {\r\n    this.predecessorTaskID = predecessorTask.getTaskID();\r\n    // this.predecessorTask=predecessorTask;\r\n}'),(458,'int predecessorTaskID','int',0,64,'net.sourceforge.ganttproject.GanttTaskRelationship',782,'net.sourceforge.ganttproject.GanttTaskRelationship.setPredecessorTask(int)',0,'/**\r\n * set the predecessor task ID by integer\r\n *\r\n * @param predecessorTaskID\r\n * 		ID of predecessor task\r\n */\r\npublic void setPredecessorTask(int predecessorTaskID) {\r\n    this.predecessorTaskID = predecessorTaskID;\r\n}'),(459,'Task successorTask','net.sourceforge.ganttproject.task.Task',548,64,'net.sourceforge.ganttproject.GanttTaskRelationship',786,'net.sourceforge.ganttproject.GanttTaskRelationship.setSuccessorTask(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * set the successor task by GanttTask object\r\n *\r\n * @param successorTask\r\n * 		GanttTask object of successor\r\n */\r\npublic void setSuccessorTask(Task successorTask) {\r\n    this.successorTaskID = successorTask.getTaskID();\r\n    // this.successorTask = successorTask;\r\n}'),(460,'int seccessorTaskID','int',0,64,'net.sourceforge.ganttproject.GanttTaskRelationship',785,'net.sourceforge.ganttproject.GanttTaskRelationship.setSuccessorTask(int)',0,'/**\r\n * set the successor task ID by the integer\r\n *\r\n * @param seccessorTaskID\r\n * 		id of the successor\r\n */\r\npublic void setSuccessorTask(int seccessorTaskID) {\r\n    this.successorTaskID = seccessorTaskID;\r\n}'),(461,'int relationshipType','int',0,64,'net.sourceforge.ganttproject.GanttTaskRelationship',784,'net.sourceforge.ganttproject.GanttTaskRelationship.setRelationshipType(int)',0,'/**\r\n * set the relationship type\r\n */\r\npublic void setRelationshipType(int relationshipType) {\r\n    this.relationshipType = relationshipType;\r\n}'),(462,'GanttTaskRelationship compareRel','net.sourceforge.ganttproject.GanttTaskRelationship',64,64,'net.sourceforge.ganttproject.GanttTaskRelationship',774,'net.sourceforge.ganttproject.GanttTaskRelationship.equals(net.sourceforge.ganttproject.GanttTaskRelationship)',0,'public boolean equals(GanttTaskRelationship compareRel) {\r\n    return (((relationshipType) == (compareRel.relationshipType)) && ((predecessorTaskID) == (compareRel.predecessorTaskID))) && ((successorTaskID) == (compareRel.successorTaskID));\r\n}'),(463,'DefaultTreeModel treeModel','javax.swing.tree.DefaultTreeModel',0,65,'net.sourceforge.ganttproject.GanttTree2$AutoscrollingTree',878,'net.sourceforge.ganttproject.GanttTree2$AutoscrollingTree.-init-(javax.swing.tree.DefaultTreeModel)',0,'public AutoscrollingTree(DefaultTreeModel treeModel) {\r\n    super(treeModel);\r\n}'),(464,'final GanttProject app','net.sourceforge.ganttproject.GanttProject',53,73,'net.sourceforge.ganttproject.GanttTree2',790,'net.sourceforge.ganttproject.GanttTree2.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,''),(465,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,73,'net.sourceforge.ganttproject.GanttTree2',790,'net.sourceforge.ganttproject.GanttTree2.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,''),(466,'TaskSelectionManager selectionManager','net.sourceforge.ganttproject.task.TaskSelectionManager',575,73,'net.sourceforge.ganttproject.GanttTree2',790,'net.sourceforge.ganttproject.GanttTree2.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,''),(467,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,73,'net.sourceforge.ganttproject.GanttTree2',790,'net.sourceforge.ganttproject.GanttTree2.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,''),(468,'DefaultMutableTreeNode node','javax.swing.tree.DefaultMutableTreeNode',0,72,'net.sourceforge.ganttproject.GanttTree2$HiddenTask',906,'net.sourceforge.ganttproject.GanttTree2$HiddenTask.-init-(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultMutableTreeNode,int)',0,'public HiddenTask(DefaultMutableTreeNode node, DefaultMutableTreeNode parent, int index) {\r\n    this.node = node;\r\n    this.parent = parent;\r\n    this.index = index;\r\n    // this.node.setParent(this.parent);\r\n}'),(469,'DefaultMutableTreeNode parent','javax.swing.tree.DefaultMutableTreeNode',0,72,'net.sourceforge.ganttproject.GanttTree2$HiddenTask',906,'net.sourceforge.ganttproject.GanttTree2$HiddenTask.-init-(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultMutableTreeNode,int)',0,'public HiddenTask(DefaultMutableTreeNode node, DefaultMutableTreeNode parent, int index) {\r\n    this.node = node;\r\n    this.parent = parent;\r\n    this.index = index;\r\n    // this.node.setParent(this.parent);\r\n}'),(470,'int index','int',0,72,'net.sourceforge.ganttproject.GanttTree2$HiddenTask',906,'net.sourceforge.ganttproject.GanttTree2$HiddenTask.-init-(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultMutableTreeNode,int)',0,'public HiddenTask(DefaultMutableTreeNode node, DefaultMutableTreeNode parent, int index) {\r\n    this.node = node;\r\n    this.parent = parent;\r\n    this.index = index;\r\n    // this.node.setParent(this.parent);\r\n}'),(471,'TreePath path','javax.swing.tree.TreePath',0,67,'net.sourceforge.ganttproject.GanttTree2$GanttTransferableTreePath',883,'net.sourceforge.ganttproject.GanttTree2$GanttTransferableTreePath.-init-(javax.swing.tree.TreePath)',0,'/**\r\n * Constructs a transferrable tree path object for the specified path.\r\n */\r\npublic GanttTransferableTreePath(TreePath path) {\r\n    _path = path;\r\n}'),(472,'Point pt','java.awt.Point',0,65,'net.sourceforge.ganttproject.GanttTree2$AutoscrollingTree',879,'net.sourceforge.ganttproject.GanttTree2$AutoscrollingTree.autoscroll(java.awt.Point)',0,'public void autoscroll(Point pt) {\r\n    // Figure out which row we�e on.\r\n    int nRow = this.getClosestRowForLocation(pt.x, pt.y);\r\n    // If we are not on a row then ignore this autoscroll request\r\n    if (nRow < 0)\r\n        return;\r\n\r\n    Rectangle raOuter = getBounds();\r\n    // Now decide if the row is at the top of the screen or at the\r\n    // bottom. We do this to make the previous row (or the next\r\n    // row) visible as appropriate. If we�e at the absolute top or\r\n    // bottom, just return the first or last row respectively.\r\n    nRow = (((pt.y) + (raOuter.y)) <= (GanttTree2.AUTOSCROLL_MARGIN)// Is row at top of\r\n    ) ? // screen?\r\n    nRow <= 0 ? 0 : nRow - 1// Yes, scroll up one row\r\n     : nRow < ((this.getRowCount()) - 1) ? nRow + 1 : nRow;// No,\r\n\r\n    // scroll\r\n    // down\r\n    // one\r\n    // row\r\n    this.scrollRowToVisible(nRow);\r\n}'),(473,'Task t','net.sourceforge.ganttproject.task.Task',548,73,'net.sourceforge.ganttproject.GanttTree2',871,'net.sourceforge.ganttproject.GanttTree2.setEditingTask(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * Edits the <code>t</code> task name in the treetable.\r\n */\r\npublic void setEditingTask(Task t) {\r\n    selectTask(t, false);\r\n    TreePath tp = new TreePath(getSelectedTaskNode().getPath());\r\n    int c = getTable().convertColumnIndexToView(getTable().getColumn(GanttTreeTableModel.strColName).getModelIndex());\r\n    treetable.getTreeTable().editingStopped(new ChangeEvent(treetable.getTreeTable()));\r\n    treetable.editNewTask(t);\r\n    // treetable.getTreeTable().editCellAt(\r\n    // treetable.getTree().getRowForPath(tp), c);\r\n    // treetable.requestFocus();\r\n    treetable.centerViewOnSelectedCell();\r\n}'),(474,'GanttLanguage ganttLanguage','net.sourceforge.ganttproject.language.GanttLanguage',461,73,'net.sourceforge.ganttproject.GanttTree2',797,'net.sourceforge.ganttproject.GanttTree2.changeLanguage(net.sourceforge.ganttproject.language.GanttLanguage)',0,'public void changeLanguage(GanttLanguage ganttLanguage) {\r\n    this.language = ganttLanguage;\r\n    // this.treetable.changeLanguage(language);\r\n}'),(475,'String label','java.lang.String',0,73,'net.sourceforge.ganttproject.GanttTree2',802,'net.sourceforge.ganttproject.GanttTree2.createMenuAction(java.lang.String,java.lang.String)',0,'private Action createMenuAction(String label, String iconPath) {\r\n    AbstractAction result = new AbstractAction(label, new ImageIcon(getClass().getResource(iconPath))) {\r\n        public void actionPerformed(ActionEvent e) {\r\n            appli.actionPerformed(e);\r\n        }\r\n    };\r\n    return result;\r\n}'),(476,'String iconPath','java.lang.String',0,73,'net.sourceforge.ganttproject.GanttTree2',802,'net.sourceforge.ganttproject.GanttTree2.createMenuAction(java.lang.String,java.lang.String)',0,'private Action createMenuAction(String label, String iconPath) {\r\n    AbstractAction result = new AbstractAction(label, new ImageIcon(getClass().getResource(iconPath))) {\r\n        public void actionPerformed(ActionEvent e) {\r\n            appli.actionPerformed(e);\r\n        }\r\n    };\r\n    return result;\r\n}'),(477,'int x','int',0,73,'net.sourceforge.ganttproject.GanttTree2',803,'net.sourceforge.ganttproject.GanttTree2.createPopupMenu(int,int,boolean)',0,'/**\r\n * Create a popup menu when mous click\r\n */\r\nprivate void createPopupMenu(int x, int y, boolean all) {\r\n    JPopupMenu menu = new JPopupMenu();\r\n    Action[] popupMenuActions = getPopupMenuActions();\r\n    myUIFacade.showPopupMenu(this, popupMenuActions, ((x - (hbar.getValue())) + (vbar.isVisible() ? vbar.getWidth() : 0)), ((y - (vbar.getValue())) + 20));\r\n}'),(478,'int y','int',0,73,'net.sourceforge.ganttproject.GanttTree2',803,'net.sourceforge.ganttproject.GanttTree2.createPopupMenu(int,int,boolean)',0,'/**\r\n * Create a popup menu when mous click\r\n */\r\nprivate void createPopupMenu(int x, int y, boolean all) {\r\n    JPopupMenu menu = new JPopupMenu();\r\n    Action[] popupMenuActions = getPopupMenuActions();\r\n    myUIFacade.showPopupMenu(this, popupMenuActions, ((x - (hbar.getValue())) + (vbar.isVisible() ? vbar.getWidth() : 0)), ((y - (vbar.getValue())) + 20));\r\n}'),(479,'boolean all','boolean',0,73,'net.sourceforge.ganttproject.GanttTree2',803,'net.sourceforge.ganttproject.GanttTree2.createPopupMenu(int,int,boolean)',0,'/**\r\n * Create a popup menu when mous click\r\n */\r\nprivate void createPopupMenu(int x, int y, boolean all) {\r\n    JPopupMenu menu = new JPopupMenu();\r\n    Action[] popupMenuActions = getPopupMenuActions();\r\n    myUIFacade.showPopupMenu(this, popupMenuActions, ((x - (hbar.getValue())) + (vbar.isVisible() ? vbar.getWidth() : 0)), ((y - (vbar.getValue())) + 20));\r\n}'),(480,'GanttGraphicArea area','net.sourceforge.ganttproject.GanttGraphicArea',45,73,'net.sourceforge.ganttproject.GanttTree2',872,'net.sourceforge.ganttproject.GanttTree2.setGraphicArea(net.sourceforge.ganttproject.GanttGraphicArea)',0,'/**\r\n * Change grpahic part\r\n */\r\npublic void setGraphicArea(GanttGraphicArea area) {\r\n    this.area = area;\r\n}'),(481,'Object child','java.lang.Object',0,73,'net.sourceforge.ganttproject.GanttTree2',796,'net.sourceforge.ganttproject.GanttTree2.addObjectWithExpand(java.lang.Object,javax.swing.tree.DefaultMutableTreeNode)',0,'/**\r\n * add an object with the expand information\r\n */\r\npublic DefaultMutableTreeNode addObjectWithExpand(Object child, DefaultMutableTreeNode parent) {\r\n    DefaultMutableTreeNode childNode = new TaskNode(((Task) (child)));\r\n    if (parent == null)\r\n        parent = rootNode;\r\n\r\n    treeModel.insertNodeInto(childNode, parent, parent.getChildCount());\r\n    // forwardScheduling();\r\n    Task task = ((Task) (childNode.getUserObject()));\r\n    boolean res = true;\r\n    if (parent == null)\r\n        res = false;\r\n\r\n    // test for expantion\r\n    while (parent != null) {\r\n        Task taskFather = ((Task) (parent.getUserObject()));\r\n        if (!(taskFather.getExpand())) {\r\n            res = false;\r\n            break;\r\n        }\r\n        parent = ((DefaultMutableTreeNode) (parent.getParent()));\r\n    } \r\n    treetable.getTree().scrollPathToVisible(new TreePath(childNode.getPath()));\r\n    if ((!res) && (parent != null)) {\r\n        treetable.getTree().collapsePath(new TreePath(parent.getPath()));\r\n    }\r\n    // else\r\n    // task.setExpand(false);\r\n    (nbTasks)++;\r\n    appli.refreshProjectInfos();\r\n    return childNode;\r\n}'),(482,'DefaultMutableTreeNode parent','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',796,'net.sourceforge.ganttproject.GanttTree2.addObjectWithExpand(java.lang.Object,javax.swing.tree.DefaultMutableTreeNode)',0,'/**\r\n * add an object with the expand information\r\n */\r\npublic DefaultMutableTreeNode addObjectWithExpand(Object child, DefaultMutableTreeNode parent) {\r\n    DefaultMutableTreeNode childNode = new TaskNode(((Task) (child)));\r\n    if (parent == null)\r\n        parent = rootNode;\r\n\r\n    treeModel.insertNodeInto(childNode, parent, parent.getChildCount());\r\n    // forwardScheduling();\r\n    Task task = ((Task) (childNode.getUserObject()));\r\n    boolean res = true;\r\n    if (parent == null)\r\n        res = false;\r\n\r\n    // test for expantion\r\n    while (parent != null) {\r\n        Task taskFather = ((Task) (parent.getUserObject()));\r\n        if (!(taskFather.getExpand())) {\r\n            res = false;\r\n            break;\r\n        }\r\n        parent = ((DefaultMutableTreeNode) (parent.getParent()));\r\n    } \r\n    treetable.getTree().scrollPathToVisible(new TreePath(childNode.getPath()));\r\n    if ((!res) && (parent != null)) {\r\n        treetable.getTree().collapsePath(new TreePath(parent.getPath()));\r\n    }\r\n    // else\r\n    // task.setExpand(false);\r\n    (nbTasks)++;\r\n    appli.refreshProjectInfos();\r\n    return childNode;\r\n}'),(483,'final DefaultMutableTreeNode select','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',794,'net.sourceforge.ganttproject.GanttTree2.addBlankLine(javax.swing.tree.DefaultMutableTreeNode,int)',0,'public void addBlankLine(final DefaultMutableTreeNode select, final int index) {\r\n    treeModel.insertNodeInto(new BlankLineNode(), (select == null ? getRoot() : ((DefaultMutableTreeNode) (select.getParent()))), (index == (-1) ? getRoot().getChildCount() : index));\r\n    appli.setAskForSave(true);\r\n}'),(484,'final int index','int',0,73,'net.sourceforge.ganttproject.GanttTree2',794,'net.sourceforge.ganttproject.GanttTree2.addBlankLine(javax.swing.tree.DefaultMutableTreeNode,int)',0,'public void addBlankLine(final DefaultMutableTreeNode select, final int index) {\r\n    treeModel.insertNodeInto(new BlankLineNode(), (select == null ? getRoot() : ((DefaultMutableTreeNode) (select.getParent()))), (index == (-1) ? getRoot().getChildCount() : index));\r\n    appli.setAskForSave(true);\r\n}'),(485,'Object child','java.lang.Object',0,73,'net.sourceforge.ganttproject.GanttTree2',795,'net.sourceforge.ganttproject.GanttTree2.addObject(java.lang.Object,javax.swing.tree.MutableTreeNode,int)',0,'/**\r\n * Add a sub task.\r\n */\r\npublic TaskNode addObject(Object child, MutableTreeNode parent, int index) {\r\n    TaskNode childNode = new TaskNode(((Task) (child)));\r\n    if (parent == null)\r\n        parent = rootNode;\r\n\r\n    // GanttTask tmpTask = (GanttTask)(childNode.getUserObject());\r\n    // tmpTask.indentID((String)(((GanttTask)(parent.getUserObject())).getID()));\r\n    treeModel.insertNodeInto(childNode, parent, (index == (-1) ? parent.getChildCount() : index));\r\n    treetable.getTree().scrollPathToVisible(new TreePath(childNode.getPath()));\r\n    (nbTasks)++;\r\n    appli.refreshProjectInfos();\r\n    return childNode;\r\n}'),(486,'net.sourceforge.ganttproject.task.TaskNode','net.sourceforge.ganttproject.task.TaskNode',572,73,'net.sourceforge.ganttproject.GanttTree2',795,'net.sourceforge.ganttproject.GanttTree2.addObject(java.lang.Object,javax.swing.tree.MutableTreeNode,int)',1,'/**\r\n * Add a sub task.\r\n */\r\npublic TaskNode addObject(Object child, MutableTreeNode parent, int index) {\r\n    TaskNode childNode = new TaskNode(((Task) (child)));\r\n    if (parent == null)\r\n        parent = rootNode;\r\n\r\n    // GanttTask tmpTask = (GanttTask)(childNode.getUserObject());\r\n    // tmpTask.indentID((String)(((GanttTask)(parent.getUserObject())).getID()));\r\n    treeModel.insertNodeInto(childNode, parent, (index == (-1) ? parent.getChildCount() : index));\r\n    treetable.getTree().scrollPathToVisible(new TreePath(childNode.getPath()));\r\n    (nbTasks)++;\r\n    appli.refreshProjectInfos();\r\n    return childNode;\r\n}'),(487,'MutableTreeNode parent','javax.swing.tree.MutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',795,'net.sourceforge.ganttproject.GanttTree2.addObject(java.lang.Object,javax.swing.tree.MutableTreeNode,int)',0,'/**\r\n * Add a sub task.\r\n */\r\npublic TaskNode addObject(Object child, MutableTreeNode parent, int index) {\r\n    TaskNode childNode = new TaskNode(((Task) (child)));\r\n    if (parent == null)\r\n        parent = rootNode;\r\n\r\n    // GanttTask tmpTask = (GanttTask)(childNode.getUserObject());\r\n    // tmpTask.indentID((String)(((GanttTask)(parent.getUserObject())).getID()));\r\n    treeModel.insertNodeInto(childNode, parent, (index == (-1) ? parent.getChildCount() : index));\r\n    treetable.getTree().scrollPathToVisible(new TreePath(childNode.getPath()));\r\n    (nbTasks)++;\r\n    appli.refreshProjectInfos();\r\n    return childNode;\r\n}'),(488,'int index','int',0,73,'net.sourceforge.ganttproject.GanttTree2',795,'net.sourceforge.ganttproject.GanttTree2.addObject(java.lang.Object,javax.swing.tree.MutableTreeNode,int)',0,'/**\r\n * Add a sub task.\r\n */\r\npublic TaskNode addObject(Object child, MutableTreeNode parent, int index) {\r\n    TaskNode childNode = new TaskNode(((Task) (child)));\r\n    if (parent == null)\r\n        parent = rootNode;\r\n\r\n    // GanttTask tmpTask = (GanttTask)(childNode.getUserObject());\r\n    // tmpTask.indentID((String)(((GanttTask)(parent.getUserObject())).getID()));\r\n    treeModel.insertNodeInto(childNode, parent, (index == (-1) ? parent.getChildCount() : index));\r\n    treetable.getTree().scrollPathToVisible(new TreePath(childNode.getPath()));\r\n    (nbTasks)++;\r\n    appli.refreshProjectInfos();\r\n    return childNode;\r\n}'),(489,'DefaultMutableTreeNode[] array','javax.swing.tree.DefaultMutableTreeNode[]',0,73,'net.sourceforge.ganttproject.GanttTree2',832,'net.sourceforge.ganttproject.GanttTree2.getOnlyTaskNodes(javax.swing.tree.DefaultMutableTreeNode[])',0,'private TaskNode[] getOnlyTaskNodes(DefaultMutableTreeNode[] array) {\r\n    List resAsList = new ArrayList();\r\n    for (int i = 0; i < (array.length); i++) {\r\n        DefaultMutableTreeNode next = array[i];\r\n        if (next instanceof TaskNode)\r\n            resAsList.add(next);\r\n\r\n    }\r\n    return ((TaskNode[]) (resAsList.toArray(new TaskNode[0])));\r\n}'),(490,'int id','int',0,73,'net.sourceforge.ganttproject.GanttTree2',831,'net.sourceforge.ganttproject.GanttTree2.getNode(int)',0,'/**\r\n * Return the DefaultMutableTreeNode with the name name.\r\n */\r\n/* String name */\r\npublic DefaultMutableTreeNode getNode(int id) {\r\n    DefaultMutableTreeNode res;\r\n    DefaultMutableTreeNode base;\r\n    base = ((DefaultMutableTreeNode) (treetable.getTreeTableModel().getRoot()));\r\n    Enumeration e = base.preorderEnumeration();\r\n    while (e.hasMoreElements()) {\r\n        res = ((DefaultMutableTreeNode) (e.nextElement()));\r\n        if (res instanceof TaskNode)\r\n            if ((((Task) (res.getUserObject())).getTaskID()) == id) {\r\n                return res;\r\n            }\r\n\r\n    } \r\n    return null;\r\n}'),(491,'List nodesList','java.util.List',0,73,'net.sourceforge.ganttproject.GanttTree2',799,'net.sourceforge.ganttproject.GanttTree2.convertNodesListToItemList(java.util.List)',0,'public static List convertNodesListToItemList(List nodesList) {\r\n    List res = new ArrayList(nodesList.size());\r\n    Iterator itNodes = nodesList.iterator();\r\n    while (itNodes.hasNext()) {\r\n        res.add(((DefaultMutableTreeNode) (itNodes.next())).getUserObject());\r\n    } \r\n    return res;\r\n}'),(492,'Task task','net.sourceforge.ganttproject.task.Task',548,73,'net.sourceforge.ganttproject.GanttTree2',817,'net.sourceforge.ganttproject.GanttTree2.getAllChildTask(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * Return all sub task for the tree node base\r\n */\r\npublic ArrayList getAllChildTask(Task task) {\r\n    ArrayList res = new ArrayList();\r\n    if (task == null)\r\n        return null;\r\n\r\n    DefaultMutableTreeNode base = ((DefaultMutableTreeNode) (getNode(task.getTaskID())));\r\n    if (base == null)\r\n        return res;\r\n\r\n    Enumeration e = base.children();\r\n    while (e.hasMoreElements()) {\r\n        res.add(e.nextElement());\r\n    } \r\n    return res;\r\n}'),(493,'DefaultMutableTreeNode base','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',816,'net.sourceforge.ganttproject.GanttTree2.getAllChildTask(javax.swing.tree.DefaultMutableTreeNode)',0,'/**\r\n * Return all sub task for the tree node base\r\n */\r\npublic ArrayList getAllChildTask(DefaultMutableTreeNode base) {\r\n    ArrayList res = new ArrayList();\r\n    if ((base == null) || (!(base instanceof TaskNode)))\r\n        return res;\r\n\r\n    Enumeration e = base.children();\r\n    while (e.hasMoreElements()) {\r\n        Object next = e.nextElement();\r\n        if (next instanceof TaskNode)\r\n            res.add(next);\r\n\r\n    } \r\n    return res;\r\n}'),(494,'DefaultMutableTreeNode currentNode','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',864,'net.sourceforge.ganttproject.GanttTree2.removeCurrentNode(javax.swing.tree.DefaultMutableTreeNode)',0,'/**\r\n * Remove the current node.\r\n *\r\n * @param current\r\n * 		\r\n */\r\nvoid removeCurrentNode(DefaultMutableTreeNode currentNode) {\r\n    DefaultMutableTreeNode parent = ((DefaultMutableTreeNode) (currentNode.getParent()));\r\n    getTaskManager().deleteTask(((Task) (currentNode.getUserObject())));\r\n    if (parent != null) {\r\n        ((GanttTreeTableModel) (treeModel)).removeNodeFromParent(currentNode);\r\n        forwardScheduling();\r\n        (nbTasks)--;\r\n        appli.refreshProjectInfos();\r\n        return;\r\n    }\r\n}'),(495,'int row','int',0,73,'net.sourceforge.ganttproject.GanttTree2',868,'net.sourceforge.ganttproject.GanttTree2.selectTreeRow(int)',0,'/**\r\n * Select the row of the tree\r\n */\r\npublic void selectTreeRow(int row) {\r\n    treetable.getTree().setSelectionRow(row);\r\n}'),(496,'List tasksList','java.util.List',0,73,'net.sourceforge.ganttproject.GanttTree2',867,'net.sourceforge.ganttproject.GanttTree2.selectTasks(java.util.List)',0,'public void selectTasks(List tasksList) {\r\n    boolean multi = false;\r\n    Iterator it = tasksList.iterator();\r\n    if (it.hasNext())\r\n        selectTask(((Task) (it.next())), false);\r\n\r\n    while (it.hasNext())\r\n        selectTask(((Task) (it.next())), true);\r\n\r\n}'),(497,'Task task','net.sourceforge.ganttproject.task.Task',548,73,'net.sourceforge.ganttproject.GanttTree2',866,'net.sourceforge.ganttproject.GanttTree2.selectTask(net.sourceforge.ganttproject.task.Task,boolean)',0,'public void selectTask(Task task, boolean multipleSelection) {\r\n    DefaultMutableTreeNode taskNode = null;\r\n    for (Enumeration nodes = rootNode.preorderEnumeration(); nodes.hasMoreElements();) {\r\n        DefaultMutableTreeNode nextNode = ((DefaultMutableTreeNode) (nodes.nextElement()));\r\n        if (!(nextNode instanceof TaskNode))\r\n            continue;\r\n\r\n        if (nextNode.getUserObject().equals(task)) {\r\n            taskNode = nextNode;\r\n            break;\r\n        }\r\n    }\r\n    if (taskNode != null) {\r\n        TreePath taskPath = new TreePath(taskNode.getPath());\r\n        if (multipleSelection)\r\n            if (treetable.getTree().getSelectionModel().isPathSelected(taskPath))\r\n                treetable.getTree().getSelectionModel().removeSelectionPath(taskPath);\r\n            else\r\n                treetable.getTree().getSelectionModel().addSelectionPath(taskPath);\r\n\r\n        else\r\n            treetable.getTree().getSelectionModel().setSelectionPath(taskPath);\r\n\r\n    }\r\n    TreePath[] paths = treetable.getTree().getSelectionModel().getSelectionPaths();\r\n    Mediator.getTaskSelectionManager().clear();\r\n    if (paths != null)\r\n        for (int i = 0; i < (paths.length); i++) {\r\n            TaskNode tn = ((TaskNode) (paths[i].getLastPathComponent()));\r\n            if (!(tn.isRoot()))\r\n                Mediator.getTaskSelectionManager().addTask(((Task) (tn.getUserObject())));\r\n\r\n        }\r\n\r\n}'),(498,'boolean multipleSelection','boolean',0,73,'net.sourceforge.ganttproject.GanttTree2',866,'net.sourceforge.ganttproject.GanttTree2.selectTask(net.sourceforge.ganttproject.task.Task,boolean)',0,'public void selectTask(Task task, boolean multipleSelection) {\r\n    DefaultMutableTreeNode taskNode = null;\r\n    for (Enumeration nodes = rootNode.preorderEnumeration(); nodes.hasMoreElements();) {\r\n        DefaultMutableTreeNode nextNode = ((DefaultMutableTreeNode) (nodes.nextElement()));\r\n        if (!(nextNode instanceof TaskNode))\r\n            continue;\r\n\r\n        if (nextNode.getUserObject().equals(task)) {\r\n            taskNode = nextNode;\r\n            break;\r\n        }\r\n    }\r\n    if (taskNode != null) {\r\n        TreePath taskPath = new TreePath(taskNode.getPath());\r\n        if (multipleSelection)\r\n            if (treetable.getTree().getSelectionModel().isPathSelected(taskPath))\r\n                treetable.getTree().getSelectionModel().removeSelectionPath(taskPath);\r\n            else\r\n                treetable.getTree().getSelectionModel().addSelectionPath(taskPath);\r\n\r\n        else\r\n            treetable.getTree().getSelectionModel().setSelectionPath(taskPath);\r\n\r\n    }\r\n    TreePath[] paths = treetable.getTree().getSelectionModel().getSelectionPaths();\r\n    Mediator.getTaskSelectionManager().clear();\r\n    if (paths != null)\r\n        for (int i = 0; i < (paths.length); i++) {\r\n            TaskNode tn = ((TaskNode) (paths[i].getLastPathComponent()));\r\n            if (!(tn.isRoot()))\r\n                Mediator.getTaskSelectionManager().addTask(((Task) (tn.getUserObject())));\r\n\r\n        }\r\n\r\n}'),(499,'Task node','net.sourceforge.ganttproject.task.Task',548,73,'net.sourceforge.ganttproject.GanttTree2',822,'net.sourceforge.ganttproject.GanttTree2.getFatherNode(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * Returne the mother task.\r\n */\r\npublic DefaultMutableTreeNode getFatherNode(Task node) {\r\n    if (node == null) {\r\n        return null;\r\n    }\r\n    DefaultMutableTreeNode tmp = ((DefaultMutableTreeNode) (getNode(node.getTaskID())));\r\n    if (tmp == null) {\r\n        return null;\r\n    }\r\n    return ((DefaultMutableTreeNode) (tmp.getParent()));\r\n}'),(500,'DefaultMutableTreeNode node','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',821,'net.sourceforge.ganttproject.GanttTree2.getFatherNode(javax.swing.tree.DefaultMutableTreeNode)',0,'/**\r\n * Returne the mother task.\r\n */\r\npublic DefaultMutableTreeNode getFatherNode(DefaultMutableTreeNode node) {\r\n    if (node == null) {\r\n        return null;\r\n    }\r\n    return ((DefaultMutableTreeNode) (node.getParent()));\r\n}'),(501,'Object o','java.lang.Object',0,72,'net.sourceforge.ganttproject.GanttTree2$HiddenTask',907,'net.sourceforge.ganttproject.GanttTree2$HiddenTask.compareTo(java.lang.Object)',0,'/**\r\n *\r\n *\r\n * @see java.lang.Comparable#compareTo(java.lang.Object)\r\n */\r\npublic int compareTo(Object o) {\r\n    if (o == null)\r\n        return 0;\r\n\r\n    if (o instanceof GanttTree2.HiddenTask) {\r\n        GanttTree2.HiddenTask ht = ((GanttTree2.HiddenTask) (o));\r\n        return (this.index) - (ht.index);\r\n    }\r\n    return 0;\r\n}'),(502,'TaskNode node','net.sourceforge.ganttproject.task.TaskNode',572,73,'net.sourceforge.ganttproject.GanttTree2',865,'net.sourceforge.ganttproject.GanttTree2.restoreExpand(net.sourceforge.ganttproject.task.TaskNode)',0,'/**\r\n * Retores the expand state of the node and its children.\r\n *\r\n * @param node\r\n * 		\r\n */\r\nprivate void restoreExpand(TaskNode node) {\r\n    Task task = ((Task) (node.getUserObject()));\r\n    boolean expand = task.getExpand();\r\n    Enumeration enumeration = node.children();\r\n    while (enumeration.hasMoreElements())\r\n        restoreExpand(((TaskNode) (enumeration.nextElement())));\r\n\r\n    if (expand)\r\n        getTreeTable().getTree().expandPath(new TreePath(node.getPath()));\r\n    else\r\n        getTreeTable().getTree().collapsePath(new TreePath(node.getPath()));\r\n\r\n    task.setExpand(expand);\r\n}'),(503,'DefaultMutableTreeNode node','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',863,'net.sourceforge.ganttproject.GanttTree2.removeChild(javax.swing.tree.DefaultMutableTreeNode)',0,'public DefaultMutableTreeNode removeChild(DefaultMutableTreeNode node) {\r\n    DefaultMutableTreeNode nodeCopy = new DefaultMutableTreeNode(node.getUserObject());\r\n    Enumeration children = node.children();\r\n    while (children.hasMoreElements()) {\r\n        DefaultMutableTreeNode child = ((DefaultMutableTreeNode) (children.nextElement()));\r\n        DefaultMutableTreeNode childCopy = this.removeChild(child);\r\n        nodeCopy.add(childCopy);\r\n        child.removeFromParent();\r\n        treeModel.nodesWereRemoved(node, new int[]{ 0 }, new Object[]{ child });\r\n    } \r\n    return nodeCopy;\r\n}'),(504,'DefaultMutableTreeNode node','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',856,'net.sourceforge.ganttproject.GanttTree2.insertChild(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultMutableTreeNode)',0,'public void insertChild(DefaultMutableTreeNode node, DefaultMutableTreeNode copy) {\r\n    Enumeration children = copy.children();\r\n    int index = 0;\r\n    while (children.hasMoreElements()) {\r\n        DefaultMutableTreeNode childCopy = ((DefaultMutableTreeNode) (children.nextElement()));\r\n        DefaultMutableTreeNode child = new DefaultMutableTreeNode(childCopy.getUserObject());\r\n        node.insert(child, index);\r\n        treeModel.nodesWereInserted(node, new int[]{ index });\r\n        this.insertChild(child, childCopy);\r\n        index++;\r\n    } \r\n}'),(505,'DefaultMutableTreeNode copy','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',856,'net.sourceforge.ganttproject.GanttTree2.insertChild(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultMutableTreeNode)',0,'public void insertChild(DefaultMutableTreeNode node, DefaultMutableTreeNode copy) {\r\n    Enumeration children = copy.children();\r\n    int index = 0;\r\n    while (children.hasMoreElements()) {\r\n        DefaultMutableTreeNode childCopy = ((DefaultMutableTreeNode) (children.nextElement()));\r\n        DefaultMutableTreeNode child = new DefaultMutableTreeNode(childCopy.getUserObject());\r\n        node.insert(child, index);\r\n        treeModel.nodesWereInserted(node, new int[]{ index });\r\n        this.insertChild(child, childCopy);\r\n        index++;\r\n    } \r\n}'),(506,'DefaultMutableTreeNode moved','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',814,'net.sourceforge.ganttproject.GanttTree2.expandRefresh(javax.swing.tree.DefaultMutableTreeNode)',0,'// update 21/03/2003\r\n/**\r\n * Refresh the expantion (recursive function)\r\n */\r\npublic void expandRefresh(DefaultMutableTreeNode moved) {\r\n    if (moved instanceof TaskNode) {\r\n        Task movedTask = ((Task) (moved.getUserObject()));\r\n        // if (expand.contains(new Integer(movedTask.getTaskID()))) {\r\n        if (movedTask.getExpand())\r\n            treetable.getTree().expandPath(new TreePath(moved.getPath()));\r\n\r\n        Enumeration children = moved.children();\r\n        while (children.hasMoreElements()) {\r\n            expandRefresh(((DefaultMutableTreeNode) (children.nextElement())));\r\n        } \r\n    }\r\n}'),(507,'String taskToMove','java.lang.String',0,73,'net.sourceforge.ganttproject.GanttTree2',862,'net.sourceforge.ganttproject.GanttTree2.refreshAllChild(java.lang.String)',0,'/**\r\n * In elder version, this function refresh all the related tasks to the\r\n * taskToMove. In the new version, this function is same as\r\n * forwardScheduling(). It will refresh all the tasks.\r\n *\r\n * @param taskToMove\r\n * 		\r\n */\r\npublic void refreshAllChild(String taskToMove) {\r\n    forwardScheduling();\r\n}'),(508,'AdjustmentEvent e','java.awt.event.AdjustmentEvent',0,66,'net.sourceforge.ganttproject.GanttTree2$GanttAdjustmentListener',882,'net.sourceforge.ganttproject.GanttTree2$GanttAdjustmentListener.adjustmentValueChanged(java.awt.event.AdjustmentEvent)',0,'public void adjustmentValueChanged(AdjustmentEvent e) {\r\n    if ((area) != null) {\r\n        int v = e.getValue();\r\n        area.setScrollBar(v);\r\n        area.repaint();\r\n    }\r\n}'),(509,'TreeExpansionEvent e','javax.swing.event.TreeExpansionEvent',0,70,'net.sourceforge.ganttproject.GanttTree2$GanttTreeExpansionListener',900,'net.sourceforge.ganttproject.GanttTree2$GanttTreeExpansionListener.treeExpanded(javax.swing.event.TreeExpansionEvent)',0,'/**\r\n * Expansion\r\n */\r\npublic void treeExpanded(TreeExpansionEvent e) {\r\n    if ((area) != null) {\r\n        area.repaint();\r\n    }\r\n    DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (e.getPath().getLastPathComponent()));\r\n    Task task = ((Task) (node.getUserObject()));\r\n    /* if(!expand.contains(new Integer(task.getTaskID()))) {\n    expand.add(new Integer(task.getTaskID()));\n    appli.setAskForSave(true); }\n     */\r\n    task.setExpand(true);\r\n    appli.setAskForSave(true);\r\n}'),(510,'TreeExpansionEvent e','javax.swing.event.TreeExpansionEvent',0,70,'net.sourceforge.ganttproject.GanttTree2$GanttTreeExpansionListener',899,'net.sourceforge.ganttproject.GanttTree2$GanttTreeExpansionListener.treeCollapsed(javax.swing.event.TreeExpansionEvent)',0,'/**\r\n * Collapse\r\n */\r\npublic void treeCollapsed(TreeExpansionEvent e) {\r\n    if ((area) != null) {\r\n        area.repaint();\r\n    }\r\n    DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (e.getPath().getLastPathComponent()));\r\n    Task task = ((Task) (node.getUserObject()));\r\n    /* int index = expand.indexOf(new Integer(task.getTaskID())); if\n    (index >= 0) { expand.remove(index); appli.setAskForSave(true); }\n     */\r\n    task.setExpand(false);\r\n    appli.setAskForSave(true);\r\n}'),(511,'TreeModelEvent e','javax.swing.event.TreeModelEvent',0,71,'net.sourceforge.ganttproject.GanttTree2$GanttTreeModelListener',902,'net.sourceforge.ganttproject.GanttTree2$GanttTreeModelListener.treeNodesChanged(javax.swing.event.TreeModelEvent)',0,'/**\r\n * modify a node\r\n */\r\npublic void treeNodesChanged(TreeModelEvent e) {\r\n    if ((area) != null) {\r\n        area.repaint();\r\n    }\r\n}'),(512,'TreeModelEvent e','javax.swing.event.TreeModelEvent',0,71,'net.sourceforge.ganttproject.GanttTree2$GanttTreeModelListener',903,'net.sourceforge.ganttproject.GanttTree2$GanttTreeModelListener.treeNodesInserted(javax.swing.event.TreeModelEvent)',0,'/**\r\n * Insert a new node.\r\n */\r\npublic void treeNodesInserted(TreeModelEvent e) {\r\n    DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (e.getTreePath().getLastPathComponent()));\r\n    Task task = ((Task) (node.getUserObject()));\r\n    /* if (!expand.contains(new Integer(task.getTaskID()))) {\n    expand.add(new Integer(task.getTaskID())); }\n     */\r\n    // task.setExpand(true);\r\n    if ((area) != null)\r\n        area.repaint();\r\n\r\n}'),(513,'TreeModelEvent e','javax.swing.event.TreeModelEvent',0,71,'net.sourceforge.ganttproject.GanttTree2$GanttTreeModelListener',904,'net.sourceforge.ganttproject.GanttTree2$GanttTreeModelListener.treeNodesRemoved(javax.swing.event.TreeModelEvent)',0,'/**\r\n * Delete a node.\r\n */\r\npublic void treeNodesRemoved(TreeModelEvent e) {\r\n    if ((area) != null) {\r\n        area.repaint();\r\n    }\r\n}'),(514,'TreeModelEvent e','javax.swing.event.TreeModelEvent',0,71,'net.sourceforge.ganttproject.GanttTree2$GanttTreeModelListener',905,'net.sourceforge.ganttproject.GanttTree2$GanttTreeModelListener.treeStructureChanged(javax.swing.event.TreeModelEvent)',0,'/**\r\n * Structur change.\r\n */\r\npublic void treeStructureChanged(TreeModelEvent e) {\r\n    if ((area) != null) {\r\n        area.repaint();\r\n    }\r\n}'),(515,'DropTargetDragEvent dtde','java.awt.dnd.DropTargetDragEvent',0,69,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener',891,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener.dragEnter(java.awt.dnd.DropTargetDragEvent)',0,'public void dragEnter(DropTargetDragEvent dtde) {\r\n    if ((ghostImage) == null) {\r\n        // In case if you drag a file from out and its not an\r\n        // acceptable, and it can crash if the image is null\r\n        ghostImage = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB_PRE);\r\n    }\r\n    if (!(isDragAcceptable(dtde)))\r\n        dtde.rejectDrag();\r\n    else\r\n        dtde.acceptDrag(dtde.getDropAction());\r\n\r\n}'),(516,'DropTargetDragEvent dtde','java.awt.dnd.DropTargetDragEvent',0,69,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener',893,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener.dragOver(java.awt.dnd.DropTargetDragEvent)',0,'public void dragOver(DropTargetDragEvent dtde) {\r\n    if (!(isDragAcceptable(dtde)))\r\n        dtde.rejectDrag();\r\n    else\r\n        dtde.acceptDrag(dtde.getDropAction());\r\n\r\n    // Even if the mouse is not moving, this method is still invoked\r\n    // 10 times per second\r\n    Point pt = dtde.getLocation();\r\n    if (pt.equals(lastEventPoint))\r\n        return;\r\n\r\n    lastEventPoint = pt;\r\n    Graphics2D g2 = ((Graphics2D) (treetable.getGraphics()));\r\n    // If a drag image is not supported by the platform, then draw our\r\n    // own drag image\r\n    if (!(DragSource.isDragImageSupported())) {\r\n        // Rub out the last ghost image and cue line\r\n        treetable.paintImmediately(ghostImageRect.getBounds());\r\n        // And remember where we are about to draw the new ghost image\r\n        ghostImageRect.setRect(((pt.x) - (offsetPoint.x)), ((pt.y) - (offsetPoint.y)), ghostImage.getWidth(), ghostImage.getHeight());\r\n        g2.drawImage(ghostImage, AffineTransform.getTranslateInstance(ghostImageRect.getX(), ghostImageRect.getY()), null);\r\n    } else {\r\n        // Just rub out the last cue line\r\n        treetable.paintImmediately(cueLineRect.getBounds());\r\n    }\r\n    TreePath path = treetable.getTree().getClosestPathForLocation(pt.x, pt.y);\r\n    if (!(path == (lastPath))) {\r\n        lastPath = path;\r\n        hoverTimer.restart();\r\n    }\r\n    // In any case draw (over the ghost image if necessary) a cue line\r\n    // indicating where a drop will occur\r\n    Rectangle raPath = treetable.getTree().getPathBounds(path);\r\n    if (raPath == null)\r\n        raPath = new Rectangle(1, 1);\r\n\r\n    cueLineRect.setRect(0, ((raPath.y) + ((int) (raPath.getHeight()))), getWidth(), 2);\r\n    g2.setColor(cueLineColor);\r\n    g2.fill(cueLineRect);\r\n    // And include the cue line in the area to be rubbed out next time\r\n    ghostImageRect = ghostImageRect.createUnion(cueLineRect);\r\n}'),(517,'DropTargetDragEvent dtde','java.awt.dnd.DropTargetDragEvent',0,69,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener',895,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener.dropActionChanged(java.awt.dnd.DropTargetDragEvent)',0,'public void dropActionChanged(DropTargetDragEvent dtde) {\r\n    if (!(isDragAcceptable(dtde)))\r\n        dtde.rejectDrag();\r\n    else\r\n        dtde.acceptDrag(dtde.getDropAction());\r\n\r\n}'),(518,'DropTargetDropEvent dtde','java.awt.dnd.DropTargetDropEvent',0,69,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener',894,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener.drop(java.awt.dnd.DropTargetDropEvent)',0,'public void drop(DropTargetDropEvent dtde) {\r\n    if (!(isDropAcceptable(dtde))) {\r\n        dtde.rejectDrop();\r\n        return;\r\n    }\r\n    // Prevent hover timer from doing an unwanted expandPath or\r\n    // collapsePath\r\n    hoverTimer.stop();\r\n    dtde.acceptDrop(dtde.getDropAction());\r\n    Transferable transferable = dtde.getTransferable();\r\n    DataFlavor[] flavors = transferable.getTransferDataFlavors();\r\n    for (int i = 0; i < (flavors.length); i++) {\r\n        DataFlavor flavor = flavors[i];\r\n        if (flavor.isMimeTypeEqual(DataFlavor.javaJVMLocalObjectMimeType)) {\r\n            try {\r\n                Point pt = dtde.getLocation();\r\n                DefaultMutableTreeNode target = ((DefaultMutableTreeNode) (treetable.getTree().getClosestPathForLocation(pt.x, pt.y).getLastPathComponent()));\r\n                TreePath pathSource = ((TreePath) (transferable.getTransferData(flavor)));\r\n                DefaultMutableTreeNode source = ((DefaultMutableTreeNode) (pathSource.getLastPathComponent()));\r\n                TreePath pathNewChild = null;\r\n                TreeNode sourceFather = source.getParent();\r\n                int index = sourceFather.getIndex(source);\r\n                source.removeFromParent();\r\n                treeModel.nodesWereRemoved(sourceFather, new int[]{ index }, new Object[]{ source });\r\n                ((GanttTreeTableModel) (treeModel)).insertNodeInto(source, target, 0);\r\n                pathNewChild = new TreePath(((DefaultMutableTreeNode) (pathSource.getLastPathComponent())).getPath());\r\n                if (pathNewChild != null) {\r\n                    treetable.getTree().setSelectionPath(pathNewChild);// Mark\r\n\r\n                    // this\r\n                    // as\r\n                    // the\r\n                    // selected\r\n                    // path\r\n                    // in\r\n                    // the\r\n                    // tree\r\n                }\r\n                // refreshAllFather(source.getUserObject().toString());\r\n                expandRefresh(source);\r\n                forwardScheduling();\r\n                area.repaint();\r\n                appli.setAskForSave(true);\r\n                break;// No need to check remaining flavors\r\n\r\n            } catch (UnsupportedFlavorException ufe) {\r\n                System.out.println(ufe);\r\n                dtde.dropComplete(false);\r\n                return;\r\n            } catch (IOException ioe) {\r\n                System.out.println(ioe);\r\n                dtde.dropComplete(false);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    dtde.dropComplete(true);\r\n}'),(519,'DropTargetEvent dte','java.awt.dnd.DropTargetEvent',0,69,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener',892,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener.dragExit(java.awt.dnd.DropTargetEvent)',0,'public void dragExit(DropTargetEvent dte) {\r\n    if (!(DragSource.isDragImageSupported())) {\r\n        repaint(ghostImageRect.getBounds());\r\n    }\r\n    treetable.repaint();\r\n}'),(520,'DropTargetDragEvent e','java.awt.dnd.DropTargetDragEvent',0,69,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener',896,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener.isDragAcceptable(java.awt.dnd.DropTargetDragEvent)',0,'public boolean isDragAcceptable(DropTargetDragEvent e) {\r\n    // Only accept COPY or MOVE gestures (ie LINK is not supported)\r\n    if (((e.getDropAction()) & (DnDConstants.ACTION_COPY_OR_MOVE)) == 0) {\r\n        return false;\r\n    }\r\n    // Only accept this particular flavor\r\n    if (!(e.isDataFlavorSupported(GanttTree2.GanttTransferableTreePath.TREEPATH_FLAVOR))) {\r\n        return false;\r\n    }\r\n    // Do not accept dropping on the source node\r\n    Point pt = e.getLocation();\r\n    TreePath path = treetable.getTree().getClosestPathForLocation(pt.x, pt.y);\r\n    if (dragPath.isDescendant(path)) {\r\n        return false;\r\n    }\r\n    if (path.equals(dragPath)) {\r\n        return false;\r\n    }\r\n    // Check if the task is a milestone task\r\n    Task task = ((Task) (((DefaultMutableTreeNode) (path.getLastPathComponent())).getUserObject()));\r\n    if (task.isMilestone())\r\n        return false;\r\n\r\n    return true;\r\n}'),(521,'DropTargetDropEvent e','java.awt.dnd.DropTargetDropEvent',0,69,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener',897,'net.sourceforge.ganttproject.GanttTree2$GanttTreeDropListener.isDropAcceptable(java.awt.dnd.DropTargetDropEvent)',0,'public boolean isDropAcceptable(DropTargetDropEvent e) {\r\n    // Only accept COPY or MOVE gestures (ie LINK is not supported)\r\n    if (((e.getDropAction()) & (DnDConstants.ACTION_COPY_OR_MOVE)) == 0) {\r\n        return false;\r\n    }\r\n    // Only accept this particular flavor\r\n    if (!(e.isDataFlavorSupported(GanttTree2.GanttTransferableTreePath.TREEPATH_FLAVOR))) {\r\n        return false;\r\n    }\r\n    // prohibit dropping onto the drag source\r\n    Point pt = e.getLocation();\r\n    TreePath path = treetable.getTree().getClosestPathForLocation(pt.x, pt.y);\r\n    if (path.equals(dragPath)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}'),(522,'DataFlavor flavor','java.awt.datatransfer.DataFlavor',0,67,'net.sourceforge.ganttproject.GanttTree2$GanttTransferableTreePath',886,'net.sourceforge.ganttproject.GanttTree2$GanttTransferableTreePath.isDataFlavorSupported(java.awt.datatransfer.DataFlavor)',0,'public boolean isDataFlavorSupported(DataFlavor flavor) {\r\n    return Arrays.asList(_flavors).contains(flavor);\r\n}'),(523,'DataFlavor flavor','java.awt.datatransfer.DataFlavor',0,67,'net.sourceforge.ganttproject.GanttTree2$GanttTransferableTreePath',884,'net.sourceforge.ganttproject.GanttTree2$GanttTransferableTreePath.getTransferData(java.awt.datatransfer.DataFlavor)',0,'public synchronized Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException {\r\n    // DataFlavor.javaJVMLocalObjectMimeType))\r\n    if (flavor.isMimeTypeEqual(GanttTree2.GanttTransferableTreePath.TREEPATH_FLAVOR.getMimeType()))\r\n        return _path;\r\n    else\r\n        throw new UnsupportedFlavorException(flavor);\r\n\r\n}'),(524,'JTree tree','javax.swing.JTree',0,68,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer',889,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    Task task = ((Task) (((DefaultMutableTreeNode) (value)).getUserObject()));// getTask(value.toString());\r\n\r\n    if (task == null) {\r\n        return this;\r\n    }\r\n    int type = 0;\r\n    setFont(Fonts.GANTT_TREE_FONT);\r\n    if (task.isMilestone()) {\r\n        setIcon(new ImageIcon(getClass().getResource(\"/icons/meeting.gif\")));\r\n        type = 1;\r\n    } else\r\n        if (leaf) {\r\n            if ((task.getPriority()) == (GanttTask.LOW)) {\r\n                setIcon(new ImageIcon(getClass().getResource(\"/icons/task1.gif\")));\r\n            } else\r\n                if ((task.getPriority()) == (GanttTask.NORMAL)) {\r\n                    setIcon(new ImageIcon(getClass().getResource(\"/icons/task.gif\")));\r\n                } else\r\n                    if ((task.getPriority()) == (GanttTask.HIGHT)) {\r\n                        setIcon(new ImageIcon(getClass().getResource(\"/icons/task2.gif\")));\r\n                    }\r\n\r\n\r\n            type = 2;\r\n        } else {\r\n            setIcon(new ImageIcon(getClass().getResource(\"/icons/mtask.gif\")));\r\n            setFont(Fonts.GANTT_TREE_FONT2);\r\n        }\r\n\r\n    setText(task.toString());\r\n    setToolTipText(getToolTip(task, type));\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : (row % 2) == 0 ? Color.white : new Color(((float) (0.933)), ((float) (0.933)), ((float) (0.933)))));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(525,'Object value','java.lang.Object',0,68,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer',889,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    Task task = ((Task) (((DefaultMutableTreeNode) (value)).getUserObject()));// getTask(value.toString());\r\n\r\n    if (task == null) {\r\n        return this;\r\n    }\r\n    int type = 0;\r\n    setFont(Fonts.GANTT_TREE_FONT);\r\n    if (task.isMilestone()) {\r\n        setIcon(new ImageIcon(getClass().getResource(\"/icons/meeting.gif\")));\r\n        type = 1;\r\n    } else\r\n        if (leaf) {\r\n            if ((task.getPriority()) == (GanttTask.LOW)) {\r\n                setIcon(new ImageIcon(getClass().getResource(\"/icons/task1.gif\")));\r\n            } else\r\n                if ((task.getPriority()) == (GanttTask.NORMAL)) {\r\n                    setIcon(new ImageIcon(getClass().getResource(\"/icons/task.gif\")));\r\n                } else\r\n                    if ((task.getPriority()) == (GanttTask.HIGHT)) {\r\n                        setIcon(new ImageIcon(getClass().getResource(\"/icons/task2.gif\")));\r\n                    }\r\n\r\n\r\n            type = 2;\r\n        } else {\r\n            setIcon(new ImageIcon(getClass().getResource(\"/icons/mtask.gif\")));\r\n            setFont(Fonts.GANTT_TREE_FONT2);\r\n        }\r\n\r\n    setText(task.toString());\r\n    setToolTipText(getToolTip(task, type));\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : (row % 2) == 0 ? Color.white : new Color(((float) (0.933)), ((float) (0.933)), ((float) (0.933)))));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(526,'boolean selected','boolean',0,68,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer',889,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    Task task = ((Task) (((DefaultMutableTreeNode) (value)).getUserObject()));// getTask(value.toString());\r\n\r\n    if (task == null) {\r\n        return this;\r\n    }\r\n    int type = 0;\r\n    setFont(Fonts.GANTT_TREE_FONT);\r\n    if (task.isMilestone()) {\r\n        setIcon(new ImageIcon(getClass().getResource(\"/icons/meeting.gif\")));\r\n        type = 1;\r\n    } else\r\n        if (leaf) {\r\n            if ((task.getPriority()) == (GanttTask.LOW)) {\r\n                setIcon(new ImageIcon(getClass().getResource(\"/icons/task1.gif\")));\r\n            } else\r\n                if ((task.getPriority()) == (GanttTask.NORMAL)) {\r\n                    setIcon(new ImageIcon(getClass().getResource(\"/icons/task.gif\")));\r\n                } else\r\n                    if ((task.getPriority()) == (GanttTask.HIGHT)) {\r\n                        setIcon(new ImageIcon(getClass().getResource(\"/icons/task2.gif\")));\r\n                    }\r\n\r\n\r\n            type = 2;\r\n        } else {\r\n            setIcon(new ImageIcon(getClass().getResource(\"/icons/mtask.gif\")));\r\n            setFont(Fonts.GANTT_TREE_FONT2);\r\n        }\r\n\r\n    setText(task.toString());\r\n    setToolTipText(getToolTip(task, type));\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : (row % 2) == 0 ? Color.white : new Color(((float) (0.933)), ((float) (0.933)), ((float) (0.933)))));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(527,'boolean expanded','boolean',0,68,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer',889,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    Task task = ((Task) (((DefaultMutableTreeNode) (value)).getUserObject()));// getTask(value.toString());\r\n\r\n    if (task == null) {\r\n        return this;\r\n    }\r\n    int type = 0;\r\n    setFont(Fonts.GANTT_TREE_FONT);\r\n    if (task.isMilestone()) {\r\n        setIcon(new ImageIcon(getClass().getResource(\"/icons/meeting.gif\")));\r\n        type = 1;\r\n    } else\r\n        if (leaf) {\r\n            if ((task.getPriority()) == (GanttTask.LOW)) {\r\n                setIcon(new ImageIcon(getClass().getResource(\"/icons/task1.gif\")));\r\n            } else\r\n                if ((task.getPriority()) == (GanttTask.NORMAL)) {\r\n                    setIcon(new ImageIcon(getClass().getResource(\"/icons/task.gif\")));\r\n                } else\r\n                    if ((task.getPriority()) == (GanttTask.HIGHT)) {\r\n                        setIcon(new ImageIcon(getClass().getResource(\"/icons/task2.gif\")));\r\n                    }\r\n\r\n\r\n            type = 2;\r\n        } else {\r\n            setIcon(new ImageIcon(getClass().getResource(\"/icons/mtask.gif\")));\r\n            setFont(Fonts.GANTT_TREE_FONT2);\r\n        }\r\n\r\n    setText(task.toString());\r\n    setToolTipText(getToolTip(task, type));\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : (row % 2) == 0 ? Color.white : new Color(((float) (0.933)), ((float) (0.933)), ((float) (0.933)))));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(528,'boolean leaf','boolean',0,68,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer',889,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    Task task = ((Task) (((DefaultMutableTreeNode) (value)).getUserObject()));// getTask(value.toString());\r\n\r\n    if (task == null) {\r\n        return this;\r\n    }\r\n    int type = 0;\r\n    setFont(Fonts.GANTT_TREE_FONT);\r\n    if (task.isMilestone()) {\r\n        setIcon(new ImageIcon(getClass().getResource(\"/icons/meeting.gif\")));\r\n        type = 1;\r\n    } else\r\n        if (leaf) {\r\n            if ((task.getPriority()) == (GanttTask.LOW)) {\r\n                setIcon(new ImageIcon(getClass().getResource(\"/icons/task1.gif\")));\r\n            } else\r\n                if ((task.getPriority()) == (GanttTask.NORMAL)) {\r\n                    setIcon(new ImageIcon(getClass().getResource(\"/icons/task.gif\")));\r\n                } else\r\n                    if ((task.getPriority()) == (GanttTask.HIGHT)) {\r\n                        setIcon(new ImageIcon(getClass().getResource(\"/icons/task2.gif\")));\r\n                    }\r\n\r\n\r\n            type = 2;\r\n        } else {\r\n            setIcon(new ImageIcon(getClass().getResource(\"/icons/mtask.gif\")));\r\n            setFont(Fonts.GANTT_TREE_FONT2);\r\n        }\r\n\r\n    setText(task.toString());\r\n    setToolTipText(getToolTip(task, type));\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : (row % 2) == 0 ? Color.white : new Color(((float) (0.933)), ((float) (0.933)), ((float) (0.933)))));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(529,'int row','int',0,68,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer',889,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    Task task = ((Task) (((DefaultMutableTreeNode) (value)).getUserObject()));// getTask(value.toString());\r\n\r\n    if (task == null) {\r\n        return this;\r\n    }\r\n    int type = 0;\r\n    setFont(Fonts.GANTT_TREE_FONT);\r\n    if (task.isMilestone()) {\r\n        setIcon(new ImageIcon(getClass().getResource(\"/icons/meeting.gif\")));\r\n        type = 1;\r\n    } else\r\n        if (leaf) {\r\n            if ((task.getPriority()) == (GanttTask.LOW)) {\r\n                setIcon(new ImageIcon(getClass().getResource(\"/icons/task1.gif\")));\r\n            } else\r\n                if ((task.getPriority()) == (GanttTask.NORMAL)) {\r\n                    setIcon(new ImageIcon(getClass().getResource(\"/icons/task.gif\")));\r\n                } else\r\n                    if ((task.getPriority()) == (GanttTask.HIGHT)) {\r\n                        setIcon(new ImageIcon(getClass().getResource(\"/icons/task2.gif\")));\r\n                    }\r\n\r\n\r\n            type = 2;\r\n        } else {\r\n            setIcon(new ImageIcon(getClass().getResource(\"/icons/mtask.gif\")));\r\n            setFont(Fonts.GANTT_TREE_FONT2);\r\n        }\r\n\r\n    setText(task.toString());\r\n    setToolTipText(getToolTip(task, type));\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : (row % 2) == 0 ? Color.white : new Color(((float) (0.933)), ((float) (0.933)), ((float) (0.933)))));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(530,'boolean hasFocus','boolean',0,68,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer',889,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    Task task = ((Task) (((DefaultMutableTreeNode) (value)).getUserObject()));// getTask(value.toString());\r\n\r\n    if (task == null) {\r\n        return this;\r\n    }\r\n    int type = 0;\r\n    setFont(Fonts.GANTT_TREE_FONT);\r\n    if (task.isMilestone()) {\r\n        setIcon(new ImageIcon(getClass().getResource(\"/icons/meeting.gif\")));\r\n        type = 1;\r\n    } else\r\n        if (leaf) {\r\n            if ((task.getPriority()) == (GanttTask.LOW)) {\r\n                setIcon(new ImageIcon(getClass().getResource(\"/icons/task1.gif\")));\r\n            } else\r\n                if ((task.getPriority()) == (GanttTask.NORMAL)) {\r\n                    setIcon(new ImageIcon(getClass().getResource(\"/icons/task.gif\")));\r\n                } else\r\n                    if ((task.getPriority()) == (GanttTask.HIGHT)) {\r\n                        setIcon(new ImageIcon(getClass().getResource(\"/icons/task2.gif\")));\r\n                    }\r\n\r\n\r\n            type = 2;\r\n        } else {\r\n            setIcon(new ImageIcon(getClass().getResource(\"/icons/mtask.gif\")));\r\n            setFont(Fonts.GANTT_TREE_FONT2);\r\n        }\r\n\r\n    setText(task.toString());\r\n    setToolTipText(getToolTip(task, type));\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : (row % 2) == 0 ? Color.white : new Color(((float) (0.933)), ((float) (0.933)), ((float) (0.933)))));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(531,'Task task','net.sourceforge.ganttproject.task.Task',548,68,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer',888,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer.getToolTip(net.sourceforge.ganttproject.task.Task,int)',0,'public String getToolTip(Task task, int type) {\r\n    String res = \"<html><body bgcolor=#EAEAEA>\";\r\n    res += (((\"<b>\" + (task.toString())) + \"</b>\") + \"<br>\") + (task.getStart());\r\n    if (type != 1) {\r\n        res += \"  -  \" + (task.getEnd());\r\n    }\r\n    if (type == 1) {\r\n        res += \"<br>\" + (language.getText(\"meetingPoint\"));\r\n    }\r\n    res += \"<br><b>Pri</b> \" + ((task.getPriority()) == 0 ? language.getText(\"low\") : (task.getPriority()) == 1 ? language.getText(\"normal\") : language.getText(\"hight\"));\r\n    ResourceAssignment[] assignments = task.getAssignments();\r\n    if ((assignments.length) > 0) {\r\n        res += \"<br><b>Assign to </b><br>\";\r\n        for (int j = 0; j < (assignments.length); j++) {\r\n            res += (\"&nbsp;&nbsp;\" + (assignments[j].getResource().getName())) + \"<br>\";\r\n        }\r\n    }\r\n    if (((task.getNotes()) != null) && (!(task.getNotes().equals(\"\")))) {\r\n        String notes = task.getNotes();\r\n        res += \"<br><b>Notes </b>: \";\r\n        int maxLength = 150;\r\n        if ((notes.length()) > maxLength) {\r\n            notes = notes.substring(0, maxLength);\r\n            int i = maxLength - 1;\r\n            for (; (i >= 0) && ((notes.charAt(i)) !=  ); i--);\r\n            notes = notes.substring(0, i);\r\n            notes += \" <b>( . . . )</b>\";\r\n        }\r\n        notes = notes.replaceAll(\"\n\", \"<br>\");\r\n        res += (\"<font size=\"-2\">\" + notes) + \"</font>\";\r\n    }\r\n    res += \"</body></html>\";\r\n    return res;\r\n}'),(532,'int type','int',0,68,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer',888,'net.sourceforge.ganttproject.GanttTree2$GanttTreeCellRenderer.getToolTip(net.sourceforge.ganttproject.task.Task,int)',0,'public String getToolTip(Task task, int type) {\r\n    String res = \"<html><body bgcolor=#EAEAEA>\";\r\n    res += (((\"<b>\" + (task.toString())) + \"</b>\") + \"<br>\") + (task.getStart());\r\n    if (type != 1) {\r\n        res += \"  -  \" + (task.getEnd());\r\n    }\r\n    if (type == 1) {\r\n        res += \"<br>\" + (language.getText(\"meetingPoint\"));\r\n    }\r\n    res += \"<br><b>Pri</b> \" + ((task.getPriority()) == 0 ? language.getText(\"low\") : (task.getPriority()) == 1 ? language.getText(\"normal\") : language.getText(\"hight\"));\r\n    ResourceAssignment[] assignments = task.getAssignments();\r\n    if ((assignments.length) > 0) {\r\n        res += \"<br><b>Assign to </b><br>\";\r\n        for (int j = 0; j < (assignments.length); j++) {\r\n            res += (\"&nbsp;&nbsp;\" + (assignments[j].getResource().getName())) + \"<br>\";\r\n        }\r\n    }\r\n    if (((task.getNotes()) != null) && (!(task.getNotes().equals(\"\")))) {\r\n        String notes = task.getNotes();\r\n        res += \"<br><b>Notes </b>: \";\r\n        int maxLength = 150;\r\n        if ((notes.length()) > maxLength) {\r\n            notes = notes.substring(0, maxLength);\r\n            int i = maxLength - 1;\r\n            for (; (i >= 0) && ((notes.charAt(i)) !=  ); i--);\r\n            notes = notes.substring(0, i);\r\n            notes += \" <b>( . . . )</b>\";\r\n        }\r\n        notes = notes.replaceAll(\"\n\", \"<br>\");\r\n        res += (\"<font size=\"-2\">\" + notes) + \"</font>\";\r\n    }\r\n    res += \"</body></html>\";\r\n    return res;\r\n}'),(533,'DefaultMutableTreeNode parent','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',857,'net.sourceforge.ganttproject.GanttTree2.insertClonedNode(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultMutableTreeNode,int,boolean)',0,'/**\r\n * Insert the cloned node and its children\r\n */\r\nprivate TaskNode insertClonedNode(DefaultMutableTreeNode parent, DefaultMutableTreeNode child, int location, boolean first) {\r\n    if (parent == null) {\r\n        return null;// it is the root node\r\n\r\n    }\r\n    if (first) {\r\n        GanttTask _t = ((GanttTask) (parent.getUserObject()));\r\n        if (_t.isMilestone()) {\r\n            _t.setMilestone(false);\r\n            GanttTask _c = ((GanttTask) (child.getUserObject()));\r\n            _t.setLength(_c.getLength());\r\n            _t.setStart(_c.getStart());\r\n        }\r\n    }\r\n    GanttTask originalTask = ((GanttTask) (child.getUserObject()));\r\n    GanttTask newTask = originalTask.Clone();\r\n    newTask.setName(((first ? (language.getText(\"copy2\")) + \"_\" : \"\") + (newTask.toString())));\r\n    TaskManagerImpl tmi = ((TaskManagerImpl) (getTaskManager()));\r\n    newTask.setTaskID(((tmi.getMaxID()) + 1));\r\n    mapOriginalIDCopyID.put(new Integer(originalTask.getTaskID()), new Integer(newTask.getTaskID()));\r\n    // copyID.add (new Integer (originalTask.getTaskID()));\r\n    // pasteID.add (new Integer (newTask.getTaskID()));\r\n    ResourceAssignment[] assignment = newTask.getAssignments();\r\n    for (int i = 0; i < (assignment.length); i++) {\r\n        assignment[i].delete();\r\n    }\r\n    getTaskManager().registerTask(newTask);\r\n    DefaultMutableTreeNode cloneChildNode = new TaskNode(newTask);\r\n    for (int i = 0; i < (child.getChildCount()); i++) {\r\n        insertClonedNode(cloneChildNode, ((DefaultMutableTreeNode) (child.getChildAt(i))), i, false);\r\n    }\r\n    // if(child.getParent() != null)\r\n    // if(!child.getParent().equals(parent))\r\n    // parent = (DefaultMutableTreeNode)parent.getParent();\r\n    // \r\n    // \r\n    if (parent == null)\r\n        location = 0;\r\n\r\n    if ((parent.getChildCount()) < location)\r\n        location = parent.getChildCount();\r\n\r\n    ((GanttTreeTableModel) (treeModel)).insertNodeInto(cloneChildNode, parent, location);\r\n    treetable.getTree().scrollPathToVisible(new TreePath(cloneChildNode.getPath()));\r\n    // Remove the node from the expand list\r\n    /* int index = expand.indexOf(new\n    Integer(newTask.getTaskID())cloneChildNode.toString()); if (index >=\n    0) expand.remove(index);\n     */\r\n    newTask.setExpand(false);\r\n    return ((TaskNode) (cloneChildNode));\r\n}'),(534,'net.sourceforge.ganttproject.task.TaskNode','net.sourceforge.ganttproject.task.TaskNode',572,73,'net.sourceforge.ganttproject.GanttTree2',857,'net.sourceforge.ganttproject.GanttTree2.insertClonedNode(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultMutableTreeNode,int,boolean)',1,'/**\r\n * Insert the cloned node and its children\r\n */\r\nprivate TaskNode insertClonedNode(DefaultMutableTreeNode parent, DefaultMutableTreeNode child, int location, boolean first) {\r\n    if (parent == null) {\r\n        return null;// it is the root node\r\n\r\n    }\r\n    if (first) {\r\n        GanttTask _t = ((GanttTask) (parent.getUserObject()));\r\n        if (_t.isMilestone()) {\r\n            _t.setMilestone(false);\r\n            GanttTask _c = ((GanttTask) (child.getUserObject()));\r\n            _t.setLength(_c.getLength());\r\n            _t.setStart(_c.getStart());\r\n        }\r\n    }\r\n    GanttTask originalTask = ((GanttTask) (child.getUserObject()));\r\n    GanttTask newTask = originalTask.Clone();\r\n    newTask.setName(((first ? (language.getText(\"copy2\")) + \"_\" : \"\") + (newTask.toString())));\r\n    TaskManagerImpl tmi = ((TaskManagerImpl) (getTaskManager()));\r\n    newTask.setTaskID(((tmi.getMaxID()) + 1));\r\n    mapOriginalIDCopyID.put(new Integer(originalTask.getTaskID()), new Integer(newTask.getTaskID()));\r\n    // copyID.add (new Integer (originalTask.getTaskID()));\r\n    // pasteID.add (new Integer (newTask.getTaskID()));\r\n    ResourceAssignment[] assignment = newTask.getAssignments();\r\n    for (int i = 0; i < (assignment.length); i++) {\r\n        assignment[i].delete();\r\n    }\r\n    getTaskManager().registerTask(newTask);\r\n    DefaultMutableTreeNode cloneChildNode = new TaskNode(newTask);\r\n    for (int i = 0; i < (child.getChildCount()); i++) {\r\n        insertClonedNode(cloneChildNode, ((DefaultMutableTreeNode) (child.getChildAt(i))), i, false);\r\n    }\r\n    // if(child.getParent() != null)\r\n    // if(!child.getParent().equals(parent))\r\n    // parent = (DefaultMutableTreeNode)parent.getParent();\r\n    // \r\n    // \r\n    if (parent == null)\r\n        location = 0;\r\n\r\n    if ((parent.getChildCount()) < location)\r\n        location = parent.getChildCount();\r\n\r\n    ((GanttTreeTableModel) (treeModel)).insertNodeInto(cloneChildNode, parent, location);\r\n    treetable.getTree().scrollPathToVisible(new TreePath(cloneChildNode.getPath()));\r\n    // Remove the node from the expand list\r\n    /* int index = expand.indexOf(new\n    Integer(newTask.getTaskID())cloneChildNode.toString()); if (index >=\n    0) expand.remove(index);\n     */\r\n    newTask.setExpand(false);\r\n    return ((TaskNode) (cloneChildNode));\r\n}'),(535,'DefaultMutableTreeNode child','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',857,'net.sourceforge.ganttproject.GanttTree2.insertClonedNode(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultMutableTreeNode,int,boolean)',0,'/**\r\n * Insert the cloned node and its children\r\n */\r\nprivate TaskNode insertClonedNode(DefaultMutableTreeNode parent, DefaultMutableTreeNode child, int location, boolean first) {\r\n    if (parent == null) {\r\n        return null;// it is the root node\r\n\r\n    }\r\n    if (first) {\r\n        GanttTask _t = ((GanttTask) (parent.getUserObject()));\r\n        if (_t.isMilestone()) {\r\n            _t.setMilestone(false);\r\n            GanttTask _c = ((GanttTask) (child.getUserObject()));\r\n            _t.setLength(_c.getLength());\r\n            _t.setStart(_c.getStart());\r\n        }\r\n    }\r\n    GanttTask originalTask = ((GanttTask) (child.getUserObject()));\r\n    GanttTask newTask = originalTask.Clone();\r\n    newTask.setName(((first ? (language.getText(\"copy2\")) + \"_\" : \"\") + (newTask.toString())));\r\n    TaskManagerImpl tmi = ((TaskManagerImpl) (getTaskManager()));\r\n    newTask.setTaskID(((tmi.getMaxID()) + 1));\r\n    mapOriginalIDCopyID.put(new Integer(originalTask.getTaskID()), new Integer(newTask.getTaskID()));\r\n    // copyID.add (new Integer (originalTask.getTaskID()));\r\n    // pasteID.add (new Integer (newTask.getTaskID()));\r\n    ResourceAssignment[] assignment = newTask.getAssignments();\r\n    for (int i = 0; i < (assignment.length); i++) {\r\n        assignment[i].delete();\r\n    }\r\n    getTaskManager().registerTask(newTask);\r\n    DefaultMutableTreeNode cloneChildNode = new TaskNode(newTask);\r\n    for (int i = 0; i < (child.getChildCount()); i++) {\r\n        insertClonedNode(cloneChildNode, ((DefaultMutableTreeNode) (child.getChildAt(i))), i, false);\r\n    }\r\n    // if(child.getParent() != null)\r\n    // if(!child.getParent().equals(parent))\r\n    // parent = (DefaultMutableTreeNode)parent.getParent();\r\n    // \r\n    // \r\n    if (parent == null)\r\n        location = 0;\r\n\r\n    if ((parent.getChildCount()) < location)\r\n        location = parent.getChildCount();\r\n\r\n    ((GanttTreeTableModel) (treeModel)).insertNodeInto(cloneChildNode, parent, location);\r\n    treetable.getTree().scrollPathToVisible(new TreePath(cloneChildNode.getPath()));\r\n    // Remove the node from the expand list\r\n    /* int index = expand.indexOf(new\n    Integer(newTask.getTaskID())cloneChildNode.toString()); if (index >=\n    0) expand.remove(index);\n     */\r\n    newTask.setExpand(false);\r\n    return ((TaskNode) (cloneChildNode));\r\n}'),(536,'int location','int',0,73,'net.sourceforge.ganttproject.GanttTree2',857,'net.sourceforge.ganttproject.GanttTree2.insertClonedNode(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultMutableTreeNode,int,boolean)',0,'/**\r\n * Insert the cloned node and its children\r\n */\r\nprivate TaskNode insertClonedNode(DefaultMutableTreeNode parent, DefaultMutableTreeNode child, int location, boolean first) {\r\n    if (parent == null) {\r\n        return null;// it is the root node\r\n\r\n    }\r\n    if (first) {\r\n        GanttTask _t = ((GanttTask) (parent.getUserObject()));\r\n        if (_t.isMilestone()) {\r\n            _t.setMilestone(false);\r\n            GanttTask _c = ((GanttTask) (child.getUserObject()));\r\n            _t.setLength(_c.getLength());\r\n            _t.setStart(_c.getStart());\r\n        }\r\n    }\r\n    GanttTask originalTask = ((GanttTask) (child.getUserObject()));\r\n    GanttTask newTask = originalTask.Clone();\r\n    newTask.setName(((first ? (language.getText(\"copy2\")) + \"_\" : \"\") + (newTask.toString())));\r\n    TaskManagerImpl tmi = ((TaskManagerImpl) (getTaskManager()));\r\n    newTask.setTaskID(((tmi.getMaxID()) + 1));\r\n    mapOriginalIDCopyID.put(new Integer(originalTask.getTaskID()), new Integer(newTask.getTaskID()));\r\n    // copyID.add (new Integer (originalTask.getTaskID()));\r\n    // pasteID.add (new Integer (newTask.getTaskID()));\r\n    ResourceAssignment[] assignment = newTask.getAssignments();\r\n    for (int i = 0; i < (assignment.length); i++) {\r\n        assignment[i].delete();\r\n    }\r\n    getTaskManager().registerTask(newTask);\r\n    DefaultMutableTreeNode cloneChildNode = new TaskNode(newTask);\r\n    for (int i = 0; i < (child.getChildCount()); i++) {\r\n        insertClonedNode(cloneChildNode, ((DefaultMutableTreeNode) (child.getChildAt(i))), i, false);\r\n    }\r\n    // if(child.getParent() != null)\r\n    // if(!child.getParent().equals(parent))\r\n    // parent = (DefaultMutableTreeNode)parent.getParent();\r\n    // \r\n    // \r\n    if (parent == null)\r\n        location = 0;\r\n\r\n    if ((parent.getChildCount()) < location)\r\n        location = parent.getChildCount();\r\n\r\n    ((GanttTreeTableModel) (treeModel)).insertNodeInto(cloneChildNode, parent, location);\r\n    treetable.getTree().scrollPathToVisible(new TreePath(cloneChildNode.getPath()));\r\n    // Remove the node from the expand list\r\n    /* int index = expand.indexOf(new\n    Integer(newTask.getTaskID())cloneChildNode.toString()); if (index >=\n    0) expand.remove(index);\n     */\r\n    newTask.setExpand(false);\r\n    return ((TaskNode) (cloneChildNode));\r\n}'),(537,'boolean first','boolean',0,73,'net.sourceforge.ganttproject.GanttTree2',857,'net.sourceforge.ganttproject.GanttTree2.insertClonedNode(javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultMutableTreeNode,int,boolean)',0,'/**\r\n * Insert the cloned node and its children\r\n */\r\nprivate TaskNode insertClonedNode(DefaultMutableTreeNode parent, DefaultMutableTreeNode child, int location, boolean first) {\r\n    if (parent == null) {\r\n        return null;// it is the root node\r\n\r\n    }\r\n    if (first) {\r\n        GanttTask _t = ((GanttTask) (parent.getUserObject()));\r\n        if (_t.isMilestone()) {\r\n            _t.setMilestone(false);\r\n            GanttTask _c = ((GanttTask) (child.getUserObject()));\r\n            _t.setLength(_c.getLength());\r\n            _t.setStart(_c.getStart());\r\n        }\r\n    }\r\n    GanttTask originalTask = ((GanttTask) (child.getUserObject()));\r\n    GanttTask newTask = originalTask.Clone();\r\n    newTask.setName(((first ? (language.getText(\"copy2\")) + \"_\" : \"\") + (newTask.toString())));\r\n    TaskManagerImpl tmi = ((TaskManagerImpl) (getTaskManager()));\r\n    newTask.setTaskID(((tmi.getMaxID()) + 1));\r\n    mapOriginalIDCopyID.put(new Integer(originalTask.getTaskID()), new Integer(newTask.getTaskID()));\r\n    // copyID.add (new Integer (originalTask.getTaskID()));\r\n    // pasteID.add (new Integer (newTask.getTaskID()));\r\n    ResourceAssignment[] assignment = newTask.getAssignments();\r\n    for (int i = 0; i < (assignment.length); i++) {\r\n        assignment[i].delete();\r\n    }\r\n    getTaskManager().registerTask(newTask);\r\n    DefaultMutableTreeNode cloneChildNode = new TaskNode(newTask);\r\n    for (int i = 0; i < (child.getChildCount()); i++) {\r\n        insertClonedNode(cloneChildNode, ((DefaultMutableTreeNode) (child.getChildAt(i))), i, false);\r\n    }\r\n    // if(child.getParent() != null)\r\n    // if(!child.getParent().equals(parent))\r\n    // parent = (DefaultMutableTreeNode)parent.getParent();\r\n    // \r\n    // \r\n    if (parent == null)\r\n        location = 0;\r\n\r\n    if ((parent.getChildCount()) < location)\r\n        location = parent.getChildCount();\r\n\r\n    ((GanttTreeTableModel) (treeModel)).insertNodeInto(cloneChildNode, parent, location);\r\n    treetable.getTree().scrollPathToVisible(new TreePath(cloneChildNode.getPath()));\r\n    // Remove the node from the expand list\r\n    /* int index = expand.indexOf(new\n    Integer(newTask.getTaskID())cloneChildNode.toString()); if (index >=\n    0) expand.remove(index);\n     */\r\n    newTask.setExpand(false);\r\n    return ((TaskNode) (cloneChildNode));\r\n}'),(538,'DragSourceDragEvent dsde','java.awt.dnd.DragSourceDragEvent',0,73,'net.sourceforge.ganttproject.GanttTree2',809,'net.sourceforge.ganttproject.GanttTree2.dragEnter(java.awt.dnd.DragSourceDragEvent)',0,'public void dragEnter(DragSourceDragEvent dsde) {\r\n}'),(539,'DragSourceDragEvent dsde','java.awt.dnd.DragSourceDragEvent',0,73,'net.sourceforge.ganttproject.GanttTree2',812,'net.sourceforge.ganttproject.GanttTree2.dragOver(java.awt.dnd.DragSourceDragEvent)',0,'public void dragOver(DragSourceDragEvent dsde) {\r\n}'),(540,'DragSourceDragEvent dsde','java.awt.dnd.DragSourceDragEvent',0,73,'net.sourceforge.ganttproject.GanttTree2',813,'net.sourceforge.ganttproject.GanttTree2.dropActionChanged(java.awt.dnd.DragSourceDragEvent)',0,'public void dropActionChanged(DragSourceDragEvent dsde) {\r\n}'),(541,'DragSourceDropEvent dsde','java.awt.dnd.DragSourceDropEvent',0,73,'net.sourceforge.ganttproject.GanttTree2',808,'net.sourceforge.ganttproject.GanttTree2.dragDropEnd(java.awt.dnd.DragSourceDropEvent)',0,'public void dragDropEnd(DragSourceDropEvent dsde) {\r\n}'),(542,'DragSourceEvent dse','java.awt.dnd.DragSourceEvent',0,73,'net.sourceforge.ganttproject.GanttTree2',810,'net.sourceforge.ganttproject.GanttTree2.dragExit(java.awt.dnd.DragSourceEvent)',0,'public void dragExit(DragSourceEvent dse) {\r\n}'),(543,'DragGestureEvent dge','java.awt.dnd.DragGestureEvent',0,73,'net.sourceforge.ganttproject.GanttTree2',811,'net.sourceforge.ganttproject.GanttTree2.dragGestureRecognized(java.awt.dnd.DragGestureEvent)',0,'public void dragGestureRecognized(DragGestureEvent dge) {\r\n    Point ptDragOrigin = dge.getDragOrigin();\r\n    TreePath path = treetable.getTree().getPathForLocation(ptDragOrigin.x, ptDragOrigin.y);\r\n    if (path == null) {\r\n        return;\r\n    }\r\n    // Work out the offset of the drag point from the TreePath bounding\r\n    // rectangle origin\r\n    Rectangle raPath = treetable.getTree().getPathBounds(path);\r\n    offsetPoint.setLocation(((ptDragOrigin.x) - (raPath.x)), ((ptDragOrigin.y) - (raPath.y)));\r\n    // Get the cell renderer (which is a JLabel) for the path being dragged\r\n    // JLabel lbl = (JLabel)\r\n    // treetable.getTree().getCellRenderer().getTreeCellRendererComponent\r\n    // (\r\n    // treetable, // tree\r\n    // path.getLastPathComponent(), // value\r\n    // false, // isSelected (dont want a colored background)\r\n    // treetable.getTree().isExpanded(path), // isExpanded\r\n    // ((DefaultTreeTableModel)treetable.getModel()).isLeaf(path.getLastPathComponent()),\r\n    // // isLeaf\r\n    // 0, // row (not important for rendering)\r\n    // false // hasFocus (dont want a focus rectangle)\r\n    // );\r\n    JLabel lbl = null;\r\n    lbl.setSize(((int) (raPath.getWidth())), ((int) (raPath.getHeight())));// <--\r\n\r\n    // The\r\n    // layout\r\n    // manager\r\n    // would\r\n    // normally\r\n    // do\r\n    // this\r\n    // Get a buffered image of the selection for dragging a ghost image\r\n    ghostImage = new BufferedImage(((int) (raPath.getWidth())), ((int) (raPath.getHeight())), BufferedImage.TYPE_INT_ARGB_PRE);\r\n    Graphics2D g2 = ghostImage.createGraphics();\r\n    // Ask the cell renderer to paint itself into the BufferedImage\r\n    g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC, 0.5F));// Make\r\n\r\n    // the\r\n    // image\r\n    // ghostlike\r\n    lbl.paint(g2);\r\n    // Now paint a gradient UNDER the ghosted JLabel text (but not under the\r\n    // icon if any)\r\n    // Note: this will need tweaking if your icon is not positioned to the\r\n    // left of the text\r\n    Icon icon = lbl.getIcon();\r\n    int nStartOfText = (icon == null) ? 0 : (icon.getIconWidth()) + (lbl.getIconTextGap());\r\n    g2.setComposite(AlphaComposite.getInstance(AlphaComposite.DST_OVER, 0.5F));// Make the gradient ghostlike\r\n\r\n    g2.setPaint(new GradientPaint(nStartOfText, 0, SystemColor.controlShadow, getWidth(), 0, new Color(255, 255, 255, 0)));\r\n    g2.fillRect(nStartOfText, 0, getWidth(), ghostImage.getHeight());\r\n    g2.dispose();\r\n    treetable.getTree().setSelectionPath(path);// Select this path in the\r\n\r\n    // tree\r\n    // Wrap the path being transferred into a Transferable object\r\n    Transferable transferable = new GanttTree2.GanttTransferableTreePath(path);\r\n    // Remember the path being dragged (because if it is being moved, we\r\n    // will have to delete it later)\r\n    dragPath = path;\r\n    // We pass our drag image just in case it IS supported by the platform\r\n    dge.startDrag(null, ghostImage, new Point(5, 5), transferable, this);\r\n}'),(544,'DefaultMutableTreeNode[] cdmtn','javax.swing.tree.DefaultMutableTreeNode[]',0,73,'net.sourceforge.ganttproject.GanttTree2',801,'net.sourceforge.ganttproject.GanttTree2.cpAllDependencies(javax.swing.tree.DefaultMutableTreeNode[])',0,'public void cpAllDependencies(DefaultMutableTreeNode[] cdmtn) {\r\n    // to get all the dependencies who need to be paste.\r\n    cpDependencies = new ArrayList();\r\n    allNodes = new ArrayList();\r\n    for (int i = 0; i < (cdmtn.length); i++) {\r\n        getAllNodes(cdmtn[i]);\r\n    }\r\n    TaskDependency[] dependencies = getTaskManager().getDependencyCollection().getDependencies();\r\n    for (int i = 0; i < (dependencies.length); i++) {\r\n        Task dependant = dependencies[i].getDependant();\r\n        Task dependee = dependencies[i].getDependee();\r\n        for (int j = 0; j < (allNodes.size()); j++) {\r\n            for (int k = 0; k < (allNodes.size()); k++)\r\n                if ((((Task) (((DefaultMutableTreeNode) (allNodes.get(j))).getUserObject())).equals(dependant)) && (((Task) (((DefaultMutableTreeNode) (allNodes.get(k))).getUserObject())).equals(dependee))) {\r\n                    cpDependencies.add(dependencies[i]);\r\n                }\r\n\r\n        }\r\n    }\r\n}'),(545,'DefaultMutableTreeNode dmt','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',818,'net.sourceforge.ganttproject.GanttTree2.getAllNodes(javax.swing.tree.DefaultMutableTreeNode)',0,'// public int cpId (int index) {\r\n// System.out.println(\"index = \" + index + \" -> \" +\r\n// ((Integer)pasteID.get(index)).intValue());\r\n// return ((Integer)pasteID.get(index)).intValue();\r\n// }\r\npublic void getAllNodes(DefaultMutableTreeNode dmt) {\r\n    // get all the nodes the parent and all his descendance\r\n    if (!(allNodes.contains(dmt)))\r\n        allNodes.add(dmt);\r\n\r\n    for (int i = 0; i < (dmt.getChildCount()); i++) {\r\n        getAllNodes(((DefaultMutableTreeNode) (dmt.getChildAt(i))));\r\n    }\r\n}'),(546,'DefaultMutableTreeNode node','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',851,'net.sourceforge.ganttproject.GanttTree2.hasAProjectTaskDescendant(javax.swing.tree.DefaultMutableTreeNode)',0,'public boolean hasAProjectTaskDescendant(DefaultMutableTreeNode node) {\r\n    ArrayList child = getAllChildTask(node);\r\n    for (int i = 0; i < (child.size()); i++) {\r\n        if (((Task) (((DefaultMutableTreeNode) (child.get(i))).getUserObject())).isProjectTask())\r\n            return true;\r\n\r\n        if (hasAProjectTaskDescendant(((DefaultMutableTreeNode) (child.get(i)))))\r\n            return true;\r\n\r\n    }\r\n    return false;\r\n}'),(547,'DefaultMutableTreeNode node','javax.swing.tree.DefaultMutableTreeNode',0,73,'net.sourceforge.ganttproject.GanttTree2',835,'net.sourceforge.ganttproject.GanttTree2.getProjectTasks(javax.swing.tree.DefaultMutableTreeNode,java.util.ArrayList)',0,'public void getProjectTasks(DefaultMutableTreeNode node, ArrayList list) {\r\n    ArrayList child = getAllChildTask(node);\r\n    for (int i = 0; i < (child.size()); i++) {\r\n        DefaultMutableTreeNode taskNode = ((DefaultMutableTreeNode) (child.get(i)));\r\n        if (((Task) (taskNode.getUserObject())).isProjectTask())\r\n            list.add(taskNode);\r\n        else\r\n            getProjectTasks(taskNode, list);\r\n\r\n    }\r\n}'),(548,'ArrayList list','java.util.ArrayList',0,73,'net.sourceforge.ganttproject.GanttTree2',835,'net.sourceforge.ganttproject.GanttTree2.getProjectTasks(javax.swing.tree.DefaultMutableTreeNode,java.util.ArrayList)',0,'public void getProjectTasks(DefaultMutableTreeNode node, ArrayList list) {\r\n    ArrayList child = getAllChildTask(node);\r\n    for (int i = 0; i < (child.size()); i++) {\r\n        DefaultMutableTreeNode taskNode = ((DefaultMutableTreeNode) (child.get(i)));\r\n        if (((Task) (taskNode.getUserObject())).isProjectTask())\r\n            list.add(taskNode);\r\n        else\r\n            getProjectTasks(taskNode, list);\r\n\r\n    }\r\n}'),(549,'final Task task','net.sourceforge.ganttproject.task.Task',548,73,'net.sourceforge.ganttproject.GanttTree2',870,'net.sourceforge.ganttproject.GanttTree2.setDelay(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.delay.Delay)',0,'public void setDelay(final Task task, final Delay delay) {\r\n    SwingUtilities.invokeLater(new Runnable() {\r\n        public void run() {\r\n            TaskNode taskNode = ((TaskNode) (getNode(task.getTaskID())));\r\n            if (taskNode != null)\r\n                treetable.setDelay(taskNode, delay);\r\n\r\n        }\r\n    });\r\n}'),(550,'final Delay delay','net.sourceforge.ganttproject.delay.Delay',228,73,'net.sourceforge.ganttproject.GanttTree2',870,'net.sourceforge.ganttproject.GanttTree2.setDelay(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.delay.Delay)',0,'public void setDelay(final Task task, final Delay delay) {\r\n    SwingUtilities.invokeLater(new Runnable() {\r\n        public void run() {\r\n            TaskNode taskNode = ((TaskNode) (getNode(task.getTaskID())));\r\n            if (taskNode != null)\r\n                treetable.setDelay(taskNode, delay);\r\n\r\n        }\r\n    });\r\n}'),(551,'Action action','javax.swing.Action',0,73,'net.sourceforge.ganttproject.GanttTree2',873,'net.sourceforge.ganttproject.GanttTree2.setLinkTasksAction(javax.swing.Action)',0,'public void setLinkTasksAction(Action action) {\r\n    myLinkTasksAction = action;\r\n}'),(552,'Action action','javax.swing.Action',0,73,'net.sourceforge.ganttproject.GanttTree2',875,'net.sourceforge.ganttproject.GanttTree2.setUnlinkTasksAction(javax.swing.Action)',0,'// \r\npublic void setUnlinkTasksAction(Action action) {\r\n    myUnlinkTasksAction = action;\r\n}'),(553,'Action action','javax.swing.Action',0,73,'net.sourceforge.ganttproject.GanttTree2',874,'net.sourceforge.ganttproject.GanttTree2.setTaskPropertiesAction(javax.swing.Action)',0,'void setTaskPropertiesAction(Action action) {\r\n    myTaskPropertiesAction = action;\r\n    treetable.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, KeyEvent.ALT_DOWN_MASK), action.getValue(Action.NAME));\r\n    treetable.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, KeyEvent.ALT_DOWN_MASK), action.getValue(Action.NAME));\r\n    treetable.getActionMap().put(action.getValue(Action.NAME), action);\r\n}'),(554,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,81,'net.sourceforge.ganttproject.GanttTreeTable',911,'net.sourceforge.ganttproject.GanttTreeTable.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.GanttTreeTableModel)',0,'/**\r\n * Creates an instance of GanttTreeTable with the given TreeTableModel.\r\n *\r\n * @param project\r\n * 		\r\n * @param model\r\n * 		TreeTableModel.\r\n */\r\npublic GanttTreeTable(IGanttProject project, UIFacade uifacade, GanttTreeTableModel model) {\r\n    super(project, model);\r\n    GanttLanguage.getInstance().addListener(this);\r\n    initTreeTable();\r\n    this.ttModel = model;\r\n    myUIfacade = uifacade;\r\n}'),(555,'UIFacade uifacade','net.sourceforge.ganttproject.gui.UIFacade',337,81,'net.sourceforge.ganttproject.GanttTreeTable',911,'net.sourceforge.ganttproject.GanttTreeTable.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.GanttTreeTableModel)',0,'/**\r\n * Creates an instance of GanttTreeTable with the given TreeTableModel.\r\n *\r\n * @param project\r\n * 		\r\n * @param model\r\n * 		TreeTableModel.\r\n */\r\npublic GanttTreeTable(IGanttProject project, UIFacade uifacade, GanttTreeTableModel model) {\r\n    super(project, model);\r\n    GanttLanguage.getInstance().addListener(this);\r\n    initTreeTable();\r\n    this.ttModel = model;\r\n    myUIfacade = uifacade;\r\n}'),(556,'GanttTreeTableModel model','net.sourceforge.ganttproject.GanttTreeTableModel',82,81,'net.sourceforge.ganttproject.GanttTreeTable',911,'net.sourceforge.ganttproject.GanttTreeTable.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.GanttTreeTableModel)',0,'/**\r\n * Creates an instance of GanttTreeTable with the given TreeTableModel.\r\n *\r\n * @param project\r\n * 		\r\n * @param model\r\n * 		TreeTableModel.\r\n */\r\npublic GanttTreeTable(IGanttProject project, UIFacade uifacade, GanttTreeTableModel model) {\r\n    super(project, model);\r\n    GanttLanguage.getInstance().addListener(this);\r\n    initTreeTable();\r\n    this.ttModel = model;\r\n    myUIfacade = uifacade;\r\n}'),(557,'String id','java.lang.String',0,75,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn',958,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn.-init-(java.lang.String)',0,'public DisplayedColumn(String id) {\r\n    this.id = id;\r\n}'),(558,'TableColumn tc','javax.swing.table.TableColumn',0,74,'net.sourceforge.ganttproject.GanttTreeTable$ColumnKeeper',951,'net.sourceforge.ganttproject.GanttTreeTable$ColumnKeeper.-init-(javax.swing.table.TableColumn)',0,'/**\r\n * Creates a new ColumnKeeper for the given TableColumn.\r\n *\r\n * @param tc\r\n * 		TableColumn to manage.\r\n */\r\npublic ColumnKeeper(TableColumn tc) {\r\n    column = tc;\r\n    index = column.getModelIndex();\r\n}'),(559,'Action action','javax.swing.Action',0,81,'net.sourceforge.ganttproject.GanttTreeTable',946,'net.sourceforge.ganttproject.GanttTreeTable.setAction(javax.swing.Action)',0,'void setAction(Action action) {\r\n    addAction(action, ((KeyStroke) (action.getValue(Action.ACCELERATOR_KEY))));\r\n    // Add the action to the component\r\n}'),(560,'Action action','javax.swing.Action',0,81,'net.sourceforge.ganttproject.GanttTreeTable',915,'net.sourceforge.ganttproject.GanttTreeTable.addAction(javax.swing.Action,javax.swing.KeyStroke)',0,''),(561,'KeyStroke keyStroke','javax.swing.KeyStroke',0,81,'net.sourceforge.ganttproject.GanttTreeTable',915,'net.sourceforge.ganttproject.GanttTreeTable.addAction(javax.swing.Action,javax.swing.KeyStroke)',0,''),(562,'GanttTreeTable.DisplayedColumnsList displayedColumns','net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumnsList',76,81,'net.sourceforge.ganttproject.GanttTreeTable',949,'net.sourceforge.ganttproject.GanttTreeTable.setDisplayedColumns(net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumnsList)',0,'public void setDisplayedColumns(GanttTreeTable.DisplayedColumnsList displayedColumns) {\r\n    GanttTreeTable.DisplayedColumnsList l = ((GanttTreeTable.DisplayedColumnsList) (displayedColumns.clone()));\r\n    displayAllColumns();\r\n    hideAllColumns();\r\n    this.listDisplayedColumns = l;\r\n    Collections.sort(this.listDisplayedColumns);\r\n    Iterator it = this.listDisplayedColumns.iterator();\r\n    while (it.hasNext()) {\r\n        GanttTreeTable.DisplayedColumn dc = ((GanttTreeTable.DisplayedColumn) (it.next()));\r\n        String id = dc.getID();\r\n        String name = getNameForId(id);\r\n        if (dc.displayed)\r\n            displayColumn(name);\r\n        else\r\n            hideColumn(name);\r\n\r\n    } \r\n}'),(563,'MouseListener ml','java.awt.event.MouseListener',0,81,'net.sourceforge.ganttproject.GanttTreeTable',919,'net.sourceforge.ganttproject.GanttTreeTable.addScrollPaneMouseListener(java.awt.event.MouseListener)',0,''),(564,'String name','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',927,'net.sourceforge.ganttproject.GanttTreeTable.displayColumn(java.lang.String)',0,''),(565,'String name','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',937,'net.sourceforge.ganttproject.GanttTreeTable.hideColumn(java.lang.String)',0,'private void hideColumn(String name) {\r\n    Iterator it = mapTableColumnColumnKeeper.keySet().iterator();\r\n    while (it.hasNext()) {\r\n        TableColumn c = ((TableColumn) (it.next()));\r\n        String n = ((String) (c.getHeaderValue()));\r\n        if (n.equals(name)) {\r\n            GanttTreeTable.ColumnKeeper ck = ((GanttTreeTable.ColumnKeeper) (mapTableColumnColumnKeeper.get(c)));\r\n            if (ck.isShown)\r\n                ck.hide();\r\n\r\n            break;\r\n        }\r\n    } \r\n    // createPopupMenu();\r\n}'),(566,'CustomColumn customColumn','net.sourceforge.ganttproject.task.CustomColumn',532,81,'net.sourceforge.ganttproject.GanttTreeTable',918,'net.sourceforge.ganttproject.GanttTreeTable.addNewCustomColumn(net.sourceforge.ganttproject.task.CustomColumn)',0,''),(567,'CustomColumn column','net.sourceforge.ganttproject.task.CustomColumn',532,81,'net.sourceforge.ganttproject.GanttTreeTable',925,'net.sourceforge.ganttproject.GanttTreeTable.deleteCustomColumn(net.sourceforge.ganttproject.task.CustomColumn)',0,'/**\r\n * Delete permanently a custom column.\r\n *\r\n * @param name\r\n * 		Name of the column to delete.\r\n */\r\npublic void deleteCustomColumn(CustomColumn column) {\r\n    final String name = column.getName();\r\n    // the column has to be displayed to be removed.\r\n    this.displayColumn(name);\r\n    deleteColumnFromUI(name);\r\n    // Every tasks\r\n    TaskContainmentHierarchyFacade tchf = Mediator.getGanttProjectSingleton().getTaskManager().getTaskHierarchy();\r\n    tchf.getRootTask().getCustomValues().removeCustomColumn(name);\r\n    removeCustomColumnToAllNestedTask(tchf, tchf.getRootTask(), name);\r\n    Mediator.getGanttProjectSingleton().setAskForSave(true);\r\n}'),(568,'String name','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',924,'net.sourceforge.ganttproject.GanttTreeTable.deleteColumnFromUI(java.lang.String)',0,''),(569,'String name','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',945,'net.sourceforge.ganttproject.GanttTreeTable.renameCustomcolumn(java.lang.String,java.lang.String)',0,''),(570,'String newName','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',945,'net.sourceforge.ganttproject.GanttTreeTable.renameCustomcolumn(java.lang.String,java.lang.String)',0,''),(571,'TaskContainmentHierarchyFacade facade','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,81,'net.sourceforge.ganttproject.GanttTreeTable',947,'net.sourceforge.ganttproject.GanttTreeTable.setCustomColumnValueToAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String,java.lang.Object)',0,'// public void changeDefaultValue(String name, Object newDefaultValue)\r\n// {\r\n// // this.displayColumn(name);\r\n// }\r\n/**\r\n *\r\n *\r\n * @param facade\r\n * 		TaskContainmentHierarchyFacade ot retrive nested tasks.\r\n * @param root\r\n * 		Root task to start with.\r\n * @param colName\r\n * 		Name of the new custom column to add to the tasks.\r\n * @param value\r\n * 		Value for this new custom column.\r\n */\r\nprivate void setCustomColumnValueToAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String colName, Object value) {\r\n    try {\r\n        root.getCustomValues().setValue(colName, value);\r\n    } catch (CustomColumnsException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        try {\r\n            tt[i].getCustomValues().setValue(colName, value);\r\n        } catch (CustomColumnsException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n        setCustomColumnValueToAllNestedTask(facade, tt[i], colName, value);\r\n    }\r\n}'),(572,'Task root','net.sourceforge.ganttproject.task.Task',548,81,'net.sourceforge.ganttproject.GanttTreeTable',947,'net.sourceforge.ganttproject.GanttTreeTable.setCustomColumnValueToAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String,java.lang.Object)',0,'// public void changeDefaultValue(String name, Object newDefaultValue)\r\n// {\r\n// // this.displayColumn(name);\r\n// }\r\n/**\r\n *\r\n *\r\n * @param facade\r\n * 		TaskContainmentHierarchyFacade ot retrive nested tasks.\r\n * @param root\r\n * 		Root task to start with.\r\n * @param colName\r\n * 		Name of the new custom column to add to the tasks.\r\n * @param value\r\n * 		Value for this new custom column.\r\n */\r\nprivate void setCustomColumnValueToAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String colName, Object value) {\r\n    try {\r\n        root.getCustomValues().setValue(colName, value);\r\n    } catch (CustomColumnsException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        try {\r\n            tt[i].getCustomValues().setValue(colName, value);\r\n        } catch (CustomColumnsException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n        setCustomColumnValueToAllNestedTask(facade, tt[i], colName, value);\r\n    }\r\n}'),(573,'String colName','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',947,'net.sourceforge.ganttproject.GanttTreeTable.setCustomColumnValueToAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String,java.lang.Object)',0,'// public void changeDefaultValue(String name, Object newDefaultValue)\r\n// {\r\n// // this.displayColumn(name);\r\n// }\r\n/**\r\n *\r\n *\r\n * @param facade\r\n * 		TaskContainmentHierarchyFacade ot retrive nested tasks.\r\n * @param root\r\n * 		Root task to start with.\r\n * @param colName\r\n * 		Name of the new custom column to add to the tasks.\r\n * @param value\r\n * 		Value for this new custom column.\r\n */\r\nprivate void setCustomColumnValueToAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String colName, Object value) {\r\n    try {\r\n        root.getCustomValues().setValue(colName, value);\r\n    } catch (CustomColumnsException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        try {\r\n            tt[i].getCustomValues().setValue(colName, value);\r\n        } catch (CustomColumnsException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n        setCustomColumnValueToAllNestedTask(facade, tt[i], colName, value);\r\n    }\r\n}'),(574,'Object value','java.lang.Object',0,81,'net.sourceforge.ganttproject.GanttTreeTable',947,'net.sourceforge.ganttproject.GanttTreeTable.setCustomColumnValueToAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String,java.lang.Object)',0,'// public void changeDefaultValue(String name, Object newDefaultValue)\r\n// {\r\n// // this.displayColumn(name);\r\n// }\r\n/**\r\n *\r\n *\r\n * @param facade\r\n * 		TaskContainmentHierarchyFacade ot retrive nested tasks.\r\n * @param root\r\n * 		Root task to start with.\r\n * @param colName\r\n * 		Name of the new custom column to add to the tasks.\r\n * @param value\r\n * 		Value for this new custom column.\r\n */\r\nprivate void setCustomColumnValueToAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String colName, Object value) {\r\n    try {\r\n        root.getCustomValues().setValue(colName, value);\r\n    } catch (CustomColumnsException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        try {\r\n            tt[i].getCustomValues().setValue(colName, value);\r\n        } catch (CustomColumnsException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n        setCustomColumnValueToAllNestedTask(facade, tt[i], colName, value);\r\n    }\r\n}'),(575,'TaskContainmentHierarchyFacade facade','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,81,'net.sourceforge.ganttproject.GanttTreeTable',943,'net.sourceforge.ganttproject.GanttTreeTable.removeCustomColumnToAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String)',0,'/**\r\n * Remove permanetly the custom column for the task <code>root</code> and\r\n * all its children.\r\n *\r\n * @param facade\r\n * 		TaskContainmentHierarchyFacade ot retrive nested tasks.\r\n * @param root\r\n * 		Root task to start with.\r\n * @param colName\r\n * 		Name of the custom column to remove.\r\n */\r\nprivate void removeCustomColumnToAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String colName) {\r\n    // root.getCustomValues().removeCustomColumn(colName);\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        tt[i].getCustomValues().removeCustomColumn(colName);\r\n        removeCustomColumnToAllNestedTask(facade, tt[i], colName);\r\n    }\r\n}'),(576,'Task root','net.sourceforge.ganttproject.task.Task',548,81,'net.sourceforge.ganttproject.GanttTreeTable',943,'net.sourceforge.ganttproject.GanttTreeTable.removeCustomColumnToAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String)',0,'/**\r\n * Remove permanetly the custom column for the task <code>root</code> and\r\n * all its children.\r\n *\r\n * @param facade\r\n * 		TaskContainmentHierarchyFacade ot retrive nested tasks.\r\n * @param root\r\n * 		Root task to start with.\r\n * @param colName\r\n * 		Name of the custom column to remove.\r\n */\r\nprivate void removeCustomColumnToAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String colName) {\r\n    // root.getCustomValues().removeCustomColumn(colName);\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        tt[i].getCustomValues().removeCustomColumn(colName);\r\n        removeCustomColumnToAllNestedTask(facade, tt[i], colName);\r\n    }\r\n}'),(577,'String colName','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',943,'net.sourceforge.ganttproject.GanttTreeTable.removeCustomColumnToAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String)',0,'/**\r\n * Remove permanetly the custom column for the task <code>root</code> and\r\n * all its children.\r\n *\r\n * @param facade\r\n * 		TaskContainmentHierarchyFacade ot retrive nested tasks.\r\n * @param root\r\n * 		Root task to start with.\r\n * @param colName\r\n * 		Name of the custom column to remove.\r\n */\r\nprivate void removeCustomColumnToAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String colName) {\r\n    // root.getCustomValues().removeCustomColumn(colName);\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        tt[i].getCustomValues().removeCustomColumn(colName);\r\n        removeCustomColumnToAllNestedTask(facade, tt[i], colName);\r\n    }\r\n}'),(578,'TaskContainmentHierarchyFacade facade','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,81,'net.sourceforge.ganttproject.GanttTreeTable',944,'net.sourceforge.ganttproject.GanttTreeTable.renameCustomColumnForAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String,java.lang.String)',0,'private void renameCustomColumnForAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String oldName, String newName) {\r\n    // root.getCustomValues().renameCustomColumn(oldName,newName);\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        tt[i].getCustomValues().renameCustomColumn(oldName, newName);\r\n        renameCustomColumnForAllNestedTask(facade, tt[i], oldName, newName);\r\n    }\r\n}'),(579,'Task root','net.sourceforge.ganttproject.task.Task',548,81,'net.sourceforge.ganttproject.GanttTreeTable',944,'net.sourceforge.ganttproject.GanttTreeTable.renameCustomColumnForAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String,java.lang.String)',0,'private void renameCustomColumnForAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String oldName, String newName) {\r\n    // root.getCustomValues().renameCustomColumn(oldName,newName);\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        tt[i].getCustomValues().renameCustomColumn(oldName, newName);\r\n        renameCustomColumnForAllNestedTask(facade, tt[i], oldName, newName);\r\n    }\r\n}'),(580,'String oldName','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',944,'net.sourceforge.ganttproject.GanttTreeTable.renameCustomColumnForAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String,java.lang.String)',0,'private void renameCustomColumnForAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String oldName, String newName) {\r\n    // root.getCustomValues().renameCustomColumn(oldName,newName);\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        tt[i].getCustomValues().renameCustomColumn(oldName, newName);\r\n        renameCustomColumnForAllNestedTask(facade, tt[i], oldName, newName);\r\n    }\r\n}'),(581,'String newName','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',944,'net.sourceforge.ganttproject.GanttTreeTable.renameCustomColumnForAllNestedTask(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.lang.String,java.lang.String)',0,'private void renameCustomColumnForAllNestedTask(TaskContainmentHierarchyFacade facade, Task root, String oldName, String newName) {\r\n    // root.getCustomValues().renameCustomColumn(oldName,newName);\r\n    Task[] tt = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (tt.length); i++) {\r\n        tt[i].getCustomValues().renameCustomColumn(oldName, newName);\r\n        renameCustomColumnForAllNestedTask(facade, tt[i], oldName, newName);\r\n    }\r\n}'),(582,'GanttLanguage.Event changeEvent','net.sourceforge.ganttproject.language.GanttLanguage$Event',459,81,'net.sourceforge.ganttproject.GanttTreeTable',940,'net.sourceforge.ganttproject.GanttTreeTable.languageChanged(net.sourceforge.ganttproject.language.GanttLanguage$Event)',0,''),(583,'String colName','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',930,'net.sourceforge.ganttproject.GanttTreeTable.getIdForName(java.lang.String)',0,'String getIdForName(String colName) {\r\n    String id = null;\r\n    if (colName.equals(GanttTreeTableModel.strColType))\r\n        id = \"tpd0\";\r\n    else\r\n        if (colName.equals(GanttTreeTableModel.strColPriority))\r\n            id = \"tpd1\";\r\n        else\r\n            if (colName.equals(GanttTreeTableModel.strColInfo))\r\n                id = \"tpd2\";\r\n            else\r\n                if (colName.equals(GanttTreeTableModel.strColName))\r\n                    id = \"tpd3\";\r\n                else\r\n                    if (colName.equals(GanttTreeTableModel.strColBegDate))\r\n                        id = \"tpd4\";\r\n                    else\r\n                        if (colName.equals(GanttTreeTableModel.strColEndDate))\r\n                            id = \"tpd5\";\r\n                        else\r\n                            if (colName.equals(GanttTreeTableModel.strColDuration))\r\n                                id = \"tpd6\";\r\n                            else\r\n                                if (colName.equals(GanttTreeTableModel.strColCompletion))\r\n                                    id = \"tpd7\";\r\n                                else\r\n                                    if (colName.equals(GanttTreeTableModel.strColCoordinator))\r\n                                        id = \"tpd8\";\r\n                                    else\r\n                                        if (colName.equals(GanttTreeTableModel.strColPredecessors))\r\n                                            id = \"tpd9\";\r\n                                        else\r\n                                            if (colName.equals(GanttTreeTableModel.strColID))\r\n                                                id = \"tpd10\";\r\n                                            else\r\n                                                id = getProject().getCustomColumnsStorage().getIdFromName(colName);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return id;\r\n}'),(584,'String id','java.lang.String',0,81,'net.sourceforge.ganttproject.GanttTreeTable',931,'net.sourceforge.ganttproject.GanttTreeTable.getNameForId(java.lang.String)',0,'private String getNameForId(String id) {\r\n    String name = null;\r\n    if (id.equals(\"tpd0\"))\r\n        name = GanttTreeTableModel.strColType;\r\n    else\r\n        if (id.equals(\"tpd1\"))\r\n            name = GanttTreeTableModel.strColPriority;\r\n        else\r\n            if (id.equals(\"tpd2\"))\r\n                name = GanttTreeTableModel.strColInfo;\r\n            else\r\n                if (id.equals(\"tpd3\"))\r\n                    name = GanttTreeTableModel.strColName;\r\n                else\r\n                    if (id.equals(\"tpd4\"))\r\n                        name = GanttTreeTableModel.strColBegDate;\r\n                    else\r\n                        if (id.equals(\"tpd5\"))\r\n                            name = GanttTreeTableModel.strColEndDate;\r\n                        else\r\n                            if (id.equals(\"tpd6\"))\r\n                                name = GanttTreeTableModel.strColDuration;\r\n                            else\r\n                                if (id.equals(\"tpd7\"))\r\n                                    name = GanttTreeTableModel.strColCompletion;\r\n                                else\r\n                                    if (id.equals(\"tpd8\"))\r\n                                        name = GanttTreeTableModel.strColCoordinator;\r\n                                    else\r\n                                        if (id.equals(\"tpd9\"))\r\n                                            name = GanttTreeTableModel.strColPredecessors;\r\n                                        else\r\n                                            if (id.equals(\"tpd10\"))\r\n                                                name = GanttTreeTableModel.strColID;\r\n                                            else\r\n                                                name = getProject().getCustomColumnsStorage().getNameFromId(id);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return name;\r\n}'),(585,'MouseListener mouseListener','java.awt.event.MouseListener',0,81,'net.sourceforge.ganttproject.GanttTreeTable',917,'net.sourceforge.ganttproject.GanttTreeTable.addMouseListener(java.awt.event.MouseListener)',0,''),(586,'KeyListener keyListener','java.awt.event.KeyListener',0,81,'net.sourceforge.ganttproject.GanttTreeTable',916,'net.sourceforge.ganttproject.GanttTreeTable.addKeyListener(java.awt.event.KeyListener)',0,''),(587,'TaskNode taskNode','net.sourceforge.ganttproject.task.TaskNode',572,81,'net.sourceforge.ganttproject.GanttTreeTable',948,'net.sourceforge.ganttproject.GanttTreeTable.setDelay(net.sourceforge.ganttproject.task.TaskNode,net.sourceforge.ganttproject.delay.Delay)',0,''),(588,'Delay delay','net.sourceforge.ganttproject.delay.Delay',228,81,'net.sourceforge.ganttproject.GanttTreeTable',948,'net.sourceforge.ganttproject.GanttTreeTable.setDelay(net.sourceforge.ganttproject.task.TaskNode,net.sourceforge.ganttproject.delay.Delay)',0,''),(589,'String name','java.lang.String',0,76,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumnsList',977,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumnsList.isDisplayed(java.lang.String)',0,'/**\r\n * Returns <code>true</code> if the column name <code>name</code>\r\n * is displayed, <code>false</code> otherwise.\r\n *\r\n * @param name\r\n * 		Name of the column to check the display.\r\n * @return <code>true</code> if the column name <code>name</code> is\r\ndisplayed, <code>false</code> otherwise.\r\n */\r\npublic boolean isDisplayed(String name) {\r\n    Iterator it = this.iterator();\r\n    while (it.hasNext()) {\r\n        GanttTreeTable.DisplayedColumn dc = ((GanttTreeTable.DisplayedColumn) (it.next()));\r\n        if (getNameForId(dc.getID()).equals(name))\r\n            return dc.isDisplayed();\r\n\r\n    } \r\n    return false;\r\n}'),(590,'String name','java.lang.String',0,76,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumnsList',976,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumnsList.getOrderForName(java.lang.String)',0,'public int getOrderForName(String name) {\r\n    Iterator it = this.iterator();\r\n    while (it.hasNext()) {\r\n        GanttTreeTable.DisplayedColumn dc = ((GanttTreeTable.DisplayedColumn) (it.next()));\r\n        if (getNameForId(dc.getID()).equals(name))\r\n            return dc.getOrder();\r\n\r\n    } \r\n    return -1;\r\n}'),(591,'int order','int',0,76,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumnsList',975,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumnsList.getNameForOrder(int)',0,'public String getNameForOrder(int order) {\r\n    Iterator it = this.iterator();\r\n    while (it.hasNext()) {\r\n        GanttTreeTable.DisplayedColumn dc = ((GanttTreeTable.DisplayedColumn) (it.next()));\r\n        if ((dc.getOrder()) == order)\r\n            return getNameForId(dc.getID());\r\n\r\n    } \r\n    return null;\r\n}'),(592,'Object o','java.lang.Object',0,76,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumnsList',973,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumnsList.add(java.lang.Object)',0,'public boolean add(Object o) {\r\n    if (o instanceof GanttTreeTable.DisplayedColumn) {\r\n        GanttTreeTable.DisplayedColumn dc1 = ((GanttTreeTable.DisplayedColumn) (o));\r\n        Iterator it = this.iterator();\r\n        while (it.hasNext()) {\r\n            GanttTreeTable.DisplayedColumn dc = ((GanttTreeTable.DisplayedColumn) (it.next()));\r\n            if (dc.getID().equals(dc1.getID())) {\r\n                this.remove(dc);\r\n                return super.add(dc1);\r\n            }\r\n        } \r\n        return super.add(dc1);\r\n    }\r\n    return false;\r\n}'),(593,'String id','java.lang.String',0,75,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn',968,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn.setID(java.lang.String)',0,'public void setID(String id) {\r\n    this.id = id;\r\n}'),(594,'boolean disp','boolean',0,75,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn',967,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn.setDisplayed(boolean)',0,'public void setDisplayed(boolean disp) {\r\n    this.displayed = disp;\r\n}'),(595,'int order','int',0,75,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn',969,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn.setOrder(int)',0,'public void setOrder(int order) {\r\n    this.order = order;\r\n}'),(596,'int width','int',0,75,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn',970,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn.setWidth(int)',0,'public void setWidth(int width) {\r\n    this.width = width;\r\n}'),(597,'Object o','java.lang.Object',0,75,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn',960,'net.sourceforge.ganttproject.GanttTreeTable$DisplayedColumn.compareTo(java.lang.Object)',0,'/* (non-Javadoc)\n\n@see java.lang.Comparable#compareTo(java.lang.Object)\n */\r\npublic int compareTo(Object o) {\r\n    if (o == null)\r\n        return 0;\r\n\r\n    if (o instanceof GanttTreeTable.DisplayedColumn) {\r\n        GanttTreeTable.DisplayedColumn dc = ((GanttTreeTable.DisplayedColumn) (o));\r\n        if ((this.order) != (dc.order))\r\n            return (this.order) - (dc.order);\r\n\r\n        return this.id.compareTo(dc.id);\r\n    }\r\n    return 0;\r\n}'),(598,'int initIndex','int',0,74,'net.sourceforge.ganttproject.GanttTreeTable$ColumnKeeper',956,'net.sourceforge.ganttproject.GanttTreeTable$ColumnKeeper.setInitIndex(int)',0,'/**\r\n * Set the initial index of the table column.\r\n *\r\n * @param initIndex\r\n * 		The initial index of the table column.\r\n */\r\npublic void setInitIndex(int initIndex) {\r\n    index = initIndex;\r\n}'),(599,'ActionEvent e','java.awt.event.ActionEvent',0,74,'net.sourceforge.ganttproject.GanttTreeTable$ColumnKeeper',953,'net.sourceforge.ganttproject.GanttTreeTable$ColumnKeeper.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    Mediator.getGanttProjectSingleton().getUndoManager().undoableEdit(\"HIDE OR SHOW A COLUMN\", new Runnable() {\r\n        public void run() {\r\n            if (!(isShown))\r\n                show();\r\n            else\r\n                hide();\r\n\r\n            getTable().repaint();\r\n        }\r\n    });\r\n}'),(600,'MouseEvent e','java.awt.event.MouseEvent',0,77,'net.sourceforge.ganttproject.GanttTreeTable$HeaderMouseListener',980,'net.sourceforge.ganttproject.GanttTreeTable$HeaderMouseListener.mousePressed(java.awt.event.MouseEvent)',0,'/**\r\n *\r\n *\r\n * @unknown Shows the popupMenu to hide/show columns and to add\r\ncustom columns.\r\n */\r\npublic void mousePressed(MouseEvent e) {\r\n    handlePopupTrigger(e);\r\n}'),(601,'MouseEvent e','java.awt.event.MouseEvent',0,77,'net.sourceforge.ganttproject.GanttTreeTable$HeaderMouseListener',981,'net.sourceforge.ganttproject.GanttTreeTable$HeaderMouseListener.mouseReleased(java.awt.event.MouseEvent)',0,'public void mouseReleased(MouseEvent e) {\r\n    handlePopupTrigger(e);\r\n}'),(602,'MouseEvent e','java.awt.event.MouseEvent',0,77,'net.sourceforge.ganttproject.GanttTreeTable$HeaderMouseListener',979,'net.sourceforge.ganttproject.GanttTreeTable$HeaderMouseListener.handlePopupTrigger(java.awt.event.MouseEvent)',0,'private void handlePopupTrigger(MouseEvent e) {\r\n    if (e.isPopupTrigger()) {\r\n        createPopupMenu();\r\n        Component c = ((Component) (e.getSource()));\r\n        // reorderPopuMenu();\r\n        popupMenu.show(c, e.getX(), e.getY());\r\n        clickPoint = e.getPoint();// popupMenu.getLocationOnScreen();\r\n\r\n        CustomColumn cc = getProject().getCustomColumnsStorage().getCustomColumn(getTable().getColumnName(getTable().columnAtPoint(e.getPoint())));\r\n        if (cc != null)\r\n            jmiDeleteColumn.setEnabled(true);\r\n        else\r\n            jmiDeleteColumn.setEnabled(false);\r\n\r\n    }\r\n}'),(603,'JTable arg0','javax.swing.JTable',0,79,'net.sourceforge.ganttproject.GanttTreeTable$NameCellEditor',985,'net.sourceforge.ganttproject.GanttTreeTable$NameCellEditor.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    final JTextField result = ((JTextField) (super.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4)));\r\n    result.selectAll();\r\n    // result.addFocusListener(new FocusAdapter() {\r\n    // public void focusGained(FocusEvent arg0) {\r\n    // super.focusGained(arg0);\r\n    // ((JTextComponent)result).selectAll();\r\n    // }\r\n    // \r\n    // public void focusLost(FocusEvent arg0) {\r\n    // // TODO Auto-generated method stub\r\n    // super.focusLost(arg0);\r\n    // }\r\n    // \r\n    // });\r\n    // \r\n    return result;\r\n}'),(604,'Object arg1','java.lang.Object',0,79,'net.sourceforge.ganttproject.GanttTreeTable$NameCellEditor',985,'net.sourceforge.ganttproject.GanttTreeTable$NameCellEditor.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    final JTextField result = ((JTextField) (super.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4)));\r\n    result.selectAll();\r\n    // result.addFocusListener(new FocusAdapter() {\r\n    // public void focusGained(FocusEvent arg0) {\r\n    // super.focusGained(arg0);\r\n    // ((JTextComponent)result).selectAll();\r\n    // }\r\n    // \r\n    // public void focusLost(FocusEvent arg0) {\r\n    // // TODO Auto-generated method stub\r\n    // super.focusLost(arg0);\r\n    // }\r\n    // \r\n    // });\r\n    // \r\n    return result;\r\n}'),(605,'boolean arg2','boolean',0,79,'net.sourceforge.ganttproject.GanttTreeTable$NameCellEditor',985,'net.sourceforge.ganttproject.GanttTreeTable$NameCellEditor.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    final JTextField result = ((JTextField) (super.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4)));\r\n    result.selectAll();\r\n    // result.addFocusListener(new FocusAdapter() {\r\n    // public void focusGained(FocusEvent arg0) {\r\n    // super.focusGained(arg0);\r\n    // ((JTextComponent)result).selectAll();\r\n    // }\r\n    // \r\n    // public void focusLost(FocusEvent arg0) {\r\n    // // TODO Auto-generated method stub\r\n    // super.focusLost(arg0);\r\n    // }\r\n    // \r\n    // });\r\n    // \r\n    return result;\r\n}'),(606,'int arg3','int',0,79,'net.sourceforge.ganttproject.GanttTreeTable$NameCellEditor',985,'net.sourceforge.ganttproject.GanttTreeTable$NameCellEditor.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    final JTextField result = ((JTextField) (super.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4)));\r\n    result.selectAll();\r\n    // result.addFocusListener(new FocusAdapter() {\r\n    // public void focusGained(FocusEvent arg0) {\r\n    // super.focusGained(arg0);\r\n    // ((JTextComponent)result).selectAll();\r\n    // }\r\n    // \r\n    // public void focusLost(FocusEvent arg0) {\r\n    // // TODO Auto-generated method stub\r\n    // super.focusLost(arg0);\r\n    // }\r\n    // \r\n    // });\r\n    // \r\n    return result;\r\n}'),(607,'int arg4','int',0,79,'net.sourceforge.ganttproject.GanttTreeTable$NameCellEditor',985,'net.sourceforge.ganttproject.GanttTreeTable$NameCellEditor.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    final JTextField result = ((JTextField) (super.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4)));\r\n    result.selectAll();\r\n    // result.addFocusListener(new FocusAdapter() {\r\n    // public void focusGained(FocusEvent arg0) {\r\n    // super.focusGained(arg0);\r\n    // ((JTextComponent)result).selectAll();\r\n    // }\r\n    // \r\n    // public void focusLost(FocusEvent arg0) {\r\n    // // TODO Auto-generated method stub\r\n    // super.focusLost(arg0);\r\n    // }\r\n    // \r\n    // });\r\n    // \r\n    return result;\r\n}'),(608,'TableModelEvent e','javax.swing.event.TableModelEvent',0,78,'net.sourceforge.ganttproject.GanttTreeTable$ModelListener',983,'net.sourceforge.ganttproject.GanttTreeTable$ModelListener.tableChanged(javax.swing.event.TableModelEvent)',0,'public void tableChanged(TableModelEvent e) {\r\n    // Mediator.getGanttProjectSingleton().getArea().repaint();\r\n    // getTable().repaint();\r\n    Mediator.getGanttProjectSingleton().repaint();\r\n}'),(609,'Task t','net.sourceforge.ganttproject.task.Task',548,81,'net.sourceforge.ganttproject.GanttTreeTable',928,'net.sourceforge.ganttproject.GanttTreeTable.editNewTask(net.sourceforge.ganttproject.task.Task)',0,''),(610,'CustomColumEvent event','net.sourceforge.ganttproject.task.CustomColumEvent',531,81,'net.sourceforge.ganttproject.GanttTreeTable',923,'net.sourceforge.ganttproject.GanttTreeTable.customColumsChange(net.sourceforge.ganttproject.task.CustomColumEvent)',0,'public void customColumsChange(CustomColumEvent event) {\r\n    switch (event.getType()) {\r\n        case CustomColumEvent.EVENT_ADD :\r\n            addNewCustomColumn(event.getColumn());\r\n            break;\r\n        case CustomColumEvent.EVENT_REMOVE :\r\n            deleteCustomColumn(event.getColumn());\r\n            break;\r\n        case CustomColumEvent.EVENT_RENAME :\r\n            renameCustomcolumn(event.getOldName(), event.getColName());\r\n            break;\r\n    }\r\n}'),(611,'String name','java.lang.String',0,80,'net.sourceforge.ganttproject.GanttTreeTable$VisibleFieldsImpl',988,'net.sourceforge.ganttproject.GanttTreeTable$VisibleFieldsImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    GanttTreeTable.DisplayedColumn newColumn = new GanttTreeTable.DisplayedColumn(name);\r\n    newColumn.setOrder(order);\r\n    if (width >= 0) {\r\n        newColumn.setWidth(width);\r\n    }\r\n    newColumn.setDisplayed(true);\r\n    GanttTreeTable.DisplayedColumnsList clone = ((GanttTreeTable.DisplayedColumnsList) (getDisplayColumns().clone()));\r\n    clone.add(newColumn);\r\n    setDisplayedColumns(clone);\r\n}'),(612,'int order','int',0,80,'net.sourceforge.ganttproject.GanttTreeTable$VisibleFieldsImpl',988,'net.sourceforge.ganttproject.GanttTreeTable$VisibleFieldsImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    GanttTreeTable.DisplayedColumn newColumn = new GanttTreeTable.DisplayedColumn(name);\r\n    newColumn.setOrder(order);\r\n    if (width >= 0) {\r\n        newColumn.setWidth(width);\r\n    }\r\n    newColumn.setDisplayed(true);\r\n    GanttTreeTable.DisplayedColumnsList clone = ((GanttTreeTable.DisplayedColumnsList) (getDisplayColumns().clone()));\r\n    clone.add(newColumn);\r\n    setDisplayedColumns(clone);\r\n}'),(613,'int width','int',0,80,'net.sourceforge.ganttproject.GanttTreeTable$VisibleFieldsImpl',988,'net.sourceforge.ganttproject.GanttTreeTable$VisibleFieldsImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    GanttTreeTable.DisplayedColumn newColumn = new GanttTreeTable.DisplayedColumn(name);\r\n    newColumn.setOrder(order);\r\n    if (width >= 0) {\r\n        newColumn.setWidth(width);\r\n    }\r\n    newColumn.setDisplayed(true);\r\n    GanttTreeTable.DisplayedColumnsList clone = ((GanttTreeTable.DisplayedColumnsList) (getDisplayColumns().clone()));\r\n    clone.add(newColumn);\r\n    setDisplayedColumns(clone);\r\n}'),(614,'int index','int',0,80,'net.sourceforge.ganttproject.GanttTreeTable$VisibleFieldsImpl',990,'net.sourceforge.ganttproject.GanttTreeTable$VisibleFieldsImpl.getField(int)',0,'public TableHeaderUIFacade.Column getField(int index) {\r\n    return ((TableHeaderUIFacade.Column) (getDisplayColumns().get(index)));\r\n}'),(615,'TableHeaderUIFacade source','net.sourceforge.ganttproject.gui.TableHeaderUIFacade',324,80,'net.sourceforge.ganttproject.GanttTreeTable$VisibleFieldsImpl',992,'net.sourceforge.ganttproject.GanttTreeTable$VisibleFieldsImpl.importData(net.sourceforge.ganttproject.gui.TableHeaderUIFacade)',0,'public void importData(TableHeaderUIFacade source) {\r\n    clear();\r\n    GanttTreeTable.DisplayedColumnsList clone = ((GanttTreeTable.DisplayedColumnsList) (getDisplayColumns().clone()));\r\n    clone.clear();\r\n    for (int i = 0; i < (source.getSize()); i++) {\r\n        TableHeaderUIFacade.Column nextField = source.getField(i);\r\n        GanttTreeTable.DisplayedColumn newColumn = new GanttTreeTable.DisplayedColumn(nextField.getName());\r\n        newColumn.setID(nextField.getID());\r\n        newColumn.setOrder(nextField.getOrder());\r\n        if ((nextField.getWidth()) >= 0) {\r\n            newColumn.setWidth(nextField.getWidth());\r\n        }\r\n        newColumn.setDisplayed(true);\r\n        clone.add(newColumn);\r\n    }\r\n    setDisplayedColumns(clone);\r\n}'),(616,'TreeNode root','javax.swing.tree.TreeNode',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',993,'net.sourceforge.ganttproject.GanttTreeTableModel.-init-(javax.swing.tree.TreeNode)',0,'/**\r\n * Creates an instance of GanttTreeTableModel with a root.\r\n *\r\n * @param root\r\n * 		The root.\r\n */\r\npublic GanttTreeTableModel(TreeNode root) {\r\n    super(root);\r\n    titles = new ArrayList();\r\n    customColumns = new Vector();\r\n    changeLanguage(GanttTreeTableModel.language);\r\n}'),(617,'GanttLanguage ganttLanguage','net.sourceforge.ganttproject.language.GanttLanguage',461,82,'net.sourceforge.ganttproject.GanttTreeTableModel',997,'net.sourceforge.ganttproject.GanttTreeTableModel.changeLanguage(net.sourceforge.ganttproject.language.GanttLanguage)',0,'/**\r\n * Changes the language.\r\n *\r\n * @param ganttLanguage\r\n * 		New language to use.\r\n */\r\npublic void changeLanguage(GanttLanguage ganttLanguage) {\r\n    GanttTreeTableModel.strColType = GanttTreeTableModel.language.getText(\"tableColType\");\r\n    GanttTreeTableModel.strColPriority = GanttTreeTableModel.language.getText(\"tableColPriority\");\r\n    GanttTreeTableModel.strColInfo = GanttTreeTableModel.language.getText(\"tableColInfo\");\r\n    GanttTreeTableModel.strColName = GanttTreeTableModel.language.getText(\"tableColName\");\r\n    GanttTreeTableModel.strColBegDate = GanttTreeTableModel.language.getText(\"tableColBegDate\");\r\n    GanttTreeTableModel.strColEndDate = GanttTreeTableModel.language.getText(\"tableColEndDate\");\r\n    GanttTreeTableModel.strColDuration = GanttTreeTableModel.language.getText(\"tableColDuration\");\r\n    GanttTreeTableModel.strColCompletion = GanttTreeTableModel.language.getText(\"tableColCompletion\");\r\n    GanttTreeTableModel.strColCoordinator = GanttTreeTableModel.language.getText(\"tableColCoordinator\");\r\n    GanttTreeTableModel.strColPredecessors = GanttTreeTableModel.language.getText(\"tableColPredecessors\");\r\n    GanttTreeTableModel.strColID = GanttTreeTableModel.language.getText(\"tableColID\");\r\n    titles.clear();\r\n    String[] cols = new String[]{ GanttTreeTableModel.strColType, GanttTreeTableModel.strColPriority, GanttTreeTableModel.strColInfo, GanttTreeTableModel.strColName, GanttTreeTableModel.strColBegDate, GanttTreeTableModel.strColEndDate, GanttTreeTableModel.strColDuration, GanttTreeTableModel.strColCompletion, GanttTreeTableModel.strColCoordinator, GanttTreeTableModel.strColPredecessors, GanttTreeTableModel.strColID };\r\n    for (int i = 0; i < (cols.length); i++)\r\n        titles.add(new String(cols[i]));\r\n\r\n}'),(618,'MutableTreeNode newChild','javax.swing.tree.MutableTreeNode',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1017,'net.sourceforge.ganttproject.GanttTreeTableModel.insertNodeInto(javax.swing.tree.MutableTreeNode,javax.swing.tree.MutableTreeNode,int)',0,''),(619,'MutableTreeNode parent','javax.swing.tree.MutableTreeNode',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1017,'net.sourceforge.ganttproject.GanttTreeTableModel.insertNodeInto(javax.swing.tree.MutableTreeNode,javax.swing.tree.MutableTreeNode,int)',0,''),(620,'int index','int',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1017,'net.sourceforge.ganttproject.GanttTreeTableModel.insertNodeInto(javax.swing.tree.MutableTreeNode,javax.swing.tree.MutableTreeNode,int)',0,''),(621,'MutableTreeNode node','javax.swing.tree.MutableTreeNode',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1021,'net.sourceforge.ganttproject.GanttTreeTableModel.removeNodeFromParent(javax.swing.tree.MutableTreeNode)',0,''),(622,'String title','java.lang.String',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',995,'net.sourceforge.ganttproject.GanttTreeTableModel.addCustomColumn(java.lang.String)',0,'/**\r\n * Add a custom column to the model.\r\n *\r\n * @param title\r\n * 		\r\n */\r\npublic void addCustomColumn(String title) {\r\n    customColumns.add(title);\r\n    (nbColTot)++;\r\n}'),(623,'String title','java.lang.String',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1005,'net.sourceforge.ganttproject.GanttTreeTableModel.deleteCustomColumn(java.lang.String)',0,'/**\r\n * Delete a custom column.\r\n *\r\n * @param title\r\n * 		\r\n */\r\npublic void deleteCustomColumn(String title) {\r\n    customColumns.remove(title);\r\n    this.columnRemoved(null);\r\n    (nbColTot)--;\r\n}'),(624,'String oldName','java.lang.String',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1022,'net.sourceforge.ganttproject.GanttTreeTableModel.renameCustomColumn(java.lang.String,java.lang.String)',0,'public void renameCustomColumn(String oldName, String newName) {\r\n    customColumns.set(customColumns.indexOf(oldName), newName);\r\n}'),(625,'String newName','java.lang.String',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1022,'net.sourceforge.ganttproject.GanttTreeTableModel.renameCustomColumn(java.lang.String,java.lang.String)',0,'public void renameCustomColumn(String oldName, String newName) {\r\n    customColumns.set(customColumns.indexOf(oldName), newName);\r\n}'),(626,'int column','int',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1006,'net.sourceforge.ganttproject.GanttTreeTableModel.getColumnClass(int)',0,''),(627,'int column','int',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1009,'net.sourceforge.ganttproject.GanttTreeTableModel.getColumnName(int)',0,'public String getColumnName(int column) {\r\n    if (column < (titles.size()))\r\n        return ((String) (titles.get(column)));\r\n\r\n    try {\r\n        return ((String) (customColumns.get((column - (titles.size())))));\r\n    } catch (IndexOutOfBoundsException e) {\r\n        return ((String) (customColumns.get(((column - (titles.size())) - 1))));\r\n    }\r\n}'),(628,'Object node','java.lang.Object',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1018,'net.sourceforge.ganttproject.GanttTreeTableModel.isCellEditable(java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic boolean isCellEditable(Object node, int column) {\r\n    if (node instanceof TaskNode) {\r\n        Task task = ((Task) (((TaskNode) (node)).getUserObject()));\r\n        switch (column) {\r\n            case 5 :\r\n            case 6 :\r\n                return !(task.isMilestone());\r\n            case 2 :\r\n            case 8 :\r\n            case 9 :\r\n            case 10 :\r\n                return false;\r\n            default :\r\n                return true;\r\n        }\r\n    }\r\n    return false;\r\n}'),(629,'int column','int',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1018,'net.sourceforge.ganttproject.GanttTreeTableModel.isCellEditable(java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic boolean isCellEditable(Object node, int column) {\r\n    if (node instanceof TaskNode) {\r\n        Task task = ((Task) (((TaskNode) (node)).getUserObject()));\r\n        switch (column) {\r\n            case 5 :\r\n            case 6 :\r\n                return !(task.isMilestone());\r\n            case 2 :\r\n            case 8 :\r\n            case 9 :\r\n            case 10 :\r\n                return false;\r\n            default :\r\n                return true;\r\n        }\r\n    }\r\n    return false;\r\n}'),(630,'Object node','java.lang.Object',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1015,'net.sourceforge.ganttproject.GanttTreeTableModel.getValueAt(java.lang.Object,int)',0,'// public Object getChild(Object parent, int index)\r\n// {\r\n// \r\n// }\r\n// \r\n// public int getChildCount(Object parent)\r\n// {\r\n// \r\n// }\r\n/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic Object getValueAt(Object node, int column) {\r\n    Object res = null;\r\n    if (!(node instanceof TaskNode))\r\n        return null;\r\n\r\n    TaskNode tn = ((TaskNode) (node));\r\n    Task t = ((Task) (tn.getUserObject()));\r\n    // if(tn.getParent()!=null){\r\n    switch (column) {\r\n        case 0 :\r\n            if (((Task) (tn.getUserObject())).isProjectTask()) {\r\n                res = new ImageIcon(getClass().getResource(\"/icons/mproject.gif\"));\r\n            } else\r\n                if (!(tn.isLeaf()))\r\n                    res = new ImageIcon(getClass().getResource(\"/icons/mtask.gif\"));\r\n                else\r\n                    if (t.isMilestone())\r\n                        res = new ImageIcon(getClass().getResource(\"/icons/meeting.gif\"));\r\n                    else\r\n                        res = new ImageIcon(getClass().getResource(\"/icons/tasks2.png\"));\r\n\r\n\r\n\r\n            break;\r\n        case 1 :\r\n            Task task = ((Task) (tn.getUserObject()));\r\n            String path = ((task.getPriority()) == 0) ? \"/icons/task1.gif\" : (task.getPriority()) == 1 ? \"/icons/task.gif\" : \"/icons/task2.gif\";\r\n            res = new ImageIcon(getClass().getResource(path));\r\n            break;\r\n        case 2 :\r\n            // info\r\n            TaskInfo info = t.getTaskInfo();\r\n            if (info != null) {\r\n                if (info instanceof Delay) {\r\n                    int type = ((Delay) (info)).getType();\r\n                    if (type == (Delay.NORMAL))\r\n                        res = new ImageIcon(getClass().getResource(\"/icons/alert1_16.gif\"));\r\n                    else\r\n                        if (type == (Delay.CRITICAL))\r\n                            res = new ImageIcon(getClass().getResource(\"/icons/alert2_16.gif\"));\r\n\r\n\r\n                }\r\n            }\r\n            break;\r\n        case 3 :\r\n            res = tn.getName();\r\n            break;\r\n        case 4 :\r\n            res = tn.getStart();\r\n            break;\r\n        case 5 :\r\n            res = tn.getEnd();\r\n            break;\r\n        case 6 :\r\n            res = new Integer(tn.getDuration());\r\n            break;\r\n        case 7 :\r\n            res = new Integer(tn.getCompletionPercentage());\r\n            break;\r\n        case 8 :\r\n            {\r\n                ResourceAssignment[] tAssign = t.getAssignments();\r\n                StringBuffer sb = new StringBuffer();\r\n                int nb = 0;\r\n                for (int i = 0; i < (tAssign.length); i++) {\r\n                    ResourceAssignment resAss = tAssign[i];\r\n                    if (resAss.isCoordinator())\r\n                        sb.append(((nb++) == 0 ? \"\" : \", \")).append(resAss.getResource().getName());\r\n\r\n                }\r\n                // res = \"Not implemented\";\r\n                res = sb.toString();\r\n                break;\r\n            }\r\n        case 9 :\r\n            {\r\n                String resStr = \"\";\r\n                TaskDependency[] dep = t.getDependenciesAsDependant().toArray();\r\n                int i = 0;\r\n                if ((dep != null) && ((dep.length) > 0)) {\r\n                    for (i = 0; i < ((dep.length) - 1); i++)\r\n                        resStr += (dep[i].getDependee().getTaskID()) + \", \";\r\n\r\n                    resStr += (dep[i].getDependee().getTaskID()) + \"\";\r\n                }\r\n                res = resStr;\r\n                break;\r\n            }\r\n        case 10 :\r\n            res = new Integer(t.getTaskID());\r\n            break;\r\n        default :\r\n            String colName = this.getColumnName(column);\r\n            // System.out.println(\" -> \"+colName);\r\n            // System.out.println(t+\" : \"+t.getCustomValues());\r\n            res = t.getCustomValues().getValue(colName);\r\n            break;\r\n    }\r\n    // }\r\n    // else\r\n    // res =\"\";\r\n    return res;\r\n}'),(631,'int column','int',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1015,'net.sourceforge.ganttproject.GanttTreeTableModel.getValueAt(java.lang.Object,int)',0,'// public Object getChild(Object parent, int index)\r\n// {\r\n// \r\n// }\r\n// \r\n// public int getChildCount(Object parent)\r\n// {\r\n// \r\n// }\r\n/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic Object getValueAt(Object node, int column) {\r\n    Object res = null;\r\n    if (!(node instanceof TaskNode))\r\n        return null;\r\n\r\n    TaskNode tn = ((TaskNode) (node));\r\n    Task t = ((Task) (tn.getUserObject()));\r\n    // if(tn.getParent()!=null){\r\n    switch (column) {\r\n        case 0 :\r\n            if (((Task) (tn.getUserObject())).isProjectTask()) {\r\n                res = new ImageIcon(getClass().getResource(\"/icons/mproject.gif\"));\r\n            } else\r\n                if (!(tn.isLeaf()))\r\n                    res = new ImageIcon(getClass().getResource(\"/icons/mtask.gif\"));\r\n                else\r\n                    if (t.isMilestone())\r\n                        res = new ImageIcon(getClass().getResource(\"/icons/meeting.gif\"));\r\n                    else\r\n                        res = new ImageIcon(getClass().getResource(\"/icons/tasks2.png\"));\r\n\r\n\r\n\r\n            break;\r\n        case 1 :\r\n            Task task = ((Task) (tn.getUserObject()));\r\n            String path = ((task.getPriority()) == 0) ? \"/icons/task1.gif\" : (task.getPriority()) == 1 ? \"/icons/task.gif\" : \"/icons/task2.gif\";\r\n            res = new ImageIcon(getClass().getResource(path));\r\n            break;\r\n        case 2 :\r\n            // info\r\n            TaskInfo info = t.getTaskInfo();\r\n            if (info != null) {\r\n                if (info instanceof Delay) {\r\n                    int type = ((Delay) (info)).getType();\r\n                    if (type == (Delay.NORMAL))\r\n                        res = new ImageIcon(getClass().getResource(\"/icons/alert1_16.gif\"));\r\n                    else\r\n                        if (type == (Delay.CRITICAL))\r\n                            res = new ImageIcon(getClass().getResource(\"/icons/alert2_16.gif\"));\r\n\r\n\r\n                }\r\n            }\r\n            break;\r\n        case 3 :\r\n            res = tn.getName();\r\n            break;\r\n        case 4 :\r\n            res = tn.getStart();\r\n            break;\r\n        case 5 :\r\n            res = tn.getEnd();\r\n            break;\r\n        case 6 :\r\n            res = new Integer(tn.getDuration());\r\n            break;\r\n        case 7 :\r\n            res = new Integer(tn.getCompletionPercentage());\r\n            break;\r\n        case 8 :\r\n            {\r\n                ResourceAssignment[] tAssign = t.getAssignments();\r\n                StringBuffer sb = new StringBuffer();\r\n                int nb = 0;\r\n                for (int i = 0; i < (tAssign.length); i++) {\r\n                    ResourceAssignment resAss = tAssign[i];\r\n                    if (resAss.isCoordinator())\r\n                        sb.append(((nb++) == 0 ? \"\" : \", \")).append(resAss.getResource().getName());\r\n\r\n                }\r\n                // res = \"Not implemented\";\r\n                res = sb.toString();\r\n                break;\r\n            }\r\n        case 9 :\r\n            {\r\n                String resStr = \"\";\r\n                TaskDependency[] dep = t.getDependenciesAsDependant().toArray();\r\n                int i = 0;\r\n                if ((dep != null) && ((dep.length) > 0)) {\r\n                    for (i = 0; i < ((dep.length) - 1); i++)\r\n                        resStr += (dep[i].getDependee().getTaskID()) + \", \";\r\n\r\n                    resStr += (dep[i].getDependee().getTaskID()) + \"\";\r\n                }\r\n                res = resStr;\r\n                break;\r\n            }\r\n        case 10 :\r\n            res = new Integer(t.getTaskID());\r\n            break;\r\n        default :\r\n            String colName = this.getColumnName(column);\r\n            // System.out.println(\" -> \"+colName);\r\n            // System.out.println(t+\" : \"+t.getCustomValues());\r\n            res = t.getCustomValues().getValue(colName);\r\n            break;\r\n    }\r\n    // }\r\n    // else\r\n    // res =\"\";\r\n    return res;\r\n}'),(632,'final Object value','java.lang.Object',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1024,'net.sourceforge.ganttproject.GanttTreeTableModel.setValueAt(java.lang.Object,java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void setValueAt(final Object value, final Object node, final int column) {\r\n    if (value == null) {\r\n        return;\r\n    }\r\n    if (isCellEditable(node, column)) {\r\n        // System.out.println(\"undoable colonne: \" + column);\r\n        Mediator.getGanttProjectSingleton().getUndoManager().undoableEdit(\"Change properties column\", new Runnable() {\r\n            public void run() {\r\n                setValue(value, node, column);\r\n            }\r\n        });\r\n    } else {\r\n        // System.out.println(\"NOT undoable colonne: \" + column);\r\n        setValue(value, node, column);\r\n    }\r\n    // System.out.println(\"node : \" + node);\r\n    // System.out.println(\"valeur : \" + value);\r\n    Mediator.getGanttProjectSingleton().repaint();\r\n    Mediator.getGanttProjectSingleton().setAskForSave(true);\r\n}'),(633,'final Object node','java.lang.Object',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1024,'net.sourceforge.ganttproject.GanttTreeTableModel.setValueAt(java.lang.Object,java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void setValueAt(final Object value, final Object node, final int column) {\r\n    if (value == null) {\r\n        return;\r\n    }\r\n    if (isCellEditable(node, column)) {\r\n        // System.out.println(\"undoable colonne: \" + column);\r\n        Mediator.getGanttProjectSingleton().getUndoManager().undoableEdit(\"Change properties column\", new Runnable() {\r\n            public void run() {\r\n                setValue(value, node, column);\r\n            }\r\n        });\r\n    } else {\r\n        // System.out.println(\"NOT undoable colonne: \" + column);\r\n        setValue(value, node, column);\r\n    }\r\n    // System.out.println(\"node : \" + node);\r\n    // System.out.println(\"valeur : \" + value);\r\n    Mediator.getGanttProjectSingleton().repaint();\r\n    Mediator.getGanttProjectSingleton().setAskForSave(true);\r\n}'),(634,'final int column','int',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1024,'net.sourceforge.ganttproject.GanttTreeTableModel.setValueAt(java.lang.Object,java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void setValueAt(final Object value, final Object node, final int column) {\r\n    if (value == null) {\r\n        return;\r\n    }\r\n    if (isCellEditable(node, column)) {\r\n        // System.out.println(\"undoable colonne: \" + column);\r\n        Mediator.getGanttProjectSingleton().getUndoManager().undoableEdit(\"Change properties column\", new Runnable() {\r\n            public void run() {\r\n                setValue(value, node, column);\r\n            }\r\n        });\r\n    } else {\r\n        // System.out.println(\"NOT undoable colonne: \" + column);\r\n        setValue(value, node, column);\r\n    }\r\n    // System.out.println(\"node : \" + node);\r\n    // System.out.println(\"valeur : \" + value);\r\n    Mediator.getGanttProjectSingleton().repaint();\r\n    Mediator.getGanttProjectSingleton().setAskForSave(true);\r\n}'),(635,'final Object value','java.lang.Object',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1023,'net.sourceforge.ganttproject.GanttTreeTableModel.setValue(java.lang.Object,java.lang.Object,int)',0,'/**\r\n * Set value in left pane cell\r\n *\r\n * @param value\r\n * 		\r\n * @param node\r\n * 		\r\n * @param column\r\n * 		\r\n */\r\nprivate void setValue(final Object value, final Object node, final int column) {\r\n    switch (column) {\r\n        case 0 :\r\n        case 1 :\r\n        case 2 :\r\n            // info\r\n            ((TaskNode) (node)).setTaskInfo(((TaskInfo) (value)));\r\n        case 8 :\r\n            break;\r\n        case 3 :\r\n            ((TaskNode) (node)).setName(value.toString());\r\n            break;\r\n        case 4 :\r\n            ((TaskNode) (node)).setStart(((GanttCalendar) (value)));\r\n            ((TaskNode) (node)).applyThirdDateConstraint();\r\n            break;\r\n        case 5 :\r\n            ((TaskNode) (node)).setEnd(((GanttCalendar) (value)));\r\n            break;\r\n        case 6 :\r\n            Task task = ((Task) (((TaskNode) (node)).getUserObject()));\r\n            TaskLength tl = task.getDuration();\r\n            ((TaskNode) (node)).setDuration(task.getManager().createLength(tl.getTimeUnit(), ((Integer) (value)).intValue()));\r\n            break;\r\n        case 7 :\r\n            ((TaskNode) (node)).setCompletionPercentage(((Integer) (value)).intValue());\r\n            break;\r\n        default :\r\n            // custom colums\r\n            try {\r\n                ((Task) (((TaskNode) (node)).getUserObject())).getCustomValues().setValue(this.getColumnName(column), value);\r\n            } catch (CustomColumnsException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n    }\r\n}'),(636,'final Object node','java.lang.Object',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1023,'net.sourceforge.ganttproject.GanttTreeTableModel.setValue(java.lang.Object,java.lang.Object,int)',0,'/**\r\n * Set value in left pane cell\r\n *\r\n * @param value\r\n * 		\r\n * @param node\r\n * 		\r\n * @param column\r\n * 		\r\n */\r\nprivate void setValue(final Object value, final Object node, final int column) {\r\n    switch (column) {\r\n        case 0 :\r\n        case 1 :\r\n        case 2 :\r\n            // info\r\n            ((TaskNode) (node)).setTaskInfo(((TaskInfo) (value)));\r\n        case 8 :\r\n            break;\r\n        case 3 :\r\n            ((TaskNode) (node)).setName(value.toString());\r\n            break;\r\n        case 4 :\r\n            ((TaskNode) (node)).setStart(((GanttCalendar) (value)));\r\n            ((TaskNode) (node)).applyThirdDateConstraint();\r\n            break;\r\n        case 5 :\r\n            ((TaskNode) (node)).setEnd(((GanttCalendar) (value)));\r\n            break;\r\n        case 6 :\r\n            Task task = ((Task) (((TaskNode) (node)).getUserObject()));\r\n            TaskLength tl = task.getDuration();\r\n            ((TaskNode) (node)).setDuration(task.getManager().createLength(tl.getTimeUnit(), ((Integer) (value)).intValue()));\r\n            break;\r\n        case 7 :\r\n            ((TaskNode) (node)).setCompletionPercentage(((Integer) (value)).intValue());\r\n            break;\r\n        default :\r\n            // custom colums\r\n            try {\r\n                ((Task) (((TaskNode) (node)).getUserObject())).getCustomValues().setValue(this.getColumnName(column), value);\r\n            } catch (CustomColumnsException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n    }\r\n}'),(637,'final int column','int',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1023,'net.sourceforge.ganttproject.GanttTreeTableModel.setValue(java.lang.Object,java.lang.Object,int)',0,'/**\r\n * Set value in left pane cell\r\n *\r\n * @param value\r\n * 		\r\n * @param node\r\n * 		\r\n * @param column\r\n * 		\r\n */\r\nprivate void setValue(final Object value, final Object node, final int column) {\r\n    switch (column) {\r\n        case 0 :\r\n        case 1 :\r\n        case 2 :\r\n            // info\r\n            ((TaskNode) (node)).setTaskInfo(((TaskInfo) (value)));\r\n        case 8 :\r\n            break;\r\n        case 3 :\r\n            ((TaskNode) (node)).setName(value.toString());\r\n            break;\r\n        case 4 :\r\n            ((TaskNode) (node)).setStart(((GanttCalendar) (value)));\r\n            ((TaskNode) (node)).applyThirdDateConstraint();\r\n            break;\r\n        case 5 :\r\n            ((TaskNode) (node)).setEnd(((GanttCalendar) (value)));\r\n            break;\r\n        case 6 :\r\n            Task task = ((Task) (((TaskNode) (node)).getUserObject()));\r\n            TaskLength tl = task.getDuration();\r\n            ((TaskNode) (node)).setDuration(task.getManager().createLength(tl.getTimeUnit(), ((Integer) (value)).intValue()));\r\n            break;\r\n        case 7 :\r\n            ((TaskNode) (node)).setCompletionPercentage(((Integer) (value)).intValue());\r\n            break;\r\n        default :\r\n            // custom colums\r\n            try {\r\n                ((Task) (((TaskNode) (node)).getUserObject())).getCustomValues().setValue(this.getColumnName(column), value);\r\n            } catch (CustomColumnsException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n    }\r\n}'),(638,'TableColumnModelEvent arg0','javax.swing.event.TableColumnModelEvent',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',998,'net.sourceforge.ganttproject.GanttTreeTableModel.columnAdded(javax.swing.event.TableColumnModelEvent)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void columnAdded(TableColumnModelEvent arg0) {\r\n    (nbCol)++;\r\n}'),(639,'TableColumnModelEvent arg0','javax.swing.event.TableColumnModelEvent',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1001,'net.sourceforge.ganttproject.GanttTreeTableModel.columnRemoved(javax.swing.event.TableColumnModelEvent)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void columnRemoved(TableColumnModelEvent arg0) {\r\n    (nbCol)--;\r\n}'),(640,'TableColumnModelEvent arg0','javax.swing.event.TableColumnModelEvent',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1000,'net.sourceforge.ganttproject.GanttTreeTableModel.columnMoved(javax.swing.event.TableColumnModelEvent)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void columnMoved(TableColumnModelEvent arg0) {\r\n    // TODO Auto-generated method stub\r\n}'),(641,'ChangeEvent arg0','javax.swing.event.ChangeEvent',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',999,'net.sourceforge.ganttproject.GanttTreeTableModel.columnMarginChanged(javax.swing.event.ChangeEvent)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void columnMarginChanged(ChangeEvent arg0) {\r\n    // TODO Auto-generated method stub\r\n}'),(642,'ListSelectionEvent arg0','javax.swing.event.ListSelectionEvent',0,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1002,'net.sourceforge.ganttproject.GanttTreeTableModel.columnSelectionChanged(javax.swing.event.ListSelectionEvent)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void columnSelectionChanged(ListSelectionEvent arg0) {\r\n    // TODO Auto-generated method stub\r\n}'),(643,'Task container','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1012,'net.sourceforge.ganttproject.GanttTreeTableModel.getNestedTasks(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic Task[] getNestedTasks(Task container) {\r\n    TaskNode r = ((TaskNode) (root));\r\n    Enumeration e = r.children();\r\n    Vector v = new Vector();\r\n    while (e.hasMoreElements())\r\n        v.add(((TaskNode) (e.nextElement())));\r\n\r\n    Task[] res = new Task[v.size()];\r\n    v.toArray(res);\r\n    return res;\r\n}'),(644,'Task container','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1016,'net.sourceforge.ganttproject.GanttTreeTableModel.hasNestedTasks(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * Purpose: Should return true if this Tasks has any nested subtasks.\r\n */\r\npublic boolean hasNestedTasks(Task container) {\r\n    TaskNode r = ((TaskNode) (root));\r\n    if ((r.getChildCount()) > 0) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}'),(645,'Task task','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1014,'net.sourceforge.ganttproject.GanttTreeTableModel.getTaskNodeForTask(net.sourceforge.ganttproject.task.Task)',0,''),(646,'net.sourceforge.ganttproject.task.TaskNode','net.sourceforge.ganttproject.task.TaskNode',572,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1014,'net.sourceforge.ganttproject.GanttTreeTableModel.getTaskNodeForTask(net.sourceforge.ganttproject.task.Task)',1,''),(647,'Task nestedTask','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1010,'net.sourceforge.ganttproject.GanttTreeTableModel.getContainer(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic Task getContainer(Task nestedTask) {\r\n    // TODO Auto-generated method stub\r\n    return null;\r\n}'),(648,'net.sourceforge.ganttproject.task.Task','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1010,'net.sourceforge.ganttproject.GanttTreeTableModel.getContainer(net.sourceforge.ganttproject.task.Task)',1,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic Task getContainer(Task nestedTask) {\r\n    // TODO Auto-generated method stub\r\n    return null;\r\n}'),(649,'Task whatMove','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1020,'net.sourceforge.ganttproject.GanttTreeTableModel.move(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void move(Task whatMove, Task whereMove) {\r\n    // TODO Auto-generated method stub\r\n}'),(650,'Task whereMove','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1020,'net.sourceforge.ganttproject.GanttTreeTableModel.move(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void move(Task whatMove, Task whereMove) {\r\n    // TODO Auto-generated method stub\r\n}'),(651,'Task dependant','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',996,'net.sourceforge.ganttproject.GanttTreeTableModel.areUnrelated(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic boolean areUnrelated(Task dependant, Task dependee) {\r\n    // TODO Auto-generated method stub\r\n    return false;\r\n}'),(652,'Task dependee','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',996,'net.sourceforge.ganttproject.GanttTreeTableModel.areUnrelated(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic boolean areUnrelated(Task dependant, Task dependee) {\r\n    // TODO Auto-generated method stub\r\n    return false;\r\n}'),(653,'Task task','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1011,'net.sourceforge.ganttproject.GanttTreeTableModel.getDepth(net.sourceforge.ganttproject.task.Task)',0,'public int getDepth(Task task) {\r\n    // TODO Auto-generated method stub\r\n    return 0;\r\n}'),(654,'GanttLanguage.Event event','net.sourceforge.ganttproject.language.GanttLanguage$Event',459,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1019,'net.sourceforge.ganttproject.GanttTreeTableModel.languageChanged(net.sourceforge.ganttproject.language.GanttLanguage$Event)',0,'public void languageChanged(GanttLanguage.Event event) {\r\n    changeLanguage(event.getLanguage());\r\n}'),(655,'Task next','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1003,'net.sourceforge.ganttproject.GanttTreeTableModel.compareDocumentOrder(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public int compareDocumentOrder(Task next, Task dependeeTask) {\r\n    throw new UnsupportedOperationException();\r\n}'),(656,'Task dependeeTask','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1003,'net.sourceforge.ganttproject.GanttTreeTableModel.compareDocumentOrder(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public int compareDocumentOrder(Task next, Task dependeeTask) {\r\n    throw new UnsupportedOperationException();\r\n}'),(657,'Task task','net.sourceforge.ganttproject.task.Task',548,82,'net.sourceforge.ganttproject.GanttTreeTableModel',1004,'net.sourceforge.ganttproject.GanttTreeTableModel.contains(net.sourceforge.ganttproject.task.Task)',0,'public boolean contains(Task task) {\r\n    throw new UnsupportedOperationException();\r\n}'),(658,'String[] args','java.lang.String[]',0,83,'net.sourceforge.ganttproject.GanttViewer',1026,'net.sourceforge.ganttproject.GanttViewer.main(java.lang.String[])',0,'public static void main(String[] args) {\r\n    GanttProject ganttFrame = new GanttProject(true);\r\n    ganttFrame.setVisible(true);\r\n}'),(659,'String projectName','java.lang.String',0,84,'net.sourceforge.ganttproject.IGanttProject',1056,'net.sourceforge.ganttproject.IGanttProject.setProjectName(java.lang.String)',0,'void setProjectName(String projectName);'),(660,'String description','java.lang.String',0,84,'net.sourceforge.ganttproject.IGanttProject',1051,'net.sourceforge.ganttproject.IGanttProject.setDescription(java.lang.String)',0,'void setDescription(String description);'),(661,'String organization','java.lang.String',0,84,'net.sourceforge.ganttproject.IGanttProject',1055,'net.sourceforge.ganttproject.IGanttProject.setOrganization(java.lang.String)',0,'void setOrganization(String organization);'),(662,'String webLink','java.lang.String',0,84,'net.sourceforge.ganttproject.IGanttProject',1057,'net.sourceforge.ganttproject.IGanttProject.setWebLink(java.lang.String)',0,'void setWebLink(String webLink);'),(663,'boolean modified','boolean',0,84,'net.sourceforge.ganttproject.IGanttProject',1054,'net.sourceforge.ganttproject.IGanttProject.setModified(boolean)',0,'void setModified(boolean modified);'),(664,'Document document','net.sourceforge.ganttproject.document.Document',233,84,'net.sourceforge.ganttproject.IGanttProject',1052,'net.sourceforge.ganttproject.IGanttProject.setDocument(net.sourceforge.ganttproject.document.Document)',0,'void setDocument(Document document);'),(665,'ProjectEventListener listener','net.sourceforge.ganttproject.ProjectEventListener',88,84,'net.sourceforge.ganttproject.IGanttProject',1027,'net.sourceforge.ganttproject.IGanttProject.addProjectEventListener(net.sourceforge.ganttproject.ProjectEventListener)',0,'void addProjectEventListener(ProjectEventListener listener);'),(666,'ProjectEventListener listener','net.sourceforge.ganttproject.ProjectEventListener',88,84,'net.sourceforge.ganttproject.IGanttProject',1050,'net.sourceforge.ganttproject.IGanttProject.removeProjectEventListener(net.sourceforge.ganttproject.ProjectEventListener)',0,'void removeProjectEventListener(ProjectEventListener listener);'),(667,'Document document','net.sourceforge.ganttproject.document.Document',233,84,'net.sourceforge.ganttproject.IGanttProject',1049,'net.sourceforge.ganttproject.IGanttProject.open(net.sourceforge.ganttproject.document.Document)',0,'void open(Document document) throws IOException;'),(668,'GanttProject gp','net.sourceforge.ganttproject.GanttProject',53,85,'net.sourceforge.ganttproject.Mediator',1067,'net.sourceforge.ganttproject.Mediator.registerGanttProject(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Regsiters the unique GanttProject instance.\r\n *\r\n * @param gp\r\n * 		The unique GanttProject instance.\r\n */\r\npublic static void registerGanttProject(GanttProject gp) {\r\n    Mediator.ganttprojectSingleton = gp;\r\n}'),(669,'TaskSelectionManager taskSelection','net.sourceforge.ganttproject.task.TaskSelectionManager',575,85,'net.sourceforge.ganttproject.Mediator',1068,'net.sourceforge.ganttproject.Mediator.registerTaskSelectionManager(net.sourceforge.ganttproject.task.TaskSelectionManager)',0,'/**\r\n * Regsiters the unique CustomColumnsManager instance.\r\n *\r\n * @param managerThe\r\n * 		unique CustomColumnsManager instance.\r\n */\r\n// public static void registerCustomColumnsManager(CustomColumnsManager manager) {\r\n// customColumnsManager = manager;\r\n// }\r\n// \r\n// public static void registerCustomColumnsStorage(CustomColumnsStorage storage) {\r\n// customColumnsStorage = storage;\r\n// }\r\n// \r\npublic static void registerTaskSelectionManager(TaskSelectionManager taskSelection) {\r\n    Mediator.taskSelectionManager = taskSelection;\r\n}'),(670,'GPUndoManager undoMgr','net.sourceforge.ganttproject.undo.GPUndoManager',657,85,'net.sourceforge.ganttproject.Mediator',1069,'net.sourceforge.ganttproject.Mediator.registerUndoManager(net.sourceforge.ganttproject.undo.GPUndoManager)',0,'// public static void registerRoleManager(RoleManager roleMgr) {\r\n// roleManager = roleMgr;\r\n// }\r\n// \r\n// public static void registerTaskManager(TaskManager taskMgr) {\r\n// taskManager = taskMgr;\r\n// }\r\npublic static void registerUndoManager(GPUndoManager undoMgr) {\r\n    Mediator.undoManager = undoMgr;\r\n}'),(671,'DelayManager delayMgr','net.sourceforge.ganttproject.delay.DelayManager',229,85,'net.sourceforge.ganttproject.Mediator',1066,'net.sourceforge.ganttproject.Mediator.registerDelayManager(net.sourceforge.ganttproject.delay.DelayManager)',0,'public static void registerDelayManager(DelayManager delayMgr) {\r\n    Mediator.delayManager = delayMgr;\r\n}'),(672,'ChangeValueDispatcher dispatcher','net.sourceforge.ganttproject.gui.options.model.ChangeValueDispatcher',374,85,'net.sourceforge.ganttproject.Mediator',1059,'net.sourceforge.ganttproject.Mediator.addChangeValueDispatcher(net.sourceforge.ganttproject.gui.options.model.ChangeValueDispatcher)',0,'public static void addChangeValueDispatcher(ChangeValueDispatcher dispatcher) {\r\n    Mediator.changeValueDispatchers.add(dispatcher);\r\n}'),(673,'GanttProject myProj','net.sourceforge.ganttproject.GanttProject',53,86,'net.sourceforge.ganttproject.OSXAdapter',1070,'net.sourceforge.ganttproject.OSXAdapter.-init-(net.sourceforge.ganttproject.GanttProject)',0,'private OSXAdapter(GanttProject myProj) {\r\n    this.myProj = myProj;\r\n}'),(674,'ApplicationEvent event','com.apple.eawt.ApplicationEvent',0,86,'net.sourceforge.ganttproject.OSXAdapter',1072,'net.sourceforge.ganttproject.OSXAdapter.handleOpenFile(com.apple.eawt.ApplicationEvent)',0,'/* This method handles the case when a file in the Finder is dropped onto\nthe app, or GanttProject is selected via the open-with menu option. The\nevent argument contains the path of the file in either case.\n */\r\npublic void handleOpenFile(ApplicationEvent event) {\r\n    String file;\r\n    Document myDocument;\r\n    if ((myProj.checkCurrentProject()) == true) {\r\n        file = event.getFilename();\r\n        myDocument = myProj.getDocumentManager().getDocument(file);\r\n        try {\r\n            myProj.getProjectUIFacade().openProject(myDocument, myProj.getProject());\r\n        } catch (IOException e) {\r\n            myProj.getUIFacade().showErrorDialog(e);\r\n        }\r\n    }\r\n    event.setHandled(true);\r\n}'),(675,'ApplicationEvent event','com.apple.eawt.ApplicationEvent',0,86,'net.sourceforge.ganttproject.OSXAdapter',1071,'net.sourceforge.ganttproject.OSXAdapter.handleAbout(com.apple.eawt.ApplicationEvent)',0,'/* Handle the Mac OSX \"about\" menu option. */\r\npublic void handleAbout(ApplicationEvent event) {\r\n    AboutDialog abd = new AboutDialog(myProj);\r\n    abd.setVisible(true);\r\n    /* Indicate weve handled this event ourselves */\r\n    event.setHandled(true);\r\n}'),(676,'ApplicationEvent event','com.apple.eawt.ApplicationEvent',0,86,'net.sourceforge.ganttproject.OSXAdapter',1073,'net.sourceforge.ganttproject.OSXAdapter.handleQuit(com.apple.eawt.ApplicationEvent)',0,'/* Handles the quit menu option (defaults to command-q) the same way\nchoosing Project->Quit does.\n */\r\npublic void handleQuit(ApplicationEvent event) {\r\n    myProj.quitApplication();\r\n    /* Not a typo. Must set handled to false else the app will still quit\n    even if we say \"cancel\" on confirmation.\n     */\r\n    event.setHandled(false);\r\n}'),(677,'GanttProject myProj','net.sourceforge.ganttproject.GanttProject',53,86,'net.sourceforge.ganttproject.OSXAdapter',1074,'net.sourceforge.ganttproject.OSXAdapter.registerMacOSXApplication(net.sourceforge.ganttproject.GanttProject)',0,'public static void registerMacOSXApplication(GanttProject myProj) {\r\n    if ((OSXAdapter.theApp) == null) {\r\n        OSXAdapter.theApp = new Application();\r\n    }\r\n    if ((OSXAdapter.osxAdapter) == null) {\r\n        OSXAdapter.osxAdapter = new OSXAdapter(myProj);\r\n    }\r\n    OSXAdapter.theApp.addApplicationListener(OSXAdapter.osxAdapter);\r\n}'),(678,'String sProjectName','java.lang.String',0,87,'net.sourceforge.ganttproject.PrjInfos',1076,'net.sourceforge.ganttproject.PrjInfos.-init-(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Constructor.\r\n */\r\npublic PrjInfos(String sProjectName, String sDescription, String sOrganization, String sWebLink) {\r\n    this._sProjectName = sProjectName;\r\n    this._sDescription = sDescription;\r\n    this._sOrganization = sOrganization;\r\n    this._sWebLink = sWebLink;\r\n}'),(679,'String sDescription','java.lang.String',0,87,'net.sourceforge.ganttproject.PrjInfos',1076,'net.sourceforge.ganttproject.PrjInfos.-init-(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Constructor.\r\n */\r\npublic PrjInfos(String sProjectName, String sDescription, String sOrganization, String sWebLink) {\r\n    this._sProjectName = sProjectName;\r\n    this._sDescription = sDescription;\r\n    this._sOrganization = sOrganization;\r\n    this._sWebLink = sWebLink;\r\n}'),(680,'String sOrganization','java.lang.String',0,87,'net.sourceforge.ganttproject.PrjInfos',1076,'net.sourceforge.ganttproject.PrjInfos.-init-(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Constructor.\r\n */\r\npublic PrjInfos(String sProjectName, String sDescription, String sOrganization, String sWebLink) {\r\n    this._sProjectName = sProjectName;\r\n    this._sDescription = sDescription;\r\n    this._sOrganization = sOrganization;\r\n    this._sWebLink = sWebLink;\r\n}'),(681,'String sWebLink','java.lang.String',0,87,'net.sourceforge.ganttproject.PrjInfos',1076,'net.sourceforge.ganttproject.PrjInfos.-init-(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Constructor.\r\n */\r\npublic PrjInfos(String sProjectName, String sDescription, String sOrganization, String sWebLink) {\r\n    this._sProjectName = sProjectName;\r\n    this._sDescription = sDescription;\r\n    this._sOrganization = sOrganization;\r\n    this._sWebLink = sWebLink;\r\n}'),(682,'ResourceTreeUIFacade resourceTree','net.sourceforge.ganttproject.gui.ResourceTreeUIFacade',320,89,'net.sourceforge.ganttproject.ResourceChartTabContentPanel',1084,'net.sourceforge.ganttproject.ResourceChartTabContentPanel.-init-(net.sourceforge.ganttproject.gui.ResourceTreeUIFacade,java.awt.Component)',0,'ResourceChartTabContentPanel(ResourceTreeUIFacade resourceTree, Component resourceChart) {\r\n    myTreeFacade = resourceTree;\r\n    myResourceChart = resourceChart;\r\n}'),(683,'Component resourceChart','java.awt.Component',0,89,'net.sourceforge.ganttproject.ResourceChartTabContentPanel',1084,'net.sourceforge.ganttproject.ResourceChartTabContentPanel.-init-(net.sourceforge.ganttproject.gui.ResourceTreeUIFacade,java.awt.Component)',0,'ResourceChartTabContentPanel(ResourceTreeUIFacade resourceTree, Component resourceChart) {\r\n    myTreeFacade = resourceTree;\r\n    myResourceChart = resourceChart;\r\n}'),(684,'Class adapter','java.lang.Class',0,89,'net.sourceforge.ganttproject.ResourceChartTabContentPanel',1086,'net.sourceforge.ganttproject.ResourceChartTabContentPanel.getAdapter(java.lang.Class)',0,'public Object getAdapter(Class adapter) {\r\n    if (Container.class.equals(adapter)) {\r\n        return getComponent();\r\n    }\r\n    if (Chart.class.equals(adapter)) {\r\n        return myResourceChart;\r\n    }\r\n    return null;\r\n}'),(685,'GanttProject app','net.sourceforge.ganttproject.GanttProject',53,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1088,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.zoom.ZoomManager)',0,'/**\r\n * Constructor\r\n */\r\npublic ResourceLoadGraphicArea(GanttProject app, ZoomManager zoomManager) {\r\n    super(((IGanttProject) (app)), ((UIFacade) (app)), zoomManager);\r\n    this.setBackground(Color.WHITE);\r\n    myChartModel = new ChartModelResource(getTaskManager(), ((HumanResourceManager) (app.getHumanResourceManager())), getTimeUnitStack(), getUIConfiguration(), ((ResourceChart) (this)));\r\n    getViewState().addStateListener(myChartModel);\r\n    getViewState().setStartDate(CalendarFactory.newCalendar().getTime());\r\n    margY = 0;\r\n    appli = app;\r\n}'),(686,'ZoomManager zoomManager','net.sourceforge.ganttproject.gui.zoom.ZoomManager',425,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1088,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.zoom.ZoomManager)',0,'/**\r\n * Constructor\r\n */\r\npublic ResourceLoadGraphicArea(GanttProject app, ZoomManager zoomManager) {\r\n    super(((IGanttProject) (app)), ((UIFacade) (app)), zoomManager);\r\n    this.setBackground(Color.WHITE);\r\n    myChartModel = new ChartModelResource(getTaskManager(), ((HumanResourceManager) (app.getHumanResourceManager())), getTimeUnitStack(), getUIConfiguration(), ((ResourceChart) (this)));\r\n    getViewState().addStateListener(myChartModel);\r\n    getViewState().setStartDate(CalendarFactory.newCalendar().getTime());\r\n    margY = 0;\r\n    appli = app;\r\n}'),(687,'Graphics g','java.awt.Graphics',0,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1108,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.paintComponent(java.awt.Graphics)',0,'/**\r\n * draw the panel\r\n */\r\npublic void paintComponent(Graphics g) {\r\n    myChartModel.setBounds(getSize());\r\n    myChartImplementation.paintComponent(g);\r\n}'),(688,'Graphics g','java.awt.Graphics',0,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1091,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.drawGPVersion(java.awt.Graphics)',0,'public void drawGPVersion(Graphics g) {\r\n    g.setColor(Color.black);\r\n    g.setFont(Fonts.GP_VERSION_FONT);\r\n    g.drawString(((\"GanttProject (\" + (GanttProject.version)) + \")\"), 3, ((getHeight()) - 8));\r\n}'),(689,'ArrayList listOfParam','java.util.ArrayList',0,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1106,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.indexOf(java.util.ArrayList,java.lang.String)',0,'/**\r\n * Search for a coef on the arraylist\r\n */\r\npublic int indexOf(ArrayList listOfParam, String coef) {\r\n    for (int i = 0; i < (listOfParam.size()); i++)\r\n        if (coef == (listOfParam.get(i).toString()))\r\n            return i;\r\n\r\n\r\n    return -1;\r\n}'),(690,'String coef','java.lang.String',0,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1106,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.indexOf(java.util.ArrayList,java.lang.String)',0,'/**\r\n * Search for a coef on the arraylist\r\n */\r\npublic int indexOf(ArrayList listOfParam, String coef) {\r\n    for (int i = 0; i < (listOfParam.size()); i++)\r\n        if (coef == (listOfParam.get(i).toString()))\r\n            return i;\r\n\r\n\r\n    return -1;\r\n}'),(691,'int v','int',0,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1110,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.setScrollBar(int)',0,'/**\r\n * Change the velue connected to the JTrees Scrollbar\r\n */\r\npublic void setScrollBar(int v) {\r\n    margY = v;\r\n    getChartModel().getChartUIConfiguration().setYOffSet(v);\r\n}'),(692,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1092,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.getChart(net.sourceforge.ganttproject.GanttExportSettings)',0,'// /** Return the value of the JTrees Scrollbar */\r\n// public int getScrollBar() {\r\n// return margY;\r\n// }\r\npublic BufferedImage getChart(GanttExportSettings settings) {\r\n    RenderedChartImage renderedImage = ((RenderedChartImage) (getRenderedImage(settings)));\r\n    BufferedImage result = renderedImage.getWholeImage();\r\n    repaint();\r\n    return result;\r\n}'),(693,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1103,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.getRenderedImage(net.sourceforge.ganttproject.GanttExportSettings)',0,'/**\r\n * Return an image with the gantt chart\r\n */\r\npublic RenderedImage getRenderedImage(GanttExportSettings settings) {\r\n    Date dateStart = ((settings.getStartDate()) == null) ? getStartDate() : settings.getStartDate();\r\n    Date dateEnd = ((settings.getEndDate()) == null) ? getEndDate() : settings.getEndDate();\r\n    if (dateStart.after(dateEnd)) {\r\n        Date tmp = ((Date) (dateStart.clone()));\r\n        dateStart = ((Date) (dateEnd.clone()));\r\n        dateEnd = tmp;\r\n    }\r\n    TaskLength printedLength = getTaskManager().createLength(getViewState().getBottomTimeUnit(), dateStart, dateEnd);\r\n    int chartWidth = ((int) (((printedLength.getLength(getViewState().getBottomTimeUnit())) + 1) * (getViewState().getBottomUnitWidth())));\r\n    if (chartWidth < (getWidth())) {\r\n        chartWidth = getWidth();\r\n    }\r\n    ResourceTreeImageGenerator resourceTreeGenerator = new ResourceTreeImageGenerator(getHumanResourceManager()) {\r\n        protected boolean isAssignmentVisible(ResourceAssignment assignment) {\r\n            AssignmentNode an = appli.getResourcePanel().getResourceTreeTableModel().getNodeForAssigment(assignment);\r\n            return appli.getResourcePanel().getResourceTreeTable().isVisible(an);\r\n        }\r\n\r\n        protected int getRowHeight() {\r\n            return ResourceLoadGraphicArea.this.getRowHeight();\r\n        }\r\n    };\r\n    BufferedImage resourceTreeImage = resourceTreeGenerator.createImage();\r\n    final int chartHeight = resourceTreeImage.getHeight();\r\n    RenderedResourceChartImage renderedImage = new RenderedResourceChartImage(myChartModel, myChartImplementation, resourceTreeImage, chartWidth, chartHeight);\r\n    return renderedImage;\r\n}'),(694,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1107,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.isExpanded(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public boolean isExpanded(ProjectResource resource) {\r\n    return true;\r\n}'),(695,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,90,'net.sourceforge.ganttproject.ResourceLoadGraphicArea',1111,'net.sourceforge.ganttproject.ResourceLoadGraphicArea.setTaskManager(net.sourceforge.ganttproject.task.TaskManager)',0,'public void setTaskManager(TaskManager taskManager) {\r\n    // TODO Auto-generated method stub\r\n}'),(696,'HumanResourceManager resourceManager','net.sourceforge.ganttproject.resource.HumanResourceManager',501,91,'net.sourceforge.ganttproject.ResourceTreeImageGenerator',1112,'net.sourceforge.ganttproject.ResourceTreeImageGenerator.-init-(net.sourceforge.ganttproject.resource.HumanResourceManager)',0,'ResourceTreeImageGenerator(HumanResourceManager resourceManager) {\r\n    myResourceManager = resourceManager;\r\n    final BufferedImage testImage = new BufferedImage(10, 10, BufferedImage.TYPE_INT_RGB);\r\n    final Graphics g = testImage.getGraphics();\r\n    final int nameFontHeight = g.getFontMetrics().getHeight();\r\n    final int nameLinePadding = 3;\r\n    myRowHeight = nameFontHeight + (2 * nameLinePadding);\r\n}'),(697,'Graphics g','java.awt.Graphics',0,91,'net.sourceforge.ganttproject.ResourceTreeImageGenerator',1117,'net.sourceforge.ganttproject.ResourceTreeImageGenerator.printResources(java.awt.Graphics,int)',0,'private void printResources(Graphics g, int width) {\r\n    ((Graphics2D) (g)).setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\r\n    g.setColor(Color.black);\r\n    g.setFont(Fonts.RESSOURCE_FONT);\r\n    List users = myResourceManager.getResources();\r\n    int y = 67;\r\n    final int nameLinePadding = 3;\r\n    final int nameLineHeight = getRowHeight();\r\n    boolean isOddRow = false;\r\n    for (Iterator user = users.iterator(); user.hasNext();) {\r\n        HumanResource hr = ((HumanResource) (user.next()));\r\n        {\r\n            // paint resource name here\r\n            String nameOfRes = hr.toString();\r\n            if (isOddRow) {\r\n                g.setColor(ODD_ROW_COLOR);\r\n                g.fillRect(0, y, width, nameLineHeight);\r\n            }\r\n            g.setColor(Color.black);\r\n            // \r\n            g.drawRect(0, y, width, nameLineHeight);\r\n            g.drawString(nameOfRes, 5, ((y + nameLineHeight) - nameLinePadding));\r\n            g.setColor(BORDER_COLOR_3D);\r\n            g.drawLine(1, ((y + nameLineHeight) - 1), (width - 1), ((y + nameLineHeight) - 1));\r\n            y += nameLineHeight;\r\n            isOddRow = !isOddRow;\r\n        }\r\n        {\r\n            // paint assigned task names\r\n            ResourceAssignment[] assignments = hr.getAssignments();\r\n            if (assignments != null) {\r\n                for (int i = 0; i < (assignments.length); i++) {\r\n                    if (isAssignmentVisible(assignments[i])) {\r\n                        if (isOddRow) {\r\n                            g.setColor(ODD_ROW_COLOR);\r\n                            g.fillRect(0, y, width, nameLineHeight);\r\n                        }\r\n                        g.setColor(Color.black);\r\n                        g.drawRect(0, y, width, nameLineHeight);\r\n                        g.drawString((\"  \" + (assignments[i].getTask().getName())), 5, ((y + nameLineHeight) - nameLinePadding));\r\n                        g.setColor(BORDER_COLOR_3D);\r\n                        g.drawLine(1, (y + nameLineHeight), (width - 1), ((y + nameLineHeight) - 1));\r\n                        y += nameLineHeight;\r\n                        isOddRow = !isOddRow;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}'),(698,'int width','int',0,91,'net.sourceforge.ganttproject.ResourceTreeImageGenerator',1117,'net.sourceforge.ganttproject.ResourceTreeImageGenerator.printResources(java.awt.Graphics,int)',0,'private void printResources(Graphics g, int width) {\r\n    ((Graphics2D) (g)).setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\r\n    g.setColor(Color.black);\r\n    g.setFont(Fonts.RESSOURCE_FONT);\r\n    List users = myResourceManager.getResources();\r\n    int y = 67;\r\n    final int nameLinePadding = 3;\r\n    final int nameLineHeight = getRowHeight();\r\n    boolean isOddRow = false;\r\n    for (Iterator user = users.iterator(); user.hasNext();) {\r\n        HumanResource hr = ((HumanResource) (user.next()));\r\n        {\r\n            // paint resource name here\r\n            String nameOfRes = hr.toString();\r\n            if (isOddRow) {\r\n                g.setColor(ODD_ROW_COLOR);\r\n                g.fillRect(0, y, width, nameLineHeight);\r\n            }\r\n            g.setColor(Color.black);\r\n            // \r\n            g.drawRect(0, y, width, nameLineHeight);\r\n            g.drawString(nameOfRes, 5, ((y + nameLineHeight) - nameLinePadding));\r\n            g.setColor(BORDER_COLOR_3D);\r\n            g.drawLine(1, ((y + nameLineHeight) - 1), (width - 1), ((y + nameLineHeight) - 1));\r\n            y += nameLineHeight;\r\n            isOddRow = !isOddRow;\r\n        }\r\n        {\r\n            // paint assigned task names\r\n            ResourceAssignment[] assignments = hr.getAssignments();\r\n            if (assignments != null) {\r\n                for (int i = 0; i < (assignments.length); i++) {\r\n                    if (isAssignmentVisible(assignments[i])) {\r\n                        if (isOddRow) {\r\n                            g.setColor(ODD_ROW_COLOR);\r\n                            g.fillRect(0, y, width, nameLineHeight);\r\n                        }\r\n                        g.setColor(Color.black);\r\n                        g.drawRect(0, y, width, nameLineHeight);\r\n                        g.drawString((\"  \" + (assignments[i].getTask().getName())), 5, ((y + nameLineHeight) - nameLinePadding));\r\n                        g.setColor(BORDER_COLOR_3D);\r\n                        g.drawLine(1, (y + nameLineHeight), (width - 1), ((y + nameLineHeight) - 1));\r\n                        y += nameLineHeight;\r\n                        isOddRow = !isOddRow;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}'),(699,'ResourceAssignment assignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,91,'net.sourceforge.ganttproject.ResourceTreeImageGenerator',1116,'net.sourceforge.ganttproject.ResourceTreeImageGenerator.isAssignmentVisible(net.sourceforge.ganttproject.task.ResourceAssignment)',0,'protected boolean isAssignmentVisible(ResourceAssignment assignment) {\r\n    return true;\r\n}'),(700,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,94,'net.sourceforge.ganttproject.ResourceTreeTable',1118,'net.sourceforge.ganttproject.ResourceTreeTable.-init-(net.sourceforge.ganttproject.IGanttProject,org.jdesktop.swing.treetable.TreeTableModel)',0,'/**\r\n * Creates an instance of GanttTreeTable with the given TreeTableModel.\r\n *\r\n * @param model\r\n * 		TreeTableModel.\r\n */\r\npublic ResourceTreeTable(IGanttProject project, TreeTableModel model) {\r\n    super(project, model);\r\n    myProject = project;\r\n    myProject.addProjectEventListener(new ProjectEventListener() {\r\n        public void projectClosed() {\r\n            deleteAllColumns();\r\n        }\r\n\r\n        public void projectModified() {\r\n        }\r\n\r\n        public void projectSaved() {\r\n        }\r\n    });\r\n    myResourceManager = ((HumanResourceManager) (project.getHumanResourceManager()));\r\n    myRoleManager = project.getRoleManager();\r\n    myRoleManager.addRoleListener(new RoleManager.Listener() {\r\n        public void rolesChanged(RoleManager.RoleEvent e) {\r\n            setUpRolesRenderer();\r\n            setUpAssignementRolesRenderer();\r\n        }\r\n    });\r\n    ttModel = ((ResourceTreeTableModel) (model));\r\n    this.setTreeTableModel(model);\r\n    initTreeTable();\r\n}'),(701,'TreeTableModel model','org.jdesktop.swing.treetable.TreeTableModel',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1118,'net.sourceforge.ganttproject.ResourceTreeTable.-init-(net.sourceforge.ganttproject.IGanttProject,org.jdesktop.swing.treetable.TreeTableModel)',0,'/**\r\n * Creates an instance of GanttTreeTable with the given TreeTableModel.\r\n *\r\n * @param model\r\n * 		TreeTableModel.\r\n */\r\npublic ResourceTreeTable(IGanttProject project, TreeTableModel model) {\r\n    super(project, model);\r\n    myProject = project;\r\n    myProject.addProjectEventListener(new ProjectEventListener() {\r\n        public void projectClosed() {\r\n            deleteAllColumns();\r\n        }\r\n\r\n        public void projectModified() {\r\n        }\r\n\r\n        public void projectSaved() {\r\n        }\r\n    });\r\n    myResourceManager = ((HumanResourceManager) (project.getHumanResourceManager()));\r\n    myRoleManager = project.getRoleManager();\r\n    myRoleManager.addRoleListener(new RoleManager.Listener() {\r\n        public void rolesChanged(RoleManager.RoleEvent e) {\r\n            setUpRolesRenderer();\r\n            setUpAssignementRolesRenderer();\r\n        }\r\n    });\r\n    ttModel = ((ResourceTreeTableModel) (model));\r\n    this.setTreeTableModel(model);\r\n    initTreeTable();\r\n}'),(702,'ResourceColumn c','net.sourceforge.ganttproject.resource.ResourceColumn',506,92,'net.sourceforge.ganttproject.ResourceTreeTable$ColumnHandler',1151,'net.sourceforge.ganttproject.ResourceTreeTable$ColumnHandler.-init-(net.sourceforge.ganttproject.resource.ResourceColumn)',0,'public ColumnHandler(ResourceColumn c) {\r\n    column = c;\r\n}'),(703,'DefaultMutableTreeNode node','javax.swing.tree.DefaultMutableTreeNode',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1141,'net.sourceforge.ganttproject.ResourceTreeTable.isVisible(javax.swing.tree.DefaultMutableTreeNode)',0,'public boolean isVisible(DefaultMutableTreeNode node) {\r\n    return this.getTreeTable().getTree().isVisible(new javax.swing.tree.TreePath(node.getPath()));\r\n}'),(704,'int rowHeight','int',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1145,'net.sourceforge.ganttproject.ResourceTreeTable.setRowHeight(int)',0,'public void setRowHeight(int rowHeight) {\r\n    super.setRowHeight(rowHeight);\r\n}'),(705,'int fromIndex','int',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1150,'net.sourceforge.ganttproject.ResourceTreeTable.updateColumnOrders(int,int)',0,'protected void updateColumnOrders(int fromIndex, int toIndex) {\r\n    List columns = ttModel.getColumns();\r\n    for (int i = 0; i < (columns.size()); i++) {\r\n        ResourceColumn nextColumn = ((ResourceColumn) (columns.get(i)));\r\n        if ((nextColumn.getOrder()) == fromIndex) {\r\n            nextColumn.setOrder(toIndex);\r\n            continue;\r\n        }\r\n        if ((nextColumn.getOrder()) == toIndex) {\r\n            nextColumn.setOrder(fromIndex);\r\n            continue;\r\n        }\r\n    }\r\n}'),(706,'int toIndex','int',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1150,'net.sourceforge.ganttproject.ResourceTreeTable.updateColumnOrders(int,int)',0,'protected void updateColumnOrders(int fromIndex, int toIndex) {\r\n    List columns = ttModel.getColumns();\r\n    for (int i = 0; i < (columns.size()); i++) {\r\n        ResourceColumn nextColumn = ((ResourceColumn) (columns.get(i)));\r\n        if ((nextColumn.getOrder()) == fromIndex) {\r\n            nextColumn.setOrder(toIndex);\r\n            continue;\r\n        }\r\n        if ((nextColumn.getOrder()) == toIndex) {\r\n            nextColumn.setOrder(fromIndex);\r\n            continue;\r\n        }\r\n    }\r\n}'),(707,'ResourceColumn col','net.sourceforge.ganttproject.resource.ResourceColumn',506,94,'net.sourceforge.ganttproject.ResourceTreeTable',1148,'net.sourceforge.ganttproject.ResourceTreeTable.showColumn(net.sourceforge.ganttproject.resource.ResourceColumn)',0,'/* Shows the given column. The column will appear on\nits default position\n */\r\nvoid showColumn(ResourceColumn col) {\r\n    col.setVisible(true);\r\n    if ((col.getOrder()) < (getTable().getColumnCount())) {\r\n        col.setOrder(getTable().getColumnCount());\r\n    }\r\n    this.addColumn(col.getColumn());\r\n}'),(708,'ResourceColumn col','net.sourceforge.ganttproject.resource.ResourceColumn',506,94,'net.sourceforge.ganttproject.ResourceTreeTable',1136,'net.sourceforge.ganttproject.ResourceTreeTable.hideColumn(net.sourceforge.ganttproject.resource.ResourceColumn)',0,'void hideColumn(ResourceColumn col) {\r\n    col.setVisible(false);\r\n    this.removeColumn(col.getColumn());\r\n}'),(709,'ResourceColumn column','net.sourceforge.ganttproject.resource.ResourceColumn',506,94,'net.sourceforge.ganttproject.ResourceTreeTable',1123,'net.sourceforge.ganttproject.ResourceTreeTable.addMandatoryColumn(net.sourceforge.ganttproject.resource.ResourceColumn)',0,'public void addMandatoryColumn(ResourceColumn column) {\r\n    this.addColumn(column.getColumn());\r\n    ttModel.addMandatoryColumn(column);\r\n}'),(710,'int id','int',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1143,'net.sourceforge.ganttproject.ResourceTreeTable.newResourceColumn(int)',0,'private ResourceColumn newResourceColumn(int id) {\r\n    TableColumnExt col = newTableColumnExt(ttModel.useNextIndex());\r\n    ResourceColumn result = new ResourceColumn(col, id);\r\n    return result;\r\n}'),(711,'net.sourceforge.ganttproject.resource.ResourceColumn','net.sourceforge.ganttproject.resource.ResourceColumn',506,94,'net.sourceforge.ganttproject.ResourceTreeTable',1143,'net.sourceforge.ganttproject.ResourceTreeTable.newResourceColumn(int)',1,'private ResourceColumn newResourceColumn(int id) {\r\n    TableColumnExt col = newTableColumnExt(ttModel.useNextIndex());\r\n    ResourceColumn result = new ResourceColumn(col, id);\r\n    return result;\r\n}'),(712,'ResourceColumn column','net.sourceforge.ganttproject.resource.ResourceColumn',506,94,'net.sourceforge.ganttproject.ResourceTreeTable',1121,'net.sourceforge.ganttproject.ResourceTreeTable.addCustomColumn(net.sourceforge.ganttproject.resource.ResourceColumn)',0,'/* creates a custom property column in the datamodel and on the screen */\r\npublic void addCustomColumn(ResourceColumn column) {\r\n    if (column == null) {\r\n        /* create dialog and create column */\r\n        column = newResourceColumn();\r\n        ResourceDialogCustomColumn d = new ResourceDialogCustomColumn(Mediator.getGanttProjectSingleton().getUIFacade(), column);\r\n        d.setVisible(true);\r\n        if (!(d.isOk())) {\r\n            return;\r\n        }\r\n        column = d.getColumn();\r\n    }\r\n    if ((column.getTitle()) != null) {\r\n        /* adding the column into the datamodel */\r\n        try {\r\n            ttModel.addCustomColumn(column.getTitle(), column);\r\n        } catch (Exception e) {\r\n            /* TODO add translation */\r\n            JOptionPane.showMessageDialog(this, e.getMessage(), \"Column add\", JOptionPane.ERROR_MESSAGE);\r\n            return;\r\n        }\r\n        /* adding the column to the screen */\r\n        this.addColumn(column.getColumn());\r\n        /* setting the cell renderer */\r\n        String colClass = column.getType().getName();\r\n        int align;\r\n        if ((colClass.equals(\"java.lang.Integer\")) || (colClass.equals(\"java.lang.Double\"))) {\r\n            align = SwingConstants.RIGHT;\r\n            setColumnHorizontalAlignment(column.getTitle(), align);\r\n        } else\r\n            if (colClass.equals(\"java.util.GregorianCalendar\")) {\r\n                align = SwingConstants.CENTER;\r\n                setColumnHorizontalAlignment(column.getTitle(), align);\r\n                /* the customised date cell editor */\r\n                column.getColumn().setCellEditor(newDateCellEditor());\r\n            } else {\r\n                align = SwingConstants.LEFT;\r\n                setColumnHorizontalAlignment(column.getTitle(), align);\r\n            }\r\n\r\n    }\r\n}'),(713,'String name','java.lang.String',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1128,'net.sourceforge.ganttproject.ResourceTreeTable.deleteCustomColumn(java.lang.String)',0,'/* deletes the column from the screen and the data model */\r\npublic void deleteCustomColumn(String name) {\r\n    ResourceColumn col = null;\r\n    col = ttModel.deleteCustomColumn(name);\r\n    this.removeColumn(col.getColumn());\r\n}'),(714,'ProjectResource pr','net.sourceforge.ganttproject.resource.ProjectResource',505,94,'net.sourceforge.ganttproject.ResourceTreeTable',1140,'net.sourceforge.ganttproject.ResourceTreeTable.isExpanded(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public boolean isExpanded(ProjectResource pr) {\r\n    ResourceNode node = ((ResourceTreeTableModel) (getTreeTableModel())).exists(pr);\r\n    if (node != null)\r\n        return getTreeTable().isExpanded(new javax.swing.tree.TreePath(node.getPath()));\r\n\r\n    return false;\r\n}'),(715,'KeyListener listener','java.awt.event.KeyListener',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1122,'net.sourceforge.ganttproject.ResourceTreeTable.addKeyListener(java.awt.event.KeyListener)',0,'public void addKeyListener(KeyListener listener) {\r\n    // getTreeTable().addKeyListener(listener);\r\n    super.addKeyListener(listener);\r\n    getTable().addKeyListener(listener);\r\n    getTree().addKeyListener(listener);\r\n}'),(716,'Action action','javax.swing.Action',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1144,'net.sourceforge.ganttproject.ResourceTreeTable.setAction(javax.swing.Action)',0,'public void setAction(Action action) {\r\n    InputMap inputMap = new InputMap();\r\n    inputMap.put(((KeyStroke) (action.getValue(Action.ACCELERATOR_KEY))), action.getValue(Action.NAME));\r\n    inputMap.setParent(getTreeTable().getInputMap(JComponent.WHEN_FOCUSED));\r\n    getTreeTable().setInputMap(JComponent.WHEN_FOCUSED, inputMap);\r\n    // Add the action to the component\r\n    getTreeTable().getActionMap().put(action.getValue(Action.NAME), action);\r\n}'),(717,'MouseListener listener','java.awt.event.MouseListener',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1124,'net.sourceforge.ganttproject.ResourceTreeTable.addMouseListener(java.awt.event.MouseListener)',0,'public void addMouseListener(MouseListener listener) {\r\n    getTreeTable().addMouseListener(listener);\r\n}'),(718,'ActionEvent e','java.awt.event.ActionEvent',0,92,'net.sourceforge.ganttproject.ResourceTreeTable$ColumnHandler',1152,'net.sourceforge.ganttproject.ResourceTreeTable$ColumnHandler.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    if (column.isVisible())\r\n        hideColumn(column);\r\n    else\r\n        showColumn(column);\r\n\r\n    getProject().setModified();\r\n}'),(719,'String id','java.lang.String',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1125,'net.sourceforge.ganttproject.ResourceTreeTable.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString) {\r\n    final ResourceColumn newColumn = newResourceColumn(Integer.valueOf(id).intValue());\r\n    newColumn.setTitle(name);\r\n    final CustomPropertyDefinition stubDefinition = CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(typeAsString, defaultValueAsString);\r\n    newColumn.setType(stubDefinition.getType());\r\n    newColumn.setDefaultVal(stubDefinition.getDefaultValue());\r\n    assert String.valueOf(newColumn.getIndex()).equals(id);\r\n    addCustomColumn(newColumn);\r\n    List definitions = myResourceManager.getDefinitions();\r\n    return ((CustomPropertyDefinition) (definitions.get(((definitions.size()) - 1))));\r\n}'),(720,'net.sourceforge.ganttproject.CustomPropertyDefinition','net.sourceforge.ganttproject.CustomPropertyDefinition',11,94,'net.sourceforge.ganttproject.ResourceTreeTable',1125,'net.sourceforge.ganttproject.ResourceTreeTable.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',1,'public CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString) {\r\n    final ResourceColumn newColumn = newResourceColumn(Integer.valueOf(id).intValue());\r\n    newColumn.setTitle(name);\r\n    final CustomPropertyDefinition stubDefinition = CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(typeAsString, defaultValueAsString);\r\n    newColumn.setType(stubDefinition.getType());\r\n    newColumn.setDefaultVal(stubDefinition.getDefaultValue());\r\n    assert String.valueOf(newColumn.getIndex()).equals(id);\r\n    addCustomColumn(newColumn);\r\n    List definitions = myResourceManager.getDefinitions();\r\n    return ((CustomPropertyDefinition) (definitions.get(((definitions.size()) - 1))));\r\n}'),(721,'String typeAsString','java.lang.String',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1125,'net.sourceforge.ganttproject.ResourceTreeTable.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString) {\r\n    final ResourceColumn newColumn = newResourceColumn(Integer.valueOf(id).intValue());\r\n    newColumn.setTitle(name);\r\n    final CustomPropertyDefinition stubDefinition = CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(typeAsString, defaultValueAsString);\r\n    newColumn.setType(stubDefinition.getType());\r\n    newColumn.setDefaultVal(stubDefinition.getDefaultValue());\r\n    assert String.valueOf(newColumn.getIndex()).equals(id);\r\n    addCustomColumn(newColumn);\r\n    List definitions = myResourceManager.getDefinitions();\r\n    return ((CustomPropertyDefinition) (definitions.get(((definitions.size()) - 1))));\r\n}'),(722,'String name','java.lang.String',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1125,'net.sourceforge.ganttproject.ResourceTreeTable.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString) {\r\n    final ResourceColumn newColumn = newResourceColumn(Integer.valueOf(id).intValue());\r\n    newColumn.setTitle(name);\r\n    final CustomPropertyDefinition stubDefinition = CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(typeAsString, defaultValueAsString);\r\n    newColumn.setType(stubDefinition.getType());\r\n    newColumn.setDefaultVal(stubDefinition.getDefaultValue());\r\n    assert String.valueOf(newColumn.getIndex()).equals(id);\r\n    addCustomColumn(newColumn);\r\n    List definitions = myResourceManager.getDefinitions();\r\n    return ((CustomPropertyDefinition) (definitions.get(((definitions.size()) - 1))));\r\n}'),(723,'String defaultValueAsString','java.lang.String',0,94,'net.sourceforge.ganttproject.ResourceTreeTable',1125,'net.sourceforge.ganttproject.ResourceTreeTable.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString) {\r\n    final ResourceColumn newColumn = newResourceColumn(Integer.valueOf(id).intValue());\r\n    newColumn.setTitle(name);\r\n    final CustomPropertyDefinition stubDefinition = CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(typeAsString, defaultValueAsString);\r\n    newColumn.setType(stubDefinition.getType());\r\n    newColumn.setDefaultVal(stubDefinition.getDefaultValue());\r\n    assert String.valueOf(newColumn.getIndex()).equals(id);\r\n    addCustomColumn(newColumn);\r\n    List definitions = myResourceManager.getDefinitions();\r\n    return ((CustomPropertyDefinition) (definitions.get(((definitions.size()) - 1))));\r\n}'),(724,'CustomPropertyManager source','net.sourceforge.ganttproject.CustomPropertyManager',14,94,'net.sourceforge.ganttproject.ResourceTreeTable',1137,'net.sourceforge.ganttproject.ResourceTreeTable.importData(net.sourceforge.ganttproject.CustomPropertyManager)',0,'public void importData(CustomPropertyManager source) {\r\n    List sourceDefs = source.getDefinitions();\r\n    for (int i = 0; i < (sourceDefs.size()); i++) {\r\n        CustomPropertyDefinition nextDefinition = ((CustomPropertyDefinition) (sourceDefs.get(i)));\r\n        createDefinition(nextDefinition.getID(), nextDefinition.getTypeAsString(), nextDefinition.getName(), nextDefinition.getDefaultValueAsString());\r\n    }\r\n}'),(725,'String name','java.lang.String',0,93,'net.sourceforge.ganttproject.ResourceTreeTable$TableHeaderImpl',1154,'net.sourceforge.ganttproject.ResourceTreeTable$TableHeaderImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    ArrayList cols = ttModel.getColumns();\r\n    for (int i = 0; i < (cols.size()); i++) {\r\n        ResourceColumn col = ((ResourceColumn) (cols.get(i)));\r\n        if ((name.equals(col.getID())) && (!(col.isVisible()))) {\r\n            col.setWidth(width);\r\n            col.setOrder(order);\r\n            showColumn(col);\r\n        }\r\n    }\r\n}'),(726,'int order','int',0,93,'net.sourceforge.ganttproject.ResourceTreeTable$TableHeaderImpl',1154,'net.sourceforge.ganttproject.ResourceTreeTable$TableHeaderImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    ArrayList cols = ttModel.getColumns();\r\n    for (int i = 0; i < (cols.size()); i++) {\r\n        ResourceColumn col = ((ResourceColumn) (cols.get(i)));\r\n        if ((name.equals(col.getID())) && (!(col.isVisible()))) {\r\n            col.setWidth(width);\r\n            col.setOrder(order);\r\n            showColumn(col);\r\n        }\r\n    }\r\n}'),(727,'int width','int',0,93,'net.sourceforge.ganttproject.ResourceTreeTable$TableHeaderImpl',1154,'net.sourceforge.ganttproject.ResourceTreeTable$TableHeaderImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    ArrayList cols = ttModel.getColumns();\r\n    for (int i = 0; i < (cols.size()); i++) {\r\n        ResourceColumn col = ((ResourceColumn) (cols.get(i)));\r\n        if ((name.equals(col.getID())) && (!(col.isVisible()))) {\r\n            col.setWidth(width);\r\n            col.setOrder(order);\r\n            showColumn(col);\r\n        }\r\n    }\r\n}'),(728,'int index','int',0,93,'net.sourceforge.ganttproject.ResourceTreeTable$TableHeaderImpl',1156,'net.sourceforge.ganttproject.ResourceTreeTable$TableHeaderImpl.getField(int)',0,'public TableHeaderUIFacade.Column getField(int index) {\r\n    return ((TableHeaderUIFacade.Column) (ttModel.getColumns().get(index)));\r\n}'),(729,'TableHeaderUIFacade source','net.sourceforge.ganttproject.gui.TableHeaderUIFacade',324,93,'net.sourceforge.ganttproject.ResourceTreeTable$TableHeaderImpl',1158,'net.sourceforge.ganttproject.ResourceTreeTable$TableHeaderImpl.importData(net.sourceforge.ganttproject.gui.TableHeaderUIFacade)',0,'public void importData(TableHeaderUIFacade source) {\r\n    if ((source.getSize()) == 0) {\r\n        return;\r\n    }\r\n    ArrayList cols = ttModel.getColumns();\r\n    for (int i = 0; i < (cols.size()); i++) {\r\n        ResourceColumn col = ((ResourceColumn) (cols.get(i)));\r\n        hideColumn(col);\r\n    }\r\n    ArrayList sourceColumns = new ArrayList();\r\n    for (int i = 0; i < (source.getSize()); i++) {\r\n        TableHeaderUIFacade.Column nextField = source.getField(i);\r\n        sourceColumns.add(nextField);\r\n    }\r\n    Collections.sort(sourceColumns, new Comparator() {\r\n        public int compare(Object o1, Object o2) {\r\n            TableHeaderUIFacade.Column lhs = ((TableHeaderUIFacade.Column) (o1));\r\n            TableHeaderUIFacade.Column rhs = ((TableHeaderUIFacade.Column) (o2));\r\n            return (lhs.getOrder()) - (rhs.getOrder());\r\n        }\r\n    });\r\n    for (int i = 0; i < (sourceColumns.size()); i++) {\r\n        TableHeaderUIFacade.Column nextField = ((TableHeaderUIFacade.Column) (sourceColumns.get(i)));\r\n        add(nextField.getID(), i, nextField.getWidth());\r\n    }\r\n}'),(730,'ResourceManager resMgr','net.sourceforge.ganttproject.resource.ResourceManager',509,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1159,'net.sourceforge.ganttproject.ResourceTreeTableModel.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.task.TaskManager)',0,'public ResourceTreeTableModel(ResourceManager resMgr, TaskManager taskManager) {\r\n    super();\r\n    myResourceManager = ((HumanResourceManager) (resMgr));\r\n    myTaskManager = taskManager;\r\n    myTaskManager.addTaskListener(new TaskListenerAdapter() {\r\n        public void taskRemoved(TaskHierarchyEvent e) {\r\n            fireResourceChange(e.getTask());\r\n        }\r\n\r\n        public void taskScheduleChanged(TaskScheduleEvent e) {\r\n            fireResourceChange(e.getTask());\r\n        }\r\n\r\n        void fireResourceChange(Task task) {\r\n            ResourceAssignment[] assignments = task.getAssignments();\r\n            for (int i = 0; i < (assignments.length); i++) {\r\n                assignments[i].getResource().resetLoads();\r\n                resourceAssignmentsChanged(new ProjectResource[]{ assignments[i].getResource() });\r\n            }\r\n        }\r\n    });\r\n    changeLanguage(ResourceTreeTableModel.language);\r\n    root = buildTree();\r\n    this.setRoot(root);\r\n}'),(731,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1159,'net.sourceforge.ganttproject.ResourceTreeTableModel.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.task.TaskManager)',0,'public ResourceTreeTableModel(ResourceManager resMgr, TaskManager taskManager) {\r\n    super();\r\n    myResourceManager = ((HumanResourceManager) (resMgr));\r\n    myTaskManager = taskManager;\r\n    myTaskManager.addTaskListener(new TaskListenerAdapter() {\r\n        public void taskRemoved(TaskHierarchyEvent e) {\r\n            fireResourceChange(e.getTask());\r\n        }\r\n\r\n        public void taskScheduleChanged(TaskScheduleEvent e) {\r\n            fireResourceChange(e.getTask());\r\n        }\r\n\r\n        void fireResourceChange(Task task) {\r\n            ResourceAssignment[] assignments = task.getAssignments();\r\n            for (int i = 0; i < (assignments.length); i++) {\r\n                assignments[i].getResource().resetLoads();\r\n                resourceAssignmentsChanged(new ProjectResource[]{ assignments[i].getResource() });\r\n            }\r\n        }\r\n    });\r\n    changeLanguage(ResourceTreeTableModel.language);\r\n    root = buildTree();\r\n    this.setRoot(root);\r\n}'),(732,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1182,'net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForResource(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public ResourceNode getNodeForResource(ProjectResource resource) {\r\n    ResourceNode res = null;\r\n    Enumeration childs = root.children();\r\n    while ((childs.hasMoreElements()) && (res == null)) {\r\n        ResourceNode rn = ((ResourceNode) (childs.nextElement()));\r\n        if (resource.equals(rn.getUserObject()))\r\n            res = rn;\r\n\r\n    } \r\n    return res;\r\n}'),(733,'net.sourceforge.ganttproject.resource.ResourceNode','net.sourceforge.ganttproject.resource.ResourceNode',510,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1182,'net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForResource(net.sourceforge.ganttproject.resource.ProjectResource)',1,'public ResourceNode getNodeForResource(ProjectResource resource) {\r\n    ResourceNode res = null;\r\n    Enumeration childs = root.children();\r\n    while ((childs.hasMoreElements()) && (res == null)) {\r\n        ResourceNode rn = ((ResourceNode) (childs.nextElement()));\r\n        if (resource.equals(rn.getUserObject()))\r\n            res = rn;\r\n\r\n    } \r\n    return res;\r\n}'),(734,'ResourceAssignment assignement','net.sourceforge.ganttproject.task.ResourceAssignment',540,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1181,'net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForAssigment(net.sourceforge.ganttproject.task.ResourceAssignment)',0,'public AssignmentNode getNodeForAssigment(ResourceAssignment assignement) {\r\n    AssignmentNode res = null;\r\n    Enumeration childs = getNodeForResource(assignement.getResource()).children();\r\n    while ((childs.hasMoreElements()) && (res == null)) {\r\n        AssignmentNode an = ((AssignmentNode) (childs.nextElement()));\r\n        if (assignement.equals(an.getUserObject()))\r\n            res = an;\r\n\r\n    } \r\n    return res;\r\n}'),(735,'net.sourceforge.ganttproject.resource.AssignmentNode','net.sourceforge.ganttproject.resource.AssignmentNode',497,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1181,'net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForAssigment(net.sourceforge.ganttproject.task.ResourceAssignment)',1,'public AssignmentNode getNodeForAssigment(ResourceAssignment assignement) {\r\n    AssignmentNode res = null;\r\n    Enumeration childs = getNodeForResource(assignement.getResource()).children();\r\n    while ((childs.hasMoreElements()) && (res == null)) {\r\n        AssignmentNode an = ((AssignmentNode) (childs.nextElement()));\r\n        if (assignement.equals(an.getUserObject()))\r\n            res = an;\r\n\r\n    } \r\n    return res;\r\n}'),(736,'ProjectResource pr','net.sourceforge.ganttproject.resource.ProjectResource',505,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1173,'net.sourceforge.ganttproject.ResourceTreeTableModel.exists(net.sourceforge.ganttproject.resource.ProjectResource)',0,'ResourceNode exists(ProjectResource pr) {\r\n    ResourceNode res = null;\r\n    Enumeration en = root.children();\r\n    while ((res == null) && (en.hasMoreElements())) {\r\n        ResourceNode rn = ((ResourceNode) (en.nextElement()));\r\n        if (rn.getUserObject().equals(pr))\r\n            res = rn;\r\n\r\n    } \r\n    return res;\r\n}'),(737,'net.sourceforge.ganttproject.resource.ResourceNode','net.sourceforge.ganttproject.resource.ResourceNode',510,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1173,'net.sourceforge.ganttproject.ResourceTreeTableModel.exists(net.sourceforge.ganttproject.resource.ProjectResource)',1,'ResourceNode exists(ProjectResource pr) {\r\n    ResourceNode res = null;\r\n    Enumeration en = root.children();\r\n    while ((res == null) && (en.hasMoreElements())) {\r\n        ResourceNode rn = ((ResourceNode) (en.nextElement()));\r\n        if (rn.getUserObject().equals(pr))\r\n            res = rn;\r\n\r\n    } \r\n    return res;\r\n}'),(738,'ResourceNode rn','net.sourceforge.ganttproject.resource.ResourceNode',510,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1174,'net.sourceforge.ganttproject.ResourceTreeTableModel.exists(net.sourceforge.ganttproject.resource.ResourceNode,net.sourceforge.ganttproject.task.ResourceAssignment)',0,'private AssignmentNode exists(ResourceNode rn, ResourceAssignment ra) {\r\n    AssignmentNode res = null;\r\n    Enumeration en = rn.children();\r\n    while ((res == null) && (en.hasMoreElements())) {\r\n        AssignmentNode an = ((AssignmentNode) (en.nextElement()));\r\n        if (an.getUserObject().equals(ra))\r\n            res = an;\r\n\r\n    } \r\n    return res;\r\n}'),(739,'net.sourceforge.ganttproject.resource.AssignmentNode','net.sourceforge.ganttproject.resource.AssignmentNode',497,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1174,'net.sourceforge.ganttproject.ResourceTreeTableModel.exists(net.sourceforge.ganttproject.resource.ResourceNode,net.sourceforge.ganttproject.task.ResourceAssignment)',1,'private AssignmentNode exists(ResourceNode rn, ResourceAssignment ra) {\r\n    AssignmentNode res = null;\r\n    Enumeration en = rn.children();\r\n    while ((res == null) && (en.hasMoreElements())) {\r\n        AssignmentNode an = ((AssignmentNode) (en.nextElement()));\r\n        if (an.getUserObject().equals(ra))\r\n            res = an;\r\n\r\n    } \r\n    return res;\r\n}'),(740,'ResourceAssignment ra','net.sourceforge.ganttproject.task.ResourceAssignment',540,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1174,'net.sourceforge.ganttproject.ResourceTreeTableModel.exists(net.sourceforge.ganttproject.resource.ResourceNode,net.sourceforge.ganttproject.task.ResourceAssignment)',0,'private AssignmentNode exists(ResourceNode rn, ResourceAssignment ra) {\r\n    AssignmentNode res = null;\r\n    Enumeration en = rn.children();\r\n    while ((res == null) && (en.hasMoreElements())) {\r\n        AssignmentNode an = ((AssignmentNode) (en.nextElement()));\r\n        if (an.getUserObject().equals(ra))\r\n            res = an;\r\n\r\n    } \r\n    return res;\r\n}'),(741,'GanttLanguage ganttLanguage','net.sourceforge.ganttproject.language.GanttLanguage',461,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1166,'net.sourceforge.ganttproject.ResourceTreeTableModel.changeLanguage(net.sourceforge.ganttproject.language.GanttLanguage)',0,'/**\r\n * Changes the language.\r\n *\r\n * @param ganttLanguage\r\n * 		New language to use.\r\n */\r\npublic void changeLanguage(GanttLanguage ganttLanguage) {\r\n    ResourceTreeTableModel.strResourceName = ResourceTreeTableModel.language.getText(\"tableColResourceName\");\r\n    ResourceTreeTableModel.strResourceRole = ResourceTreeTableModel.language.getText(\"tableColResourceRole\");\r\n    ResourceTreeTableModel.strResourceEMail = ResourceTreeTableModel.language.getText(\"tableColResourceEMail\");\r\n    ResourceTreeTableModel.strResourcePhone = ResourceTreeTableModel.language.getText(\"tableColResourcePhone\");\r\n    ResourceTreeTableModel.strResourceRoleForTask = ResourceTreeTableModel.language.getText(\"tableColResourceRoleForTask\");\r\n    // hack assume that INDEX_RESOURCE_ROLE_TASK is the last index\r\n    String[] cols = new String[(ResourceTreeTableModel.INDEX_RESOURCE_ROLE_TASK) + 1];\r\n    cols[ResourceTreeTableModel.INDEX_RESOURCE_EMAIL] = ResourceTreeTableModel.strResourceEMail;\r\n    cols[ResourceTreeTableModel.INDEX_RESOURCE_NAME] = ResourceTreeTableModel.strResourceName;\r\n    cols[ResourceTreeTableModel.INDEX_RESOURCE_PHONE] = ResourceTreeTableModel.strResourcePhone;\r\n    cols[ResourceTreeTableModel.INDEX_RESOURCE_ROLE] = ResourceTreeTableModel.strResourceRole;\r\n    cols[ResourceTreeTableModel.INDEX_RESOURCE_ROLE_TASK] = ResourceTreeTableModel.strResourceRoleForTask;\r\n    for (int i = 0; i < (cols.length); i++) {\r\n        ResourceColumn col = ((ResourceColumn) (columns.get(new Integer(i))));\r\n        if (col != null)\r\n            col.setTitle(cols[i]);\r\n\r\n    }\r\n}'),(742,'MutableTreeNode newChild','javax.swing.tree.MutableTreeNode',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1184,'net.sourceforge.ganttproject.ResourceTreeTableModel.insertNodeInto(javax.swing.tree.MutableTreeNode,javax.swing.tree.MutableTreeNode,int)',0,'/**\r\n * Invoked this to insert newChild at location index in parents children.\r\n * This will then message nodesWereInserted to create the appropriate event.\r\n * This is the preferred way to add children as it will create the\r\n * appropriate event.\r\n */\r\npublic void insertNodeInto(MutableTreeNode newChild, MutableTreeNode parent, int index) {\r\n    parent.insert(newChild, index);\r\n    int[] newIndexs = new int[1];\r\n    newIndexs[0] = index;\r\n    nodesWereInserted(parent, newIndexs);\r\n}'),(743,'MutableTreeNode parent','javax.swing.tree.MutableTreeNode',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1184,'net.sourceforge.ganttproject.ResourceTreeTableModel.insertNodeInto(javax.swing.tree.MutableTreeNode,javax.swing.tree.MutableTreeNode,int)',0,'/**\r\n * Invoked this to insert newChild at location index in parents children.\r\n * This will then message nodesWereInserted to create the appropriate event.\r\n * This is the preferred way to add children as it will create the\r\n * appropriate event.\r\n */\r\npublic void insertNodeInto(MutableTreeNode newChild, MutableTreeNode parent, int index) {\r\n    parent.insert(newChild, index);\r\n    int[] newIndexs = new int[1];\r\n    newIndexs[0] = index;\r\n    nodesWereInserted(parent, newIndexs);\r\n}'),(744,'int index','int',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1184,'net.sourceforge.ganttproject.ResourceTreeTableModel.insertNodeInto(javax.swing.tree.MutableTreeNode,javax.swing.tree.MutableTreeNode,int)',0,'/**\r\n * Invoked this to insert newChild at location index in parents children.\r\n * This will then message nodesWereInserted to create the appropriate event.\r\n * This is the preferred way to add children as it will create the\r\n * appropriate event.\r\n */\r\npublic void insertNodeInto(MutableTreeNode newChild, MutableTreeNode parent, int index) {\r\n    parent.insert(newChild, index);\r\n    int[] newIndexs = new int[1];\r\n    newIndexs[0] = index;\r\n    nodesWereInserted(parent, newIndexs);\r\n}'),(745,'MutableTreeNode node','javax.swing.tree.MutableTreeNode',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1188,'net.sourceforge.ganttproject.ResourceTreeTableModel.removeNodeFromParent(javax.swing.tree.MutableTreeNode)',0,'/**\r\n * Message this to remove node from its parent. This will message\r\n * nodesWereRemoved to create the appropriate event. This is the preferred\r\n * way to remove a node as it handles the event creation for you.\r\n */\r\npublic void removeNodeFromParent(MutableTreeNode node) {\r\n    if (node != null) {\r\n        MutableTreeNode parent = ((MutableTreeNode) (node.getParent()));\r\n        if (parent == null)\r\n            throw new IllegalArgumentException(\"node does not have a parent.\");\r\n\r\n        int[] childIndex = new int[1];\r\n        Object[] removedArray = new Object[1];\r\n        childIndex[0] = parent.getIndex(node);\r\n        parent.remove(childIndex[0]);\r\n        removedArray[0] = node;\r\n        nodesWereRemoved(parent, childIndex, removedArray);\r\n    }\r\n}'),(746,'List peoples','java.util.List',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1167,'net.sourceforge.ganttproject.ResourceTreeTableModel.changePeople(java.util.List)',0,'public void changePeople(List peoples) {\r\n    Iterator it = peoples.iterator();\r\n    while (it.hasNext())\r\n        addResource(((ProjectResource) (it.next())));\r\n\r\n}'),(747,'ProjectResource people','net.sourceforge.ganttproject.resource.ProjectResource',505,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1163,'net.sourceforge.ganttproject.ResourceTreeTableModel.addResource(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public DefaultMutableTreeNode addResource(ProjectResource people) {\r\n    DefaultMutableTreeNode result = new ResourceNode(people);\r\n    insertNodeInto(result, root, root.getChildCount());\r\n    myResourceManager.toString();\r\n    return result;\r\n}'),(748,'ProjectResource[] peoples','net.sourceforge.ganttproject.resource.ProjectResource[]',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1172,'net.sourceforge.ganttproject.ResourceTreeTableModel.deleteResources(net.sourceforge.ganttproject.resource.ProjectResource[])',0,'public void deleteResources(ProjectResource[] peoples) {\r\n    for (int i = 0; i < (peoples.length); i++) {\r\n        deleteResource(peoples[i]);\r\n    }\r\n}'),(749,'ProjectResource people','net.sourceforge.ganttproject.resource.ProjectResource',505,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1171,'net.sourceforge.ganttproject.ResourceTreeTableModel.deleteResource(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public void deleteResource(ProjectResource people) {\r\n    removeNodeFromParent(getNodeForResource(people));\r\n    // myResourceManager.remove(people);\r\n}'),(750,'HumanResource resource','net.sourceforge.ganttproject.resource.HumanResource',499,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1187,'net.sourceforge.ganttproject.ResourceTreeTableModel.moveUp(net.sourceforge.ganttproject.resource.HumanResource)',0,'/**\r\n * Move Up the selected resource\r\n */\r\npublic boolean moveUp(HumanResource resource) {\r\n    myResourceManager.up(resource);\r\n    ResourceNode rn = getNodeForResource(resource);\r\n    int index = root.getIndex(root.getChildBefore(rn));\r\n    removeNodeFromParent(rn);\r\n    insertNodeInto(rn, root, index);\r\n    return true;\r\n}'),(751,'HumanResource resource','net.sourceforge.ganttproject.resource.HumanResource',499,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1186,'net.sourceforge.ganttproject.ResourceTreeTableModel.moveDown(net.sourceforge.ganttproject.resource.HumanResource)',0,'public boolean moveDown(HumanResource resource) {\r\n    myResourceManager.down(resource);\r\n    ResourceNode rn = getNodeForResource(resource);\r\n    int index = root.getIndex(root.getChildAfter(rn));\r\n    removeNodeFromParent(rn);\r\n    insertNodeInto(rn, root, index);\r\n    return true;\r\n}'),(752,'int index','int',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1176,'net.sourceforge.ganttproject.ResourceTreeTableModel.getColumn(int)',0,'/**\r\n * Returns the ResourceColumn associated to the given index\r\n */\r\npublic ResourceColumn getColumn(int index) {\r\n    return ((ResourceColumn) (columns.get(new Integer(index))));\r\n}'),(753,'net.sourceforge.ganttproject.resource.ResourceColumn','net.sourceforge.ganttproject.resource.ResourceColumn',506,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1176,'net.sourceforge.ganttproject.ResourceTreeTableModel.getColumn(int)',1,'/**\r\n * Returns the ResourceColumn associated to the given index\r\n */\r\npublic ResourceColumn getColumn(int index) {\r\n    return ((ResourceColumn) (columns.get(new Integer(index))));\r\n}'),(754,'int colIndex','int',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1177,'net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnClass(int)',0,'/**\r\n * {@inheritDoc }\r\n */\r\npublic Class getColumnClass(int colIndex) {\r\n    if (colIndex == 0) {\r\n        return hierarchicalColumnClass;\r\n    }\r\n    ResourceColumn column = ((ResourceColumn) (columns.get(new Integer(colIndex))));\r\n    return column == null ? String.class : column.getType();\r\n}'),(755,'int column','int',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1179,'net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnName(int)',0,'public String getColumnName(int column) {\r\n    return ((ResourceColumn) (columns.get(new Integer(column)))).getTitle();\r\n}'),(756,'Object node','java.lang.Object',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1185,'net.sourceforge.ganttproject.ResourceTreeTableModel.isCellEditable(java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic boolean isCellEditable(Object node, int column) {\r\n    return ((node instanceof ResourceNode) && ((((column == (ResourceTreeTableModel.INDEX_RESOURCE_EMAIL)) || (column == (ResourceTreeTableModel.INDEX_RESOURCE_NAME))) || (column == (ResourceTreeTableModel.INDEX_RESOURCE_PHONE))) || (column == (ResourceTreeTableModel.INDEX_RESOURCE_ROLE)))) || (((node instanceof AssignmentNode) && (column == (ResourceTreeTableModel.INDEX_RESOURCE_ROLE_TASK))) || /* assumes the INDEX_RESOURCE_ROLE_TASK is the last mandatory column */\r\n    (column > (ResourceTreeTableModel.INDEX_RESOURCE_ROLE_TASK)));\r\n}'),(757,'int column','int',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1185,'net.sourceforge.ganttproject.ResourceTreeTableModel.isCellEditable(java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic boolean isCellEditable(Object node, int column) {\r\n    return ((node instanceof ResourceNode) && ((((column == (ResourceTreeTableModel.INDEX_RESOURCE_EMAIL)) || (column == (ResourceTreeTableModel.INDEX_RESOURCE_NAME))) || (column == (ResourceTreeTableModel.INDEX_RESOURCE_PHONE))) || (column == (ResourceTreeTableModel.INDEX_RESOURCE_ROLE)))) || (((node instanceof AssignmentNode) && (column == (ResourceTreeTableModel.INDEX_RESOURCE_ROLE_TASK))) || /* assumes the INDEX_RESOURCE_ROLE_TASK is the last mandatory column */\r\n    (column > (ResourceTreeTableModel.INDEX_RESOURCE_ROLE_TASK)));\r\n}'),(758,'Object node','java.lang.Object',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1183,'net.sourceforge.ganttproject.ResourceTreeTableModel.getValueAt(java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic Object getValueAt(Object node, int column) {\r\n    Object res = null;\r\n    ResourceNode rn = null;\r\n    AssignmentNode an = null;\r\n    if (node instanceof ResourceNode)\r\n        rn = ((ResourceNode) (node));\r\n    else\r\n        if (node instanceof AssignmentNode)\r\n            an = ((AssignmentNode) (node));\r\n\r\n\r\n    boolean hasChild = rn != null;\r\n    switch (column) {\r\n        case 0 :\r\n            // name\r\n            if (hasChild) {\r\n                res = rn.getName();\r\n            } else {\r\n                res = an.getTask().getName();\r\n            }\r\n            break;\r\n        case 1 :\r\n            // def role\r\n            if (hasChild) {\r\n                res = rn.getDefaultRole();\r\n            } else {\r\n                res = \"\";\r\n            }\r\n            break;\r\n        case 2 :\r\n            // mail\r\n            if (hasChild) {\r\n                res = rn.getEMail();\r\n            } else {\r\n                res = \"\";\r\n            }\r\n            break;\r\n        case 3 :\r\n            // phone\r\n            if (hasChild) {\r\n                res = rn.getPhone();\r\n            } else {\r\n                res = \"\";\r\n            }\r\n            break;\r\n        case 4 :\r\n            // assign role\r\n            if (hasChild) {\r\n                res = \"\";\r\n            } else {\r\n                res = an.getRoleForAssigment();\r\n            }\r\n            break;\r\n        default :\r\n            // custom column\r\n            if (hasChild) {\r\n                res = rn.getCustomField(this.getColumnName(column));\r\n            } else\r\n                res = \"\";\r\n\r\n            break;\r\n    }\r\n    return res;\r\n}'),(759,'int column','int',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1183,'net.sourceforge.ganttproject.ResourceTreeTableModel.getValueAt(java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic Object getValueAt(Object node, int column) {\r\n    Object res = null;\r\n    ResourceNode rn = null;\r\n    AssignmentNode an = null;\r\n    if (node instanceof ResourceNode)\r\n        rn = ((ResourceNode) (node));\r\n    else\r\n        if (node instanceof AssignmentNode)\r\n            an = ((AssignmentNode) (node));\r\n\r\n\r\n    boolean hasChild = rn != null;\r\n    switch (column) {\r\n        case 0 :\r\n            // name\r\n            if (hasChild) {\r\n                res = rn.getName();\r\n            } else {\r\n                res = an.getTask().getName();\r\n            }\r\n            break;\r\n        case 1 :\r\n            // def role\r\n            if (hasChild) {\r\n                res = rn.getDefaultRole();\r\n            } else {\r\n                res = \"\";\r\n            }\r\n            break;\r\n        case 2 :\r\n            // mail\r\n            if (hasChild) {\r\n                res = rn.getEMail();\r\n            } else {\r\n                res = \"\";\r\n            }\r\n            break;\r\n        case 3 :\r\n            // phone\r\n            if (hasChild) {\r\n                res = rn.getPhone();\r\n            } else {\r\n                res = \"\";\r\n            }\r\n            break;\r\n        case 4 :\r\n            // assign role\r\n            if (hasChild) {\r\n                res = \"\";\r\n            } else {\r\n                res = an.getRoleForAssigment();\r\n            }\r\n            break;\r\n        default :\r\n            // custom column\r\n            if (hasChild) {\r\n                res = rn.getCustomField(this.getColumnName(column));\r\n            } else\r\n                res = \"\";\r\n\r\n            break;\r\n    }\r\n    return res;\r\n}'),(760,'Object value','java.lang.Object',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1192,'net.sourceforge.ganttproject.ResourceTreeTableModel.setValueAt(java.lang.Object,java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void setValueAt(Object value, Object node, int column) {\r\n    if (isCellEditable(node, column))\r\n        switch (column) {\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_NAME :\r\n                ((ResourceNode) (node)).setName(value.toString());\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_EMAIL :\r\n                ((ResourceNode) (node)).setEMail(value.toString());\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_PHONE :\r\n                ((ResourceNode) (node)).setPhone(value.toString());\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_ROLE :\r\n                ((ResourceNode) (node)).setDefaultRole(((Role) (value)));\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_ROLE_TASK :\r\n                ((AssignmentNode) (node)).setRoleForAssigment(((Role) (value)));\r\n                break;\r\n            default :\r\n                ((ResourceNode) (node)).setCustomField(this.getColumnName(column), value);\r\n                break;\r\n        }\r\n\r\n    Mediator.getGanttProjectSingleton().setAskForSave(true);\r\n}'),(761,'Object node','java.lang.Object',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1192,'net.sourceforge.ganttproject.ResourceTreeTableModel.setValueAt(java.lang.Object,java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void setValueAt(Object value, Object node, int column) {\r\n    if (isCellEditable(node, column))\r\n        switch (column) {\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_NAME :\r\n                ((ResourceNode) (node)).setName(value.toString());\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_EMAIL :\r\n                ((ResourceNode) (node)).setEMail(value.toString());\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_PHONE :\r\n                ((ResourceNode) (node)).setPhone(value.toString());\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_ROLE :\r\n                ((ResourceNode) (node)).setDefaultRole(((Role) (value)));\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_ROLE_TASK :\r\n                ((AssignmentNode) (node)).setRoleForAssigment(((Role) (value)));\r\n                break;\r\n            default :\r\n                ((ResourceNode) (node)).setCustomField(this.getColumnName(column), value);\r\n                break;\r\n        }\r\n\r\n    Mediator.getGanttProjectSingleton().setAskForSave(true);\r\n}'),(762,'int column','int',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1192,'net.sourceforge.ganttproject.ResourceTreeTableModel.setValueAt(java.lang.Object,java.lang.Object,int)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void setValueAt(Object value, Object node, int column) {\r\n    if (isCellEditable(node, column))\r\n        switch (column) {\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_NAME :\r\n                ((ResourceNode) (node)).setName(value.toString());\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_EMAIL :\r\n                ((ResourceNode) (node)).setEMail(value.toString());\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_PHONE :\r\n                ((ResourceNode) (node)).setPhone(value.toString());\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_ROLE :\r\n                ((ResourceNode) (node)).setDefaultRole(((Role) (value)));\r\n                break;\r\n            case ResourceTreeTableModel.INDEX_RESOURCE_ROLE_TASK :\r\n                ((AssignmentNode) (node)).setRoleForAssigment(((Role) (value)));\r\n                break;\r\n            default :\r\n                ((ResourceNode) (node)).setCustomField(this.getColumnName(column), value);\r\n                break;\r\n        }\r\n\r\n    Mediator.getGanttProjectSingleton().setAskForSave(true);\r\n}'),(763,'ResourceColumn col','net.sourceforge.ganttproject.resource.ResourceColumn',506,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1162,'net.sourceforge.ganttproject.ResourceTreeTableModel.addMandatoryColumn(net.sourceforge.ganttproject.resource.ResourceColumn)',0,'/**\r\n * Adds a column that cannot be removed afterwards.\r\n */\r\npublic void addMandatoryColumn(ResourceColumn col) {\r\n    columns.put(new Integer(col.getIndex()), col);\r\n}'),(764,'String title','java.lang.String',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1161,'net.sourceforge.ganttproject.ResourceTreeTableModel.addCustomColumn(java.lang.String,net.sourceforge.ganttproject.resource.ResourceColumn)',0,'/**\r\n * Adds a custom column (which is removable) to the datamodel\r\n */\r\npublic void addCustomColumn(String title, ResourceColumn col) throws Exception {\r\n    /* TODO add translation */\r\n    if (((HumanResourceManager) (myResourceManager)).checkCustomField(title))\r\n        throw new Exception(\"Column exists\");\r\n\r\n    ((HumanResourceManager) (myResourceManager)).addCustomField(col);\r\n    columns.put(new Integer(ResourceTreeTableModel.index), col);\r\n}'),(765,'ResourceColumn col','net.sourceforge.ganttproject.resource.ResourceColumn',506,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1161,'net.sourceforge.ganttproject.ResourceTreeTableModel.addCustomColumn(java.lang.String,net.sourceforge.ganttproject.resource.ResourceColumn)',0,'/**\r\n * Adds a custom column (which is removable) to the datamodel\r\n */\r\npublic void addCustomColumn(String title, ResourceColumn col) throws Exception {\r\n    /* TODO add translation */\r\n    if (((HumanResourceManager) (myResourceManager)).checkCustomField(title))\r\n        throw new Exception(\"Column exists\");\r\n\r\n    ((HumanResourceManager) (myResourceManager)).addCustomField(col);\r\n    columns.put(new Integer(ResourceTreeTableModel.index), col);\r\n}'),(766,'String name','java.lang.String',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1170,'net.sourceforge.ganttproject.ResourceTreeTableModel.deleteCustomColumn(java.lang.String)',0,'/**\r\n * deletes a custom column from the datamodel\r\n */\r\npublic ResourceColumn deleteCustomColumn(String name) {\r\n    ResourceColumn toDel = null;\r\n    Collection vals = columns.values();\r\n    Iterator i = vals.iterator();\r\n    while (i.hasNext()) {\r\n        toDel = ((ResourceColumn) (i.next()));\r\n        if (name.equals(toDel.getTitle())) {\r\n            ((HumanResourceManager) (myResourceManager)).removeCustomField(toDel.getTitle());\r\n            /* this deletes the object from the Hashtable too */\r\n            vals.remove(toDel);\r\n            return toDel;\r\n        }\r\n    } \r\n    return null;\r\n}'),(767,'net.sourceforge.ganttproject.resource.ResourceColumn','net.sourceforge.ganttproject.resource.ResourceColumn',506,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1170,'net.sourceforge.ganttproject.ResourceTreeTableModel.deleteCustomColumn(java.lang.String)',1,'/**\r\n * deletes a custom column from the datamodel\r\n */\r\npublic ResourceColumn deleteCustomColumn(String name) {\r\n    ResourceColumn toDel = null;\r\n    Collection vals = columns.values();\r\n    Iterator i = vals.iterator();\r\n    while (i.hasNext()) {\r\n        toDel = ((ResourceColumn) (i.next()));\r\n        if (name.equals(toDel.getTitle())) {\r\n            ((HumanResourceManager) (myResourceManager)).removeCustomField(toDel.getTitle());\r\n            /* this deletes the object from the Hashtable too */\r\n            vals.remove(toDel);\r\n            return toDel;\r\n        }\r\n    } \r\n    return null;\r\n}'),(768,'String name','java.lang.String',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1168,'net.sourceforge.ganttproject.ResourceTreeTableModel.checkRemovableCol(java.lang.String)',0,'/**\r\n * checks if the given column is removable\r\n */\r\npublic boolean checkRemovableCol(String name) {\r\n    /* only custom columns are removable */\r\n    return ((HumanResourceManager) (myResourceManager)).checkCustomField(name);\r\n}'),(769,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1191,'net.sourceforge.ganttproject.ResourceTreeTableModel.resourceChanged(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public void resourceChanged(ProjectResource resource) {\r\n    ResourceNode node = getNodeForResource(resource);\r\n    if (node == null) {\r\n        return;\r\n    }\r\n    TreeNode parent = node.getParent();\r\n    int index = parent.getIndex(node);\r\n    assert index >= 0;\r\n    nodesChanged(parent, new int[]{ index });\r\n}'),(770,'ProjectResource[] resources','net.sourceforge.ganttproject.resource.ProjectResource[]',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1190,'net.sourceforge.ganttproject.ResourceTreeTableModel.resourceAssignmentsChanged(net.sourceforge.ganttproject.resource.ProjectResource[])',0,'public void resourceAssignmentsChanged(ProjectResource[] resources) {\r\n    for (int i = 0; i < (resources.length); i++) {\r\n        ResourceNode nextNode = exists(resources[i]);\r\n        buildAssignmentsSubtree(nextNode);\r\n    }\r\n}'),(771,'ResourceNode resourceNode','net.sourceforge.ganttproject.resource.ResourceNode',510,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1164,'net.sourceforge.ganttproject.ResourceTreeTableModel.buildAssignmentsSubtree(net.sourceforge.ganttproject.resource.ResourceNode)',0,'private void buildAssignmentsSubtree(ResourceNode resourceNode) {\r\n    ProjectResource resource = resourceNode.getResource();\r\n    resourceNode.removeAllChildren();\r\n    ResourceAssignment[] assignments = resource.getAssignments();\r\n    int[] indices = new int[assignments.length];\r\n    TreeNode[] children = new TreeNode[assignments.length];\r\n    if ((assignments.length) > 0) {\r\n        for (int i = 0; i < (assignments.length); i++) {\r\n            indices[i] = i;\r\n            AssignmentNode an = new AssignmentNode(assignments[i]);\r\n            children[i] = an;\r\n            resourceNode.add(an);\r\n        }\r\n    }\r\n    fireTreeStructureChanged(this, resourceNode.getPath(), indices, children);\r\n}'),(772,'int i','int',0,95,'net.sourceforge.ganttproject.ResourceTreeTableModel',1169,'net.sourceforge.ganttproject.ResourceTreeTableModel.decreaseCustomPropertyIndex(int)',0,'void decreaseCustomPropertyIndex(int i) {\r\n    ResourceTreeTableModel.index -= i;\r\n}'),(773,'GanttTree2 tree','net.sourceforge.ganttproject.GanttTree2',73,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1195,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.-init-(net.sourceforge.ganttproject.GanttTree2)',0,'public TaskContainmentHierarchyFacadeImpl(GanttTree2 tree) {\r\n    /* <DefaultMutableTreeNode> */\r\n    ArrayList allTasks = tree.getAllTasks();\r\n    // comboBox.addItem(\"no set\");\r\n    // for (int i = 0; i < allTasks.size(); i++) {\r\n    // DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode)\r\n    // allTasks.get(i);\r\n    for (int i = 0; i < (allTasks.size()); i++) {\r\n        DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) (allTasks.get(i)));\r\n        Task task = ((Task) (treeNode.getUserObject()));\r\n        if (treeNode.isRoot()) {\r\n            myRootTask = task;\r\n        }\r\n        myTask2treeNode.put(task, treeNode);\r\n        myTask2index.put(task, new Integer(i));\r\n    }\r\n    myTree = tree;\r\n}'),(774,'Task container','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1201,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getNestedTasks(net.sourceforge.ganttproject.task.Task)',0,'public Task[] getNestedTasks(Task container) {\r\n    Task[] result = null;\r\n    DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) (myTask2treeNode.get(container)));\r\n    if (treeNode != null) {\r\n        ArrayList list = new ArrayList();\r\n        for (Enumeration children = treeNode.children(); children.hasMoreElements();) {\r\n            DefaultMutableTreeNode next = ((DefaultMutableTreeNode) (children.nextElement()));\r\n            if (next instanceof TaskNode)\r\n                list.add(next.getUserObject());\r\n\r\n        }\r\n        result = ((Task[]) (list.toArray(new Task[0])));\r\n    }\r\n    return result == null ? new Task[0] : result;\r\n}'),(775,'Task container','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1204,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.hasNestedTasks(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * Purpose: Returns true if the container Task has any nested tasks.\r\n * This should be a quicker check than using getNestedTasks().\r\n *\r\n * @param container\r\n * 		The Task on which to check for children.\r\n */\r\npublic boolean hasNestedTasks(Task container) {\r\n    DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) (myTask2treeNode.get(container)));\r\n    if (treeNode != null) {\r\n        if (treeNode.children().hasMoreElements()) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}'),(776,'Task nestedTask','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1199,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getContainer(net.sourceforge.ganttproject.task.Task)',0,'public Task getContainer(Task nestedTask) {\r\n    DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) (myTask2treeNode.get(nestedTask)));\r\n    if (treeNode == null) {\r\n        return null;\r\n    }\r\n    DefaultMutableTreeNode containerNode = ((DefaultMutableTreeNode) (treeNode.getParent()));\r\n    return containerNode == null ? null : ((Task) (containerNode.getUserObject()));\r\n}'),(777,'net.sourceforge.ganttproject.task.Task','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1199,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getContainer(net.sourceforge.ganttproject.task.Task)',1,'public Task getContainer(Task nestedTask) {\r\n    DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) (myTask2treeNode.get(nestedTask)));\r\n    if (treeNode == null) {\r\n        return null;\r\n    }\r\n    DefaultMutableTreeNode containerNode = ((DefaultMutableTreeNode) (treeNode.getParent()));\r\n    return containerNode == null ? null : ((Task) (containerNode.getUserObject()));\r\n}'),(778,'Task first','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1196,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.areUnrelated(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public boolean areUnrelated(Task first, Task second) {\r\n    myPathBuffer.clear();\r\n    for (Task container = getContainer(first); container != null; container = getContainer(container)) {\r\n        myPathBuffer.add(container);\r\n    }\r\n    if (myPathBuffer.contains(second)) {\r\n        return false;\r\n    }\r\n    myPathBuffer.clear();\r\n    for (Task container = getContainer(second); container != null; container = getContainer(container)) {\r\n        myPathBuffer.add(container);\r\n    }\r\n    if (myPathBuffer.contains(first)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}'),(779,'Task second','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1196,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.areUnrelated(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public boolean areUnrelated(Task first, Task second) {\r\n    myPathBuffer.clear();\r\n    for (Task container = getContainer(first); container != null; container = getContainer(container)) {\r\n        myPathBuffer.add(container);\r\n    }\r\n    if (myPathBuffer.contains(second)) {\r\n        return false;\r\n    }\r\n    myPathBuffer.clear();\r\n    for (Task container = getContainer(second); container != null; container = getContainer(container)) {\r\n        myPathBuffer.add(container);\r\n    }\r\n    if (myPathBuffer.contains(first)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}'),(780,'Task whatMove','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1205,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.move(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public void move(Task whatMove, Task whereMove) {\r\n    DefaultMutableTreeNode targetNode = ((DefaultMutableTreeNode) (myTask2treeNode.get(whereMove)));\r\n    DefaultMutableTreeNode movedNode = ((DefaultMutableTreeNode) (myTask2treeNode.get(whatMove)));\r\n    if (movedNode != null) {\r\n        TreePath movedPath = new TreePath(movedNode.getPath());\r\n        boolean wasSelected = myTree.getJTree().getSelectionModel().isPathSelected(movedPath);\r\n        if (wasSelected) {\r\n            myTree.getJTree().getSelectionModel().removeSelectionPath(movedPath);\r\n        }\r\n        myTree.getModel().removeNodeFromParent(movedNode);\r\n        myTree.getModel().insertNodeInto(movedNode, targetNode, targetNode.getChildCount());\r\n        if (wasSelected) {\r\n            movedPath = new TreePath(movedNode.getPath());\r\n            myTree.getJTree().getSelectionModel().addSelectionPath(movedPath);\r\n        }\r\n    } else {\r\n        myTree.addObjectWithExpand(whatMove, targetNode);\r\n    }\r\n    getTaskManager().getAlgorithmCollection().getAdjustTaskBoundsAlgorithm().run(whatMove);\r\n    try {\r\n        getTaskManager().getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm().run();\r\n    } catch (TaskDependencyException e) {\r\n        e.printStackTrace();\r\n        throw new RuntimeException(e);\r\n    }\r\n}'),(781,'Task whereMove','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1205,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.move(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public void move(Task whatMove, Task whereMove) {\r\n    DefaultMutableTreeNode targetNode = ((DefaultMutableTreeNode) (myTask2treeNode.get(whereMove)));\r\n    DefaultMutableTreeNode movedNode = ((DefaultMutableTreeNode) (myTask2treeNode.get(whatMove)));\r\n    if (movedNode != null) {\r\n        TreePath movedPath = new TreePath(movedNode.getPath());\r\n        boolean wasSelected = myTree.getJTree().getSelectionModel().isPathSelected(movedPath);\r\n        if (wasSelected) {\r\n            myTree.getJTree().getSelectionModel().removeSelectionPath(movedPath);\r\n        }\r\n        myTree.getModel().removeNodeFromParent(movedNode);\r\n        myTree.getModel().insertNodeInto(movedNode, targetNode, targetNode.getChildCount());\r\n        if (wasSelected) {\r\n            movedPath = new TreePath(movedNode.getPath());\r\n            myTree.getJTree().getSelectionModel().addSelectionPath(movedPath);\r\n        }\r\n    } else {\r\n        myTree.addObjectWithExpand(whatMove, targetNode);\r\n    }\r\n    getTaskManager().getAlgorithmCollection().getAdjustTaskBoundsAlgorithm().run(whatMove);\r\n    try {\r\n        getTaskManager().getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm().run();\r\n    } catch (TaskDependencyException e) {\r\n        e.printStackTrace();\r\n        throw new RuntimeException(e);\r\n    }\r\n}'),(782,'Task task','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1200,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getDepth(net.sourceforge.ganttproject.task.Task)',0,'public int getDepth(Task task) {\r\n    DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) (myTask2treeNode.get(task)));\r\n    return treeNode.getLevel();\r\n}'),(783,'Task task1','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1197,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.compareDocumentOrder(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public int compareDocumentOrder(Task task1, Task task2) {\r\n    // DefaultMutableTreeNode node1 = (DefaultMutableTreeNode) myTask2treeNode.get(task1);\r\n    // DefaultMutableTreeNode node2 = (DefaultMutableTreeNode) myTask2treeNode.get(task2);\r\n    // int row1 = myTree.getJTree().getRowForPath(new TreePath(node1.getPath()));\r\n    // int row2 = myTree.getJTree().getRowForPath(new TreePath(node2.getPath()));\r\n    Integer index1 = ((Integer) (myTask2index.get(task1)));\r\n    Integer index2 = ((Integer) (myTask2index.get(task2)));\r\n    return (index1.intValue()) - (index2.intValue());\r\n}'),(784,'Task task2','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1197,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.compareDocumentOrder(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public int compareDocumentOrder(Task task1, Task task2) {\r\n    // DefaultMutableTreeNode node1 = (DefaultMutableTreeNode) myTask2treeNode.get(task1);\r\n    // DefaultMutableTreeNode node2 = (DefaultMutableTreeNode) myTask2treeNode.get(task2);\r\n    // int row1 = myTree.getJTree().getRowForPath(new TreePath(node1.getPath()));\r\n    // int row2 = myTree.getJTree().getRowForPath(new TreePath(node2.getPath()));\r\n    Integer index1 = ((Integer) (myTask2index.get(task1)));\r\n    Integer index2 = ((Integer) (myTask2index.get(task2)));\r\n    return (index1.intValue()) - (index2.intValue());\r\n}'),(785,'Task task','net.sourceforge.ganttproject.task.Task',548,96,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl',1198,'net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.contains(net.sourceforge.ganttproject.task.Task)',0,'public boolean contains(Task task) {\r\n    return myTask2treeNode.containsKey(task);\r\n}'),(786,'IGanttProject ganttProject','net.sourceforge.ganttproject.IGanttProject',84,97,'net.sourceforge.ganttproject.TaskModelModificationListener',1206,'net.sourceforge.ganttproject.TaskModelModificationListener.-init-(net.sourceforge.ganttproject.IGanttProject)',0,'TaskModelModificationListener(IGanttProject ganttProject) {\r\n    myGanttProject = ganttProject;\r\n}'),(787,'TaskScheduleEvent e','net.sourceforge.ganttproject.task.event.TaskScheduleEvent',624,97,'net.sourceforge.ganttproject.TaskModelModificationListener',1214,'net.sourceforge.ganttproject.TaskModelModificationListener.taskScheduleChanged(net.sourceforge.ganttproject.task.event.TaskScheduleEvent)',0,'public void taskScheduleChanged(TaskScheduleEvent e) {\r\n    myGanttProject.setModified();\r\n}'),(788,'TaskDependencyEvent e','net.sourceforge.ganttproject.task.event.TaskDependencyEvent',619,97,'net.sourceforge.ganttproject.TaskModelModificationListener',1207,'net.sourceforge.ganttproject.TaskModelModificationListener.dependencyAdded(net.sourceforge.ganttproject.task.event.TaskDependencyEvent)',0,'public void dependencyAdded(TaskDependencyEvent e) {\r\n    myGanttProject.setModified();\r\n}'),(789,'TaskDependencyEvent e','net.sourceforge.ganttproject.task.event.TaskDependencyEvent',619,97,'net.sourceforge.ganttproject.TaskModelModificationListener',1208,'net.sourceforge.ganttproject.TaskModelModificationListener.dependencyRemoved(net.sourceforge.ganttproject.task.event.TaskDependencyEvent)',0,'public void dependencyRemoved(TaskDependencyEvent e) {\r\n    myGanttProject.setModified();\r\n}'),(790,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,97,'net.sourceforge.ganttproject.TaskModelModificationListener',1209,'net.sourceforge.ganttproject.TaskModelModificationListener.taskAdded(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'public void taskAdded(TaskHierarchyEvent e) {\r\n    myGanttProject.setModified();\r\n}'),(791,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,97,'net.sourceforge.ganttproject.TaskModelModificationListener',1213,'net.sourceforge.ganttproject.TaskModelModificationListener.taskRemoved(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'public void taskRemoved(TaskHierarchyEvent e) {\r\n    myGanttProject.setModified();\r\n}'),(792,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,97,'net.sourceforge.ganttproject.TaskModelModificationListener',1210,'net.sourceforge.ganttproject.TaskModelModificationListener.taskMoved(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'public void taskMoved(TaskHierarchyEvent e) {\r\n    myGanttProject.setModified();\r\n}'),(793,'TaskPropertyEvent e','net.sourceforge.ganttproject.task.event.TaskPropertyEvent',623,97,'net.sourceforge.ganttproject.TaskModelModificationListener',1212,'net.sourceforge.ganttproject.TaskModelModificationListener.taskPropertiesChanged(net.sourceforge.ganttproject.task.event.TaskPropertyEvent)',0,'public void taskPropertiesChanged(TaskPropertyEvent e) {\r\n    myGanttProject.setModified();\r\n}'),(794,'TaskPropertyEvent e','net.sourceforge.ganttproject.task.event.TaskPropertyEvent',623,97,'net.sourceforge.ganttproject.TaskModelModificationListener',1211,'net.sourceforge.ganttproject.TaskModelModificationListener.taskProgressChanged(net.sourceforge.ganttproject.task.event.TaskPropertyEvent)',0,'public void taskProgressChanged(TaskPropertyEvent e) {\r\n    myGanttProject.setModified();\r\n    e.getTask().getManager().getAlgorithmCollection().getRecalculateTaskCompletionPercentageAlgorithm().run(e.getTask());\r\n}'),(795,'GanttTree2 treeView','net.sourceforge.ganttproject.GanttTree2',73,98,'net.sourceforge.ganttproject.TaskTreeImageGenerator',1215,'net.sourceforge.ganttproject.TaskTreeImageGenerator.-init-(net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'TaskTreeImageGenerator(GanttTree2 treeView, UIConfiguration uiConfiguration) {\r\n    myTreeView = treeView;\r\n    myUIConfiguration = uiConfiguration;\r\n}'),(796,'UIConfiguration uiConfiguration','net.sourceforge.ganttproject.gui.UIConfiguration',335,98,'net.sourceforge.ganttproject.TaskTreeImageGenerator',1215,'net.sourceforge.ganttproject.TaskTreeImageGenerator.-init-(net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'TaskTreeImageGenerator(GanttTree2 treeView, UIConfiguration uiConfiguration) {\r\n    myTreeView = treeView;\r\n    myUIConfiguration = uiConfiguration;\r\n}'),(797,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,98,'net.sourceforge.ganttproject.TaskTreeImageGenerator',1217,'net.sourceforge.ganttproject.TaskTreeImageGenerator.getPrintableNodes(net.sourceforge.ganttproject.GanttExportSettings)',0,'List getPrintableNodes(GanttExportSettings settings) {\r\n    List myItemsToConsider;\r\n    if (settings.isOnlySelectedItem()) {\r\n        myItemsToConsider = Arrays.asList(getTree().getSelectedNodes());\r\n    } else {\r\n        myItemsToConsider = getTree().getAllVisibleNodes();\r\n    }\r\n    System.out.println((\"TaskToConsider.size = \" + (myItemsToConsider.size())));\r\n    for (int i = 0; i < (myItemsToConsider.size()); i++) {\r\n        if (((DefaultMutableTreeNode) (myItemsToConsider.get(i))).isRoot()) {\r\n            myItemsToConsider.remove(i);\r\n            break;\r\n        }\r\n    }\r\n    return myItemsToConsider;\r\n}'),(798,'List myItemsToConsider','java.util.List',0,98,'net.sourceforge.ganttproject.TaskTreeImageGenerator',1216,'net.sourceforge.ganttproject.TaskTreeImageGenerator.createImage(java.util.List)',0,'Image createImage(List myItemsToConsider) {\r\n    BufferedImage tmpImage = new BufferedImage(10, 10, BufferedImage.TYPE_INT_RGB);\r\n    FontMetrics fmetric = tmpImage.getGraphics().getFontMetrics(myUIConfiguration.getChartMainFont().deriveFont(12.0F));\r\n    int fourEmWidth = fmetric.stringWidth(\"mmmm\");\r\n    int width = 0;\r\n    int height = ((getTree().getTreeTable().getRowHeight()) * 3) + (TaskTreeImageGenerator.HEADER_OFFSET);\r\n    for (Iterator tasks = myItemsToConsider.iterator(); tasks.hasNext();) {\r\n        DefaultMutableTreeNode nextTreeNode = ((DefaultMutableTreeNode) (tasks.next()));\r\n        if (nextTreeNode instanceof BlankLineNode) {\r\n            height += getTree().getTreeTable().getRowHeight();\r\n            continue;\r\n        }\r\n        Task next = ((Task) (nextTreeNode.getUserObject()));\r\n        if (\"None\".equals(next.toString())) {\r\n            continue;\r\n        }\r\n        if (isVisible(next)) {\r\n            height += getTree().getTreeTable().getRowHeight();\r\n            int nbchar = (fmetric.stringWidth(next.getName())) + ((next.getManager().getTaskHierarchy().getDepth(next)) * fourEmWidth);\r\n            if (nbchar > width) {\r\n                width = nbchar;\r\n            }\r\n        }\r\n    }\r\n    width += 10;\r\n    myWidth = width;\r\n    BufferedImage image2 = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\r\n    // setSize(sizeTOC, getHeight());\r\n    Graphics g2 = image2.getGraphics();\r\n    ((Graphics2D) (g2)).setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\r\n    g2.setColor(Color.WHITE);\r\n    g2.fillRect(0, 0, width, height);\r\n    printTasks(g2, myItemsToConsider);\r\n    GanttImagePanel but = new GanttImagePanel(\"big.png\", 300, 47);\r\n    g2.setColor(new Color(102, 153, 153));\r\n    g2.fillRect(0, 0, width, but.getHeight());\r\n    but.paintComponent(g2);\r\n    return image2;\r\n}'),(799,'Graphics g','java.awt.Graphics',0,98,'net.sourceforge.ganttproject.TaskTreeImageGenerator',1222,'net.sourceforge.ganttproject.TaskTreeImageGenerator.printTasks(java.awt.Graphics,java.util.List)',0,'private void printTasks(Graphics g, List taskNodes) {\r\n    g.setColor(Color.black);\r\n    // g.setFont(myUIConfiguration.getChartMainFont().deriveFont(12f));\r\n    g.setFont(Fonts.PRINT_CHART_FONT);\r\n    // JA Changed 42 to 66\r\n    // This is related to the hardcoded headerheight\r\n    // TODO: Fix hard-coded part\r\n    // printTask(g,5,66,getTree().getAllChildTask(getTree().getRoot()));\r\n    printTask(g, taskNodes);\r\n}'),(800,'List taskNodes','java.util.List',0,98,'net.sourceforge.ganttproject.TaskTreeImageGenerator',1222,'net.sourceforge.ganttproject.TaskTreeImageGenerator.printTasks(java.awt.Graphics,java.util.List)',0,'private void printTasks(Graphics g, List taskNodes) {\r\n    g.setColor(Color.black);\r\n    // g.setFont(myUIConfiguration.getChartMainFont().deriveFont(12f));\r\n    g.setFont(Fonts.PRINT_CHART_FONT);\r\n    // JA Changed 42 to 66\r\n    // This is related to the hardcoded headerheight\r\n    // TODO: Fix hard-coded part\r\n    // printTask(g,5,66,getTree().getAllChildTask(getTree().getRoot()));\r\n    printTask(g, taskNodes);\r\n}'),(801,'Graphics g','java.awt.Graphics',0,98,'net.sourceforge.ganttproject.TaskTreeImageGenerator',1221,'net.sourceforge.ganttproject.TaskTreeImageGenerator.printTask(java.awt.Graphics,java.util.List)',0,'private int printTask(Graphics g, List child) {\r\n    int rowCount = 0;\r\n    final int h = getTree().getTreeTable().getRowHeight();\r\n    Stack nestingStack = new Stack();\r\n    // int x = 5;\r\n    final int fourEmWidth = new TextLengthCalculatorImpl(g).getTextLength(\"mmmm\");\r\n    int y = (getTree().getTable().getTableHeader().getHeight()) + (TaskTreeImageGenerator.HEADER_OFFSET);\r\n    for (Iterator tasks = child.iterator(); tasks.hasNext();) {\r\n        DefaultMutableTreeNode nextTreeNode = ((DefaultMutableTreeNode) (tasks.next()));\r\n        boolean blankline = nextTreeNode instanceof BlankLineNode;\r\n        Task next = null;\r\n        if (!blankline) {\r\n            next = ((Task) (nextTreeNode.getUserObject()));\r\n            while (!(nestingStack.isEmpty())) {\r\n                DefaultMutableTreeNode topStackNode = ((DefaultMutableTreeNode) (nestingStack.pop()));\r\n                if ((nextTreeNode.getParent()) == topStackNode) {\r\n                    nestingStack.push(topStackNode);\r\n                    break;\r\n                }\r\n            } \r\n            nestingStack.push(nextTreeNode);\r\n        }\r\n        if (blankline || (isVisible(next))) {\r\n            if ((rowCount % 2) == 1) {\r\n                g.setColor(new Color(((float) (0.933)), ((float) (0.933)), ((float) (0.933))));\r\n                g.fillRect(0, y, ((getWidth()) - (h / 2)), h);\r\n            }\r\n            g.setColor(Color.black);\r\n            g.drawRect(0, y, ((getWidth()) - (h / 2)), h);\r\n            if (!blankline) {\r\n                int charH = ((int) (g.getFontMetrics().getLineMetrics(next.getName(), g).getAscent()));\r\n                int x = (((nestingStack.size()) - 1) * fourEmWidth) + 5;\r\n                g.drawString(next.getName(), x, ((y + charH) + ((h - charH) / 2)));\r\n            }\r\n            g.setColor(new Color(((float) (0.807)), ((float) (0.807)), ((float) (0.807))));\r\n            g.drawLine(1, ((y + h) - 1), ((getWidth()) - 11), ((y + h) - 1));\r\n            y += h;\r\n            rowCount++;\r\n            // if (nextTreeNode.getChildCount() != 0) {\r\n            // y = printTask(g, x + (h / 2), y, getTree().getAllChildTask(\r\n            // nextTreeNode));\r\n            // }\r\n        }\r\n    }\r\n    return y;\r\n}'),(802,'List child','java.util.List',0,98,'net.sourceforge.ganttproject.TaskTreeImageGenerator',1221,'net.sourceforge.ganttproject.TaskTreeImageGenerator.printTask(java.awt.Graphics,java.util.List)',0,'private int printTask(Graphics g, List child) {\r\n    int rowCount = 0;\r\n    final int h = getTree().getTreeTable().getRowHeight();\r\n    Stack nestingStack = new Stack();\r\n    // int x = 5;\r\n    final int fourEmWidth = new TextLengthCalculatorImpl(g).getTextLength(\"mmmm\");\r\n    int y = (getTree().getTable().getTableHeader().getHeight()) + (TaskTreeImageGenerator.HEADER_OFFSET);\r\n    for (Iterator tasks = child.iterator(); tasks.hasNext();) {\r\n        DefaultMutableTreeNode nextTreeNode = ((DefaultMutableTreeNode) (tasks.next()));\r\n        boolean blankline = nextTreeNode instanceof BlankLineNode;\r\n        Task next = null;\r\n        if (!blankline) {\r\n            next = ((Task) (nextTreeNode.getUserObject()));\r\n            while (!(nestingStack.isEmpty())) {\r\n                DefaultMutableTreeNode topStackNode = ((DefaultMutableTreeNode) (nestingStack.pop()));\r\n                if ((nextTreeNode.getParent()) == topStackNode) {\r\n                    nestingStack.push(topStackNode);\r\n                    break;\r\n                }\r\n            } \r\n            nestingStack.push(nextTreeNode);\r\n        }\r\n        if (blankline || (isVisible(next))) {\r\n            if ((rowCount % 2) == 1) {\r\n                g.setColor(new Color(((float) (0.933)), ((float) (0.933)), ((float) (0.933))));\r\n                g.fillRect(0, y, ((getWidth()) - (h / 2)), h);\r\n            }\r\n            g.setColor(Color.black);\r\n            g.drawRect(0, y, ((getWidth()) - (h / 2)), h);\r\n            if (!blankline) {\r\n                int charH = ((int) (g.getFontMetrics().getLineMetrics(next.getName(), g).getAscent()));\r\n                int x = (((nestingStack.size()) - 1) * fourEmWidth) + 5;\r\n                g.drawString(next.getName(), x, ((y + charH) + ((h - charH) / 2)));\r\n            }\r\n            g.setColor(new Color(((float) (0.807)), ((float) (0.807)), ((float) (0.807))));\r\n            g.drawLine(1, ((y + h) - 1), ((getWidth()) - 11), ((y + h) - 1));\r\n            y += h;\r\n            rowCount++;\r\n            // if (nextTreeNode.getChildCount() != 0) {\r\n            // y = printTask(g, x + (h / 2), y, getTree().getAllChildTask(\r\n            // nextTreeNode));\r\n            // }\r\n        }\r\n    }\r\n    return y;\r\n}'),(803,'Task thetask','net.sourceforge.ganttproject.task.Task',548,98,'net.sourceforge.ganttproject.TaskTreeImageGenerator',1220,'net.sourceforge.ganttproject.TaskTreeImageGenerator.isVisible(net.sourceforge.ganttproject.task.Task)',0,'private boolean isVisible(Task thetask) {\r\n    boolean res = true;\r\n    DefaultMutableTreeNode father = getTree().getFatherNode(thetask);\r\n    if (father == null) {\r\n        return false;\r\n    }\r\n    while (father != null) {\r\n        Task taskFather = ((Task) (father.getUserObject()));\r\n        if (!(taskFather.getExpand())) {\r\n            res = false;\r\n        }\r\n        father = ((DefaultMutableTreeNode) (father.getParent()));\r\n    } \r\n    return res;\r\n}'),(804,'TableCellEditor proxiedEditor','javax.swing.table.TableCellEditor',0,99,'net.sourceforge.ganttproject.TreeTableCellEditorImpl',1223,'net.sourceforge.ganttproject.TreeTableCellEditorImpl.-init-(javax.swing.table.TableCellEditor)',0,'TreeTableCellEditorImpl(TableCellEditor proxiedEditor) {\r\n    myProxiedEditor = proxiedEditor;\r\n}'),(805,'JTable arg0','javax.swing.JTable',0,99,'net.sourceforge.ganttproject.TreeTableCellEditorImpl',1228,'net.sourceforge.ganttproject.TreeTableCellEditorImpl.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    final Component result = myProxiedEditor.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4);\r\n    if (result instanceof JTextComponent) {\r\n        ((JTextComponent) (result)).selectAll();\r\n        result.addFocusListener(new FocusAdapter() {\r\n            public void focusGained(FocusEvent arg0) {\r\n                super.focusGained(arg0);\r\n                ((JTextComponent) (result)).selectAll();\r\n                result.removeFocusListener(this);\r\n            }\r\n\r\n            public void focusLost(FocusEvent arg0) {\r\n                // TODO Auto-generated method stub\r\n                super.focusLost(arg0);\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}'),(806,'Object arg1','java.lang.Object',0,99,'net.sourceforge.ganttproject.TreeTableCellEditorImpl',1228,'net.sourceforge.ganttproject.TreeTableCellEditorImpl.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    final Component result = myProxiedEditor.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4);\r\n    if (result instanceof JTextComponent) {\r\n        ((JTextComponent) (result)).selectAll();\r\n        result.addFocusListener(new FocusAdapter() {\r\n            public void focusGained(FocusEvent arg0) {\r\n                super.focusGained(arg0);\r\n                ((JTextComponent) (result)).selectAll();\r\n                result.removeFocusListener(this);\r\n            }\r\n\r\n            public void focusLost(FocusEvent arg0) {\r\n                // TODO Auto-generated method stub\r\n                super.focusLost(arg0);\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}'),(807,'boolean arg2','boolean',0,99,'net.sourceforge.ganttproject.TreeTableCellEditorImpl',1228,'net.sourceforge.ganttproject.TreeTableCellEditorImpl.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    final Component result = myProxiedEditor.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4);\r\n    if (result instanceof JTextComponent) {\r\n        ((JTextComponent) (result)).selectAll();\r\n        result.addFocusListener(new FocusAdapter() {\r\n            public void focusGained(FocusEvent arg0) {\r\n                super.focusGained(arg0);\r\n                ((JTextComponent) (result)).selectAll();\r\n                result.removeFocusListener(this);\r\n            }\r\n\r\n            public void focusLost(FocusEvent arg0) {\r\n                // TODO Auto-generated method stub\r\n                super.focusLost(arg0);\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}'),(808,'int arg3','int',0,99,'net.sourceforge.ganttproject.TreeTableCellEditorImpl',1228,'net.sourceforge.ganttproject.TreeTableCellEditorImpl.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    final Component result = myProxiedEditor.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4);\r\n    if (result instanceof JTextComponent) {\r\n        ((JTextComponent) (result)).selectAll();\r\n        result.addFocusListener(new FocusAdapter() {\r\n            public void focusGained(FocusEvent arg0) {\r\n                super.focusGained(arg0);\r\n                ((JTextComponent) (result)).selectAll();\r\n                result.removeFocusListener(this);\r\n            }\r\n\r\n            public void focusLost(FocusEvent arg0) {\r\n                // TODO Auto-generated method stub\r\n                super.focusLost(arg0);\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}'),(809,'int arg4','int',0,99,'net.sourceforge.ganttproject.TreeTableCellEditorImpl',1228,'net.sourceforge.ganttproject.TreeTableCellEditorImpl.getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)',0,'public Component getTableCellEditorComponent(JTable arg0, Object arg1, boolean arg2, int arg3, int arg4) {\r\n    final Component result = myProxiedEditor.getTableCellEditorComponent(arg0, arg1, arg2, arg3, arg4);\r\n    if (result instanceof JTextComponent) {\r\n        ((JTextComponent) (result)).selectAll();\r\n        result.addFocusListener(new FocusAdapter() {\r\n            public void focusGained(FocusEvent arg0) {\r\n                super.focusGained(arg0);\r\n                ((JTextComponent) (result)).selectAll();\r\n                result.removeFocusListener(this);\r\n            }\r\n\r\n            public void focusLost(FocusEvent arg0) {\r\n                // TODO Auto-generated method stub\r\n                super.focusLost(arg0);\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}'),(810,'EventObject arg0','java.util.EventObject',0,99,'net.sourceforge.ganttproject.TreeTableCellEditorImpl',1229,'net.sourceforge.ganttproject.TreeTableCellEditorImpl.isCellEditable(java.util.EventObject)',0,'public boolean isCellEditable(EventObject arg0) {\r\n    return myProxiedEditor.isCellEditable(arg0);\r\n}'),(811,'EventObject arg0','java.util.EventObject',0,99,'net.sourceforge.ganttproject.TreeTableCellEditorImpl',1231,'net.sourceforge.ganttproject.TreeTableCellEditorImpl.shouldSelectCell(java.util.EventObject)',0,'public boolean shouldSelectCell(EventObject arg0) {\r\n    return myProxiedEditor.shouldSelectCell(arg0);\r\n}'),(812,'CellEditorListener arg0','javax.swing.event.CellEditorListener',0,99,'net.sourceforge.ganttproject.TreeTableCellEditorImpl',1225,'net.sourceforge.ganttproject.TreeTableCellEditorImpl.addCellEditorListener(javax.swing.event.CellEditorListener)',0,'public void addCellEditorListener(CellEditorListener arg0) {\r\n    myProxiedEditor.addCellEditorListener(arg0);\r\n}'),(813,'CellEditorListener arg0','javax.swing.event.CellEditorListener',0,99,'net.sourceforge.ganttproject.TreeTableCellEditorImpl',1230,'net.sourceforge.ganttproject.TreeTableCellEditorImpl.removeCellEditorListener(javax.swing.event.CellEditorListener)',0,'public void removeCellEditorListener(CellEditorListener arg0) {\r\n    myProxiedEditor.removeCellEditorListener(arg0);\r\n}'),(814,'JFrame mainFrame','javax.swing.JFrame',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1233,'net.sourceforge.ganttproject.UIFacadeImpl.-init-(javax.swing.JFrame,net.sourceforge.ganttproject.gui.GanttStatusBar,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'UIFacadeImpl(JFrame mainFrame, GanttStatusBar statusBar, IGanttProject project, UIFacade fallbackDelegate) {\r\n    myMainFrame = mainFrame;\r\n    myScrollingManager = new ScrollingManagerImpl();\r\n    myZoomManager = new ZoomManager(project.getTimeUnitStack());\r\n    myStatusBar = statusBar;\r\n    myFallbackDelegate = fallbackDelegate;\r\n    org.eclipse.core.runtime.Platform.getJobManager().setProgressProvider(this);\r\n    myErrorNotifier = new ErrorNotifier(this);\r\n}'),(815,'GanttStatusBar statusBar','net.sourceforge.ganttproject.gui.GanttStatusBar',310,103,'net.sourceforge.ganttproject.UIFacadeImpl',1233,'net.sourceforge.ganttproject.UIFacadeImpl.-init-(javax.swing.JFrame,net.sourceforge.ganttproject.gui.GanttStatusBar,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'UIFacadeImpl(JFrame mainFrame, GanttStatusBar statusBar, IGanttProject project, UIFacade fallbackDelegate) {\r\n    myMainFrame = mainFrame;\r\n    myScrollingManager = new ScrollingManagerImpl();\r\n    myZoomManager = new ZoomManager(project.getTimeUnitStack());\r\n    myStatusBar = statusBar;\r\n    myFallbackDelegate = fallbackDelegate;\r\n    org.eclipse.core.runtime.Platform.getJobManager().setProgressProvider(this);\r\n    myErrorNotifier = new ErrorNotifier(this);\r\n}'),(816,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,103,'net.sourceforge.ganttproject.UIFacadeImpl',1233,'net.sourceforge.ganttproject.UIFacadeImpl.-init-(javax.swing.JFrame,net.sourceforge.ganttproject.gui.GanttStatusBar,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'UIFacadeImpl(JFrame mainFrame, GanttStatusBar statusBar, IGanttProject project, UIFacade fallbackDelegate) {\r\n    myMainFrame = mainFrame;\r\n    myScrollingManager = new ScrollingManagerImpl();\r\n    myZoomManager = new ZoomManager(project.getTimeUnitStack());\r\n    myStatusBar = statusBar;\r\n    myFallbackDelegate = fallbackDelegate;\r\n    org.eclipse.core.runtime.Platform.getJobManager().setProgressProvider(this);\r\n    myErrorNotifier = new ErrorNotifier(this);\r\n}'),(817,'UIFacade fallbackDelegate','net.sourceforge.ganttproject.gui.UIFacade',337,103,'net.sourceforge.ganttproject.UIFacadeImpl',1233,'net.sourceforge.ganttproject.UIFacadeImpl.-init-(javax.swing.JFrame,net.sourceforge.ganttproject.gui.GanttStatusBar,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'UIFacadeImpl(JFrame mainFrame, GanttStatusBar statusBar, IGanttProject project, UIFacade fallbackDelegate) {\r\n    myMainFrame = mainFrame;\r\n    myScrollingManager = new ScrollingManagerImpl();\r\n    myZoomManager = new ZoomManager(project.getTimeUnitStack());\r\n    myStatusBar = statusBar;\r\n    myFallbackDelegate = fallbackDelegate;\r\n    org.eclipse.core.runtime.Platform.getJobManager().setProgressProvider(this);\r\n    myErrorNotifier = new ErrorNotifier(this);\r\n}'),(818,'int dialogType','int',0,101,'net.sourceforge.ganttproject.UIFacadeImpl$MyDialog',1277,'net.sourceforge.ganttproject.UIFacadeImpl$MyDialog.-init-(int,java.lang.String)',0,'MyDialog(int dialogType, String message) {\r\n    this.contentComponent = createDialogContentComponent(dialogType, message);\r\n}'),(819,'String message','java.lang.String',0,101,'net.sourceforge.ganttproject.UIFacadeImpl$MyDialog',1277,'net.sourceforge.ganttproject.UIFacadeImpl$MyDialog.-init-(int,java.lang.String)',0,'MyDialog(int dialogType, String message) {\r\n    this.contentComponent = createDialogContentComponent(dialogType, message);\r\n}'),(820,'final Action realAction','javax.swing.Action',0,102,'net.sourceforge.ganttproject.UIFacadeImpl$ProxyOkAction',1279,'net.sourceforge.ganttproject.UIFacadeImpl$ProxyOkAction.-init-(javax.swing.Action,javax.swing.JDialog,net.sourceforge.ganttproject.UIFacadeImpl$Commiter)',0,'private ProxyOkAction(final Action realAction, final JDialog dialog, final UIFacadeImpl.Commiter commiter) {\r\n    realAction.addPropertyChangeListener(this);\r\n    myRealAction = realAction;\r\n    myDialog = dialog;\r\n    myCommiter = commiter;\r\n    setEnabled(realAction.isEnabled());\r\n}'),(821,'final JDialog dialog','javax.swing.JDialog',0,102,'net.sourceforge.ganttproject.UIFacadeImpl$ProxyOkAction',1279,'net.sourceforge.ganttproject.UIFacadeImpl$ProxyOkAction.-init-(javax.swing.Action,javax.swing.JDialog,net.sourceforge.ganttproject.UIFacadeImpl$Commiter)',0,'private ProxyOkAction(final Action realAction, final JDialog dialog, final UIFacadeImpl.Commiter commiter) {\r\n    realAction.addPropertyChangeListener(this);\r\n    myRealAction = realAction;\r\n    myDialog = dialog;\r\n    myCommiter = commiter;\r\n    setEnabled(realAction.isEnabled());\r\n}'),(822,'final UIFacadeImpl.Commiter commiter','net.sourceforge.ganttproject.UIFacadeImpl$Commiter',100,102,'net.sourceforge.ganttproject.UIFacadeImpl$ProxyOkAction',1279,'net.sourceforge.ganttproject.UIFacadeImpl$ProxyOkAction.-init-(javax.swing.Action,javax.swing.JDialog,net.sourceforge.ganttproject.UIFacadeImpl$Commiter)',0,'private ProxyOkAction(final Action realAction, final JDialog dialog, final UIFacadeImpl.Commiter commiter) {\r\n    realAction.addPropertyChangeListener(this);\r\n    myRealAction = realAction;\r\n    myDialog = dialog;\r\n    myCommiter = commiter;\r\n    setEnabled(realAction.isEnabled());\r\n}'),(823,'String message','java.lang.String',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1267,'net.sourceforge.ganttproject.UIFacadeImpl.showConfirmationDialog(java.lang.String,java.lang.String)',0,'public UIFacade.Choice showConfirmationDialog(String message, String title) {\r\n    /* MyDialog dialog = new MyDialog(GanttDialogInfo.WARNING, message);\n    dialog.show();\n    return dialog.result;\n     */\r\n    // int result = JOptionPane.showConfirmDialog(myMainFrame, message);\r\n    String yes = GanttLanguage.getInstance().getText(\"yes\");\r\n    String no = GanttLanguage.getInstance().getText(\"no\");\r\n    String cancel = GanttLanguage.getInstance().getText(\"cancel\");\r\n    int result = JOptionPane.showOptionDialog(myMainFrame, message, title, JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, new String[]{ yes, no, cancel }, yes);\r\n    switch (result) {\r\n        case JOptionPane.YES_OPTION :\r\n            return UIFacade.Choice.YES;\r\n        case JOptionPane.NO_OPTION :\r\n            return UIFacade.Choice.NO;\r\n        case JOptionPane.CANCEL_OPTION :\r\n            return UIFacade.Choice.CANCEL;\r\n        case JOptionPane.CLOSED_OPTION :\r\n            return UIFacade.Choice.CANCEL;\r\n        default :\r\n            return UIFacade.Choice.CANCEL;\r\n    }\r\n}'),(824,'String title','java.lang.String',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1267,'net.sourceforge.ganttproject.UIFacadeImpl.showConfirmationDialog(java.lang.String,java.lang.String)',0,'public UIFacade.Choice showConfirmationDialog(String message, String title) {\r\n    /* MyDialog dialog = new MyDialog(GanttDialogInfo.WARNING, message);\n    dialog.show();\n    return dialog.result;\n     */\r\n    // int result = JOptionPane.showConfirmDialog(myMainFrame, message);\r\n    String yes = GanttLanguage.getInstance().getText(\"yes\");\r\n    String no = GanttLanguage.getInstance().getText(\"no\");\r\n    String cancel = GanttLanguage.getInstance().getText(\"cancel\");\r\n    int result = JOptionPane.showOptionDialog(myMainFrame, message, title, JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, new String[]{ yes, no, cancel }, yes);\r\n    switch (result) {\r\n        case JOptionPane.YES_OPTION :\r\n            return UIFacade.Choice.YES;\r\n        case JOptionPane.NO_OPTION :\r\n            return UIFacade.Choice.NO;\r\n        case JOptionPane.CANCEL_OPTION :\r\n            return UIFacade.Choice.CANCEL;\r\n        case JOptionPane.CLOSED_OPTION :\r\n            return UIFacade.Choice.CANCEL;\r\n        default :\r\n            return UIFacade.Choice.CANCEL;\r\n    }\r\n}'),(825,'Component invoker','java.awt.Component',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1272,'net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    JPopupMenu menu = new JPopupMenu();\r\n    for (int i = 0; i < (actions.length); i++) {\r\n        Action next = actions[i];\r\n        if (next == null) {\r\n            menu.addSeparator();\r\n        } else {\r\n            menu.add(next);\r\n        }\r\n    }\r\n    menu.applyComponentOrientation(UIFacadeImpl.getLanguage().getComponentOrientation());\r\n    menu.show(invoker, x, y);\r\n}'),(826,'Action[] actions','javax.swing.Action[]',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1272,'net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    JPopupMenu menu = new JPopupMenu();\r\n    for (int i = 0; i < (actions.length); i++) {\r\n        Action next = actions[i];\r\n        if (next == null) {\r\n            menu.addSeparator();\r\n        } else {\r\n            menu.add(next);\r\n        }\r\n    }\r\n    menu.applyComponentOrientation(UIFacadeImpl.getLanguage().getComponentOrientation());\r\n    menu.show(invoker, x, y);\r\n}'),(827,'int x','int',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1272,'net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    JPopupMenu menu = new JPopupMenu();\r\n    for (int i = 0; i < (actions.length); i++) {\r\n        Action next = actions[i];\r\n        if (next == null) {\r\n            menu.addSeparator();\r\n        } else {\r\n            menu.add(next);\r\n        }\r\n    }\r\n    menu.applyComponentOrientation(UIFacadeImpl.getLanguage().getComponentOrientation());\r\n    menu.show(invoker, x, y);\r\n}'),(828,'int y','int',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1272,'net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    JPopupMenu menu = new JPopupMenu();\r\n    for (int i = 0; i < (actions.length); i++) {\r\n        Action next = actions[i];\r\n        if (next == null) {\r\n            menu.addSeparator();\r\n        } else {\r\n            menu.add(next);\r\n        }\r\n    }\r\n    menu.applyComponentOrientation(UIFacadeImpl.getLanguage().getComponentOrientation());\r\n    menu.show(invoker, x, y);\r\n}'),(829,'Component content','java.awt.Component',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1268,'net.sourceforge.ganttproject.UIFacadeImpl.showDialog(java.awt.Component,javax.swing.Action[])',0,'public void showDialog(Component content, Action[] buttonActions) {\r\n    showDialog(content, buttonActions, \"\");\r\n}'),(830,'Action[] buttonActions','javax.swing.Action[]',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1268,'net.sourceforge.ganttproject.UIFacadeImpl.showDialog(java.awt.Component,javax.swing.Action[])',0,'public void showDialog(Component content, Action[] buttonActions) {\r\n    showDialog(content, buttonActions, \"\");\r\n}'),(831,'Component content','java.awt.Component',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1269,'net.sourceforge.ganttproject.UIFacadeImpl.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'public void showDialog(Component content, Action[] buttonActions, String title) {\r\n    JDialog result = new JDialog(myMainFrame, true);\r\n    result.setTitle(title);\r\n    final UIFacadeImpl.Commiter commiter = new UIFacadeImpl.Commiter();\r\n    Action okAction = null;\r\n    Action cancelAction = null;\r\n    Box buttonBox = Box.createHorizontalBox();\r\n    for (int i = 0; i < (buttonActions.length); i++) {\r\n        Action nextAction = buttonActions[i];\r\n        JButton nextButton = null;\r\n        if (nextAction instanceof OkAction) {\r\n            nextAction = createOkAction(nextAction, result, commiter);\r\n            okAction = nextAction;\r\n            nextButton = new JButton(nextAction);\r\n            result.getRootPane().setDefaultButton(nextButton);\r\n        }\r\n        if (nextAction instanceof CancelAction) {\r\n            nextAction = createCancelAction(nextAction, result, commiter);\r\n            cancelAction = nextAction;\r\n            result.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), nextAction.getValue(Action.NAME));\r\n            result.getRootPane().getActionMap().put(nextAction.getValue(Action.NAME), nextAction);\r\n        }\r\n        if (nextButton == null) {\r\n            nextButton = new JButton(nextAction);\r\n        }\r\n        buttonBox.add(nextButton);\r\n        if (i < ((buttonActions.length) - 1)) {\r\n            buttonBox.add(Box.createHorizontalStrut(5));\r\n        }\r\n    }\r\n    result.getContentPane().setLayout(new BorderLayout());\r\n    result.getContentPane().add(content, BorderLayout.CENTER);\r\n    // \r\n    JPanel buttonPanel = new JPanel(new BorderLayout());\r\n    buttonPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, 5));\r\n    buttonPanel.add(buttonBox, BorderLayout.EAST);\r\n    result.getContentPane().add(buttonPanel, BorderLayout.SOUTH);\r\n    // \r\n    result.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\r\n    final Action localOkAction = okAction;\r\n    final Action localCancelAction = cancelAction;\r\n    result.addWindowListener(new WindowAdapter() {\r\n        public void windowClosed(WindowEvent e) {\r\n            if ((localCancelAction != null) && (!(commiter.isCommited()))) {\r\n                localCancelAction.actionPerformed(null);\r\n            }\r\n        }\r\n    });\r\n    result.pack();\r\n    // setSize(300, 300);\r\n    DialogAligner.center(result, myMainFrame);\r\n    result.setVisible(true);\r\n}'),(832,'Action[] buttonActions','javax.swing.Action[]',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1269,'net.sourceforge.ganttproject.UIFacadeImpl.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'public void showDialog(Component content, Action[] buttonActions, String title) {\r\n    JDialog result = new JDialog(myMainFrame, true);\r\n    result.setTitle(title);\r\n    final UIFacadeImpl.Commiter commiter = new UIFacadeImpl.Commiter();\r\n    Action okAction = null;\r\n    Action cancelAction = null;\r\n    Box buttonBox = Box.createHorizontalBox();\r\n    for (int i = 0; i < (buttonActions.length); i++) {\r\n        Action nextAction = buttonActions[i];\r\n        JButton nextButton = null;\r\n        if (nextAction instanceof OkAction) {\r\n            nextAction = createOkAction(nextAction, result, commiter);\r\n            okAction = nextAction;\r\n            nextButton = new JButton(nextAction);\r\n            result.getRootPane().setDefaultButton(nextButton);\r\n        }\r\n        if (nextAction instanceof CancelAction) {\r\n            nextAction = createCancelAction(nextAction, result, commiter);\r\n            cancelAction = nextAction;\r\n            result.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), nextAction.getValue(Action.NAME));\r\n            result.getRootPane().getActionMap().put(nextAction.getValue(Action.NAME), nextAction);\r\n        }\r\n        if (nextButton == null) {\r\n            nextButton = new JButton(nextAction);\r\n        }\r\n        buttonBox.add(nextButton);\r\n        if (i < ((buttonActions.length) - 1)) {\r\n            buttonBox.add(Box.createHorizontalStrut(5));\r\n        }\r\n    }\r\n    result.getContentPane().setLayout(new BorderLayout());\r\n    result.getContentPane().add(content, BorderLayout.CENTER);\r\n    // \r\n    JPanel buttonPanel = new JPanel(new BorderLayout());\r\n    buttonPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, 5));\r\n    buttonPanel.add(buttonBox, BorderLayout.EAST);\r\n    result.getContentPane().add(buttonPanel, BorderLayout.SOUTH);\r\n    // \r\n    result.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\r\n    final Action localOkAction = okAction;\r\n    final Action localCancelAction = cancelAction;\r\n    result.addWindowListener(new WindowAdapter() {\r\n        public void windowClosed(WindowEvent e) {\r\n            if ((localCancelAction != null) && (!(commiter.isCommited()))) {\r\n                localCancelAction.actionPerformed(null);\r\n            }\r\n        }\r\n    });\r\n    result.pack();\r\n    // setSize(300, 300);\r\n    DialogAligner.center(result, myMainFrame);\r\n    result.setVisible(true);\r\n}'),(833,'String title','java.lang.String',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1269,'net.sourceforge.ganttproject.UIFacadeImpl.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'public void showDialog(Component content, Action[] buttonActions, String title) {\r\n    JDialog result = new JDialog(myMainFrame, true);\r\n    result.setTitle(title);\r\n    final UIFacadeImpl.Commiter commiter = new UIFacadeImpl.Commiter();\r\n    Action okAction = null;\r\n    Action cancelAction = null;\r\n    Box buttonBox = Box.createHorizontalBox();\r\n    for (int i = 0; i < (buttonActions.length); i++) {\r\n        Action nextAction = buttonActions[i];\r\n        JButton nextButton = null;\r\n        if (nextAction instanceof OkAction) {\r\n            nextAction = createOkAction(nextAction, result, commiter);\r\n            okAction = nextAction;\r\n            nextButton = new JButton(nextAction);\r\n            result.getRootPane().setDefaultButton(nextButton);\r\n        }\r\n        if (nextAction instanceof CancelAction) {\r\n            nextAction = createCancelAction(nextAction, result, commiter);\r\n            cancelAction = nextAction;\r\n            result.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), nextAction.getValue(Action.NAME));\r\n            result.getRootPane().getActionMap().put(nextAction.getValue(Action.NAME), nextAction);\r\n        }\r\n        if (nextButton == null) {\r\n            nextButton = new JButton(nextAction);\r\n        }\r\n        buttonBox.add(nextButton);\r\n        if (i < ((buttonActions.length) - 1)) {\r\n            buttonBox.add(Box.createHorizontalStrut(5));\r\n        }\r\n    }\r\n    result.getContentPane().setLayout(new BorderLayout());\r\n    result.getContentPane().add(content, BorderLayout.CENTER);\r\n    // \r\n    JPanel buttonPanel = new JPanel(new BorderLayout());\r\n    buttonPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, 5));\r\n    buttonPanel.add(buttonBox, BorderLayout.EAST);\r\n    result.getContentPane().add(buttonPanel, BorderLayout.SOUTH);\r\n    // \r\n    result.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\r\n    final Action localOkAction = okAction;\r\n    final Action localCancelAction = cancelAction;\r\n    result.addWindowListener(new WindowAdapter() {\r\n        public void windowClosed(WindowEvent e) {\r\n            if ((localCancelAction != null) && (!(commiter.isCommited()))) {\r\n                localCancelAction.actionPerformed(null);\r\n            }\r\n        }\r\n    });\r\n    result.pack();\r\n    // setSize(300, 300);\r\n    DialogAligner.center(result, myMainFrame);\r\n    result.setVisible(true);\r\n}'),(834,'String text','java.lang.String',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1264,'net.sourceforge.ganttproject.UIFacadeImpl.setStatusText(java.lang.String)',0,'public void setStatusText(String text) {\r\n    myStatusBar.setFirstText(text, 2000);\r\n}'),(835,'String errorMessage','java.lang.String',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1270,'net.sourceforge.ganttproject.UIFacadeImpl.showErrorDialog(java.lang.String)',0,'public void showErrorDialog(String errorMessage) {\r\n    if (myMainFrame.isVisible()) {\r\n        GanttDialogInfo gdi = new GanttDialogInfo(myMainFrame, GanttDialogInfo.ERROR, GanttDialogInfo.YES_OPTION, errorMessage, UIFacadeImpl.getLanguage().getText(\"error\"));\r\n        gdi.show();\r\n    } else {\r\n        System.err.println((\"[GanttProjectBase] showErrorDialog:\n \" + errorMessage));\r\n    }\r\n}'),(836,'Throwable e','java.lang.Throwable',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1271,'net.sourceforge.ganttproject.UIFacadeImpl.showErrorDialog(java.lang.Throwable)',0,'public void showErrorDialog(Throwable e) {\r\n    showErrorDialog(UIFacadeImpl.getExceptionReport(e));\r\n    GPLogger.log(e);\r\n}'),(837,'Throwable e','java.lang.Throwable',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1259,'net.sourceforge.ganttproject.UIFacadeImpl.logErrorMessage(java.lang.Throwable)',0,'public void logErrorMessage(Throwable e) {\r\n    myErrorNotifier.add(e);\r\n    myStatusBar.setErrorNotifier(myErrorNotifier);\r\n}'),(838,'int dialogType','int',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1238,'net.sourceforge.ganttproject.UIFacadeImpl.createDialogContentComponent(int,java.lang.String)',0,'private Component createDialogContentComponent(int dialogType, String message) {\r\n    JLabel label;\r\n    switch (dialogType) {\r\n        case GanttDialogInfo.ERROR :\r\n            label = new JLabel(new ImageIcon(getClass().getResource(\"/icons/error.png\")));\r\n            break;\r\n        case GanttDialogInfo.WARNING :\r\n            label = new JLabel(new ImageIcon(getClass().getResource(\"/icons/warning.png\")));\r\n            break;\r\n        case GanttDialogInfo.INFO :\r\n            label = new JLabel(new ImageIcon(getClass().getResource(\"/icons/info.png\")));\r\n            break;\r\n        case GanttDialogInfo.QUESTION :\r\n            label = new JLabel(new ImageIcon(getClass().getResource(\"/icons/question.png\")));\r\n            break;\r\n        default :\r\n            throw new IllegalStateException(\"We should not be here\");\r\n    }\r\n    JPanel imagePanel = new JPanel(new BorderLayout());\r\n    imagePanel.add(label, BorderLayout.NORTH);\r\n    // \r\n    JTextArea textArea = new JTextArea(message);\r\n    textArea.setEditable(false);\r\n    textArea.setBackground(new JLabel().getBackground());\r\n    JPanel result = new JPanel(new BorderLayout());\r\n    result.add(imagePanel, BorderLayout.WEST);\r\n    result.add(textArea, BorderLayout.CENTER);\r\n    return result;\r\n}'),(839,'String message','java.lang.String',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1238,'net.sourceforge.ganttproject.UIFacadeImpl.createDialogContentComponent(int,java.lang.String)',0,'private Component createDialogContentComponent(int dialogType, String message) {\r\n    JLabel label;\r\n    switch (dialogType) {\r\n        case GanttDialogInfo.ERROR :\r\n            label = new JLabel(new ImageIcon(getClass().getResource(\"/icons/error.png\")));\r\n            break;\r\n        case GanttDialogInfo.WARNING :\r\n            label = new JLabel(new ImageIcon(getClass().getResource(\"/icons/warning.png\")));\r\n            break;\r\n        case GanttDialogInfo.INFO :\r\n            label = new JLabel(new ImageIcon(getClass().getResource(\"/icons/info.png\")));\r\n            break;\r\n        case GanttDialogInfo.QUESTION :\r\n            label = new JLabel(new ImageIcon(getClass().getResource(\"/icons/question.png\")));\r\n            break;\r\n        default :\r\n            throw new IllegalStateException(\"We should not be here\");\r\n    }\r\n    JPanel imagePanel = new JPanel(new BorderLayout());\r\n    imagePanel.add(label, BorderLayout.NORTH);\r\n    // \r\n    JTextArea textArea = new JTextArea(message);\r\n    textArea.setEditable(false);\r\n    textArea.setBackground(new JLabel().getBackground());\r\n    JPanel result = new JPanel(new BorderLayout());\r\n    result.add(imagePanel, BorderLayout.WEST);\r\n    result.add(textArea, BorderLayout.CENTER);\r\n    return result;\r\n}'),(840,'int viewIndex','int',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1265,'net.sourceforge.ganttproject.UIFacadeImpl.setViewIndex(int)',0,'public void setViewIndex(int viewIndex) {\r\n    myFallbackDelegate.setViewIndex(viewIndex);\r\n}'),(841,'int location','int',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1262,'net.sourceforge.ganttproject.UIFacadeImpl.setGanttDividerLocation(int)',0,'public void setGanttDividerLocation(int location) {\r\n    myFallbackDelegate.setGanttDividerLocation(location);\r\n}'),(842,'int location','int',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1263,'net.sourceforge.ganttproject.UIFacadeImpl.setResourceDividerLocation(int)',0,'public void setResourceDividerLocation(int location) {\r\n    myFallbackDelegate.setResourceDividerLocation(location);\r\n}'),(843,'ActionEvent e','java.awt.event.ActionEvent',0,102,'net.sourceforge.ganttproject.UIFacadeImpl$ProxyOkAction',1280,'net.sourceforge.ganttproject.UIFacadeImpl$ProxyOkAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    myRealAction.removePropertyChangeListener(this);\r\n    myRealAction.actionPerformed(e);\r\n    myCommiter.commit();\r\n    if (myDialog.isVisible()) {\r\n        myDialog.setVisible(false);\r\n        myDialog.dispose();\r\n    }\r\n}'),(844,'PropertyChangeEvent evt','java.beans.PropertyChangeEvent',0,102,'net.sourceforge.ganttproject.UIFacadeImpl$ProxyOkAction',1281,'net.sourceforge.ganttproject.UIFacadeImpl$ProxyOkAction.propertyChange(java.beans.PropertyChangeEvent)',0,'public void propertyChange(PropertyChangeEvent evt) {\r\n    setEnabled(myRealAction.isEnabled());\r\n}'),(845,'final Action realAction','javax.swing.Action',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1241,'net.sourceforge.ganttproject.UIFacadeImpl.createOkAction(javax.swing.Action,javax.swing.JDialog,net.sourceforge.ganttproject.UIFacadeImpl$Commiter)',0,'private Action createOkAction(final Action realAction, final JDialog dialog, final UIFacadeImpl.Commiter commiter) {\r\n    return new UIFacadeImpl.ProxyOkAction(realAction, dialog, commiter);\r\n}'),(846,'final JDialog dialog','javax.swing.JDialog',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1241,'net.sourceforge.ganttproject.UIFacadeImpl.createOkAction(javax.swing.Action,javax.swing.JDialog,net.sourceforge.ganttproject.UIFacadeImpl$Commiter)',0,'private Action createOkAction(final Action realAction, final JDialog dialog, final UIFacadeImpl.Commiter commiter) {\r\n    return new UIFacadeImpl.ProxyOkAction(realAction, dialog, commiter);\r\n}'),(847,'final UIFacadeImpl.Commiter commiter','net.sourceforge.ganttproject.UIFacadeImpl$Commiter',100,103,'net.sourceforge.ganttproject.UIFacadeImpl',1241,'net.sourceforge.ganttproject.UIFacadeImpl.createOkAction(javax.swing.Action,javax.swing.JDialog,net.sourceforge.ganttproject.UIFacadeImpl$Commiter)',0,'private Action createOkAction(final Action realAction, final JDialog dialog, final UIFacadeImpl.Commiter commiter) {\r\n    return new UIFacadeImpl.ProxyOkAction(realAction, dialog, commiter);\r\n}'),(848,'final Action realAction','javax.swing.Action',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1237,'net.sourceforge.ganttproject.UIFacadeImpl.createCancelAction(javax.swing.Action,javax.swing.JDialog,net.sourceforge.ganttproject.UIFacadeImpl$Commiter)',0,'private Action createCancelAction(final Action realAction, final JDialog result, final UIFacadeImpl.Commiter commiter) {\r\n    return new CancelAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            realAction.actionPerformed(e);\r\n            commiter.commit();\r\n            result.setVisible(false);\r\n            result.dispose();\r\n        }\r\n    };\r\n}'),(849,'final JDialog result','javax.swing.JDialog',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1237,'net.sourceforge.ganttproject.UIFacadeImpl.createCancelAction(javax.swing.Action,javax.swing.JDialog,net.sourceforge.ganttproject.UIFacadeImpl$Commiter)',0,'private Action createCancelAction(final Action realAction, final JDialog result, final UIFacadeImpl.Commiter commiter) {\r\n    return new CancelAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            realAction.actionPerformed(e);\r\n            commiter.commit();\r\n            result.setVisible(false);\r\n            result.dispose();\r\n        }\r\n    };\r\n}'),(850,'final UIFacadeImpl.Commiter commiter','net.sourceforge.ganttproject.UIFacadeImpl$Commiter',100,103,'net.sourceforge.ganttproject.UIFacadeImpl',1237,'net.sourceforge.ganttproject.UIFacadeImpl.createCancelAction(javax.swing.Action,javax.swing.JDialog,net.sourceforge.ganttproject.UIFacadeImpl$Commiter)',0,'private Action createCancelAction(final Action realAction, final JDialog result, final UIFacadeImpl.Commiter commiter) {\r\n    return new CancelAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            realAction.actionPerformed(e);\r\n            commiter.commit();\r\n            result.setVisible(false);\r\n            result.dispose();\r\n        }\r\n    };\r\n}'),(851,'Throwable e','java.lang.Throwable',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1245,'net.sourceforge.ganttproject.UIFacadeImpl.getExceptionReport(java.lang.Throwable)',0,'static String getExceptionReport(Throwable e) {\r\n    StringBuffer result = new StringBuffer();\r\n    result.append(((e.getMessage()) + \"\n\n\"));\r\n    StringWriter stringWriter = new StringWriter();\r\n    PrintWriter writer = new PrintWriter(stringWriter);\r\n    e.printStackTrace(writer);\r\n    writer.close();\r\n    result.append(stringWriter.getBuffer().toString());\r\n    return result.toString();\r\n}'),(852,'String title','java.lang.String',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1266,'net.sourceforge.ganttproject.UIFacadeImpl.setWorkbenchTitle(java.lang.String)',0,'public void setWorkbenchTitle(String title) {\r\n    myMainFrame.setTitle(title);\r\n}'),(853,'Job job','org.eclipse.core.runtime.jobs.Job',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1239,'net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(org.eclipse.core.runtime.jobs.Job)',0,'public IProgressMonitor createMonitor(Job job) {\r\n    return myStatusBar.createProgressMonitor();\r\n}'),(854,'Job job','org.eclipse.core.runtime.jobs.Job',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1240,'net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(org.eclipse.core.runtime.jobs.Job,org.eclipse.core.runtime.IProgressMonitor,int)',0,'public IProgressMonitor createMonitor(Job job, IProgressMonitor group, int ticks) {\r\n    return group;\r\n}'),(855,'IProgressMonitor group','org.eclipse.core.runtime.IProgressMonitor',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1240,'net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(org.eclipse.core.runtime.jobs.Job,org.eclipse.core.runtime.IProgressMonitor,int)',0,'public IProgressMonitor createMonitor(Job job, IProgressMonitor group, int ticks) {\r\n    return group;\r\n}'),(856,'int ticks','int',0,103,'net.sourceforge.ganttproject.UIFacadeImpl',1240,'net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(org.eclipse.core.runtime.jobs.Job,org.eclipse.core.runtime.IProgressMonitor,int)',0,'public IProgressMonitor createMonitor(Job job, IProgressMonitor group, int ticks) {\r\n    return group;\r\n}'),(857,'GanttTree2 ganttTree','net.sourceforge.ganttproject.GanttTree2',73,104,'net.sourceforge.ganttproject.action.AddBlankLineAction',1282,'net.sourceforge.ganttproject.action.AddBlankLineAction.-init-(net.sourceforge.ganttproject.GanttTree2)',0,'public AddBlankLineAction(GanttTree2 ganttTree) {\r\n    myGanttTree = ganttTree;\r\n}'),(858,'ActionEvent e','java.awt.event.ActionEvent',0,104,'net.sourceforge.ganttproject.action.AddBlankLineAction',1284,'net.sourceforge.ganttproject.action.AddBlankLineAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    final DefaultMutableTreeNode selectedNode = myGanttTree.getSelectedNode();\r\n    Mediator.getUndoManager().undoableEdit(\"add blank line\", new Runnable() {\r\n        public void run() {\r\n            myGanttTree.addBlankLine(selectedNode, (selectedNode == null ? -1 : selectedNode.getParent().getIndex(selectedNode)));\r\n        }\r\n    });\r\n}'),(859,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,105,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction',1287,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttOptions,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.GanttProject)',0,'public CalculateCriticalPathAction(TaskManager taskManager, GanttTree2 tree, GanttOptions options, UIConfiguration uiConfiguration, GanttProject appli) {\r\n    super(null, options.getIconSize());\r\n    this.taskManager = taskManager;\r\n    this.tree = tree;\r\n    myUIConfiguration = uiConfiguration;\r\n    myOptions = options;\r\n    this.appli = appli;\r\n}'),(860,'GanttTree2 tree','net.sourceforge.ganttproject.GanttTree2',73,105,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction',1287,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttOptions,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.GanttProject)',0,'public CalculateCriticalPathAction(TaskManager taskManager, GanttTree2 tree, GanttOptions options, UIConfiguration uiConfiguration, GanttProject appli) {\r\n    super(null, options.getIconSize());\r\n    this.taskManager = taskManager;\r\n    this.tree = tree;\r\n    myUIConfiguration = uiConfiguration;\r\n    myOptions = options;\r\n    this.appli = appli;\r\n}'),(861,'GanttOptions options','net.sourceforge.ganttproject.GanttOptions',48,105,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction',1287,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttOptions,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.GanttProject)',0,'public CalculateCriticalPathAction(TaskManager taskManager, GanttTree2 tree, GanttOptions options, UIConfiguration uiConfiguration, GanttProject appli) {\r\n    super(null, options.getIconSize());\r\n    this.taskManager = taskManager;\r\n    this.tree = tree;\r\n    myUIConfiguration = uiConfiguration;\r\n    myOptions = options;\r\n    this.appli = appli;\r\n}'),(862,'UIConfiguration uiConfiguration','net.sourceforge.ganttproject.gui.UIConfiguration',335,105,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction',1287,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttOptions,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.GanttProject)',0,'public CalculateCriticalPathAction(TaskManager taskManager, GanttTree2 tree, GanttOptions options, UIConfiguration uiConfiguration, GanttProject appli) {\r\n    super(null, options.getIconSize());\r\n    this.taskManager = taskManager;\r\n    this.tree = tree;\r\n    myUIConfiguration = uiConfiguration;\r\n    myOptions = options;\r\n    this.appli = appli;\r\n}'),(863,'GanttProject appli','net.sourceforge.ganttproject.GanttProject',53,105,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction',1287,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttOptions,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.GanttProject)',0,'public CalculateCriticalPathAction(TaskManager taskManager, GanttTree2 tree, GanttOptions options, UIConfiguration uiConfiguration, GanttProject appli) {\r\n    super(null, options.getIconSize());\r\n    this.taskManager = taskManager;\r\n    this.tree = tree;\r\n    myUIConfiguration = uiConfiguration;\r\n    myOptions = options;\r\n    this.appli = appli;\r\n}'),(864,'ActionEvent e','java.awt.event.ActionEvent',0,105,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction',1288,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    TaskNode root = ((TaskNode) (tree.getRoot()));\r\n    setOn((!(isOn())));\r\n    putValue(Action.SMALL_ICON, createIcon(myOptions.getIconSize()));\r\n    if (isOn()) {\r\n        taskManager.processCriticalPath(root);\r\n        ArrayList projectTasks = ((GanttTree2) (tree)).getProjectTasks();\r\n        if ((projectTasks.size()) != 0)\r\n            for (int i = 0; i < (projectTasks.size()); i++)\r\n                taskManager.processCriticalPath(((TaskNode) (projectTasks.get(i))));\r\n\r\n\r\n    }\r\n    Mediator.getGanttProjectSingleton().repaint();\r\n    appli.getUIFacade().setStatusText(GanttLanguage.getInstance().getText(\"criticalPath\"));\r\n}'),(865,'boolean on','boolean',0,105,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction',1293,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction.setOn(boolean)',0,'private void setOn(boolean on) {\r\n    myUIConfiguration.setCriticalPathOn(on);\r\n}'),(866,'boolean isNull','boolean',0,105,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction',1291,'net.sourceforge.ganttproject.action.CalculateCriticalPathAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n    setIconVisible(isNull);\r\n}'),(867,'ResourceManager hrManager','net.sourceforge.ganttproject.resource.ResourceManager',509,107,'net.sourceforge.ganttproject.action.DeleteAssignmentAction',1295,'net.sourceforge.ganttproject.action.DeleteAssignmentAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.AssignmentContext,net.sourceforge.ganttproject.GanttProject)',0,'public DeleteAssignmentAction(ResourceManager hrManager, AssignmentContext context, GanttProject projectFrame) {\r\n    myProjectFrame = projectFrame;\r\n    // this.putValue(AbstractAction.NAME, GanttProject\r\n    // .correctLabel(getLanguage().getText(\"deleteAssignment\")));\r\n    myContext = context;\r\n}'),(868,'AssignmentContext context','net.sourceforge.ganttproject.resource.AssignmentContext',496,107,'net.sourceforge.ganttproject.action.DeleteAssignmentAction',1295,'net.sourceforge.ganttproject.action.DeleteAssignmentAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.AssignmentContext,net.sourceforge.ganttproject.GanttProject)',0,'public DeleteAssignmentAction(ResourceManager hrManager, AssignmentContext context, GanttProject projectFrame) {\r\n    myProjectFrame = projectFrame;\r\n    // this.putValue(AbstractAction.NAME, GanttProject\r\n    // .correctLabel(getLanguage().getText(\"deleteAssignment\")));\r\n    myContext = context;\r\n}'),(869,'GanttProject projectFrame','net.sourceforge.ganttproject.GanttProject',53,107,'net.sourceforge.ganttproject.action.DeleteAssignmentAction',1295,'net.sourceforge.ganttproject.action.DeleteAssignmentAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.AssignmentContext,net.sourceforge.ganttproject.GanttProject)',0,'public DeleteAssignmentAction(ResourceManager hrManager, AssignmentContext context, GanttProject projectFrame) {\r\n    myProjectFrame = projectFrame;\r\n    // this.putValue(AbstractAction.NAME, GanttProject\r\n    // .correctLabel(getLanguage().getText(\"deleteAssignment\")));\r\n    myContext = context;\r\n}'),(870,'ActionEvent e','java.awt.event.ActionEvent',0,107,'net.sourceforge.ganttproject.action.DeleteAssignmentAction',1297,'net.sourceforge.ganttproject.action.DeleteAssignmentAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    myProjectFrame.getTabs().setSelectedIndex(UIFacade.RESOURCES_INDEX);\r\n    final ResourceAssignment[] context = myContext.getResourceAssignments();\r\n    if ((context != null) && ((context.length) > 0)) {\r\n        UIFacade.Choice choice = myProjectFrame.getUIFacade().showConfirmationDialog(((((getI18n(\"msg23\")) + \" \") + (DeleteAssignmentAction.getDisplayName(context))) + \"?\"), getI18n(\"warning\"));\r\n        if (choice == (UIFacade.Choice.YES)) {\r\n            myProjectFrame.getUIFacade().getUndoManager().undoableEdit(\"Resource removed\", new Runnable() {\r\n                public void run() {\r\n                    deleteAssignments(context);\r\n                    myProjectFrame.setAskForSave(true);\r\n                    myProjectFrame.refreshProjectInfos();\r\n                    myProjectFrame.repaint2();\r\n                }\r\n            });\r\n        }\r\n    } else {\r\n        myProjectFrame.deleteResources();\r\n    }\r\n}'),(871,'ResourceAssignment[] context','net.sourceforge.ganttproject.task.ResourceAssignment[]',0,107,'net.sourceforge.ganttproject.action.DeleteAssignmentAction',1298,'net.sourceforge.ganttproject.action.DeleteAssignmentAction.deleteAssignments(net.sourceforge.ganttproject.task.ResourceAssignment[])',0,'private void deleteAssignments(ResourceAssignment[] context) {\r\n    for (int i = 0; i < (context.length); i++) {\r\n        ResourceAssignment ra = context[i];\r\n        ra.delete();\r\n        ra.getTask().getAssignmentCollection().deleteAssignment(ra.getResource());\r\n    }\r\n}'),(872,'Object[] objs','java.lang.Object[]',0,107,'net.sourceforge.ganttproject.action.DeleteAssignmentAction',1299,'net.sourceforge.ganttproject.action.DeleteAssignmentAction.getDisplayName(java.lang.Object[])',0,'private static String getDisplayName(Object[] objs) {\r\n    if ((objs.length) == 1) {\r\n        return objs[0].toString();\r\n    }\r\n    StringBuffer result = new StringBuffer();\r\n    for (int i = 0; i < (objs.length); i++) {\r\n        result.append(objs[i].toString());\r\n        if (i < ((objs.length) - 1)) {\r\n            result.append(\", \");\r\n        }\r\n    }\r\n    return result.toString();\r\n}'),(873,'ResourceManager hrManager','net.sourceforge.ganttproject.resource.ResourceManager',509,108,'net.sourceforge.ganttproject.action.DeleteHumanAction',1302,'net.sourceforge.ganttproject.action.DeleteHumanAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.ResourceContext,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public DeleteHumanAction(ResourceManager hrManager, ResourceContext context, GanttProject projectFrame, UIFacade uiFacade) {\r\n    super(hrManager);\r\n    myUIFacade = uiFacade;\r\n    myProjectFrame = projectFrame;\r\n    this.putValue(AbstractAction.NAME, GanttProject.correctLabel(getLanguage().getText(\"deleteHuman\")));\r\n    this.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_J, MENU_MASK));\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(DeleteHumanAction.ICON_URL);\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n    myContext = context;\r\n}'),(874,'ResourceContext context','net.sourceforge.ganttproject.resource.ResourceContext',507,108,'net.sourceforge.ganttproject.action.DeleteHumanAction',1302,'net.sourceforge.ganttproject.action.DeleteHumanAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.ResourceContext,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public DeleteHumanAction(ResourceManager hrManager, ResourceContext context, GanttProject projectFrame, UIFacade uiFacade) {\r\n    super(hrManager);\r\n    myUIFacade = uiFacade;\r\n    myProjectFrame = projectFrame;\r\n    this.putValue(AbstractAction.NAME, GanttProject.correctLabel(getLanguage().getText(\"deleteHuman\")));\r\n    this.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_J, MENU_MASK));\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(DeleteHumanAction.ICON_URL);\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n    myContext = context;\r\n}'),(875,'GanttProject projectFrame','net.sourceforge.ganttproject.GanttProject',53,108,'net.sourceforge.ganttproject.action.DeleteHumanAction',1302,'net.sourceforge.ganttproject.action.DeleteHumanAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.ResourceContext,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public DeleteHumanAction(ResourceManager hrManager, ResourceContext context, GanttProject projectFrame, UIFacade uiFacade) {\r\n    super(hrManager);\r\n    myUIFacade = uiFacade;\r\n    myProjectFrame = projectFrame;\r\n    this.putValue(AbstractAction.NAME, GanttProject.correctLabel(getLanguage().getText(\"deleteHuman\")));\r\n    this.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_J, MENU_MASK));\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(DeleteHumanAction.ICON_URL);\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n    myContext = context;\r\n}'),(876,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,108,'net.sourceforge.ganttproject.action.DeleteHumanAction',1302,'net.sourceforge.ganttproject.action.DeleteHumanAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.ResourceContext,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public DeleteHumanAction(ResourceManager hrManager, ResourceContext context, GanttProject projectFrame, UIFacade uiFacade) {\r\n    super(hrManager);\r\n    myUIFacade = uiFacade;\r\n    myProjectFrame = projectFrame;\r\n    this.putValue(AbstractAction.NAME, GanttProject.correctLabel(getLanguage().getText(\"deleteHuman\")));\r\n    this.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_J, MENU_MASK));\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(DeleteHumanAction.ICON_URL);\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n    myContext = context;\r\n}'),(877,'ActionEvent event','java.awt.event.ActionEvent',0,108,'net.sourceforge.ganttproject.action.DeleteHumanAction',1304,'net.sourceforge.ganttproject.action.DeleteHumanAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent event) {\r\n    final ProjectResource[] context = getContext().getResources();\r\n    if ((context.length) > 0) {\r\n        final String message = (((getLanguage().getText(\"msg6\")) + \" \") + (getDisplayName(context))) + \"?\";\r\n        final String title = getLanguage().getText(\"question\");\r\n        UIFacade.Choice choice = myUIFacade.showConfirmationDialog(message, title);\r\n        if (choice == (UIFacade.Choice.YES)) {\r\n            myUIFacade.getUndoManager().undoableEdit(\"Resource removed\", new Runnable() {\r\n                public void run() {\r\n                    deleteResources(context);\r\n                    getProjectFrame().repaint2();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}'),(878,'ProjectResource[] context','net.sourceforge.ganttproject.resource.ProjectResource[]',0,108,'net.sourceforge.ganttproject.action.DeleteHumanAction',1305,'net.sourceforge.ganttproject.action.DeleteHumanAction.deleteResources(net.sourceforge.ganttproject.resource.ProjectResource[])',0,'private void deleteResources(ProjectResource[] context) {\r\n    for (int i = 0; i < (context.length); i++) {\r\n        context[i].delete();\r\n    }\r\n}'),(879,'ProjectResource[] resources','net.sourceforge.ganttproject.resource.ProjectResource[]',0,108,'net.sourceforge.ganttproject.action.DeleteHumanAction',1307,'net.sourceforge.ganttproject.action.DeleteHumanAction.getDisplayName(net.sourceforge.ganttproject.resource.ProjectResource[])',0,'private String getDisplayName(ProjectResource[] resources) {\r\n    if ((resources.length) == 1) {\r\n        return resources[0].toString();\r\n    }\r\n    StringBuffer result = new StringBuffer();\r\n    for (int i = 0; i < (resources.length); i++) {\r\n        result.append(resources[i].toString());\r\n        if (i < ((resources.length) - 1)) {\r\n            result.append(\", \");\r\n        }\r\n    }\r\n    return result.toString();\r\n}'),(880,'String name','java.lang.String',0,109,'net.sourceforge.ganttproject.action.GPAction',1310,'net.sourceforge.ganttproject.action.GPAction.-init-(java.lang.String,java.lang.String)',0,'protected GPAction(String name, String iconSize) {\r\n    super(name);\r\n    setIconSize(iconSize);\r\n    updateName();\r\n    updateTooltip();\r\n    GanttLanguage.getInstance().addListener(this);\r\n}'),(881,'String iconSize','java.lang.String',0,109,'net.sourceforge.ganttproject.action.GPAction',1310,'net.sourceforge.ganttproject.action.GPAction.-init-(java.lang.String,java.lang.String)',0,'protected GPAction(String name, String iconSize) {\r\n    super(name);\r\n    setIconSize(iconSize);\r\n    updateName();\r\n    updateTooltip();\r\n    GanttLanguage.getInstance().addListener(this);\r\n}'),(882,'String name','java.lang.String',0,109,'net.sourceforge.ganttproject.action.GPAction',1311,'net.sourceforge.ganttproject.action.GPAction.-init-(java.lang.String)',0,'public GPAction(String name) {\r\n    this(name, \"16\");\r\n}'),(883,'String iconSize','java.lang.String',0,109,'net.sourceforge.ganttproject.action.GPAction',1322,'net.sourceforge.ganttproject.action.GPAction.setIconSize(java.lang.String)',0,'public void setIconSize(String iconSize) {\r\n    Icon icon = createIcon(iconSize);\r\n    if (icon != null) {\r\n        putValue(Action.SMALL_ICON, icon);\r\n        myIcon = icon;\r\n    }\r\n}'),(884,'String iconSize','java.lang.String',0,109,'net.sourceforge.ganttproject.action.GPAction',1312,'net.sourceforge.ganttproject.action.GPAction.createIcon(java.lang.String)',0,'protected Icon createIcon(String iconSize) {\r\n    if ((iconSize == null) || (false == (iconVisible))) {\r\n        return null;\r\n    }\r\n    URL resource = getClass().getResource((((((getIconFileDirectory()) + \"/\") + (getIconFilePrefix())) + iconSize) + \".gif\"));\r\n    return resource == null ? null : new ImageIcon(resource);\r\n}'),(885,'String key','java.lang.String',0,109,'net.sourceforge.ganttproject.action.GPAction',1313,'net.sourceforge.ganttproject.action.GPAction.getI18n(java.lang.String)',0,'protected String getI18n(String key) {\r\n    return GanttLanguage.getInstance().getText(key);\r\n}'),(886,'boolean isVisible','boolean',0,109,'net.sourceforge.ganttproject.action.GPAction',1323,'net.sourceforge.ganttproject.action.GPAction.setIconVisible(boolean)',0,'public void setIconVisible(boolean isVisible) {\r\n    iconVisible = isVisible;\r\n    putValue(Action.SMALL_ICON, (iconVisible ? myIcon : null));\r\n}'),(887,'boolean isNull','boolean',0,109,'net.sourceforge.ganttproject.action.GPAction',1320,'net.sourceforge.ganttproject.action.GPAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n    setIconVisible(isNull);\r\n}'),(888,'GanttLanguage.Event event','net.sourceforge.ganttproject.language.GanttLanguage$Event',459,109,'net.sourceforge.ganttproject.action.GPAction',1321,'net.sourceforge.ganttproject.action.GPAction.languageChanged(net.sourceforge.ganttproject.language.GanttLanguage$Event)',0,'public void languageChanged(GanttLanguage.Event event) {\r\n    updateName();\r\n    updateTooltip();\r\n}'),(889,'String keystrokeID','java.lang.String',0,109,'net.sourceforge.ganttproject.action.GPAction',1317,'net.sourceforge.ganttproject.action.GPAction.getKeyStroke(java.lang.String)',0,'public static KeyStroke getKeyStroke(String keystrokeID) {\r\n    if ((GPAction.ourProperties) == null) {\r\n        GPAction.ourProperties = new Properties();\r\n        URL url = GPAction.class.getResource(\"/keyboard.properties\");\r\n        if (url == null) {\r\n            return null;\r\n        }\r\n        URL resolvedUrl;\r\n        try {\r\n            resolvedUrl = Platform.resolve(url);\r\n            GPAction.ourProperties.load(resolvedUrl.openStream());\r\n        } catch (IOException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    String stringKeyStroke = ((String) (GPAction.ourProperties.get(keystrokeID)));\r\n    return KeyStroke.getKeyStroke(stringKeyStroke);\r\n}'),(890,'ResourceManager resourceManager','net.sourceforge.ganttproject.resource.ResourceManager',509,110,'net.sourceforge.ganttproject.action.ImportResources',1326,'net.sourceforge.ganttproject.action.ImportResources.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.GanttProject)',0,'public ImportResources(ResourceManager resourceManager, TaskManager taskManager, RoleManager roleManager, GanttProject project) {\r\n    myTaskManager = taskManager;\r\n    myRoleManager = roleManager;\r\n    GanttLanguage language = GanttLanguage.getInstance();\r\n    this.putValue(AbstractAction.NAME, language.getText(\"importResources\"));\r\n    myResourceManager = resourceManager;\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(\"icons/impres_16.gif\");\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n    myproject = project;\r\n}'),(891,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,110,'net.sourceforge.ganttproject.action.ImportResources',1326,'net.sourceforge.ganttproject.action.ImportResources.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.GanttProject)',0,'public ImportResources(ResourceManager resourceManager, TaskManager taskManager, RoleManager roleManager, GanttProject project) {\r\n    myTaskManager = taskManager;\r\n    myRoleManager = roleManager;\r\n    GanttLanguage language = GanttLanguage.getInstance();\r\n    this.putValue(AbstractAction.NAME, language.getText(\"importResources\"));\r\n    myResourceManager = resourceManager;\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(\"icons/impres_16.gif\");\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n    myproject = project;\r\n}'),(892,'RoleManager roleManager','net.sourceforge.ganttproject.roles.RoleManager',517,110,'net.sourceforge.ganttproject.action.ImportResources',1326,'net.sourceforge.ganttproject.action.ImportResources.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.GanttProject)',0,'public ImportResources(ResourceManager resourceManager, TaskManager taskManager, RoleManager roleManager, GanttProject project) {\r\n    myTaskManager = taskManager;\r\n    myRoleManager = roleManager;\r\n    GanttLanguage language = GanttLanguage.getInstance();\r\n    this.putValue(AbstractAction.NAME, language.getText(\"importResources\"));\r\n    myResourceManager = resourceManager;\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(\"icons/impres_16.gif\");\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n    myproject = project;\r\n}'),(893,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,110,'net.sourceforge.ganttproject.action.ImportResources',1326,'net.sourceforge.ganttproject.action.ImportResources.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.GanttProject)',0,'public ImportResources(ResourceManager resourceManager, TaskManager taskManager, RoleManager roleManager, GanttProject project) {\r\n    myTaskManager = taskManager;\r\n    myRoleManager = roleManager;\r\n    GanttLanguage language = GanttLanguage.getInstance();\r\n    this.putValue(AbstractAction.NAME, language.getText(\"importResources\"));\r\n    myResourceManager = resourceManager;\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(\"icons/impres_16.gif\");\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n    myproject = project;\r\n}'),(894,'ActionEvent event','java.awt.event.ActionEvent',0,110,'net.sourceforge.ganttproject.action.ImportResources',1328,'net.sourceforge.ganttproject.action.ImportResources.actionPerformed(java.awt.event.ActionEvent)',0,'/**\r\n *\r\n *\r\n * @see java.awt.event.ActionListener#actionPerformed(ActionEvent)\r\n */\r\npublic void actionPerformed(ActionEvent event) {\r\n    final File file = getResourcesFile();\r\n    if (file != null) {\r\n        Mediator.getUndoManager().undoableEdit(\"Import Resources\", new Runnable() {\r\n            public void run() {\r\n                GanttXMLOpen loader = new GanttXMLOpen(myTaskManager);\r\n                ResourceTagHandler tagHandler = new ResourceTagHandler(myResourceManager, myRoleManager, myproject.getResourceCustomPropertyManager());\r\n                DependencyTagHandler dependencyHandler = new DependencyTagHandler(loader.getContext(), myTaskManager, myproject.getUIFacade());\r\n                RoleTagHandler rolesHandler = new RoleTagHandler(net.sourceforge.ganttproject.roles.RoleManager.Access.getInstance());\r\n                loader.addTagHandler(tagHandler);\r\n                loader.addTagHandler(dependencyHandler);\r\n                loader.addTagHandler(rolesHandler);\r\n                loader.load(file);\r\n                // myproject.setQuickSave (true);\r\n                // myproject.quickSave (\"Import Resources\");\r\n            }\r\n        });\r\n    }\r\n}'),(895,'NewArtefactAction.ActiveActionProvider provider','net.sourceforge.ganttproject.action.NewArtefactAction$ActiveActionProvider',111,112,'net.sourceforge.ganttproject.action.NewArtefactAction',1330,'net.sourceforge.ganttproject.action.NewArtefactAction.-init-(net.sourceforge.ganttproject.action.NewArtefactAction$ActiveActionProvider,java.lang.String)',0,'public NewArtefactAction(NewArtefactAction.ActiveActionProvider provider, String iconSize) {\r\n    super(\"\", iconSize);\r\n    myProvider = provider;\r\n}'),(896,'String iconSize','java.lang.String',0,112,'net.sourceforge.ganttproject.action.NewArtefactAction',1330,'net.sourceforge.ganttproject.action.NewArtefactAction.-init-(net.sourceforge.ganttproject.action.NewArtefactAction$ActiveActionProvider,java.lang.String)',0,'public NewArtefactAction(NewArtefactAction.ActiveActionProvider provider, String iconSize) {\r\n    super(\"\", iconSize);\r\n    myProvider = provider;\r\n}'),(897,'ActionEvent e','java.awt.event.ActionEvent',0,112,'net.sourceforge.ganttproject.action.NewArtefactAction',1331,'net.sourceforge.ganttproject.action.NewArtefactAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    AbstractAction activeAction = myProvider.getActiveAction();\r\n    activeAction.actionPerformed(e);\r\n}'),(898,'boolean isNull','boolean',0,112,'net.sourceforge.ganttproject.action.NewArtefactAction',1333,'net.sourceforge.ganttproject.action.NewArtefactAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n    setIconVisible(isNull);\r\n}'),(899,'ResourceManager hrManager','net.sourceforge.ganttproject.resource.ResourceManager',509,113,'net.sourceforge.ganttproject.action.NewHumanAction',1335,'net.sourceforge.ganttproject.action.NewHumanAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.roles.RoleManager,javax.swing.JFrame,net.sourceforge.ganttproject.GanttProject)',0,'public NewHumanAction(ResourceManager hrManager, RoleManager roleManager, JFrame projectFrame, GanttProject project) {\r\n    super(hrManager);\r\n    myRoleManager = roleManager;\r\n    myProjectFrame = projectFrame;\r\n    myProject = project;\r\n    this.putValue(AbstractAction.NAME, GanttProject.correctLabel(getLanguage().getText(\"newHuman\")));\r\n    this.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_H, MENU_MASK));\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(\"icons/insert_16.gif\");\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n}'),(900,'RoleManager roleManager','net.sourceforge.ganttproject.roles.RoleManager',517,113,'net.sourceforge.ganttproject.action.NewHumanAction',1335,'net.sourceforge.ganttproject.action.NewHumanAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.roles.RoleManager,javax.swing.JFrame,net.sourceforge.ganttproject.GanttProject)',0,'public NewHumanAction(ResourceManager hrManager, RoleManager roleManager, JFrame projectFrame, GanttProject project) {\r\n    super(hrManager);\r\n    myRoleManager = roleManager;\r\n    myProjectFrame = projectFrame;\r\n    myProject = project;\r\n    this.putValue(AbstractAction.NAME, GanttProject.correctLabel(getLanguage().getText(\"newHuman\")));\r\n    this.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_H, MENU_MASK));\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(\"icons/insert_16.gif\");\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n}'),(901,'JFrame projectFrame','javax.swing.JFrame',0,113,'net.sourceforge.ganttproject.action.NewHumanAction',1335,'net.sourceforge.ganttproject.action.NewHumanAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.roles.RoleManager,javax.swing.JFrame,net.sourceforge.ganttproject.GanttProject)',0,'public NewHumanAction(ResourceManager hrManager, RoleManager roleManager, JFrame projectFrame, GanttProject project) {\r\n    super(hrManager);\r\n    myRoleManager = roleManager;\r\n    myProjectFrame = projectFrame;\r\n    myProject = project;\r\n    this.putValue(AbstractAction.NAME, GanttProject.correctLabel(getLanguage().getText(\"newHuman\")));\r\n    this.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_H, MENU_MASK));\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(\"icons/insert_16.gif\");\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n}'),(902,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,113,'net.sourceforge.ganttproject.action.NewHumanAction',1335,'net.sourceforge.ganttproject.action.NewHumanAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.roles.RoleManager,javax.swing.JFrame,net.sourceforge.ganttproject.GanttProject)',0,'public NewHumanAction(ResourceManager hrManager, RoleManager roleManager, JFrame projectFrame, GanttProject project) {\r\n    super(hrManager);\r\n    myRoleManager = roleManager;\r\n    myProjectFrame = projectFrame;\r\n    myProject = project;\r\n    this.putValue(AbstractAction.NAME, GanttProject.correctLabel(getLanguage().getText(\"newHuman\")));\r\n    this.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_H, MENU_MASK));\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(\"icons/insert_16.gif\");\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n}'),(903,'ActionEvent event','java.awt.event.ActionEvent',0,113,'net.sourceforge.ganttproject.action.NewHumanAction',1336,'net.sourceforge.ganttproject.action.NewHumanAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent event) {\r\n    // final HumanResource people =\r\n    // ((HumanResourceManager)getManager()).newHumanResource();\r\n    // people.setRole(myRoleManager.getDefaultRole());\r\n    // GanttDialogPerson dp = new GanttDialogPerson(getProjectFrame(),\r\n    // getLanguage(), people);\r\n    // dp.show();\r\n    // if(dp.result()) {\r\n    // \r\n    // myProject.getUndoManager().undoableEdit(\"new Resource\", new\r\n    // Runnable(){\r\n    // public void run() {\r\n    // getManager().add(people);\r\n    // }});\r\n    // myProject.quickSave (\"new Resource\");\r\n    // }\r\n    myProject.newHumanResource();\r\n}'),(904,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,114,'net.sourceforge.ganttproject.action.NewTaskAction',1339,'net.sourceforge.ganttproject.action.NewTaskAction.-init-(net.sourceforge.ganttproject.IGanttProject)',0,'public NewTaskAction(IGanttProject project) {\r\n    myProject = project;\r\n    setText(project.getI18n());\r\n    putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_T, Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()));\r\n    URL iconUrl = this.getClass().getClassLoader().getResource(\"icons/insert_16.gif\");\r\n    if (iconUrl != null) {\r\n        this.putValue(Action.SMALL_ICON, new ImageIcon(iconUrl));\r\n    }\r\n    project.getI18n().addListener(this);\r\n}'),(905,'ActionEvent e','java.awt.event.ActionEvent',0,114,'net.sourceforge.ganttproject.action.NewTaskAction',1341,'net.sourceforge.ganttproject.action.NewTaskAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    Mediator.getUndoManager().undoableEdit(\"New Task\", new Runnable() {\r\n        public void run() {\r\n            myProject.newTask();\r\n        }\r\n    });\r\n}'),(906,'GanttLanguage.Event event','net.sourceforge.ganttproject.language.GanttLanguage$Event',459,114,'net.sourceforge.ganttproject.action.NewTaskAction',1342,'net.sourceforge.ganttproject.action.NewTaskAction.languageChanged(net.sourceforge.ganttproject.language.GanttLanguage$Event)',0,'public void languageChanged(GanttLanguage.Event event) {\r\n    setText(event.getLanguage());\r\n}'),(907,'GanttLanguage language','net.sourceforge.ganttproject.language.GanttLanguage',461,114,'net.sourceforge.ganttproject.action.NewTaskAction',1343,'net.sourceforge.ganttproject.action.NewTaskAction.setText(net.sourceforge.ganttproject.language.GanttLanguage)',0,'/**\r\n *\r\n *\r\n * @param language\r\n * 		\r\n */\r\nprivate void setText(GanttLanguage language) {\r\n    this.putValue(AbstractAction.NAME, GanttProject.correctLabel(language.getText(\"newTask\")));\r\n}'),(908,'GPUndoManager undoManager','net.sourceforge.ganttproject.undo.GPUndoManager',657,116,'net.sourceforge.ganttproject.action.RedoAction',1345,'net.sourceforge.ganttproject.action.RedoAction.-init-(net.sourceforge.ganttproject.undo.GPUndoManager,java.lang.String,net.sourceforge.ganttproject.GanttProject)',0,'public RedoAction(GPUndoManager undoManager, String iconSize, GanttProject appli) {\r\n    super(null, iconSize);\r\n    myUndoManager = undoManager;\r\n    myUndoManager.addUndoableEditListener(this);\r\n    this.appli = appli;\r\n    setEnabled(myUndoManager.canRedo());\r\n}'),(909,'String iconSize','java.lang.String',0,116,'net.sourceforge.ganttproject.action.RedoAction',1345,'net.sourceforge.ganttproject.action.RedoAction.-init-(net.sourceforge.ganttproject.undo.GPUndoManager,java.lang.String,net.sourceforge.ganttproject.GanttProject)',0,'public RedoAction(GPUndoManager undoManager, String iconSize, GanttProject appli) {\r\n    super(null, iconSize);\r\n    myUndoManager = undoManager;\r\n    myUndoManager.addUndoableEditListener(this);\r\n    this.appli = appli;\r\n    setEnabled(myUndoManager.canRedo());\r\n}'),(910,'GanttProject appli','net.sourceforge.ganttproject.GanttProject',53,116,'net.sourceforge.ganttproject.action.RedoAction',1345,'net.sourceforge.ganttproject.action.RedoAction.-init-(net.sourceforge.ganttproject.undo.GPUndoManager,java.lang.String,net.sourceforge.ganttproject.GanttProject)',0,'public RedoAction(GPUndoManager undoManager, String iconSize, GanttProject appli) {\r\n    super(null, iconSize);\r\n    myUndoManager = undoManager;\r\n    myUndoManager.addUndoableEditListener(this);\r\n    this.appli = appli;\r\n    setEnabled(myUndoManager.canRedo());\r\n}'),(911,'ActionEvent e','java.awt.event.ActionEvent',0,116,'net.sourceforge.ganttproject.action.RedoAction',1346,'net.sourceforge.ganttproject.action.RedoAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    appli.getUIFacade().setStatusText(GanttLanguage.getInstance().getText(\"redo\"));\r\n    myUndoManager.redo();\r\n}'),(912,'UndoableEditEvent e','javax.swing.event.UndoableEditEvent',0,116,'net.sourceforge.ganttproject.action.RedoAction',1351,'net.sourceforge.ganttproject.action.RedoAction.undoableEditHappened(javax.swing.event.UndoableEditEvent)',0,'public void undoableEditHappened(UndoableEditEvent e) {\r\n    setEnabled(myUndoManager.canRedo());\r\n}'),(913,'boolean isNull','boolean',0,116,'net.sourceforge.ganttproject.action.RedoAction',1349,'net.sourceforge.ganttproject.action.RedoAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n    setIconVisible(isNull);\r\n}'),(914,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,117,'net.sourceforge.ganttproject.action.RefreshViewAction',1352,'net.sourceforge.ganttproject.action.RefreshViewAction.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.GanttOptions)',0,'public RefreshViewAction(UIFacade uiFacade, GanttOptions options) {\r\n    super(null, options.getIconSize());\r\n    myUIFacade = uiFacade;\r\n    this.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_R, GPAction.MENU_MASK));\r\n}'),(915,'GanttOptions options','net.sourceforge.ganttproject.GanttOptions',48,117,'net.sourceforge.ganttproject.action.RefreshViewAction',1352,'net.sourceforge.ganttproject.action.RefreshViewAction.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.GanttOptions)',0,'public RefreshViewAction(UIFacade uiFacade, GanttOptions options) {\r\n    super(null, options.getIconSize());\r\n    myUIFacade = uiFacade;\r\n    this.putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_R, GPAction.MENU_MASK));\r\n}'),(916,'ActionEvent ae','java.awt.event.ActionEvent',0,117,'net.sourceforge.ganttproject.action.RefreshViewAction',1353,'net.sourceforge.ganttproject.action.RefreshViewAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent ae) {\r\n    myUIFacade.refresh();\r\n}'),(917,'boolean isNull','boolean',0,117,'net.sourceforge.ganttproject.action.RefreshViewAction',1355,'net.sourceforge.ganttproject.action.RefreshViewAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n    setIconVisible(true);\r\n}'),(918,'String iconSize','java.lang.String',0,117,'net.sourceforge.ganttproject.action.RefreshViewAction',1356,'net.sourceforge.ganttproject.action.RefreshViewAction.setIconSize(java.lang.String)',0,'public void setIconSize(String iconSize) {\r\n    putValue(Action.SMALL_ICON, createIcon(\"16\"));\r\n}'),(919,'ResourceManager hrManager','net.sourceforge.ganttproject.resource.ResourceManager',509,118,'net.sourceforge.ganttproject.action.ResourceAction',1357,'net.sourceforge.ganttproject.action.ResourceAction.-init-(net.sourceforge.ganttproject.resource.ResourceManager)',0,'public ResourceAction(ResourceManager hrManager) {\r\n    myManager = hrManager;\r\n}'),(920,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,119,'net.sourceforge.ganttproject.action.ResourceActionSet',1360,'net.sourceforge.ganttproject.action.ResourceActionSet.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.resource.ResourceContext,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public ResourceActionSet(IGanttProject project, ResourceContext context, GanttProject projectFrame, UIFacade uiFacade) {\r\n    myManager = project.getHumanResourceManager();\r\n    myRoleManager = project.getRoleManager();\r\n    myContext = context;\r\n    myProjectFrame = projectFrame;\r\n    myUIFacade = uiFacade;\r\n    myDeleteHumanAction = new DeleteHumanAction(myManager, myContext, myProjectFrame, myUIFacade);\r\n}'),(921,'ResourceContext context','net.sourceforge.ganttproject.resource.ResourceContext',507,119,'net.sourceforge.ganttproject.action.ResourceActionSet',1360,'net.sourceforge.ganttproject.action.ResourceActionSet.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.resource.ResourceContext,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public ResourceActionSet(IGanttProject project, ResourceContext context, GanttProject projectFrame, UIFacade uiFacade) {\r\n    myManager = project.getHumanResourceManager();\r\n    myRoleManager = project.getRoleManager();\r\n    myContext = context;\r\n    myProjectFrame = projectFrame;\r\n    myUIFacade = uiFacade;\r\n    myDeleteHumanAction = new DeleteHumanAction(myManager, myContext, myProjectFrame, myUIFacade);\r\n}'),(922,'GanttProject projectFrame','net.sourceforge.ganttproject.GanttProject',53,119,'net.sourceforge.ganttproject.action.ResourceActionSet',1360,'net.sourceforge.ganttproject.action.ResourceActionSet.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.resource.ResourceContext,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public ResourceActionSet(IGanttProject project, ResourceContext context, GanttProject projectFrame, UIFacade uiFacade) {\r\n    myManager = project.getHumanResourceManager();\r\n    myRoleManager = project.getRoleManager();\r\n    myContext = context;\r\n    myProjectFrame = projectFrame;\r\n    myUIFacade = uiFacade;\r\n    myDeleteHumanAction = new DeleteHumanAction(myManager, myContext, myProjectFrame, myUIFacade);\r\n}'),(923,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,119,'net.sourceforge.ganttproject.action.ResourceActionSet',1360,'net.sourceforge.ganttproject.action.ResourceActionSet.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.resource.ResourceContext,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public ResourceActionSet(IGanttProject project, ResourceContext context, GanttProject projectFrame, UIFacade uiFacade) {\r\n    myManager = project.getHumanResourceManager();\r\n    myRoleManager = project.getRoleManager();\r\n    myContext = context;\r\n    myProjectFrame = projectFrame;\r\n    myUIFacade = uiFacade;\r\n    myDeleteHumanAction = new DeleteHumanAction(myManager, myContext, myProjectFrame, myUIFacade);\r\n}'),(924,'String iconSize','java.lang.String',0,120,'net.sourceforge.ganttproject.action.RolloverAction',1365,'net.sourceforge.ganttproject.action.RolloverAction.setIconSize(java.lang.String)',0,'void setIconSize(String iconSize);'),(925,'boolean isNull','boolean',0,120,'net.sourceforge.ganttproject.action.RolloverAction',1364,'net.sourceforge.ganttproject.action.RolloverAction.isIconVisible(boolean)',0,'void isIconVisible(boolean isNull);'),(926,'ScrollingManager scrollingManager','net.sourceforge.ganttproject.gui.scrolling.ScrollingManager',409,121,'net.sourceforge.ganttproject.action.ScrollGanttChartLeftAction',1366,'net.sourceforge.ganttproject.action.ScrollGanttChartLeftAction.-init-(net.sourceforge.ganttproject.gui.scrolling.ScrollingManager,java.lang.String)',0,'public ScrollGanttChartLeftAction(ScrollingManager scrollingManager, String iconSize) {\r\n    super(\"ScrollLeft\", iconSize);\r\n    myScrollingManager = scrollingManager;\r\n}'),(927,'String iconSize','java.lang.String',0,121,'net.sourceforge.ganttproject.action.ScrollGanttChartLeftAction',1366,'net.sourceforge.ganttproject.action.ScrollGanttChartLeftAction.-init-(net.sourceforge.ganttproject.gui.scrolling.ScrollingManager,java.lang.String)',0,'public ScrollGanttChartLeftAction(ScrollingManager scrollingManager, String iconSize) {\r\n    super(\"ScrollLeft\", iconSize);\r\n    myScrollingManager = scrollingManager;\r\n}'),(928,'ActionEvent e','java.awt.event.ActionEvent',0,121,'net.sourceforge.ganttproject.action.ScrollGanttChartLeftAction',1367,'net.sourceforge.ganttproject.action.ScrollGanttChartLeftAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    myScrollingManager.scrollLeft();\r\n}'),(929,'boolean isNull','boolean',0,121,'net.sourceforge.ganttproject.action.ScrollGanttChartLeftAction',1369,'net.sourceforge.ganttproject.action.ScrollGanttChartLeftAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n    setIconVisible(isNull);\r\n}'),(930,'ScrollingManager scrollingManager','net.sourceforge.ganttproject.gui.scrolling.ScrollingManager',409,122,'net.sourceforge.ganttproject.action.ScrollGanttChartRightAction',1370,'net.sourceforge.ganttproject.action.ScrollGanttChartRightAction.-init-(net.sourceforge.ganttproject.gui.scrolling.ScrollingManager,java.lang.String)',0,'public ScrollGanttChartRightAction(ScrollingManager scrollingManager, String iconSize) {\r\n    super(\"ScrollRight\", iconSize);\r\n    myScrollingManager = scrollingManager;\r\n}'),(931,'String iconSize','java.lang.String',0,122,'net.sourceforge.ganttproject.action.ScrollGanttChartRightAction',1370,'net.sourceforge.ganttproject.action.ScrollGanttChartRightAction.-init-(net.sourceforge.ganttproject.gui.scrolling.ScrollingManager,java.lang.String)',0,'public ScrollGanttChartRightAction(ScrollingManager scrollingManager, String iconSize) {\r\n    super(\"ScrollRight\", iconSize);\r\n    myScrollingManager = scrollingManager;\r\n}'),(932,'ActionEvent e','java.awt.event.ActionEvent',0,122,'net.sourceforge.ganttproject.action.ScrollGanttChartRightAction',1371,'net.sourceforge.ganttproject.action.ScrollGanttChartRightAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    myScrollingManager.scrollRight();\r\n}'),(933,'boolean isNull','boolean',0,122,'net.sourceforge.ganttproject.action.ScrollGanttChartRightAction',1373,'net.sourceforge.ganttproject.action.ScrollGanttChartRightAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n    setIconVisible(isNull);\r\n}'),(934,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,123,'net.sourceforge.ganttproject.action.SwitchViewAction',1374,'net.sourceforge.ganttproject.action.SwitchViewAction.-init-(net.sourceforge.ganttproject.GanttProject)',0,'public SwitchViewAction(GanttProject project) {\r\n    tabbedPane = project.getTabs();\r\n    putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_F7, GPAction.MENU_MASK));\r\n}'),(935,'ActionEvent arg0','java.awt.event.ActionEvent',0,123,'net.sourceforge.ganttproject.action.SwitchViewAction',1375,'net.sourceforge.ganttproject.action.SwitchViewAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent arg0) {\r\n    tabbedPane.setSelectedIndex((((tabbedPane.getSelectedIndex()) + 1) % (tabbedPane.getTabCount())));\r\n}'),(936,'GPUndoManager undoManager','net.sourceforge.ganttproject.undo.GPUndoManager',657,124,'net.sourceforge.ganttproject.action.UndoAction',1376,'net.sourceforge.ganttproject.action.UndoAction.-init-(net.sourceforge.ganttproject.undo.GPUndoManager,java.lang.String,net.sourceforge.ganttproject.GanttProject)',0,'public UndoAction(GPUndoManager undoManager, String iconSize, GanttProject appli) {\r\n    super(null, iconSize);\r\n    myUndoManager = undoManager;\r\n    myUndoManager.addUndoableEditListener(this);\r\n    this.appli = appli;\r\n    setEnabled(myUndoManager.canUndo());\r\n}'),(937,'String iconSize','java.lang.String',0,124,'net.sourceforge.ganttproject.action.UndoAction',1376,'net.sourceforge.ganttproject.action.UndoAction.-init-(net.sourceforge.ganttproject.undo.GPUndoManager,java.lang.String,net.sourceforge.ganttproject.GanttProject)',0,'public UndoAction(GPUndoManager undoManager, String iconSize, GanttProject appli) {\r\n    super(null, iconSize);\r\n    myUndoManager = undoManager;\r\n    myUndoManager.addUndoableEditListener(this);\r\n    this.appli = appli;\r\n    setEnabled(myUndoManager.canUndo());\r\n}'),(938,'GanttProject appli','net.sourceforge.ganttproject.GanttProject',53,124,'net.sourceforge.ganttproject.action.UndoAction',1376,'net.sourceforge.ganttproject.action.UndoAction.-init-(net.sourceforge.ganttproject.undo.GPUndoManager,java.lang.String,net.sourceforge.ganttproject.GanttProject)',0,'public UndoAction(GPUndoManager undoManager, String iconSize, GanttProject appli) {\r\n    super(null, iconSize);\r\n    myUndoManager = undoManager;\r\n    myUndoManager.addUndoableEditListener(this);\r\n    this.appli = appli;\r\n    setEnabled(myUndoManager.canUndo());\r\n}'),(939,'ActionEvent e','java.awt.event.ActionEvent',0,124,'net.sourceforge.ganttproject.action.UndoAction',1377,'net.sourceforge.ganttproject.action.UndoAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    appli.getUIFacade().setStatusText(GanttLanguage.getInstance().getText(\"undo\"));\r\n    myUndoManager.undo();\r\n}'),(940,'UndoableEditEvent e','javax.swing.event.UndoableEditEvent',0,124,'net.sourceforge.ganttproject.action.UndoAction',1382,'net.sourceforge.ganttproject.action.UndoAction.undoableEditHappened(javax.swing.event.UndoableEditEvent)',0,'public void undoableEditHappened(UndoableEditEvent e) {\r\n    setEnabled(myUndoManager.canUndo());\r\n}'),(941,'boolean isNull','boolean',0,124,'net.sourceforge.ganttproject.action.UndoAction',1380,'net.sourceforge.ganttproject.action.UndoAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n    setIconVisible(isNull);\r\n}'),(942,'ZoomManager zoomManager','net.sourceforge.ganttproject.gui.zoom.ZoomManager',425,125,'net.sourceforge.ganttproject.action.ZoomInAction',1383,'net.sourceforge.ganttproject.action.ZoomInAction.-init-(net.sourceforge.ganttproject.gui.zoom.ZoomManager,java.lang.String)',0,'public ZoomInAction(ZoomManager zoomManager, String iconSize) {\r\n    super(\"ZoomIn\", iconSize);\r\n    myZoomManager = zoomManager;\r\n    myZoomManager.addZoomListener(this);\r\n}'),(943,'String iconSize','java.lang.String',0,125,'net.sourceforge.ganttproject.action.ZoomInAction',1383,'net.sourceforge.ganttproject.action.ZoomInAction.-init-(net.sourceforge.ganttproject.gui.zoom.ZoomManager,java.lang.String)',0,'public ZoomInAction(ZoomManager zoomManager, String iconSize) {\r\n    super(\"ZoomIn\", iconSize);\r\n    myZoomManager = zoomManager;\r\n    myZoomManager.addZoomListener(this);\r\n}'),(944,'ActionEvent arg0','java.awt.event.ActionEvent',0,125,'net.sourceforge.ganttproject.action.ZoomInAction',1384,'net.sourceforge.ganttproject.action.ZoomInAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent arg0) {\r\n    if (myZoomManager.canZoomIn()) {\r\n        myZoomManager.zoomIn();\r\n    }\r\n    setEnabled(myZoomManager.canZoomIn());\r\n}'),(945,'ZoomEvent e','net.sourceforge.ganttproject.gui.zoom.ZoomEvent',422,125,'net.sourceforge.ganttproject.action.ZoomInAction',1387,'net.sourceforge.ganttproject.action.ZoomInAction.zoomChanged(net.sourceforge.ganttproject.gui.zoom.ZoomEvent)',0,'public void zoomChanged(ZoomEvent e) {\r\n    setEnabled(myZoomManager.canZoomIn());\r\n}'),(946,'boolean isNull','boolean',0,125,'net.sourceforge.ganttproject.action.ZoomInAction',1386,'net.sourceforge.ganttproject.action.ZoomInAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n    setIconVisible(isNull);\r\n}'),(947,'ZoomManager zoomManager','net.sourceforge.ganttproject.gui.zoom.ZoomManager',425,126,'net.sourceforge.ganttproject.action.ZoomOutAction',1388,'net.sourceforge.ganttproject.action.ZoomOutAction.-init-(net.sourceforge.ganttproject.gui.zoom.ZoomManager,java.lang.String)',0,'public ZoomOutAction(ZoomManager zoomManager, String iconSize) {\r\n    super(\"ZoomOut\", iconSize);\r\n    myZoomManager = zoomManager;\r\n    myZoomManager.addZoomListener(this);\r\n}'),(948,'String iconSize','java.lang.String',0,126,'net.sourceforge.ganttproject.action.ZoomOutAction',1388,'net.sourceforge.ganttproject.action.ZoomOutAction.-init-(net.sourceforge.ganttproject.gui.zoom.ZoomManager,java.lang.String)',0,'public ZoomOutAction(ZoomManager zoomManager, String iconSize) {\r\n    super(\"ZoomOut\", iconSize);\r\n    myZoomManager = zoomManager;\r\n    myZoomManager.addZoomListener(this);\r\n}'),(949,'ActionEvent arg0','java.awt.event.ActionEvent',0,126,'net.sourceforge.ganttproject.action.ZoomOutAction',1389,'net.sourceforge.ganttproject.action.ZoomOutAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent arg0) {\r\n    if (myZoomManager.canZoomOut()) {\r\n        myZoomManager.zoomOut();\r\n    }\r\n    setEnabled(myZoomManager.canZoomOut());\r\n}'),(950,'ZoomEvent e','net.sourceforge.ganttproject.gui.zoom.ZoomEvent',422,126,'net.sourceforge.ganttproject.action.ZoomOutAction',1393,'net.sourceforge.ganttproject.action.ZoomOutAction.zoomChanged(net.sourceforge.ganttproject.gui.zoom.ZoomEvent)',0,'public void zoomChanged(ZoomEvent e) {\r\n    setEnabled(myZoomManager.canZoomOut());\r\n}'),(951,'boolean isNull','boolean',0,126,'net.sourceforge.ganttproject.action.ZoomOutAction',1392,'net.sourceforge.ganttproject.action.ZoomOutAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n    setIconVisible(isNull);\r\n}'),(952,'GanttProject mainFrame','net.sourceforge.ganttproject.GanttProject',53,127,'net.sourceforge.ganttproject.action.project.ExitAction',1394,'net.sourceforge.ganttproject.action.project.ExitAction.-init-(net.sourceforge.ganttproject.GanttProject)',0,'ExitAction(GanttProject mainFrame) {\r\n    super(\"quit\");\r\n    myMainFrame = mainFrame;\r\n    putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_Q, GPAction.MENU_MASK));\r\n}'),(953,'ActionEvent e','java.awt.event.ActionEvent',0,127,'net.sourceforge.ganttproject.action.project.ExitAction',1395,'net.sourceforge.ganttproject.action.project.ExitAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    myMainFrame.quitApplication();\r\n}'),(954,'GanttProject mainFrame','net.sourceforge.ganttproject.GanttProject',53,128,'net.sourceforge.ganttproject.action.project.NewProjectAction',1399,'net.sourceforge.ganttproject.action.project.NewProjectAction.-init-(net.sourceforge.ganttproject.GanttProject)',0,'public NewProjectAction(GanttProject mainFrame) {\r\n    super(\"newProject\", \"16\");\r\n    myMainFrame = mainFrame;\r\n    putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_N, GPAction.MENU_MASK));\r\n}'),(955,'ActionEvent e','java.awt.event.ActionEvent',0,128,'net.sourceforge.ganttproject.action.project.NewProjectAction',1400,'net.sourceforge.ganttproject.action.project.NewProjectAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    myMainFrame.newProject();\r\n}'),(956,'GanttProject mainFrame','net.sourceforge.ganttproject.GanttProject',53,129,'net.sourceforge.ganttproject.action.project.OpenProjectAction',1403,'net.sourceforge.ganttproject.action.project.OpenProjectAction.-init-(net.sourceforge.ganttproject.GanttProject)',0,'OpenProjectAction(GanttProject mainFrame) {\r\n    super(\"openProject\", \"16\");\r\n    myMainFrame = mainFrame;\r\n    putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_O, GPAction.MENU_MASK));\r\n}'),(957,'ActionEvent e','java.awt.event.ActionEvent',0,129,'net.sourceforge.ganttproject.action.project.OpenProjectAction',1404,'net.sourceforge.ganttproject.action.project.OpenProjectAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    try {\r\n        myMainFrame.openFile();\r\n    } catch (Exception ex) {\r\n        myMainFrame.getUIFacade().showErrorDialog(ex);\r\n    }\r\n}'),(958,'GanttProject mainFrame','net.sourceforge.ganttproject.GanttProject',53,130,'net.sourceforge.ganttproject.action.project.OpenURLAction',1407,'net.sourceforge.ganttproject.action.project.OpenURLAction.-init-(net.sourceforge.ganttproject.GanttProject)',0,'OpenURLAction(GanttProject mainFrame) {\r\n    myMainFrame = mainFrame;\r\n}'),(959,'ActionEvent e','java.awt.event.ActionEvent',0,130,'net.sourceforge.ganttproject.action.project.OpenURLAction',1408,'net.sourceforge.ganttproject.action.project.OpenURLAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    if (myMainFrame.checkCurrentProject()) {\r\n        myMainFrame.openURL();\r\n    }\r\n}'),(960,'GanttProject mainFrame','net.sourceforge.ganttproject.GanttProject',53,131,'net.sourceforge.ganttproject.action.project.PrintAction',1412,'net.sourceforge.ganttproject.action.project.PrintAction.-init-(net.sourceforge.ganttproject.GanttProject)',0,'PrintAction(GanttProject mainFrame) {\r\n    super(\"print\");\r\n    myMainFrame = mainFrame;\r\n    putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_P, GPAction.MENU_MASK));\r\n}'),(961,'ActionEvent e','java.awt.event.ActionEvent',0,131,'net.sourceforge.ganttproject.action.project.PrintAction',1413,'net.sourceforge.ganttproject.action.project.PrintAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    myMainFrame.printProject();\r\n}'),(962,'GanttProject mainFrame','net.sourceforge.ganttproject.GanttProject',53,132,'net.sourceforge.ganttproject.action.project.ProjectMenu',1416,'net.sourceforge.ganttproject.action.project.ProjectMenu.-init-(net.sourceforge.ganttproject.GanttProject)',0,'public ProjectMenu(GanttProject mainFrame) {\r\n    myMainFrame = mainFrame;\r\n    myNewProjectAction = new NewProjectAction(mainFrame);\r\n    myOpenProjectAction = new OpenProjectAction(mainFrame);\r\n    mySaveProjectAction = new SaveProjectAction(mainFrame);\r\n    mySaveProjectAsAction = new SaveProjectAsAction(mainFrame);\r\n    myOpenURLAction = new OpenURLAction(mainFrame);\r\n    mySaveURLAction = new SaveURLAction(mainFrame);\r\n    myPrintAction = new PrintAction(mainFrame);\r\n    myExitAction = new ExitAction(mainFrame);\r\n}'),(963,'GanttProject mainFrame','net.sourceforge.ganttproject.GanttProject',53,133,'net.sourceforge.ganttproject.action.project.SaveProjectAction',1425,'net.sourceforge.ganttproject.action.project.SaveProjectAction.-init-(net.sourceforge.ganttproject.GanttProject)',0,'SaveProjectAction(GanttProject mainFrame) {\r\n    super(\"saveProject\", \"16\");\r\n    myMainFrame = mainFrame;\r\n    mainFrame.addProjectEventListener(this);\r\n    putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_S, GPAction.MENU_MASK));\r\n    setEnabled(false);\r\n}'),(964,'ActionEvent e','java.awt.event.ActionEvent',0,133,'net.sourceforge.ganttproject.action.project.SaveProjectAction',1426,'net.sourceforge.ganttproject.action.project.SaveProjectAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    try {\r\n        myMainFrame.saveProject();\r\n    } catch (IOException e1) {\r\n        myMainFrame.getUIFacade().showErrorDialog(e1);\r\n    }\r\n}'),(965,'GanttProject mainFrame','net.sourceforge.ganttproject.GanttProject',53,134,'net.sourceforge.ganttproject.action.project.SaveProjectAsAction',1433,'net.sourceforge.ganttproject.action.project.SaveProjectAsAction.-init-(net.sourceforge.ganttproject.GanttProject)',0,'SaveProjectAsAction(GanttProject mainFrame) {\r\n    super(\"saveas\");\r\n    myMainFrame = mainFrame;\r\n}'),(966,'ActionEvent e','java.awt.event.ActionEvent',0,134,'net.sourceforge.ganttproject.action.project.SaveProjectAsAction',1434,'net.sourceforge.ganttproject.action.project.SaveProjectAsAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    try {\r\n        myMainFrame.saveAsProject();\r\n    } catch (IOException e1) {\r\n        myMainFrame.showErrorDialog(e1);\r\n    }\r\n}'),(967,'GanttProject mainFrame','net.sourceforge.ganttproject.GanttProject',53,135,'net.sourceforge.ganttproject.action.project.SaveURLAction',1437,'net.sourceforge.ganttproject.action.project.SaveURLAction.-init-(net.sourceforge.ganttproject.GanttProject)',0,'SaveURLAction(GanttProject mainFrame) {\r\n    myMainFrame = mainFrame;\r\n}'),(968,'ActionEvent e','java.awt.event.ActionEvent',0,135,'net.sourceforge.ganttproject.action.project.SaveURLAction',1438,'net.sourceforge.ganttproject.action.project.SaveURLAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    try {\r\n        myMainFrame.saveAsURLProject();\r\n    } catch (Exception ex) {\r\n        myMainFrame.getUIFacade().showErrorDialog(ex);\r\n    }\r\n}'),(969,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,136,'net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction',1441,'net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public ResourcePropertiesAction(IGanttProject project, UIFacade uiFacade) {\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, KeyEvent.ALT_DOWN_MASK));\r\n}'),(970,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,136,'net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction',1441,'net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public ResourcePropertiesAction(IGanttProject project, UIFacade uiFacade) {\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, KeyEvent.ALT_DOWN_MASK));\r\n}'),(971,'ActionEvent arg0','java.awt.event.ActionEvent',0,136,'net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction',1442,'net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent arg0) {\r\n    if ((getSelectedResource()) != null) {\r\n        GanttDialogPerson dp = new GanttDialogPerson(getUIFacade(), GanttLanguage.getInstance(), getSelectedResource());\r\n        dp.setVisible(true);\r\n        if (dp.result()) {\r\n            getProject().setModified(true);\r\n        }\r\n    }\r\n}'),(972,'ResourceContext context','net.sourceforge.ganttproject.resource.ResourceContext',507,136,'net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction',1449,'net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.setContext(net.sourceforge.ganttproject.resource.ResourceContext)',0,'public void setContext(ResourceContext context) {\r\n    ProjectResource[] resources = context.getResources();\r\n    if ((resources.length) == 1) {\r\n        mySelectedResource = ((HumanResource) (resources[0]));\r\n        setEnabled(true);\r\n    } else {\r\n        setEnabled(false);\r\n    }\r\n}'),(973,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,137,'net.sourceforge.ganttproject.action.task.LinkTasksAction',1450,'net.sourceforge.ganttproject.action.task.LinkTasksAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public LinkTasksAction(TaskManager taskManager, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    super(taskManager, selectionManager, uiFacade);\r\n}'),(974,'TaskSelectionManager selectionManager','net.sourceforge.ganttproject.task.TaskSelectionManager',575,137,'net.sourceforge.ganttproject.action.task.LinkTasksAction',1450,'net.sourceforge.ganttproject.action.task.LinkTasksAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public LinkTasksAction(TaskManager taskManager, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    super(taskManager, selectionManager, uiFacade);\r\n}'),(975,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,137,'net.sourceforge.ganttproject.action.task.LinkTasksAction',1450,'net.sourceforge.ganttproject.action.task.LinkTasksAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public LinkTasksAction(TaskManager taskManager, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    super(taskManager, selectionManager, uiFacade);\r\n}'),(976,'List selection','java.util.List',0,137,'net.sourceforge.ganttproject.action.task.LinkTasksAction',1454,'net.sourceforge.ganttproject.action.task.LinkTasksAction.run(java.util.List)',0,'protected void run(List selection) throws TaskDependencyException {\r\n    for (int i = 0; i < ((selection.size()) - 1); i++) {\r\n        Task dependant = ((Task) (selection.get((i + 1))));\r\n        Task dependee = ((Task) (selection.get(i)));\r\n        if (getTaskManager().getDependencyCollection().canCreateDependency(dependant, dependee)) {\r\n            getTaskManager().getDependencyCollection().createDependency(dependant, dependee);\r\n        }\r\n    }\r\n}'),(977,'List selection','java.util.List',0,137,'net.sourceforge.ganttproject.action.task.LinkTasksAction',1453,'net.sourceforge.ganttproject.action.task.LinkTasksAction.isEnabled(java.util.List)',0,'protected boolean isEnabled(List selection) {\r\n    return (selection.size()) >= 2;\r\n}'),(978,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,138,'net.sourceforge.ganttproject.action.task.TaskActionBase',1455,'net.sourceforge.ganttproject.action.task.TaskActionBase.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'protected TaskActionBase(TaskManager taskManager, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    myTaskManager = taskManager;\r\n    selectionManager.addSelectionListener(this);\r\n    selectionChanged(selectionManager.getSelectedTasks());\r\n    myUIFacade = uiFacade;\r\n}'),(979,'TaskSelectionManager selectionManager','net.sourceforge.ganttproject.task.TaskSelectionManager',575,138,'net.sourceforge.ganttproject.action.task.TaskActionBase',1455,'net.sourceforge.ganttproject.action.task.TaskActionBase.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'protected TaskActionBase(TaskManager taskManager, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    myTaskManager = taskManager;\r\n    selectionManager.addSelectionListener(this);\r\n    selectionChanged(selectionManager.getSelectedTasks());\r\n    myUIFacade = uiFacade;\r\n}'),(980,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,138,'net.sourceforge.ganttproject.action.task.TaskActionBase',1455,'net.sourceforge.ganttproject.action.task.TaskActionBase.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'protected TaskActionBase(TaskManager taskManager, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    myTaskManager = taskManager;\r\n    selectionManager.addSelectionListener(this);\r\n    selectionChanged(selectionManager.getSelectedTasks());\r\n    myUIFacade = uiFacade;\r\n}'),(981,'ActionEvent e','java.awt.event.ActionEvent',0,138,'net.sourceforge.ganttproject.action.task.TaskActionBase',1457,'net.sourceforge.ganttproject.action.task.TaskActionBase.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    final List selection = new ArrayList(mySelection);\r\n    myUIFacade.getUndoManager().undoableEdit(getLocalizedName(), new Runnable() {\r\n        public void run() {\r\n            try {\r\n                TaskActionBase.this.run(selection);\r\n            } catch (Exception e) {\r\n                getUIFacade().showErrorDialog(e);\r\n            }\r\n        }\r\n    });\r\n}'),(982,'List currentSelection','java.util.List',0,138,'net.sourceforge.ganttproject.action.task.TaskActionBase',1462,'net.sourceforge.ganttproject.action.task.TaskActionBase.selectionChanged(java.util.List)',0,'public void selectionChanged(List currentSelection) {\r\n    setEnabled(isEnabled(currentSelection));\r\n    mySelection = currentSelection;\r\n}'),(983,'Object newConsumer','java.lang.Object',0,138,'net.sourceforge.ganttproject.action.task.TaskActionBase',1463,'net.sourceforge.ganttproject.action.task.TaskActionBase.userInputConsumerChanged(java.lang.Object)',0,'public void userInputConsumerChanged(Object newConsumer) {\r\n}'),(984,'List selection','java.util.List',0,138,'net.sourceforge.ganttproject.action.task.TaskActionBase',1460,'net.sourceforge.ganttproject.action.task.TaskActionBase.isEnabled(java.util.List)',0,'protected abstract boolean isEnabled(List selection);'),(985,'List selection','java.util.List',0,138,'net.sourceforge.ganttproject.action.task.TaskActionBase',1461,'net.sourceforge.ganttproject.action.task.TaskActionBase.run(java.util.List)',0,'protected abstract void run(List selection) throws Exception;'),(986,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,139,'net.sourceforge.ganttproject.action.task.TaskPropertiesAction',1464,'net.sourceforge.ganttproject.action.task.TaskPropertiesAction.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public TaskPropertiesAction(IGanttProject project, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    super(project.getTaskManager(), selectionManager, uiFacade);\r\n    myProject = project;\r\n    mySelectionManager = selectionManager;\r\n    myHumanManager = ((HumanResourceManager) (project.getHumanResourceManager()));\r\n    myRoleManager = project.getRoleManager();\r\n}'),(987,'TaskSelectionManager selectionManager','net.sourceforge.ganttproject.task.TaskSelectionManager',575,139,'net.sourceforge.ganttproject.action.task.TaskPropertiesAction',1464,'net.sourceforge.ganttproject.action.task.TaskPropertiesAction.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public TaskPropertiesAction(IGanttProject project, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    super(project.getTaskManager(), selectionManager, uiFacade);\r\n    myProject = project;\r\n    mySelectionManager = selectionManager;\r\n    myHumanManager = ((HumanResourceManager) (project.getHumanResourceManager()));\r\n    myRoleManager = project.getRoleManager();\r\n}'),(988,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,139,'net.sourceforge.ganttproject.action.task.TaskPropertiesAction',1464,'net.sourceforge.ganttproject.action.task.TaskPropertiesAction.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public TaskPropertiesAction(IGanttProject project, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    super(project.getTaskManager(), selectionManager, uiFacade);\r\n    myProject = project;\r\n    mySelectionManager = selectionManager;\r\n    myHumanManager = ((HumanResourceManager) (project.getHumanResourceManager()));\r\n    myRoleManager = project.getRoleManager();\r\n}'),(989,'List selection','java.util.List',0,139,'net.sourceforge.ganttproject.action.task.TaskPropertiesAction',1468,'net.sourceforge.ganttproject.action.task.TaskPropertiesAction.isEnabled(java.util.List)',0,'protected boolean isEnabled(List selection) {\r\n    return (selection.size()) == 1;\r\n}'),(990,'/* <Task> */\r\nList selection','java.util.List',0,139,'net.sourceforge.ganttproject.action.task.TaskPropertiesAction',1469,'net.sourceforge.ganttproject.action.task.TaskPropertiesAction.run(java.util.List)',0,'protected void run(/* <Task> */\r\nList selection) throws Exception {\r\n    if ((selection.size()) != 1) {\r\n        return;\r\n    }\r\n    final GanttTask[] tasks = new GanttTask[]{ ((GanttTask) (selection.get(0))) };\r\n    GanttDialogProperties pd = new GanttDialogProperties(tasks);\r\n    mySelectionManager.setUserInputConsumer(pd);\r\n    pd.show(myProject, getUIFacade());\r\n    if (pd.change) {\r\n        myProject.setModified(true);\r\n        // setRowHeight(rowHeight);\r\n        // getResourcePanel().getResourceTreeTableModel()\r\n        // .updateResources();\r\n    }\r\n    SwingUtilities.invokeLater(new Runnable() {\r\n        public void run() {\r\n            mySelectionManager.clear();\r\n            mySelectionManager.addTask(tasks[0]);\r\n        }\r\n    });\r\n}'),(991,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,140,'net.sourceforge.ganttproject.action.task.UnlinkTasksAction',1470,'net.sourceforge.ganttproject.action.task.UnlinkTasksAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public UnlinkTasksAction(TaskManager taskManager, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    super(taskManager, selectionManager, uiFacade);\r\n}'),(992,'TaskSelectionManager selectionManager','net.sourceforge.ganttproject.task.TaskSelectionManager',575,140,'net.sourceforge.ganttproject.action.task.UnlinkTasksAction',1470,'net.sourceforge.ganttproject.action.task.UnlinkTasksAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public UnlinkTasksAction(TaskManager taskManager, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    super(taskManager, selectionManager, uiFacade);\r\n}'),(993,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,140,'net.sourceforge.ganttproject.action.task.UnlinkTasksAction',1470,'net.sourceforge.ganttproject.action.task.UnlinkTasksAction.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.TaskSelectionManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public UnlinkTasksAction(TaskManager taskManager, TaskSelectionManager selectionManager, UIFacade uiFacade) {\r\n    super(taskManager, selectionManager, uiFacade);\r\n}'),(994,'List selection','java.util.List',0,140,'net.sourceforge.ganttproject.action.task.UnlinkTasksAction',1473,'net.sourceforge.ganttproject.action.task.UnlinkTasksAction.isEnabled(java.util.List)',0,'protected boolean isEnabled(List selection) {\r\n    return false == (selection.isEmpty());\r\n}'),(995,'List selection','java.util.List',0,140,'net.sourceforge.ganttproject.action.task.UnlinkTasksAction',1474,'net.sourceforge.ganttproject.action.task.UnlinkTasksAction.run(java.util.List)',0,'protected void run(List selection) throws Exception {\r\n    for (int i = 0; i < (selection.size()); i++) {\r\n        Task nextTask = ((Task) (selection.get(i)));\r\n        nextTask.getDependencies().clear(selection);\r\n    }\r\n}'),(996,'Object args','java.lang.Object',0,141,'net.sourceforge.ganttproject.application.MainApplication',1476,'net.sourceforge.ganttproject.application.MainApplication.run(java.lang.Object)',0,'// The hack with waiting is necessary because when you\r\n// launch Runtime Workbench in Eclipse, it exists as soon as\r\n// GanttProject.main() method exits\r\n// without Eclipse, Swing thread continues execution. So we wait until main\r\n// window closes\r\npublic Object run(Object args) throws Exception {\r\n    Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\r\n    GPLogger.setup();\r\n    String[] cmdLine = ((String[]) (args));\r\n    WindowAdapter closingListener = new WindowAdapter() {\r\n        public void windowClosed(WindowEvent e) {\r\n            myLock.notify();\r\n        }\r\n    };\r\n    GanttProject.setWindowListener(closingListener);\r\n    GanttProject.main(cmdLine);\r\n    synchronized(myLock) {\r\n        myLock.wait();\r\n    }\r\n    return null;\r\n}'),(997,'Date startDate','java.util.Date',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1479,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(java.util.Date,java.util.Date)',0,'public List getActivities(Date startDate, Date endDate) {\r\n    return Collections.singletonList(new CalendarActivityImpl(startDate, endDate, true));\r\n}'),(998,'Date endDate','java.util.Date',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1479,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(java.util.Date,java.util.Date)',0,'public List getActivities(Date startDate, Date endDate) {\r\n    return Collections.singletonList(new CalendarActivityImpl(startDate, endDate, true));\r\n}'),(999,'Date startDate','java.util.Date',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1482,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesForward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesForward(Date startDate, TimeUnit timeUnit, long l) {\r\n    Date activityStart = timeUnit.adjustLeft(startDate);\r\n    Date activityEnd = activityStart;\r\n    for (; l > 0; l--) {\r\n        activityEnd = timeUnit.adjustRight(activityEnd);\r\n    }\r\n    return Collections.singletonList(new CalendarActivityImpl(activityStart, activityEnd, true));\r\n}'),(1000,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1482,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesForward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesForward(Date startDate, TimeUnit timeUnit, long l) {\r\n    Date activityStart = timeUnit.adjustLeft(startDate);\r\n    Date activityEnd = activityStart;\r\n    for (; l > 0; l--) {\r\n        activityEnd = timeUnit.adjustRight(activityEnd);\r\n    }\r\n    return Collections.singletonList(new CalendarActivityImpl(activityStart, activityEnd, true));\r\n}'),(1001,'long l','long',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1482,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesForward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesForward(Date startDate, TimeUnit timeUnit, long l) {\r\n    Date activityStart = timeUnit.adjustLeft(startDate);\r\n    Date activityEnd = activityStart;\r\n    for (; l > 0; l--) {\r\n        activityEnd = timeUnit.adjustRight(activityEnd);\r\n    }\r\n    return Collections.singletonList(new CalendarActivityImpl(activityStart, activityEnd, true));\r\n}'),(1002,'Date startDate','java.util.Date',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1481,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesBackward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesBackward(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    Date activityEnd = timeUnit.adjustLeft(startDate);\r\n    Date activityStart = activityEnd;\r\n    while ((unitCount--) > 0) {\r\n        activityStart = timeUnit.jumpLeft(activityStart);\r\n    } \r\n    return Collections.singletonList(new CalendarActivityImpl(activityStart, activityEnd, true));\r\n}'),(1003,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1481,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesBackward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesBackward(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    Date activityEnd = timeUnit.adjustLeft(startDate);\r\n    Date activityStart = activityEnd;\r\n    while ((unitCount--) > 0) {\r\n        activityStart = timeUnit.jumpLeft(activityStart);\r\n    } \r\n    return Collections.singletonList(new CalendarActivityImpl(activityStart, activityEnd, true));\r\n}'),(1004,'long unitCount','long',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1481,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesBackward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesBackward(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    Date activityEnd = timeUnit.adjustLeft(startDate);\r\n    Date activityStart = activityEnd;\r\n    while ((unitCount--) > 0) {\r\n        activityStart = timeUnit.jumpLeft(activityStart);\r\n    } \r\n    return Collections.singletonList(new CalendarActivityImpl(activityStart, activityEnd, true));\r\n}'),(1005,'int day','int',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1491,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.setWeekDayType(int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'public void setWeekDayType(int day, GPCalendar.DayType type) {\r\n    if (type == (GPCalendar.DayType.WEEKEND)) {\r\n        throw new IllegalArgumentException(\"I am always working time calendar, I dont accept holidays!\");\r\n    }\r\n}'),(1006,'GPCalendar.DayType type','net.sourceforge.ganttproject.calendar.GPCalendar$DayType',145,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1491,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.setWeekDayType(int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'public void setWeekDayType(int day, GPCalendar.DayType type) {\r\n    if (type == (GPCalendar.DayType.WEEKEND)) {\r\n        throw new IllegalArgumentException(\"I am always working time calendar, I dont accept holidays!\");\r\n    }\r\n}'),(1007,'int day','int',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1485,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getWeekDayType(int)',0,'public GPCalendar.DayType getWeekDayType(int day) {\r\n    return GPCalendar.DayType.WORKING;\r\n}'),(1008,'Date time','java.util.Date',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1478,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.findClosestWorkingTime(java.util.Date)',0,'public Date findClosestWorkingTime(Date time) {\r\n    return time;\r\n}'),(1009,'int month','int',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1488,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.setPublicHoliDayType(int,int)',0,'public void setPublicHoliDayType(int month, int date) {\r\n    // TODO Auto-generated method stub\r\n}'),(1010,'int date','int',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1488,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.setPublicHoliDayType(int,int)',0,'public void setPublicHoliDayType(int month, int date) {\r\n    // TODO Auto-generated method stub\r\n}'),(1011,'Date curDayStart','java.util.Date',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1487,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.isPublicHoliDay(java.util.Date)',0,'public boolean isPublicHoliDay(Date curDayStart) {\r\n    // TODO Auto-generated method stub\r\n    return false;\r\n}'),(1012,'Date curDayStart','java.util.Date',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1486,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.isNonWorkingDay(java.util.Date)',0,'public boolean isNonWorkingDay(Date curDayStart) {\r\n    // TODO Auto-generated method stub\r\n    return false;\r\n}'),(1013,'Date curDayStart','java.util.Date',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1483,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getDayTypeDate(java.util.Date)',0,'public GPCalendar.DayType getDayTypeDate(Date curDayStart) {\r\n    // TODO Auto-generated method stub\r\n    return GPCalendar.DayType.WORKING;\r\n}'),(1014,'Date curDayStart','java.util.Date',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1489,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.setPublicHoliDayType(java.util.Date)',0,'public void setPublicHoliDayType(Date curDayStart) {\r\n    // TODO Auto-generated method stub\r\n}'),(1015,'URL calendar','java.net.URL',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1490,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.setPublicHolidays(java.net.URL,net.sourceforge.ganttproject.GanttProject)',0,'public void setPublicHolidays(URL calendar, GanttProject gp) {\r\n    // TODO Auto-generated method stub\r\n}'),(1016,'GanttProject gp','net.sourceforge.ganttproject.GanttProject',53,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1490,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.setPublicHolidays(java.net.URL,net.sourceforge.ganttproject.GanttProject)',0,'public void setPublicHolidays(URL calendar, GanttProject gp) {\r\n    // TODO Auto-generated method stub\r\n}'),(1017,'Date startingFrom','java.util.Date',0,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1480,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'public List getActivities(Date startingFrom, TaskLength period) {\r\n    return getActivities(startingFrom, period.getTimeUnit(), period.getLength());\r\n}'),(1018,'TaskLength period','net.sourceforge.ganttproject.task.TaskLength',562,142,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl',1480,'net.sourceforge.ganttproject.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'public List getActivities(Date startingFrom, TaskLength period) {\r\n    return getActivities(startingFrom, period.getTimeUnit(), period.getLength());\r\n}'),(1019,'Date startDate','java.util.Date',0,143,'net.sourceforge.ganttproject.calendar.CalendarActivityImpl',1492,'net.sourceforge.ganttproject.calendar.CalendarActivityImpl.-init-(java.util.Date,java.util.Date,boolean)',0,'public CalendarActivityImpl(Date startDate, Date endDate, boolean isWorkingTime) {\r\n    myStartDate = startDate;\r\n    myEndDate = endDate;\r\n    this.isWorkingTime = isWorkingTime;\r\n}'),(1020,'Date endDate','java.util.Date',0,143,'net.sourceforge.ganttproject.calendar.CalendarActivityImpl',1492,'net.sourceforge.ganttproject.calendar.CalendarActivityImpl.-init-(java.util.Date,java.util.Date,boolean)',0,'public CalendarActivityImpl(Date startDate, Date endDate, boolean isWorkingTime) {\r\n    myStartDate = startDate;\r\n    myEndDate = endDate;\r\n    this.isWorkingTime = isWorkingTime;\r\n}'),(1021,'boolean isWorkingTime','boolean',0,143,'net.sourceforge.ganttproject.calendar.CalendarActivityImpl',1492,'net.sourceforge.ganttproject.calendar.CalendarActivityImpl.-init-(java.util.Date,java.util.Date,boolean)',0,'public CalendarActivityImpl(Date startDate, Date endDate, boolean isWorkingTime) {\r\n    myStartDate = startDate;\r\n    myEndDate = endDate;\r\n    this.isWorkingTime = isWorkingTime;\r\n}'),(1022,'Date startDate','java.util.Date',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1501,'net.sourceforge.ganttproject.calendar.GPCalendar.getActivities(java.util.Date,java.util.Date)',0,'List getActivities(Date startDate, Date endDate);'),(1023,'Date endDate','java.util.Date',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1501,'net.sourceforge.ganttproject.calendar.GPCalendar.getActivities(java.util.Date,java.util.Date)',0,'List getActivities(Date startDate, Date endDate);'),(1024,'Date startDate','java.util.Date',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1502,'net.sourceforge.ganttproject.calendar.GPCalendar.getActivities(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'List getActivities(Date startDate, TimeUnit timeUnit, long l);'),(1025,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1502,'net.sourceforge.ganttproject.calendar.GPCalendar.getActivities(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'List getActivities(Date startDate, TimeUnit timeUnit, long l);'),(1026,'long l','long',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1502,'net.sourceforge.ganttproject.calendar.GPCalendar.getActivities(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'List getActivities(Date startDate, TimeUnit timeUnit, long l);'),(1027,'int day','int',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1511,'net.sourceforge.ganttproject.calendar.GPCalendar.setWeekDayType(int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'void setWeekDayType(int day, GPCalendar.DayType type);'),(1028,'GPCalendar.DayType type','net.sourceforge.ganttproject.calendar.GPCalendar$DayType',145,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1511,'net.sourceforge.ganttproject.calendar.GPCalendar.setWeekDayType(int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'void setWeekDayType(int day, GPCalendar.DayType type);'),(1029,'int day','int',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1505,'net.sourceforge.ganttproject.calendar.GPCalendar.getWeekDayType(int)',0,'GPCalendar.DayType getWeekDayType(int day);'),(1030,'int month','int',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1508,'net.sourceforge.ganttproject.calendar.GPCalendar.setPublicHoliDayType(int,int)',0,'void setPublicHoliDayType(int month, int date);'),(1031,'int date','int',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1508,'net.sourceforge.ganttproject.calendar.GPCalendar.setPublicHoliDayType(int,int)',0,'void setPublicHoliDayType(int month, int date);'),(1032,'Date curDayStart','java.util.Date',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1509,'net.sourceforge.ganttproject.calendar.GPCalendar.setPublicHoliDayType(java.util.Date)',0,'public void setPublicHoliDayType(Date curDayStart);'),(1033,'Date curDayStart','java.util.Date',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1507,'net.sourceforge.ganttproject.calendar.GPCalendar.isPublicHoliDay(java.util.Date)',0,'public boolean isPublicHoliDay(Date curDayStart);'),(1034,'Date curDayStart','java.util.Date',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1506,'net.sourceforge.ganttproject.calendar.GPCalendar.isNonWorkingDay(java.util.Date)',0,'public boolean isNonWorkingDay(Date curDayStart);'),(1035,'Date curDayStart','java.util.Date',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1503,'net.sourceforge.ganttproject.calendar.GPCalendar.getDayTypeDate(java.util.Date)',0,'public GPCalendar.DayType getDayTypeDate(Date curDayStart);'),(1036,'URL calendar','java.net.URL',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1510,'net.sourceforge.ganttproject.calendar.GPCalendar.setPublicHolidays(java.net.URL,net.sourceforge.ganttproject.GanttProject)',0,'public void setPublicHolidays(URL calendar, GanttProject gp);'),(1037,'GanttProject gp','net.sourceforge.ganttproject.GanttProject',53,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1510,'net.sourceforge.ganttproject.calendar.GPCalendar.setPublicHolidays(java.net.URL,net.sourceforge.ganttproject.GanttProject)',0,'public void setPublicHolidays(URL calendar, GanttProject gp);'),(1038,'Date time','java.util.Date',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1500,'net.sourceforge.ganttproject.calendar.GPCalendar.findClosestWorkingTime(java.util.Date)',0,'Date findClosestWorkingTime(Date time);'),(1039,'Date input','java.util.Date',0,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1512,'net.sourceforge.ganttproject.calendar.GPCalendar.shiftDate(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'/**\r\n * Adds <code>shift</code> period to <code>input</code> date taking into\r\n * account this calendar working/non-working time If input date corresponds\r\n * to friday midnight and this calendar if configured to have a weekend on\r\n * saturday and sunday then adding a shift of \"1 day\" will result to the\r\n * midnight of the next monday\r\n */\r\nDate shiftDate(Date input, TaskLength shift);'),(1040,'TaskLength shift','net.sourceforge.ganttproject.task.TaskLength',562,146,'net.sourceforge.ganttproject.calendar.GPCalendar',1512,'net.sourceforge.ganttproject.calendar.GPCalendar.shiftDate(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'/**\r\n * Adds <code>shift</code> period to <code>input</code> date taking into\r\n * account this calendar working/non-working time If input date corresponds\r\n * to friday midnight and this calendar if configured to have a weekend on\r\n * saturday and sunday then adding a shift of \"1 day\" will result to the\r\n * midnight of the next monday\r\n */\r\nDate shiftDate(Date input, TaskLength shift);'),(1041,'Date input','java.util.Date',0,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1522,'net.sourceforge.ganttproject.calendar.GPCalendarBase.shiftDate(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'public Date shiftDate(Date input, TaskLength shift) {\r\n    List activities = getActivities(input, shift);\r\n    if (activities.isEmpty()) {\r\n        throw new RuntimeException((((\"FIXME: Failed to compute calendar activities in time period=\" + shift) + \" starting from \") + input));\r\n    }\r\n    Date result;\r\n    if ((shift.getValue()) >= 0) {\r\n        GPCalendarActivity lastActivity = ((GPCalendarActivity) (activities.get(((activities.size()) - 1))));\r\n        result = lastActivity.getEnd();\r\n    } else {\r\n        GPCalendarActivity firstActivity = ((GPCalendarActivity) (activities.get(0)));\r\n        result = firstActivity.getStart();\r\n    }\r\n    return result;\r\n}'),(1042,'TaskLength shift','net.sourceforge.ganttproject.task.TaskLength',562,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1522,'net.sourceforge.ganttproject.calendar.GPCalendarBase.shiftDate(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'public Date shiftDate(Date input, TaskLength shift) {\r\n    List activities = getActivities(input, shift);\r\n    if (activities.isEmpty()) {\r\n        throw new RuntimeException((((\"FIXME: Failed to compute calendar activities in time period=\" + shift) + \" starting from \") + input));\r\n    }\r\n    Date result;\r\n    if ((shift.getValue()) >= 0) {\r\n        GPCalendarActivity lastActivity = ((GPCalendarActivity) (activities.get(((activities.size()) - 1))));\r\n        result = lastActivity.getEnd();\r\n    } else {\r\n        GPCalendarActivity firstActivity = ((GPCalendarActivity) (activities.get(0)));\r\n        result = firstActivity.getStart();\r\n    }\r\n    return result;\r\n}'),(1043,'Date startDate','java.util.Date',0,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1519,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivities(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'public List getActivities(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    return unitCount > 0 ? getActivitiesForward(startDate, timeUnit, unitCount) : getActivitiesBackward(startDate, timeUnit, (-unitCount));\r\n}'),(1044,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1519,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivities(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'public List getActivities(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    return unitCount > 0 ? getActivitiesForward(startDate, timeUnit, unitCount) : getActivitiesBackward(startDate, timeUnit, (-unitCount));\r\n}'),(1045,'long unitCount','long',0,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1519,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivities(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'public List getActivities(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    return unitCount > 0 ? getActivitiesForward(startDate, timeUnit, unitCount) : getActivitiesBackward(startDate, timeUnit, (-unitCount));\r\n}'),(1046,'Date startDate','java.util.Date',0,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1520,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivitiesBackward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected abstract List getActivitiesBackward(Date startDate, TimeUnit timeUnit, long l);'),(1047,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1520,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivitiesBackward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected abstract List getActivitiesBackward(Date startDate, TimeUnit timeUnit, long l);'),(1048,'long l','long',0,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1520,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivitiesBackward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected abstract List getActivitiesBackward(Date startDate, TimeUnit timeUnit, long l);'),(1049,'Date startDate','java.util.Date',0,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1521,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivitiesForward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected abstract List getActivitiesForward(Date startDate, TimeUnit timeUnit, long l);'),(1050,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1521,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivitiesForward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected abstract List getActivitiesForward(Date startDate, TimeUnit timeUnit, long l);'),(1051,'long l','long',0,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1521,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivitiesForward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected abstract List getActivitiesForward(Date startDate, TimeUnit timeUnit, long l);'),(1052,'/* <GPCalendarActivity> */\r\nDate startingFrom','java.util.Date',0,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1518,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivities(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'public List getActivities(/* <GPCalendarActivity> */\r\nDate startingFrom, TaskLength period) {\r\n    return getActivities(startingFrom, period.getTimeUnit(), period.getLength());\r\n}'),(1053,'TaskLength period','net.sourceforge.ganttproject.task.TaskLength',562,148,'net.sourceforge.ganttproject.calendar.GPCalendarBase',1518,'net.sourceforge.ganttproject.calendar.GPCalendarBase.getActivities(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'public List getActivities(/* <GPCalendarActivity> */\r\nDate startingFrom, TaskLength period) {\r\n    return getActivities(startingFrom, period.getTimeUnit(), period.getLength());\r\n}'),(1054,'Date start','java.util.Date',0,149,'net.sourceforge.ganttproject.calendar.GanttDaysOff',1523,'net.sourceforge.ganttproject.calendar.GanttDaysOff.-init-(java.util.Date,java.util.Date)',0,'public GanttDaysOff(Date start, Date finish) {\r\n    myStart = new GanttCalendar(start);\r\n    myFinish = new GanttCalendar(finish);\r\n}'),(1055,'Date finish','java.util.Date',0,149,'net.sourceforge.ganttproject.calendar.GanttDaysOff',1523,'net.sourceforge.ganttproject.calendar.GanttDaysOff.-init-(java.util.Date,java.util.Date)',0,'public GanttDaysOff(Date start, Date finish) {\r\n    myStart = new GanttCalendar(start);\r\n    myFinish = new GanttCalendar(finish);\r\n}'),(1056,'GanttCalendar start','net.sourceforge.ganttproject.GanttCalendar',24,149,'net.sourceforge.ganttproject.calendar.GanttDaysOff',1524,'net.sourceforge.ganttproject.calendar.GanttDaysOff.-init-(net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar)',0,'public GanttDaysOff(GanttCalendar start, GanttCalendar finish) {\r\n    myStart = new GanttCalendar(start.getYear(), start.getMonth(), start.getDate());\r\n    myFinish = finish;\r\n}'),(1057,'GanttCalendar finish','net.sourceforge.ganttproject.GanttCalendar',24,149,'net.sourceforge.ganttproject.calendar.GanttDaysOff',1524,'net.sourceforge.ganttproject.calendar.GanttDaysOff.-init-(net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar)',0,'public GanttDaysOff(GanttCalendar start, GanttCalendar finish) {\r\n    myStart = new GanttCalendar(start.getYear(), start.getMonth(), start.getDate());\r\n    myFinish = finish;\r\n}'),(1058,'GanttDaysOff dayOffs','net.sourceforge.ganttproject.calendar.GanttDaysOff',149,149,'net.sourceforge.ganttproject.calendar.GanttDaysOff',1526,'net.sourceforge.ganttproject.calendar.GanttDaysOff.equals(net.sourceforge.ganttproject.calendar.GanttDaysOff)',0,'public boolean equals(GanttDaysOff dayOffs) {\r\n    return (dayOffs.getStart().equals(myStart)) && (dayOffs.getFinish().equals(myFinish));\r\n}'),(1059,'GanttCalendar date','net.sourceforge.ganttproject.GanttCalendar',24,149,'net.sourceforge.ganttproject.calendar.GanttDaysOff',1531,'net.sourceforge.ganttproject.calendar.GanttDaysOff.isADayOff(net.sourceforge.ganttproject.GanttCalendar)',0,'public boolean isADayOff(GanttCalendar date) {\r\n    return ((date.equals(myStart)) || (date.equals(myFinish))) || ((date.before(myFinish)) && (date.after(myStart)));\r\n}'),(1060,'Date date','java.util.Date',0,149,'net.sourceforge.ganttproject.calendar.GanttDaysOff',1530,'net.sourceforge.ganttproject.calendar.GanttDaysOff.isADayOff(java.util.Date)',0,'public boolean isADayOff(Date date) {\r\n    return ((date.equals(myStart.getTime())) || (date.equals(myFinish.getTime()))) || ((date.before(myFinish.getTime())) && (date.after(myStart.getTime())));\r\n}'),(1061,'Date date','java.util.Date',0,149,'net.sourceforge.ganttproject.calendar.GanttDaysOff',1532,'net.sourceforge.ganttproject.calendar.GanttDaysOff.isADayOffInWeek(java.util.Date)',0,'public int isADayOffInWeek(Date date) {\r\n    GanttCalendar start = myStart.Clone();\r\n    GanttCalendar finish = myFinish.Clone();\r\n    for (int i = 0; i < 7; i++) {\r\n        start.add((-1));\r\n        finish.add((-1));\r\n        if (((date.equals(start.getTime())) || (date.equals(finish.getTime()))) || ((date.before(finish.getTime())) && (date.after(start.getTime()))))\r\n            return i + 1;\r\n\r\n    }\r\n    return -1;\r\n}'),(1062,'/* <GPCalendarActivity> */\r\nDate startDate','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1536,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getActivities(java.util.Date,java.util.Date)',0,'public List getActivities(/* <GPCalendarActivity> */\r\nDate startDate, final Date endDate) {\r\n    if ((myWeekendDaysCount) == 0) {\r\n        return myRestlessCalendar.getActivities(startDate, endDate);\r\n    }\r\n    List result = new ArrayList();\r\n    Date curDayStart = myFramer.adjustLeft(startDate);\r\n    boolean isWeekendState = isNonWorkingDay(curDayStart);\r\n    // System.err.println(\"getActivities(): start=\"+startDate+\"\r\n    // end=\"+endDate);\r\n    while (curDayStart.before(endDate)) {\r\n        // System.err.println(\"curDayStart=\"+curDayStart);\r\n        Date changeStateDayStart = getStateChangeDate(curDayStart, (!isWeekendState));\r\n        // System.err.println(\"changeStateDayStart=\"+changeStateDayStart);\r\n        if (changeStateDayStart.before(endDate)) {\r\n            result.add(new CalendarActivityImpl(curDayStart, changeStateDayStart, (!isWeekendState)));\r\n            curDayStart = changeStateDayStart;\r\n            isWeekendState = !isWeekendState;\r\n            continue;\r\n        } else {\r\n            result.add(new CalendarActivityImpl(curDayStart, endDate, (!isWeekendState)));\r\n            break;\r\n        }\r\n    } \r\n    return result;\r\n}'),(1063,'final Date endDate','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1536,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getActivities(java.util.Date,java.util.Date)',0,'public List getActivities(/* <GPCalendarActivity> */\r\nDate startDate, final Date endDate) {\r\n    if ((myWeekendDaysCount) == 0) {\r\n        return myRestlessCalendar.getActivities(startDate, endDate);\r\n    }\r\n    List result = new ArrayList();\r\n    Date curDayStart = myFramer.adjustLeft(startDate);\r\n    boolean isWeekendState = isNonWorkingDay(curDayStart);\r\n    // System.err.println(\"getActivities(): start=\"+startDate+\"\r\n    // end=\"+endDate);\r\n    while (curDayStart.before(endDate)) {\r\n        // System.err.println(\"curDayStart=\"+curDayStart);\r\n        Date changeStateDayStart = getStateChangeDate(curDayStart, (!isWeekendState));\r\n        // System.err.println(\"changeStateDayStart=\"+changeStateDayStart);\r\n        if (changeStateDayStart.before(endDate)) {\r\n            result.add(new CalendarActivityImpl(curDayStart, changeStateDayStart, (!isWeekendState)));\r\n            curDayStart = changeStateDayStart;\r\n            isWeekendState = !isWeekendState;\r\n            continue;\r\n        } else {\r\n            result.add(new CalendarActivityImpl(curDayStart, endDate, (!isWeekendState)));\r\n            break;\r\n        }\r\n    } \r\n    return result;\r\n}'),(1064,'Date curDayStart','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1547,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.isWeekend(java.util.Date)',0,'public boolean isWeekend(Date curDayStart) {\r\n    myCalendar.setTime(curDayStart);\r\n    int dayOfWeek = myCalendar.get(Calendar.DAY_OF_WEEK);\r\n    return (myTypes[(dayOfWeek - 1)]) == (GPCalendar.DayType.WEEKEND);\r\n}'),(1065,'Date startDate','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1542,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getStateChangeDate(java.util.Date,boolean)',0,'private Date getStateChangeDate(Date startDate, boolean changeToWeekend) {\r\n    Date nextDayStart = myFramer.adjustRight(startDate);\r\n    if (!(changeToWeekend ^ (isNonWorkingDay(nextDayStart)))) {\r\n        return nextDayStart;\r\n    } else {\r\n        return getStateChangeDate(nextDayStart, changeToWeekend);\r\n    }\r\n}'),(1066,'boolean changeToWeekend','boolean',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1542,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getStateChangeDate(java.util.Date,boolean)',0,'private Date getStateChangeDate(Date startDate, boolean changeToWeekend) {\r\n    Date nextDayStart = myFramer.adjustRight(startDate);\r\n    if (!(changeToWeekend ^ (isNonWorkingDay(nextDayStart)))) {\r\n        return nextDayStart;\r\n    } else {\r\n        return getStateChangeDate(nextDayStart, changeToWeekend);\r\n    }\r\n}'),(1067,'Date startDate','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1543,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getStateChangeDate(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,boolean,boolean)',0,'private Date getStateChangeDate(Date startDate, TimeUnit timeUnit, boolean changeToWeekend, boolean moveRightNotLeft) {\r\n    Date nextUnitStart = (moveRightNotLeft) ? timeUnit.adjustRight(startDate) : timeUnit.jumpLeft(startDate);\r\n    if (!(changeToWeekend ^ (isNonWorkingDay(nextUnitStart)))) {\r\n        return nextUnitStart;\r\n    } else {\r\n        return getStateChangeDate(nextUnitStart, timeUnit, changeToWeekend, moveRightNotLeft);\r\n    }\r\n}'),(1068,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1543,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getStateChangeDate(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,boolean,boolean)',0,'private Date getStateChangeDate(Date startDate, TimeUnit timeUnit, boolean changeToWeekend, boolean moveRightNotLeft) {\r\n    Date nextUnitStart = (moveRightNotLeft) ? timeUnit.adjustRight(startDate) : timeUnit.jumpLeft(startDate);\r\n    if (!(changeToWeekend ^ (isNonWorkingDay(nextUnitStart)))) {\r\n        return nextUnitStart;\r\n    } else {\r\n        return getStateChangeDate(nextUnitStart, timeUnit, changeToWeekend, moveRightNotLeft);\r\n    }\r\n}'),(1069,'boolean changeToWeekend','boolean',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1543,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getStateChangeDate(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,boolean,boolean)',0,'private Date getStateChangeDate(Date startDate, TimeUnit timeUnit, boolean changeToWeekend, boolean moveRightNotLeft) {\r\n    Date nextUnitStart = (moveRightNotLeft) ? timeUnit.adjustRight(startDate) : timeUnit.jumpLeft(startDate);\r\n    if (!(changeToWeekend ^ (isNonWorkingDay(nextUnitStart)))) {\r\n        return nextUnitStart;\r\n    } else {\r\n        return getStateChangeDate(nextUnitStart, timeUnit, changeToWeekend, moveRightNotLeft);\r\n    }\r\n}'),(1070,'boolean moveRightNotLeft','boolean',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1543,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getStateChangeDate(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,boolean,boolean)',0,'private Date getStateChangeDate(Date startDate, TimeUnit timeUnit, boolean changeToWeekend, boolean moveRightNotLeft) {\r\n    Date nextUnitStart = (moveRightNotLeft) ? timeUnit.adjustRight(startDate) : timeUnit.jumpLeft(startDate);\r\n    if (!(changeToWeekend ^ (isNonWorkingDay(nextUnitStart)))) {\r\n        return nextUnitStart;\r\n    } else {\r\n        return getStateChangeDate(nextUnitStart, timeUnit, changeToWeekend, moveRightNotLeft);\r\n    }\r\n}'),(1071,'Date startDate','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1539,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getActivitiesForward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesForward(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    List result = new ArrayList();\r\n    Date unitStart = timeUnit.adjustLeft(startDate);\r\n    while (unitCount > 0) {\r\n        boolean isWeekendState = isNonWorkingDay(unitStart);\r\n        if (isWeekendState) {\r\n            Date workingUnitStart = getStateChangeDate(unitStart, timeUnit, false, true);\r\n            result.add(new CalendarActivityImpl(unitStart, workingUnitStart, false));\r\n            unitStart = workingUnitStart;\r\n            continue;\r\n        }\r\n        Date nextUnitStart = timeUnit.adjustRight(unitStart);\r\n        result.add(new CalendarActivityImpl(unitStart, nextUnitStart, true));\r\n        unitStart = nextUnitStart;\r\n        unitCount--;\r\n    } \r\n    return result;\r\n}'),(1072,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1539,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getActivitiesForward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesForward(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    List result = new ArrayList();\r\n    Date unitStart = timeUnit.adjustLeft(startDate);\r\n    while (unitCount > 0) {\r\n        boolean isWeekendState = isNonWorkingDay(unitStart);\r\n        if (isWeekendState) {\r\n            Date workingUnitStart = getStateChangeDate(unitStart, timeUnit, false, true);\r\n            result.add(new CalendarActivityImpl(unitStart, workingUnitStart, false));\r\n            unitStart = workingUnitStart;\r\n            continue;\r\n        }\r\n        Date nextUnitStart = timeUnit.adjustRight(unitStart);\r\n        result.add(new CalendarActivityImpl(unitStart, nextUnitStart, true));\r\n        unitStart = nextUnitStart;\r\n        unitCount--;\r\n    } \r\n    return result;\r\n}'),(1073,'long unitCount','long',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1539,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getActivitiesForward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesForward(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    List result = new ArrayList();\r\n    Date unitStart = timeUnit.adjustLeft(startDate);\r\n    while (unitCount > 0) {\r\n        boolean isWeekendState = isNonWorkingDay(unitStart);\r\n        if (isWeekendState) {\r\n            Date workingUnitStart = getStateChangeDate(unitStart, timeUnit, false, true);\r\n            result.add(new CalendarActivityImpl(unitStart, workingUnitStart, false));\r\n            unitStart = workingUnitStart;\r\n            continue;\r\n        }\r\n        Date nextUnitStart = timeUnit.adjustRight(unitStart);\r\n        result.add(new CalendarActivityImpl(unitStart, nextUnitStart, true));\r\n        unitStart = nextUnitStart;\r\n        unitCount--;\r\n    } \r\n    return result;\r\n}'),(1074,'Date startDate','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1538,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getActivitiesBackward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesBackward(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    List result = new LinkedList();\r\n    Date unitStart = timeUnit.adjustLeft(startDate);\r\n    while (unitCount > 0) {\r\n        Date prevUnitStart = timeUnit.jumpLeft(unitStart);\r\n        boolean isWeekendState = isNonWorkingDay(prevUnitStart);\r\n        if (isWeekendState) {\r\n            Date lastWorkingUnitStart = getStateChangeDate(prevUnitStart, timeUnit, false, false);\r\n            Date firstWeekendUnitStart = timeUnit.adjustRight(lastWorkingUnitStart);\r\n            Date lastWeekendUnitEnd = unitStart;\r\n            result.add(0, new CalendarActivityImpl(firstWeekendUnitStart, lastWeekendUnitEnd, false));\r\n            unitStart = firstWeekendUnitStart;\r\n        } else {\r\n            result.add(0, new CalendarActivityImpl(prevUnitStart, unitStart, true));\r\n            unitCount--;\r\n            unitStart = prevUnitStart;\r\n        }\r\n    } \r\n    return result;\r\n}'),(1075,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1538,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getActivitiesBackward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesBackward(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    List result = new LinkedList();\r\n    Date unitStart = timeUnit.adjustLeft(startDate);\r\n    while (unitCount > 0) {\r\n        Date prevUnitStart = timeUnit.jumpLeft(unitStart);\r\n        boolean isWeekendState = isNonWorkingDay(prevUnitStart);\r\n        if (isWeekendState) {\r\n            Date lastWorkingUnitStart = getStateChangeDate(prevUnitStart, timeUnit, false, false);\r\n            Date firstWeekendUnitStart = timeUnit.adjustRight(lastWorkingUnitStart);\r\n            Date lastWeekendUnitEnd = unitStart;\r\n            result.add(0, new CalendarActivityImpl(firstWeekendUnitStart, lastWeekendUnitEnd, false));\r\n            unitStart = firstWeekendUnitStart;\r\n        } else {\r\n            result.add(0, new CalendarActivityImpl(prevUnitStart, unitStart, true));\r\n            unitCount--;\r\n            unitStart = prevUnitStart;\r\n        }\r\n    } \r\n    return result;\r\n}'),(1076,'long unitCount','long',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1538,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getActivitiesBackward(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,long)',0,'protected List getActivitiesBackward(Date startDate, TimeUnit timeUnit, long unitCount) {\r\n    List result = new LinkedList();\r\n    Date unitStart = timeUnit.adjustLeft(startDate);\r\n    while (unitCount > 0) {\r\n        Date prevUnitStart = timeUnit.jumpLeft(unitStart);\r\n        boolean isWeekendState = isNonWorkingDay(prevUnitStart);\r\n        if (isWeekendState) {\r\n            Date lastWorkingUnitStart = getStateChangeDate(prevUnitStart, timeUnit, false, false);\r\n            Date firstWeekendUnitStart = timeUnit.adjustRight(lastWorkingUnitStart);\r\n            Date lastWeekendUnitEnd = unitStart;\r\n            result.add(0, new CalendarActivityImpl(firstWeekendUnitStart, lastWeekendUnitEnd, false));\r\n            unitStart = firstWeekendUnitStart;\r\n        } else {\r\n            result.add(0, new CalendarActivityImpl(prevUnitStart, unitStart, true));\r\n            unitCount--;\r\n            unitStart = prevUnitStart;\r\n        }\r\n    } \r\n    return result;\r\n}'),(1077,'int day','int',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1551,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.setWeekDayType(int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'public void setWeekDayType(int day, GPCalendar.DayType type) {\r\n    if (type != (myTypes[(day - 1)])) {\r\n        myWeekendDaysCount += (type == (GPCalendar.DayType.WEEKEND)) ? 1 : -1;\r\n    }\r\n    myTypes[(day - 1)] = type;\r\n}'),(1078,'GPCalendar.DayType type','net.sourceforge.ganttproject.calendar.GPCalendar$DayType',145,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1551,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.setWeekDayType(int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'public void setWeekDayType(int day, GPCalendar.DayType type) {\r\n    if (type != (myTypes[(day - 1)])) {\r\n        myWeekendDaysCount += (type == (GPCalendar.DayType.WEEKEND)) ? 1 : -1;\r\n    }\r\n    myTypes[(day - 1)] = type;\r\n}'),(1079,'int day','int',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1544,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getWeekDayType(int)',0,'public GPCalendar.DayType getWeekDayType(int day) {\r\n    return myTypes[(day - 1)];\r\n}'),(1080,'Date time','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1535,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.findClosestWorkingTime(java.util.Date)',0,'public Date findClosestWorkingTime(Date time) {\r\n    if ((myWeekendDaysCount) == 0) {\r\n        return time;\r\n    }\r\n    if (!(isNonWorkingDay(time))) {\r\n        return time;\r\n    }\r\n    return getStateChangeDate(time, false);\r\n}'),(1081,'int month','int',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1548,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.setPublicHoliDayType(int,int)',0,'public void setPublicHoliDayType(int month, int date) {\r\n    setPublicHoliDayType(new GanttCalendar(1, (month - 1), date).getTime());\r\n    myStableHolidays.add(new GanttCalendar(1, (month - 1), date).getTime());\r\n}'),(1082,'int date','int',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1548,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.setPublicHoliDayType(int,int)',0,'public void setPublicHoliDayType(int month, int date) {\r\n    setPublicHoliDayType(new GanttCalendar(1, (month - 1), date).getTime());\r\n    myStableHolidays.add(new GanttCalendar(1, (month - 1), date).getTime());\r\n}'),(1083,'Date curDayStart','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1549,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.setPublicHoliDayType(java.util.Date)',0,'public void setPublicHoliDayType(Date curDayStart) {\r\n    publicHolidaysArray.add(curDayStart);\r\n}'),(1084,'Date curDayStart','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1546,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.isPublicHoliDay(java.util.Date)',0,'public boolean isPublicHoliDay(Date curDayStart) {\r\n    boolean result = publicHolidaysArray.contains(curDayStart);\r\n    if (!result) {\r\n        result = myStableHolidays.contains(new GanttCalendar(1, curDayStart.getMonth(), curDayStart.getDate()).getTime());\r\n    }\r\n    return result;\r\n}'),(1085,'Date curDayStart','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1540,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getDayTypeDate(java.util.Date)',0,'public GPCalendar.DayType getDayTypeDate(Date curDayStart) {\r\n    myCalendar.setTime(curDayStart);\r\n    int dayOfYear = myCalendar.get(Calendar.DAY_OF_YEAR);\r\n    myCalendar.setTime(curDayStart);\r\n    int dayOfWeek = myCalendar.get(Calendar.DAY_OF_WEEK);\r\n    if ((!(isPublicHoliDay(curDayStart))) && ((getWeekDayType(dayOfWeek)) == (GPCalendar.DayType.WORKING)))\r\n        return GPCalendar.DayType.WORKING;\r\n    else\r\n        if (isPublicHoliDay(curDayStart))\r\n            return GPCalendar.DayType.HOLIDAY;\r\n        else\r\n            return GPCalendar.DayType.WEEKEND;\r\n\r\n\r\n}'),(1086,'Date curDayStart','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1545,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.isNonWorkingDay(java.util.Date)',0,'public boolean isNonWorkingDay(Date curDayStart) {\r\n    if ((isWeekend(curDayStart)) || (isPublicHoliDay(curDayStart)))\r\n        return true;\r\n    else\r\n        return false;\r\n\r\n}'),(1087,'URL calendar','java.net.URL',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1550,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.setPublicHolidays(java.net.URL,net.sourceforge.ganttproject.GanttProject)',0,'public void setPublicHolidays(URL calendar, GanttProject gp) {\r\n    publicHolidaysArray.clear();\r\n    if (calendar != null) {\r\n        XMLCalendarOpen opener = new XMLCalendarOpen();\r\n        HolidayTagHandler dependencyHandler = new HolidayTagHandler(gp);\r\n        opener.addTagHandler(dependencyHandler);\r\n        opener.addParsingListener(dependencyHandler);\r\n        try {\r\n            opener.load(calendar.openStream());\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}'),(1088,'GanttProject gp','net.sourceforge.ganttproject.GanttProject',53,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1550,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.setPublicHolidays(java.net.URL,net.sourceforge.ganttproject.GanttProject)',0,'public void setPublicHolidays(URL calendar, GanttProject gp) {\r\n    publicHolidaysArray.clear();\r\n    if (calendar != null) {\r\n        XMLCalendarOpen opener = new XMLCalendarOpen();\r\n        HolidayTagHandler dependencyHandler = new HolidayTagHandler(gp);\r\n        opener.addTagHandler(dependencyHandler);\r\n        opener.addParsingListener(dependencyHandler);\r\n        try {\r\n            opener.load(calendar.openStream());\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}'),(1089,'Date startingFrom','java.util.Date',0,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1537,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getActivities(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'public List getActivities(Date startingFrom, TaskLength period) {\r\n    return getActivities(startingFrom, period.getTimeUnit(), period.getLength());\r\n}'),(1090,'TaskLength period','net.sourceforge.ganttproject.task.TaskLength',562,150,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl',1537,'net.sourceforge.ganttproject.calendar.WeekendCalendarImpl.getActivities(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'public List getActivities(Date startingFrom, TaskLength period) {\r\n    return getActivities(startingFrom, period.getTimeUnit(), period.getLength());\r\n}'),(1091,'String extension','java.lang.String',0,152,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$Filter',1565,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$Filter.-init-(java.lang.String)',0,'public Filter(String extension) {\r\n    if (extension == null) {\r\n        throw new NullPointerException(\"La description (ou extension) ne peut �tre null.\");\r\n    }\r\n    this.extension = extension;\r\n}'),(1092,'InputStream inputStream','java.io.InputStream',0,154,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen',1559,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen.load(java.io.InputStream)',0,'boolean load(InputStream inputStream) throws IOException, ParserConfigurationException, SAXException {\r\n    // Use an instance of ourselves as the SAX event handler\r\n    DefaultHandler handler = new XMLCalendarOpen.GanttXMLParser();\r\n    // Use the default (non-validating) parser\r\n    SAXParserFactory factory = SAXParserFactory.newInstance();\r\n    SAXParser saxParser = factory.newSAXParser();\r\n    saxParser.parse(inputStream, handler);\r\n    return true;\r\n}'),(1093,'TagHandler handler','net.sourceforge.ganttproject.parser.TagHandler',481,154,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen',1555,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen.addTagHandler(net.sourceforge.ganttproject.parser.TagHandler)',0,'void addTagHandler(TagHandler handler) {\r\n    myTagHandlers.add(handler);\r\n}'),(1094,'ParsingListener listener','net.sourceforge.ganttproject.parser.ParsingListener',477,154,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen',1554,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen.addParsingListener(net.sourceforge.ganttproject.parser.ParsingListener)',0,'void addParsingListener(ParsingListener listener) {\r\n    myListeners.add(listener);\r\n}'),(1095,'String namespaceURI','java.lang.String',0,151,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler',1564,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    String eName = qName;// element name\r\n\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getLocalName(i);// Attr name\r\n\r\n            if (\"\".equals(aName)) {\r\n                aName = attrs.getQName(i);\r\n                // The project part\r\n            }\r\n            if (eName.equals(\"calendar\")) {\r\n                if (aName.equals(\"name\")) {\r\n                    name = attrs.getValue(i);\r\n                } else\r\n                    if (aName.equals(\"type\")) {\r\n                    }\r\n\r\n            }\r\n        }\r\n    }\r\n}'),(1096,'String sName','java.lang.String',0,151,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler',1564,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    String eName = qName;// element name\r\n\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getLocalName(i);// Attr name\r\n\r\n            if (\"\".equals(aName)) {\r\n                aName = attrs.getQName(i);\r\n                // The project part\r\n            }\r\n            if (eName.equals(\"calendar\")) {\r\n                if (aName.equals(\"name\")) {\r\n                    name = attrs.getValue(i);\r\n                } else\r\n                    if (aName.equals(\"type\")) {\r\n                    }\r\n\r\n            }\r\n        }\r\n    }\r\n}'),(1097,'String qName','java.lang.String',0,151,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler',1564,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    String eName = qName;// element name\r\n\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getLocalName(i);// Attr name\r\n\r\n            if (\"\".equals(aName)) {\r\n                aName = attrs.getQName(i);\r\n                // The project part\r\n            }\r\n            if (eName.equals(\"calendar\")) {\r\n                if (aName.equals(\"name\")) {\r\n                    name = attrs.getValue(i);\r\n                } else\r\n                    if (aName.equals(\"type\")) {\r\n                    }\r\n\r\n            }\r\n        }\r\n    }\r\n}'),(1098,'Attributes attrs','org.xml.sax.Attributes',0,151,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler',1564,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    String eName = qName;// element name\r\n\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getLocalName(i);// Attr name\r\n\r\n            if (\"\".equals(aName)) {\r\n                aName = attrs.getQName(i);\r\n                // The project part\r\n            }\r\n            if (eName.equals(\"calendar\")) {\r\n                if (aName.equals(\"name\")) {\r\n                    name = attrs.getValue(i);\r\n                } else\r\n                    if (aName.equals(\"type\")) {\r\n                    }\r\n\r\n            }\r\n        }\r\n    }\r\n}'),(1099,'String namespaceURI','java.lang.String',0,151,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler',1562,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(1100,'String sName','java.lang.String',0,151,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler',1562,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(1101,'String qName','java.lang.String',0,151,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler',1562,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$DefaultTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(1102,'String namespaceURI','java.lang.String',0,153,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser',1572,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        try {\r\n            next.startElement(namespaceURI, sName, qName, attrs);\r\n        } catch (FileFormatException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}'),(1103,'String sName','java.lang.String',0,153,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser',1572,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        try {\r\n            next.startElement(namespaceURI, sName, qName, attrs);\r\n        } catch (FileFormatException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}'),(1104,'// simple\r\n// name\r\nString qName','java.lang.String',0,153,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser',1572,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        try {\r\n            next.startElement(namespaceURI, sName, qName, attrs);\r\n        } catch (FileFormatException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}'),(1105,'// qualified name\r\nAttributes attrs','org.xml.sax.Attributes',0,153,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser',1572,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        try {\r\n            next.startElement(namespaceURI, sName, qName, attrs);\r\n        } catch (FileFormatException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}'),(1106,'String namespaceURI','java.lang.String',0,153,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser',1571,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) throws SAXException {\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        next.endElement(namespaceURI, sName, qName);\r\n    }\r\n}'),(1107,'String sName','java.lang.String',0,153,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser',1571,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) throws SAXException {\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        next.endElement(namespaceURI, sName, qName);\r\n    }\r\n}'),(1108,'String qName','java.lang.String',0,153,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser',1571,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$GanttXMLParser.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) throws SAXException {\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        next.endElement(namespaceURI, sName, qName);\r\n    }\r\n}'),(1109,'File file','java.io.File',0,152,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$Filter',1567,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$Filter.accept(java.io.File,java.lang.String)',0,'public boolean accept(File file, String arg1) {\r\n    return arg1.endsWith(extension);\r\n}'),(1110,'String arg1','java.lang.String',0,152,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$Filter',1567,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$Filter.accept(java.io.File,java.lang.String)',0,'public boolean accept(File file, String arg1) {\r\n    return arg1.endsWith(extension);\r\n}'),(1111,'File arg0','java.io.File',0,152,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$Filter',1566,'net.sourceforge.ganttproject.calendar.XMLCalendarOpen$Filter.accept(java.io.File)',0,'public boolean accept(File arg0) {\r\n    // TODO Auto-generated method stub\r\n    return false;\r\n}'),(1112,'ChartModelBase model','net.sourceforge.ganttproject.chart.ChartModelBase',170,155,'net.sourceforge.ganttproject.chart.BackgroundRendererImpl',1573,'net.sourceforge.ganttproject.chart.BackgroundRendererImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelBase)',0,'public BackgroundRendererImpl(ChartModelBase model) {\r\n    super(model);\r\n}'),(1113,'ChartModelBase model','net.sourceforge.ganttproject.chart.ChartModelBase',170,156,'net.sourceforge.ganttproject.chart.BottomUnitLineRendererImpl',1575,'net.sourceforge.ganttproject.chart.BottomUnitLineRendererImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public BottomUnitLineRendererImpl(ChartModelBase model, UIConfiguration projectConfig) {\r\n    this(model, new GraphicPrimitiveContainer(), projectConfig);\r\n}'),(1114,'UIConfiguration projectConfig','net.sourceforge.ganttproject.gui.UIConfiguration',335,156,'net.sourceforge.ganttproject.chart.BottomUnitLineRendererImpl',1575,'net.sourceforge.ganttproject.chart.BottomUnitLineRendererImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public BottomUnitLineRendererImpl(ChartModelBase model, UIConfiguration projectConfig) {\r\n    this(model, new GraphicPrimitiveContainer(), projectConfig);\r\n}'),(1115,'ChartModelBase model','net.sourceforge.ganttproject.chart.ChartModelBase',170,156,'net.sourceforge.ganttproject.chart.BottomUnitLineRendererImpl',1576,'net.sourceforge.ganttproject.chart.BottomUnitLineRendererImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public BottomUnitLineRendererImpl(ChartModelBase model, GraphicPrimitiveContainer primitiveContainer, UIConfiguration projectConfig) {\r\n    super(model);\r\n    myPrimitiveContainer = primitiveContainer;\r\n    myRedlineOption = projectConfig.getRedlineOption();\r\n    myProjectDatesOption = projectConfig.getProjectBoundariesOption();\r\n}'),(1116,'GraphicPrimitiveContainer primitiveContainer','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',192,156,'net.sourceforge.ganttproject.chart.BottomUnitLineRendererImpl',1576,'net.sourceforge.ganttproject.chart.BottomUnitLineRendererImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public BottomUnitLineRendererImpl(ChartModelBase model, GraphicPrimitiveContainer primitiveContainer, UIConfiguration projectConfig) {\r\n    super(model);\r\n    myPrimitiveContainer = primitiveContainer;\r\n    myRedlineOption = projectConfig.getRedlineOption();\r\n    myProjectDatesOption = projectConfig.getProjectBoundariesOption();\r\n}'),(1117,'UIConfiguration projectConfig','net.sourceforge.ganttproject.gui.UIConfiguration',335,156,'net.sourceforge.ganttproject.chart.BottomUnitLineRendererImpl',1576,'net.sourceforge.ganttproject.chart.BottomUnitLineRendererImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public BottomUnitLineRendererImpl(ChartModelBase model, GraphicPrimitiveContainer primitiveContainer, UIConfiguration projectConfig) {\r\n    super(model);\r\n    myPrimitiveContainer = primitiveContainer;\r\n    myRedlineOption = projectConfig.getRedlineOption();\r\n    myProjectDatesOption = projectConfig.getProjectBoundariesOption();\r\n}'),(1118,'TimeUnitStack timeUnitStack','net.sourceforge.ganttproject.time.TimeUnitStack',639,158,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl',1585,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl.-init-(net.sourceforge.ganttproject.time.TimeUnitStack)',0,'CachingOffsetCalculatorImpl(TimeUnitStack timeUnitStack) {\r\n    myCalculator = new OffsetCalculatorImpl(timeUnitStack);\r\n}'),(1119,'TimeUnit mainUnit','net.sourceforge.ganttproject.time.TimeUnit',630,157,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl$UnitPair',1589,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl$UnitPair.-init-(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'private UnitPair(TimeUnit mainUnit, TimeUnit offsetUnit) {\r\n    myMainUnit = mainUnit;\r\n    myOffsetUnit = offsetUnit;\r\n}'),(1120,'TimeUnit offsetUnit','net.sourceforge.ganttproject.time.TimeUnit',630,157,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl$UnitPair',1589,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl$UnitPair.-init-(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'private UnitPair(TimeUnit mainUnit, TimeUnit offsetUnit) {\r\n    myMainUnit = mainUnit;\r\n    myOffsetUnit = offsetUnit;\r\n}'),(1121,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,158,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl',1587,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    ChartModelBase.Offset[] result = null;\r\n    CachingOffsetCalculatorImpl.UnitPair unitPair = new CachingOffsetCalculatorImpl.UnitPair(frameBottomUnit, offsetUnit);\r\n    LinkedHashMap startDate_Offsets = ((LinkedHashMap) (myUnitPair_StartDate.get(unitPair)));\r\n    if (startDate_Offsets == null) {\r\n        startDate_Offsets = new LinkedHashMap();\r\n        myUnitPair_StartDate.put(unitPair, startDate_Offsets);\r\n    }\r\n    result = ((ChartModelBase.Offset[]) (startDate_Offsets.get(bottomUnitStartDate)));\r\n    if (result == null) {\r\n        result = myCalculator.calculateOffsets(timeFrame, frameBottomUnit, bottomUnitStartDate, offsetUnit, frameBottomUnitWidth);\r\n        startDate_Offsets.put(bottomUnitStartDate, result);\r\n        if ((startDate_Offsets.size()) > (CachingOffsetCalculatorImpl.MAX_CACHE_SIZE)) {\r\n            Iterator iter = startDate_Offsets.entrySet().iterator();\r\n            iter.next();\r\n            iter.remove();\r\n        }\r\n    }\r\n    return result;\r\n}'),(1122,'TimeUnit frameBottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,158,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl',1587,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    ChartModelBase.Offset[] result = null;\r\n    CachingOffsetCalculatorImpl.UnitPair unitPair = new CachingOffsetCalculatorImpl.UnitPair(frameBottomUnit, offsetUnit);\r\n    LinkedHashMap startDate_Offsets = ((LinkedHashMap) (myUnitPair_StartDate.get(unitPair)));\r\n    if (startDate_Offsets == null) {\r\n        startDate_Offsets = new LinkedHashMap();\r\n        myUnitPair_StartDate.put(unitPair, startDate_Offsets);\r\n    }\r\n    result = ((ChartModelBase.Offset[]) (startDate_Offsets.get(bottomUnitStartDate)));\r\n    if (result == null) {\r\n        result = myCalculator.calculateOffsets(timeFrame, frameBottomUnit, bottomUnitStartDate, offsetUnit, frameBottomUnitWidth);\r\n        startDate_Offsets.put(bottomUnitStartDate, result);\r\n        if ((startDate_Offsets.size()) > (CachingOffsetCalculatorImpl.MAX_CACHE_SIZE)) {\r\n            Iterator iter = startDate_Offsets.entrySet().iterator();\r\n            iter.next();\r\n            iter.remove();\r\n        }\r\n    }\r\n    return result;\r\n}'),(1123,'Date bottomUnitStartDate','java.util.Date',0,158,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl',1587,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    ChartModelBase.Offset[] result = null;\r\n    CachingOffsetCalculatorImpl.UnitPair unitPair = new CachingOffsetCalculatorImpl.UnitPair(frameBottomUnit, offsetUnit);\r\n    LinkedHashMap startDate_Offsets = ((LinkedHashMap) (myUnitPair_StartDate.get(unitPair)));\r\n    if (startDate_Offsets == null) {\r\n        startDate_Offsets = new LinkedHashMap();\r\n        myUnitPair_StartDate.put(unitPair, startDate_Offsets);\r\n    }\r\n    result = ((ChartModelBase.Offset[]) (startDate_Offsets.get(bottomUnitStartDate)));\r\n    if (result == null) {\r\n        result = myCalculator.calculateOffsets(timeFrame, frameBottomUnit, bottomUnitStartDate, offsetUnit, frameBottomUnitWidth);\r\n        startDate_Offsets.put(bottomUnitStartDate, result);\r\n        if ((startDate_Offsets.size()) > (CachingOffsetCalculatorImpl.MAX_CACHE_SIZE)) {\r\n            Iterator iter = startDate_Offsets.entrySet().iterator();\r\n            iter.next();\r\n            iter.remove();\r\n        }\r\n    }\r\n    return result;\r\n}'),(1124,'TimeUnit offsetUnit','net.sourceforge.ganttproject.time.TimeUnit',630,158,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl',1587,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    ChartModelBase.Offset[] result = null;\r\n    CachingOffsetCalculatorImpl.UnitPair unitPair = new CachingOffsetCalculatorImpl.UnitPair(frameBottomUnit, offsetUnit);\r\n    LinkedHashMap startDate_Offsets = ((LinkedHashMap) (myUnitPair_StartDate.get(unitPair)));\r\n    if (startDate_Offsets == null) {\r\n        startDate_Offsets = new LinkedHashMap();\r\n        myUnitPair_StartDate.put(unitPair, startDate_Offsets);\r\n    }\r\n    result = ((ChartModelBase.Offset[]) (startDate_Offsets.get(bottomUnitStartDate)));\r\n    if (result == null) {\r\n        result = myCalculator.calculateOffsets(timeFrame, frameBottomUnit, bottomUnitStartDate, offsetUnit, frameBottomUnitWidth);\r\n        startDate_Offsets.put(bottomUnitStartDate, result);\r\n        if ((startDate_Offsets.size()) > (CachingOffsetCalculatorImpl.MAX_CACHE_SIZE)) {\r\n            Iterator iter = startDate_Offsets.entrySet().iterator();\r\n            iter.next();\r\n            iter.remove();\r\n        }\r\n    }\r\n    return result;\r\n}'),(1125,'int frameBottomUnitWidth','int',0,158,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl',1587,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    ChartModelBase.Offset[] result = null;\r\n    CachingOffsetCalculatorImpl.UnitPair unitPair = new CachingOffsetCalculatorImpl.UnitPair(frameBottomUnit, offsetUnit);\r\n    LinkedHashMap startDate_Offsets = ((LinkedHashMap) (myUnitPair_StartDate.get(unitPair)));\r\n    if (startDate_Offsets == null) {\r\n        startDate_Offsets = new LinkedHashMap();\r\n        myUnitPair_StartDate.put(unitPair, startDate_Offsets);\r\n    }\r\n    result = ((ChartModelBase.Offset[]) (startDate_Offsets.get(bottomUnitStartDate)));\r\n    if (result == null) {\r\n        result = myCalculator.calculateOffsets(timeFrame, frameBottomUnit, bottomUnitStartDate, offsetUnit, frameBottomUnitWidth);\r\n        startDate_Offsets.put(bottomUnitStartDate, result);\r\n        if ((startDate_Offsets.size()) > (CachingOffsetCalculatorImpl.MAX_CACHE_SIZE)) {\r\n            Iterator iter = startDate_Offsets.entrySet().iterator();\r\n            iter.next();\r\n            iter.remove();\r\n        }\r\n    }\r\n    return result;\r\n}'),(1126,'Object o','java.lang.Object',0,157,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl$UnitPair',1590,'net.sourceforge.ganttproject.chart.CachingOffsetCalculatorImpl$UnitPair.equals(java.lang.Object)',0,'public boolean equals(Object o) {\r\n    if (false == (o instanceof CachingOffsetCalculatorImpl.UnitPair)) {\r\n        return false;\r\n    }\r\n    CachingOffsetCalculatorImpl.UnitPair rvalue = ((CachingOffsetCalculatorImpl.UnitPair) (o));\r\n    return (rvalue.myMainUnit.equals(myMainUnit)) && (rvalue.myOffsetUnit.equals(myOffsetUnit));\r\n}'),(1127,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,159,'net.sourceforge.ganttproject.chart.Chart',1600,'net.sourceforge.ganttproject.chart.Chart.getRenderedImage(net.sourceforge.ganttproject.GanttExportSettings)',0,'public RenderedImage getRenderedImage(GanttExportSettings settings);'),(1128,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,159,'net.sourceforge.ganttproject.chart.Chart',1595,'net.sourceforge.ganttproject.chart.Chart.getChart(net.sourceforge.ganttproject.GanttExportSettings)',0,'/**\r\n *\r\n *\r\n * @deprecated Use getRenderedImage\r\n */\r\npublic BufferedImage getChart(GanttExportSettings settings);'),(1129,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,159,'net.sourceforge.ganttproject.chart.Chart',1606,'net.sourceforge.ganttproject.chart.Chart.setTaskManager(net.sourceforge.ganttproject.task.TaskManager)',0,'public void setTaskManager(TaskManager taskManager);'),(1130,'ChartSelection selection','net.sourceforge.ganttproject.chart.ChartSelection',177,159,'net.sourceforge.ganttproject.chart.Chart',1593,'net.sourceforge.ganttproject.chart.Chart.canPaste(net.sourceforge.ganttproject.chart.ChartSelection)',0,'public IStatus canPaste(ChartSelection selection);'),(1131,'ChartSelection selection','net.sourceforge.ganttproject.chart.ChartSelection',177,159,'net.sourceforge.ganttproject.chart.Chart',1603,'net.sourceforge.ganttproject.chart.Chart.paste(net.sourceforge.ganttproject.chart.ChartSelection)',0,'public void paste(ChartSelection selection);'),(1132,'ChartSelectionListener listener','net.sourceforge.ganttproject.chart.ChartSelectionListener',178,159,'net.sourceforge.ganttproject.chart.Chart',1592,'net.sourceforge.ganttproject.chart.Chart.addSelectionListener(net.sourceforge.ganttproject.chart.ChartSelectionListener)',0,'public void addSelectionListener(ChartSelectionListener listener);'),(1133,'ChartSelectionListener listener','net.sourceforge.ganttproject.chart.ChartSelectionListener',178,159,'net.sourceforge.ganttproject.chart.Chart',1604,'net.sourceforge.ganttproject.chart.Chart.removeSelectionListener(net.sourceforge.ganttproject.chart.ChartSelectionListener)',0,'public void removeSelectionListener(ChartSelectionListener listener);'),(1134,'ChartModelBase chartModel','net.sourceforge.ganttproject.chart.ChartModelBase',170,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1607,'net.sourceforge.ganttproject.chart.ChartGridImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public ChartGridImpl(ChartModelBase chartModel, final UIConfiguration projectConfig) {\r\n    super(chartModel);\r\n    myRedlineOption = projectConfig.getRedlineOption();\r\n    myProjectDatesOption = projectConfig.getProjectBoundariesOption();\r\n    myOptions = new ChartOptionGroup(\"ganttChartGridDetails\", new GPOption[]{ myRedlineOption, myProjectDatesOption }, chartModel.getOptionEventDispatcher());\r\n}'),(1135,'final UIConfiguration projectConfig','net.sourceforge.ganttproject.gui.UIConfiguration',335,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1607,'net.sourceforge.ganttproject.chart.ChartGridImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public ChartGridImpl(ChartModelBase chartModel, final UIConfiguration projectConfig) {\r\n    super(chartModel);\r\n    myRedlineOption = projectConfig.getRedlineOption();\r\n    myProjectDatesOption = projectConfig.getProjectBoundariesOption();\r\n    myOptions = new ChartOptionGroup(\"ganttChartGridDetails\", new GPOption[]{ myRedlineOption, myProjectDatesOption }, chartModel.getOptionEventDispatcher());\r\n}'),(1136,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1616,'net.sourceforge.ganttproject.chart.ChartGridImpl.startTimeFrame(net.sourceforge.ganttproject.time.TimeFrame)',0,'public void startTimeFrame(TimeFrame timeFrame) {\r\n    myCurrentFrame = timeFrame;\r\n}'),(1137,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1611,'net.sourceforge.ganttproject.chart.ChartGridImpl.endTimeFrame(net.sourceforge.ganttproject.time.TimeFrame)',0,'public void endTimeFrame(TimeFrame timeFrame) {\r\n    myCurrentFrame = null;\r\n}'),(1138,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1617,'net.sourceforge.ganttproject.chart.ChartGridImpl.startUnitLine(net.sourceforge.ganttproject.time.TimeUnit)',0,'public void startUnitLine(TimeUnit timeUnit) {\r\n    if (timeUnit == (myCurrentFrame.getBottomUnit())) {\r\n        areUnitsAccepted = true;\r\n        myCurrentUnit = timeUnit;\r\n    }\r\n}'),(1139,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1612,'net.sourceforge.ganttproject.chart.ChartGridImpl.endUnitLine(net.sourceforge.ganttproject.time.TimeUnit)',0,'public void endUnitLine(TimeUnit timeUnit) {\r\n    areUnitsAccepted = false;\r\n    myCurrentUnit = null;\r\n}'),(1140,'int unitIndex','int',0,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1615,'net.sourceforge.ganttproject.chart.ChartGridImpl.nextTimeUnit(int)',0,'public void nextTimeUnit(int unitIndex) {\r\n    if (areUnitsAccepted) {\r\n        // if (myRedlineOption.isChecked()\r\n        // && myCurrentFrame.getUnitStart(myCurrentUnit, unitIndex)\r\n        // .compareTo(myToday) <= 0\r\n        // && myCurrentFrame.getUnitFinish(myCurrentUnit, unitIndex)\r\n        // .compareTo(myToday) > 0) {\r\n        // \r\n        // }\r\n        Date unitStart = myCurrentFrame.getUnitStart(myCurrentUnit, unitIndex);\r\n        DayTypeAlternance[] alternance = getChartModel().getDayTypeAlternance(myCurrentFrame, myCurrentUnit, unitIndex);\r\n        ChartModelBase.Offset[] offsets = getChartModel().calculateOffsets(myCurrentFrame, myCurrentUnit, unitStart, getChartModel().getTimeUnitStack().getDefaultTimeUnit(), getChartModel().getBottomUnitWidth());\r\n        if (myRedlineOption.isChecked()) {\r\n            drawDateLine(unitStart, unitIndex, myToday, offsets, Color.RED, 2);\r\n        }\r\n        if (isProjectBoundariesOptionOn()) {\r\n            drawDateLine(unitStart, unitIndex, projectStart, offsets, Color.BLUE, 0);\r\n            drawDateLine(unitStart, unitIndex, projectEnd, offsets, Color.BLUE, 0);\r\n        }\r\n        // int posX = myPosX;\r\n        // float delta = (float) getChartModel().getBottomUnitWidth()\r\n        // / (float) alternance.length;\r\n        // int width=0;\r\n        int prevOffset = 0;\r\n        // DayTypeAlternance next=null;\r\n        for (int i = 0; i < (alternance.length); i++) {\r\n            DayTypeAlternance next = alternance[i];\r\n            int alternanceEndOffset = getChartModel().getBottomUnitWidth();\r\n            for (int j = 0; j < (offsets.length); j++) {\r\n                if (offsets[j].getOffsetEnd().equals(next.getEnd())) {\r\n                    alternanceEndOffset = offsets[j].getOffsetPixels();\r\n                    break;\r\n                }\r\n            }\r\n            // System.err.println(\"[ChartGridImpl] nextTimeUnit(): lternance=\"+next);\r\n            // int width = (int)(next.getDuration().getLength(myCurrentUnit)*getChartModel().getBottomUnitWidth());\r\n            // posX = (int) (myPosX + delta * i);\r\n            // nextPosX = i < alternance.length - 1 ? (int) (myPosX + delta\r\n            // * (i + 1))\r\n            // : myPosX + getChartModel().getBottomUnitWidth();\r\n            // width = nextPosX - posX;\r\n            if ((GPCalendar.DayType.WEEKEND) == (next.getDayType())) {\r\n                // System.err.println(\"[ChartGridImpl] nextTimeUnit(): prevOffset=\"+prevOffset+\" endOffset=\"+alternanceEndOffset);\r\n                // System.err.println(\"[ChartGridImpl] nextTimeUnit(): end=\"+next.getEnd()+\" offset=\"+alternanceEndOffset+\" bottom width=\"+getChartModel().getBottomUnitWidth());\r\n                GraphicPrimitiveContainer.Rectangle r = getPrimitiveContainer().createRectangle(((myPosX) + prevOffset), 0, (alternanceEndOffset - prevOffset), getHeight());\r\n                r.setBackgroundColor(getConfig().getHolidayTimeBackgroundColor());\r\n                r.setStyle(\"calendar.holiday\");\r\n                getPrimitiveContainer().bind(r, next.getDayType());\r\n            }\r\n            if ((GPCalendar.DayType.HOLIDAY) == (next.getDayType())) {\r\n                GraphicPrimitiveContainer.Rectangle r = getPrimitiveContainer().createRectangle(((myPosX) + prevOffset), 0, alternanceEndOffset, getHeight());\r\n                r.setBackgroundColor(getConfig().getPublicHolidayTimeBackgroundColor());\r\n                r.setStyle(\"calendar.holiday\");\r\n                getPrimitiveContainer().bind(r, next.getDayType());\r\n            }\r\n            prevOffset = alternanceEndOffset;\r\n            // posX = myPosX+width;\r\n        }\r\n        // \r\n        myPosX += getChartModel().getBottomUnitWidth();\r\n    }\r\n}'),(1141,'Date unitStart','java.util.Date',0,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1610,'net.sourceforge.ganttproject.chart.ChartGridImpl.drawDateLine(java.util.Date,int,java.util.Date,net.sourceforge.ganttproject.chart.ChartModelBase$Offset[],java.awt.Color,int)',0,'private void drawDateLine(Date unitStart, int unitIndex, Date lineDate, ChartModelBase.Offset[] offsets, Color color, int horizontalOffset) {\r\n    int redLineOffset = -1;\r\n    if ((unitStart.before(lineDate)) && (myCurrentFrame.getUnitFinish(myCurrentUnit, unitIndex).after(lineDate))) {\r\n        for (int i = 0; i < (offsets.length); i++) {\r\n            if (offsets[i].getOffsetEnd().equals(lineDate)) {\r\n                redLineOffset = offsets[i].getOffsetPixels();\r\n                break;\r\n            }\r\n        }\r\n    } else\r\n        if (unitStart.equals(lineDate)) {\r\n            redLineOffset = 0;\r\n        }\r\n\r\n    if (redLineOffset >= 0) {\r\n        GraphicPrimitiveContainer.Line redLine = getPrimitiveContainer().createLine((((myPosX) + redLineOffset) + horizontalOffset), 0, (((myPosX) + redLineOffset) + horizontalOffset), getHeight());\r\n        redLine.setForegroundColor(color);\r\n    }\r\n}'),(1142,'int unitIndex','int',0,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1610,'net.sourceforge.ganttproject.chart.ChartGridImpl.drawDateLine(java.util.Date,int,java.util.Date,net.sourceforge.ganttproject.chart.ChartModelBase$Offset[],java.awt.Color,int)',0,'private void drawDateLine(Date unitStart, int unitIndex, Date lineDate, ChartModelBase.Offset[] offsets, Color color, int horizontalOffset) {\r\n    int redLineOffset = -1;\r\n    if ((unitStart.before(lineDate)) && (myCurrentFrame.getUnitFinish(myCurrentUnit, unitIndex).after(lineDate))) {\r\n        for (int i = 0; i < (offsets.length); i++) {\r\n            if (offsets[i].getOffsetEnd().equals(lineDate)) {\r\n                redLineOffset = offsets[i].getOffsetPixels();\r\n                break;\r\n            }\r\n        }\r\n    } else\r\n        if (unitStart.equals(lineDate)) {\r\n            redLineOffset = 0;\r\n        }\r\n\r\n    if (redLineOffset >= 0) {\r\n        GraphicPrimitiveContainer.Line redLine = getPrimitiveContainer().createLine((((myPosX) + redLineOffset) + horizontalOffset), 0, (((myPosX) + redLineOffset) + horizontalOffset), getHeight());\r\n        redLine.setForegroundColor(color);\r\n    }\r\n}'),(1143,'Date lineDate','java.util.Date',0,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1610,'net.sourceforge.ganttproject.chart.ChartGridImpl.drawDateLine(java.util.Date,int,java.util.Date,net.sourceforge.ganttproject.chart.ChartModelBase$Offset[],java.awt.Color,int)',0,'private void drawDateLine(Date unitStart, int unitIndex, Date lineDate, ChartModelBase.Offset[] offsets, Color color, int horizontalOffset) {\r\n    int redLineOffset = -1;\r\n    if ((unitStart.before(lineDate)) && (myCurrentFrame.getUnitFinish(myCurrentUnit, unitIndex).after(lineDate))) {\r\n        for (int i = 0; i < (offsets.length); i++) {\r\n            if (offsets[i].getOffsetEnd().equals(lineDate)) {\r\n                redLineOffset = offsets[i].getOffsetPixels();\r\n                break;\r\n            }\r\n        }\r\n    } else\r\n        if (unitStart.equals(lineDate)) {\r\n            redLineOffset = 0;\r\n        }\r\n\r\n    if (redLineOffset >= 0) {\r\n        GraphicPrimitiveContainer.Line redLine = getPrimitiveContainer().createLine((((myPosX) + redLineOffset) + horizontalOffset), 0, (((myPosX) + redLineOffset) + horizontalOffset), getHeight());\r\n        redLine.setForegroundColor(color);\r\n    }\r\n}'),(1144,'ChartModelBase.Offset[] offsets','net.sourceforge.ganttproject.chart.ChartModelBase$Offset[]',0,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1610,'net.sourceforge.ganttproject.chart.ChartGridImpl.drawDateLine(java.util.Date,int,java.util.Date,net.sourceforge.ganttproject.chart.ChartModelBase$Offset[],java.awt.Color,int)',0,'private void drawDateLine(Date unitStart, int unitIndex, Date lineDate, ChartModelBase.Offset[] offsets, Color color, int horizontalOffset) {\r\n    int redLineOffset = -1;\r\n    if ((unitStart.before(lineDate)) && (myCurrentFrame.getUnitFinish(myCurrentUnit, unitIndex).after(lineDate))) {\r\n        for (int i = 0; i < (offsets.length); i++) {\r\n            if (offsets[i].getOffsetEnd().equals(lineDate)) {\r\n                redLineOffset = offsets[i].getOffsetPixels();\r\n                break;\r\n            }\r\n        }\r\n    } else\r\n        if (unitStart.equals(lineDate)) {\r\n            redLineOffset = 0;\r\n        }\r\n\r\n    if (redLineOffset >= 0) {\r\n        GraphicPrimitiveContainer.Line redLine = getPrimitiveContainer().createLine((((myPosX) + redLineOffset) + horizontalOffset), 0, (((myPosX) + redLineOffset) + horizontalOffset), getHeight());\r\n        redLine.setForegroundColor(color);\r\n    }\r\n}'),(1145,'Color color','java.awt.Color',0,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1610,'net.sourceforge.ganttproject.chart.ChartGridImpl.drawDateLine(java.util.Date,int,java.util.Date,net.sourceforge.ganttproject.chart.ChartModelBase$Offset[],java.awt.Color,int)',0,'private void drawDateLine(Date unitStart, int unitIndex, Date lineDate, ChartModelBase.Offset[] offsets, Color color, int horizontalOffset) {\r\n    int redLineOffset = -1;\r\n    if ((unitStart.before(lineDate)) && (myCurrentFrame.getUnitFinish(myCurrentUnit, unitIndex).after(lineDate))) {\r\n        for (int i = 0; i < (offsets.length); i++) {\r\n            if (offsets[i].getOffsetEnd().equals(lineDate)) {\r\n                redLineOffset = offsets[i].getOffsetPixels();\r\n                break;\r\n            }\r\n        }\r\n    } else\r\n        if (unitStart.equals(lineDate)) {\r\n            redLineOffset = 0;\r\n        }\r\n\r\n    if (redLineOffset >= 0) {\r\n        GraphicPrimitiveContainer.Line redLine = getPrimitiveContainer().createLine((((myPosX) + redLineOffset) + horizontalOffset), 0, (((myPosX) + redLineOffset) + horizontalOffset), getHeight());\r\n        redLine.setForegroundColor(color);\r\n    }\r\n}'),(1146,'int horizontalOffset','int',0,160,'net.sourceforge.ganttproject.chart.ChartGridImpl',1610,'net.sourceforge.ganttproject.chart.ChartGridImpl.drawDateLine(java.util.Date,int,java.util.Date,net.sourceforge.ganttproject.chart.ChartModelBase$Offset[],java.awt.Color,int)',0,'private void drawDateLine(Date unitStart, int unitIndex, Date lineDate, ChartModelBase.Offset[] offsets, Color color, int horizontalOffset) {\r\n    int redLineOffset = -1;\r\n    if ((unitStart.before(lineDate)) && (myCurrentFrame.getUnitFinish(myCurrentUnit, unitIndex).after(lineDate))) {\r\n        for (int i = 0; i < (offsets.length); i++) {\r\n            if (offsets[i].getOffsetEnd().equals(lineDate)) {\r\n                redLineOffset = offsets[i].getOffsetPixels();\r\n                break;\r\n            }\r\n        }\r\n    } else\r\n        if (unitStart.equals(lineDate)) {\r\n            redLineOffset = 0;\r\n        }\r\n\r\n    if (redLineOffset >= 0) {\r\n        GraphicPrimitiveContainer.Line redLine = getPrimitiveContainer().createLine((((myPosX) + redLineOffset) + horizontalOffset), 0, (((myPosX) + redLineOffset) + horizontalOffset), getHeight());\r\n        redLine.setForegroundColor(color);\r\n    }\r\n}'),(1147,'ChartModelBase model','net.sourceforge.ganttproject.chart.ChartModelBase',170,162,'net.sourceforge.ganttproject.chart.ChartHeaderImpl',1618,'net.sourceforge.ganttproject.chart.ChartHeaderImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'ChartHeaderImpl(ChartModelBase model, final UIConfiguration projectConfig) {\r\n    super(model);\r\n    myRedlineOption = projectConfig.getRedlineOption();\r\n    myProjectDatesOption = projectConfig.getProjectBoundariesOption();\r\n    myOptions = new ChartOptionGroup(\"ganttChartGridDetails\", new GPOption[]{ myRedlineOption, myProjectDatesOption }, model.getOptionEventDispatcher());\r\n    myPrimitiveContainer = new GraphicPrimitiveContainer();\r\n}'),(1148,'final UIConfiguration projectConfig','net.sourceforge.ganttproject.gui.UIConfiguration',335,162,'net.sourceforge.ganttproject.chart.ChartHeaderImpl',1618,'net.sourceforge.ganttproject.chart.ChartHeaderImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'ChartHeaderImpl(ChartModelBase model, final UIConfiguration projectConfig) {\r\n    super(model);\r\n    myRedlineOption = projectConfig.getRedlineOption();\r\n    myProjectDatesOption = projectConfig.getProjectBoundariesOption();\r\n    myOptions = new ChartOptionGroup(\"ganttChartGridDetails\", new GPOption[]{ myRedlineOption, myProjectDatesOption }, model.getOptionEventDispatcher());\r\n    myPrimitiveContainer = new GraphicPrimitiveContainer();\r\n}'),(1149,'Dimension bounds','java.awt.Dimension',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1637,'net.sourceforge.ganttproject.chart.ChartModel.setBounds(java.awt.Dimension)',0,'void setBounds(Dimension bounds);'),(1150,'Date startDate','java.util.Date',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1639,'net.sourceforge.ganttproject.chart.ChartModel.setStartDate(java.util.Date)',0,'void setStartDate(Date startDate);'),(1151,'int pixelsWidth','int',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1636,'net.sourceforge.ganttproject.chart.ChartModel.setBottomUnitWidth(int)',0,'void setBottomUnitWidth(int pixelsWidth);'),(1152,'int rowHeight','int',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1638,'net.sourceforge.ganttproject.chart.ChartModel.setRowHeight(int)',0,'void setRowHeight(int rowHeight);'),(1153,'TimeUnit topTimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,163,'net.sourceforge.ganttproject.chart.ChartModel',1641,'net.sourceforge.ganttproject.chart.ChartModel.setTopTimeUnit(net.sourceforge.ganttproject.time.TimeUnit)',0,'void setTopTimeUnit(TimeUnit topTimeUnit);'),(1154,'TimeUnit bottomTimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,163,'net.sourceforge.ganttproject.chart.ChartModel',1635,'net.sourceforge.ganttproject.chart.ChartModel.setBottomTimeUnit(net.sourceforge.ganttproject.time.TimeUnit)',0,'void setBottomTimeUnit(TimeUnit bottomTimeUnit);'),(1155,'/* <Task> */\r\nList visibleTasks','java.util.List',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1643,'net.sourceforge.ganttproject.chart.ChartModel.setVisibleTasks(java.util.List)',0,'void setVisibleTasks(/* <Task> */\r\nList visibleTasks);'),(1156,'Graphics g','java.awt.Graphics',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1634,'net.sourceforge.ganttproject.chart.ChartModel.paint(java.awt.Graphics)',0,'void paint(Graphics g);'),(1157,'TaskContainmentHierarchyFacade taskContainment','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,163,'net.sourceforge.ganttproject.chart.ChartModel',1640,'net.sourceforge.ganttproject.chart.ChartModel.setTaskContainment(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'void setTaskContainment(TaskContainmentHierarchyFacade taskContainment);'),(1158,'int x','int',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1629,'net.sourceforge.ganttproject.chart.ChartModel.findTaskWithCoordinates(int,int)',0,'Task findTaskWithCoordinates(int x, int y);'),(1159,'net.sourceforge.ganttproject.task.Task','net.sourceforge.ganttproject.task.Task',548,163,'net.sourceforge.ganttproject.chart.ChartModel',1629,'net.sourceforge.ganttproject.chart.ChartModel.findTaskWithCoordinates(int,int)',1,'Task findTaskWithCoordinates(int x, int y);'),(1160,'int y','int',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1629,'net.sourceforge.ganttproject.chart.ChartModel.findTaskWithCoordinates(int,int)',0,'Task findTaskWithCoordinates(int x, int y);'),(1161,'Task task','net.sourceforge.ganttproject.task.Task',548,163,'net.sourceforge.ganttproject.chart.ChartModel',1630,'net.sourceforge.ganttproject.chart.ChartModel.getBoundingRectangle(net.sourceforge.ganttproject.task.Task)',0,'Rectangle getBoundingRectangle(Task task);'),(1162,'int fromX','int',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1628,'net.sourceforge.ganttproject.chart.ChartModel.calculateLength(int,int,int)',0,'float calculateLength(int fromX, int toX, int y);'),(1163,'int toX','int',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1628,'net.sourceforge.ganttproject.chart.ChartModel.calculateLength(int,int,int)',0,'float calculateLength(int fromX, int toX, int y);'),(1164,'int y','int',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1628,'net.sourceforge.ganttproject.chart.ChartModel.calculateLength(int,int,int)',0,'float calculateLength(int fromX, int toX, int y);'),(1165,'int i','int',0,163,'net.sourceforge.ganttproject.chart.ChartModel',1642,'net.sourceforge.ganttproject.chart.ChartModel.setVerticalOffset(int)',0,'void setVerticalOffset(int i);'),(1166,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1644,'net.sourceforge.ganttproject.chart.ChartModelBase.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public ChartModelBase(TaskManager taskManager, TimeUnitStack timeUnitStack, UIConfiguration projectConfig) {\r\n    myTaskManager = taskManager;\r\n    myProjectConfig = projectConfig;\r\n    myChartUIConfiguration = new ChartUIConfiguration(projectConfig);\r\n    myPainter = new StyledPainterImpl(myChartUIConfiguration);\r\n    myTimeUnitStack = timeUnitStack;\r\n    myChartHeader = new ChartHeaderImpl(this, projectConfig);\r\n    myChartGrid = new ChartGridImpl(this, projectConfig);\r\n    // myBottomUnitLineRenderer = new BottomUnitLineRendererImpl(this);\r\n    myBackgroundRenderer = new BackgroundRendererImpl(this);\r\n    myTimeUnitVisitors.add(myChartGrid);\r\n    // myTimeUnitVisitors.add(myBottomUnitLineRenderer);\r\n    myCachingOffsetCalculator = new CachingOffsetCalculatorImpl(myTimeUnitStack);\r\n}'),(1167,'TimeUnitStack timeUnitStack','net.sourceforge.ganttproject.time.TimeUnitStack',639,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1644,'net.sourceforge.ganttproject.chart.ChartModelBase.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public ChartModelBase(TaskManager taskManager, TimeUnitStack timeUnitStack, UIConfiguration projectConfig) {\r\n    myTaskManager = taskManager;\r\n    myProjectConfig = projectConfig;\r\n    myChartUIConfiguration = new ChartUIConfiguration(projectConfig);\r\n    myPainter = new StyledPainterImpl(myChartUIConfiguration);\r\n    myTimeUnitStack = timeUnitStack;\r\n    myChartHeader = new ChartHeaderImpl(this, projectConfig);\r\n    myChartGrid = new ChartGridImpl(this, projectConfig);\r\n    // myBottomUnitLineRenderer = new BottomUnitLineRendererImpl(this);\r\n    myBackgroundRenderer = new BackgroundRendererImpl(this);\r\n    myTimeUnitVisitors.add(myChartGrid);\r\n    // myTimeUnitVisitors.add(myBottomUnitLineRenderer);\r\n    myCachingOffsetCalculator = new CachingOffsetCalculatorImpl(myTimeUnitStack);\r\n}'),(1168,'UIConfiguration projectConfig','net.sourceforge.ganttproject.gui.UIConfiguration',335,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1644,'net.sourceforge.ganttproject.chart.ChartModelBase.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public ChartModelBase(TaskManager taskManager, TimeUnitStack timeUnitStack, UIConfiguration projectConfig) {\r\n    myTaskManager = taskManager;\r\n    myProjectConfig = projectConfig;\r\n    myChartUIConfiguration = new ChartUIConfiguration(projectConfig);\r\n    myPainter = new StyledPainterImpl(myChartUIConfiguration);\r\n    myTimeUnitStack = timeUnitStack;\r\n    myChartHeader = new ChartHeaderImpl(this, projectConfig);\r\n    myChartGrid = new ChartGridImpl(this, projectConfig);\r\n    // myBottomUnitLineRenderer = new BottomUnitLineRendererImpl(this);\r\n    myBackgroundRenderer = new BackgroundRendererImpl(this);\r\n    myTimeUnitVisitors.add(myChartGrid);\r\n    // myTimeUnitVisitors.add(myBottomUnitLineRenderer);\r\n    myCachingOffsetCalculator = new CachingOffsetCalculatorImpl(myTimeUnitStack);\r\n}'),(1169,'ChartModelBase.Offset startOffset','net.sourceforge.ganttproject.chart.ChartModelBase$Offset',164,166,'net.sourceforge.ganttproject.chart.ChartModelBase$Range',1717,'net.sourceforge.ganttproject.chart.ChartModelBase$Range.-init-(net.sourceforge.ganttproject.chart.ChartModelBase$Offset,net.sourceforge.ganttproject.chart.ChartModelBase$Offset)',0,'public Range(ChartModelBase.Offset startOffset, ChartModelBase.Offset endOffset) {\r\n    start = startOffset;\r\n    end = endOffset;\r\n}'),(1170,'ChartModelBase.Offset endOffset','net.sourceforge.ganttproject.chart.ChartModelBase$Offset',164,166,'net.sourceforge.ganttproject.chart.ChartModelBase$Range',1717,'net.sourceforge.ganttproject.chart.ChartModelBase$Range.-init-(net.sourceforge.ganttproject.chart.ChartModelBase$Offset,net.sourceforge.ganttproject.chart.ChartModelBase$Offset)',0,'public Range(ChartModelBase.Offset startOffset, ChartModelBase.Offset endOffset) {\r\n    start = startOffset;\r\n    end = endOffset;\r\n}'),(1171,'TimeUnit offsetUnit','net.sourceforge.ganttproject.time.TimeUnit',630,164,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset',1706,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset.-init-(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date,int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'Offset(TimeUnit offsetUnit, Date offsetAnchor, Date offsetEnd, int offsetPixels, GPCalendar.DayType dayType) {\r\n    myOffsetAnchor = offsetAnchor;\r\n    myOffsetEnd = offsetEnd;\r\n    myOffsetPixels = offsetPixels;\r\n    myOffsetUnit = offsetUnit;\r\n    myDayType = dayType;\r\n}'),(1172,'Date offsetAnchor','java.util.Date',0,164,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset',1706,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset.-init-(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date,int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'Offset(TimeUnit offsetUnit, Date offsetAnchor, Date offsetEnd, int offsetPixels, GPCalendar.DayType dayType) {\r\n    myOffsetAnchor = offsetAnchor;\r\n    myOffsetEnd = offsetEnd;\r\n    myOffsetPixels = offsetPixels;\r\n    myOffsetUnit = offsetUnit;\r\n    myDayType = dayType;\r\n}'),(1173,'Date offsetEnd','java.util.Date',0,164,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset',1706,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset.-init-(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date,int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'Offset(TimeUnit offsetUnit, Date offsetAnchor, Date offsetEnd, int offsetPixels, GPCalendar.DayType dayType) {\r\n    myOffsetAnchor = offsetAnchor;\r\n    myOffsetEnd = offsetEnd;\r\n    myOffsetPixels = offsetPixels;\r\n    myOffsetUnit = offsetUnit;\r\n    myDayType = dayType;\r\n}'),(1174,'int offsetPixels','int',0,164,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset',1706,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset.-init-(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date,int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'Offset(TimeUnit offsetUnit, Date offsetAnchor, Date offsetEnd, int offsetPixels, GPCalendar.DayType dayType) {\r\n    myOffsetAnchor = offsetAnchor;\r\n    myOffsetEnd = offsetEnd;\r\n    myOffsetPixels = offsetPixels;\r\n    myOffsetUnit = offsetUnit;\r\n    myDayType = dayType;\r\n}'),(1175,'GPCalendar.DayType dayType','net.sourceforge.ganttproject.calendar.GPCalendar$DayType',145,164,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset',1706,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset.-init-(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date,int,net.sourceforge.ganttproject.calendar.GPCalendar$DayType)',0,'Offset(TimeUnit offsetUnit, Date offsetAnchor, Date offsetEnd, int offsetPixels, GPCalendar.DayType dayType) {\r\n    myOffsetAnchor = offsetAnchor;\r\n    myOffsetEnd = offsetEnd;\r\n    myOffsetPixels = offsetPixels;\r\n    myOffsetUnit = offsetUnit;\r\n    myDayType = dayType;\r\n}'),(1176,'Object that','java.lang.Object',0,166,'net.sourceforge.ganttproject.chart.ChartModelBase$Range',1718,'net.sourceforge.ganttproject.chart.ChartModelBase$Range.equals(java.lang.Object)',0,'public boolean equals(Object that) {\r\n    if (false == (that instanceof ChartModelBase.Range)) {\r\n        return false;\r\n    }\r\n    ChartModelBase.Range thatRange = ((ChartModelBase.Range) (that));\r\n    return ((this.start) == null ? (thatRange.start) == null : this.start.equals(thatRange.start)) && (thatRange.end.equals(this.end));\r\n}'),(1177,'/* <Offset> */\r\nChartModelBase.Offset startOffset','net.sourceforge.ganttproject.chart.ChartModelBase$Offset',164,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1676,'net.sourceforge.ganttproject.chart.ChartModelBase.getDefaultUnitOffsetsInRange(net.sourceforge.ganttproject.chart.ChartModelBase$Offset,net.sourceforge.ganttproject.chart.ChartModelBase$Offset)',0,'List getDefaultUnitOffsetsInRange(/* <Offset> */\r\nChartModelBase.Offset startOffset, ChartModelBase.Offset endOffset) {\r\n    ChartModelBase.Range range = new ChartModelBase.Range(startOffset, endOffset);\r\n    /* <Offset> */\r\n    List result = ((List) (myRange2DefaultUnitOffsets.get(range)));\r\n    if (result != null) {\r\n        return result;\r\n    }\r\n    /* <Offset> */\r\n    ArrayList tmpOffsets = /* <Offset> */\r\n    new ArrayList();\r\n    result = /* <Offset> */\r\n    new ArrayList();\r\n    int initialEnd = (startOffset == null) ? 0 : startOffset.getOffsetPixels();\r\n    Date startDate = (startOffset == null) ? myStartDate : startOffset.getOffsetEnd();\r\n    RegularFrameOffsetBuilder offsetBuilder = new RegularFrameOffsetBuilder(getTimeUnitStack(), myTaskManager.getCalendar(), endOffset.getOffsetUnit(), getTimeUnitStack().getDefaultTimeUnit(), startDate, getBottomUnitWidth(), endOffset.getOffsetPixels(), 1.0F) {\r\n        protected float getOffsetStep(TimeFrame timeFrame) {\r\n            int offsetUnitCount = timeFrame.getUnitCount(getTimeUnitStack().getDefaultTimeUnit());\r\n            return 1.0F / offsetUnitCount;\r\n        }\r\n    };\r\n    offsetBuilder.constructOffsets(tmpOffsets, result, initialEnd);\r\n    myRange2DefaultUnitOffsets.put(range, result);\r\n    // System.err.println(\"For start offstet[\"+startOffset+\"] end offset[\"+endOffset+\"]\");\r\n    // for (Offset t : result) {\r\n    // System.err.println(t);\r\n    // }\r\n    return result;\r\n}'),(1178,'ChartModelBase.Offset endOffset','net.sourceforge.ganttproject.chart.ChartModelBase$Offset',164,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1676,'net.sourceforge.ganttproject.chart.ChartModelBase.getDefaultUnitOffsetsInRange(net.sourceforge.ganttproject.chart.ChartModelBase$Offset,net.sourceforge.ganttproject.chart.ChartModelBase$Offset)',0,'List getDefaultUnitOffsetsInRange(/* <Offset> */\r\nChartModelBase.Offset startOffset, ChartModelBase.Offset endOffset) {\r\n    ChartModelBase.Range range = new ChartModelBase.Range(startOffset, endOffset);\r\n    /* <Offset> */\r\n    List result = ((List) (myRange2DefaultUnitOffsets.get(range)));\r\n    if (result != null) {\r\n        return result;\r\n    }\r\n    /* <Offset> */\r\n    ArrayList tmpOffsets = /* <Offset> */\r\n    new ArrayList();\r\n    result = /* <Offset> */\r\n    new ArrayList();\r\n    int initialEnd = (startOffset == null) ? 0 : startOffset.getOffsetPixels();\r\n    Date startDate = (startOffset == null) ? myStartDate : startOffset.getOffsetEnd();\r\n    RegularFrameOffsetBuilder offsetBuilder = new RegularFrameOffsetBuilder(getTimeUnitStack(), myTaskManager.getCalendar(), endOffset.getOffsetUnit(), getTimeUnitStack().getDefaultTimeUnit(), startDate, getBottomUnitWidth(), endOffset.getOffsetPixels(), 1.0F) {\r\n        protected float getOffsetStep(TimeFrame timeFrame) {\r\n            int offsetUnitCount = timeFrame.getUnitCount(getTimeUnitStack().getDefaultTimeUnit());\r\n            return 1.0F / offsetUnitCount;\r\n        }\r\n    };\r\n    offsetBuilder.constructOffsets(tmpOffsets, result, initialEnd);\r\n    myRange2DefaultUnitOffsets.put(range, result);\r\n    // System.err.println(\"For start offstet[\"+startOffset+\"] end offset[\"+endOffset+\"]\");\r\n    // for (Offset t : result) {\r\n    // System.err.println(t);\r\n    // }\r\n    return result;\r\n}'),(1179,'Graphics g','java.awt.Graphics',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1690,'net.sourceforge.ganttproject.chart.ChartModelBase.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n    int height = ((int) (getBounds().getHeight())) - (getChartUIConfiguration().getHeaderHeight());\r\n    myTopUnitOffsets.clear();\r\n    myBottomUnitOffsets.clear();\r\n    myDefaultUnitOffsets.clear();\r\n    if (getTopUnit().isConstructedFrom(getBottomUnit())) {\r\n        // It is the case when top unit can always be constructed from integer number of bottom units,\r\n        // and bounds of top unit and start/end bottom units are aligned\r\n        // e.g. week can be constructed from days\r\n        RegularFrameOffsetBuilder offsetBuilder = new RegularFrameOffsetBuilder(myTimeUnitStack, myTaskManager.getCalendar(), myTopUnit, getBottomUnit(), myStartDate, getBottomUnitWidth(), ((int) (getBounds().getWidth())), RegularFrameOffsetBuilder.WEEKEND_UNIT_WIDTH_DECREASE_FACTOR);\r\n        offsetBuilder.constructOffsets(myTopUnitOffsets, myBottomUnitOffsets);\r\n    } else {\r\n        // In this case top unit cant be constructed from integer number of bottom units\r\n        // and unit boundaries arent aligned. Thus, month and weeks are skewed units\r\n        SkewedFrameOffsetBuilder offsetBuilder = new SkewedFrameOffsetBuilder(myTimeUnitStack, myTaskManager.getCalendar(), myTopUnit, getBottomUnit(), myStartDate, getBottomUnitWidth(), ((int) (getBounds().getWidth())));\r\n        offsetBuilder.constructOffsets(myTopUnitOffsets, myBottomUnitOffsets);\r\n    }\r\n    myChartHeader.setHeight(height);\r\n    myChartHeader.render();\r\n    myChartGrid.setHeight(height);\r\n    myBackgroundRenderer.setHeight(height);\r\n    myPainter.setGraphics(g);\r\n    myBackgroundRenderer.getPrimitiveContainer().paint(getPainter(), g);\r\n    myChartHeader.getPrimitiveContainer().paint(getPainter(), g);\r\n}'),(1180,'Graphics g','java.awt.Graphics',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1693,'net.sourceforge.ganttproject.chart.ChartModelBase.paintSkewedTimeFrames(java.awt.Graphics)',0,'protected void paintSkewedTimeFrames(Graphics g) {\r\n    TimeUnit savedBottomUnit = myBottomUnit;\r\n    TimeUnit topUnit = getTopUnit();\r\n    setTopUnit(myBottomUnit);\r\n    myTimeFrames = null;\r\n    enableRenderers1();\r\n    TimeFrame[] timeFrames = getTimeFrames(null);\r\n    paintRegularTimeFrames(g, timeFrames);\r\n    Date exactStart = timeFrames[0].getStartDate();\r\n    // System.err.println(\"... done\");\r\n    // System.err.println(\"[ChartModelImpl] rendering skewed frames. Top\r\n    // unit=\"+myTopUnit+\" bottom unit=\"+myBottomUnit);\r\n    // System.err.println(\" rendering top line\");\r\n    myTimeFrames = null;\r\n    setTopUnit(topUnit);\r\n    myBottomUnit = topUnit;\r\n    enableRenderers2();\r\n    timeFrames = getTimeFrames(exactStart);\r\n    paintRegularTimeFrames(g, timeFrames);\r\n    myBottomUnit = savedBottomUnit;\r\n    // \r\n    // System.err.println(\" rendering bottom line\");\r\n}'),(1181,'Graphics mainArea','java.awt.Graphics',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1691,'net.sourceforge.ganttproject.chart.ChartModelBase.paintMainArea(java.awt.Graphics,net.sourceforge.ganttproject.chart.Painter)',0,'protected void paintMainArea(Graphics mainArea, Painter p) {\r\n    myChartGrid.getPrimitiveContainer().paint(p, mainArea);\r\n}'),(1182,'Painter p','net.sourceforge.ganttproject.chart.Painter',196,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1691,'net.sourceforge.ganttproject.chart.ChartModelBase.paintMainArea(java.awt.Graphics,net.sourceforge.ganttproject.chart.Painter)',0,'protected void paintMainArea(Graphics mainArea, Painter p) {\r\n    myChartGrid.getPrimitiveContainer().paint(p, mainArea);\r\n}'),(1183,'Graphics g','java.awt.Graphics',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1692,'net.sourceforge.ganttproject.chart.ChartModelBase.paintRegularTimeFrames(java.awt.Graphics,net.sourceforge.ganttproject.time.TimeFrame[])',0,'protected void paintRegularTimeFrames(Graphics g, TimeFrame[] timeFrames) {\r\n    fireBeforeProcessingTimeFrames();\r\n    for (int i = 0; i < (timeFrames.length); i++) {\r\n        TimeFrame next = timeFrames[i];\r\n        fireFrameStarted(next);\r\n        TimeUnit topUnit = next.getTopUnit();\r\n        fireUnitLineStarted(topUnit);\r\n        fireUnitLineFinished(topUnit);\r\n        // \r\n        TimeUnit bottomUnit = myBottomUnit;// next.getBottomUnit();\r\n\r\n        fireUnitLineStarted(bottomUnit);\r\n        visitTimeUnits(next, bottomUnit);\r\n        fireUnitLineFinished(bottomUnit);\r\n        fireFrameFinished(next);\r\n    }\r\n    fireAfterProcessingTimeFrames();\r\n    // Painter p = new StyledPainterImpl(g, getChartUIConfiguration());\r\n    myChartHeader.getPrimitiveContainer().paint(myPainter, g);\r\n    // myBottomUnitLineRenderer.getPrimitiveContainer().paint(myPainter, g);\r\n    Graphics mainArea = g.create(0, getChartUIConfiguration().getHeaderHeight(), ((int) (getBounds().getWidth())), ((int) (getBounds().getHeight())));\r\n    myPainter.setGraphics(mainArea);\r\n    // p = new StyledPainterImpl(mainArea, getChartUIConfiguration());\r\n    myBackgroundRenderer.getPrimitiveContainer().paint(myPainter, g);\r\n    paintMainArea(mainArea, myPainter);\r\n    // Graphics resourcesArea = g.create((int)getBounds().getWidth()-20,\r\n    // getChartUIConfiguration().getHeaderHeight(), 20,\r\n    // (int)getBounds().getHeight());\r\n    // myResourcesRendererImpl.getPrimitiveContainer().paint(p,\r\n    // resourcesArea);\r\n    // myTaskProgressRendererImpl.getPrimitiveContainer().paint(p,\r\n    // mainArea);\r\n}'),(1184,'TimeFrame[] timeFrames','net.sourceforge.ganttproject.time.TimeFrame[]',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1692,'net.sourceforge.ganttproject.chart.ChartModelBase.paintRegularTimeFrames(java.awt.Graphics,net.sourceforge.ganttproject.time.TimeFrame[])',0,'protected void paintRegularTimeFrames(Graphics g, TimeFrame[] timeFrames) {\r\n    fireBeforeProcessingTimeFrames();\r\n    for (int i = 0; i < (timeFrames.length); i++) {\r\n        TimeFrame next = timeFrames[i];\r\n        fireFrameStarted(next);\r\n        TimeUnit topUnit = next.getTopUnit();\r\n        fireUnitLineStarted(topUnit);\r\n        fireUnitLineFinished(topUnit);\r\n        // \r\n        TimeUnit bottomUnit = myBottomUnit;// next.getBottomUnit();\r\n\r\n        fireUnitLineStarted(bottomUnit);\r\n        visitTimeUnits(next, bottomUnit);\r\n        fireUnitLineFinished(bottomUnit);\r\n        fireFrameFinished(next);\r\n    }\r\n    fireAfterProcessingTimeFrames();\r\n    // Painter p = new StyledPainterImpl(g, getChartUIConfiguration());\r\n    myChartHeader.getPrimitiveContainer().paint(myPainter, g);\r\n    // myBottomUnitLineRenderer.getPrimitiveContainer().paint(myPainter, g);\r\n    Graphics mainArea = g.create(0, getChartUIConfiguration().getHeaderHeight(), ((int) (getBounds().getWidth())), ((int) (getBounds().getHeight())));\r\n    myPainter.setGraphics(mainArea);\r\n    // p = new StyledPainterImpl(mainArea, getChartUIConfiguration());\r\n    myBackgroundRenderer.getPrimitiveContainer().paint(myPainter, g);\r\n    paintMainArea(mainArea, myPainter);\r\n    // Graphics resourcesArea = g.create((int)getBounds().getWidth()-20,\r\n    // getChartUIConfiguration().getHeaderHeight(), 20,\r\n    // (int)getBounds().getHeight());\r\n    // myResourcesRendererImpl.getPrimitiveContainer().paint(p,\r\n    // resourcesArea);\r\n    // myTaskProgressRendererImpl.getPrimitiveContainer().paint(p,\r\n    // mainArea);\r\n}'),(1185,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1660,'net.sourceforge.ganttproject.chart.ChartModelBase.fireFrameStarted(net.sourceforge.ganttproject.time.TimeFrame)',0,'void fireFrameStarted(TimeFrame timeFrame) {\r\n    for (int i = 0; i < (myTimeUnitVisitors.size()); i++) {\r\n        TimeUnitVisitor nextVisitor = ((TimeUnitVisitor) (myTimeUnitVisitors.get(i)));\r\n        if (!(nextVisitor.isEnabled())) {\r\n            continue;\r\n        }\r\n        nextVisitor.startTimeFrame(timeFrame);\r\n    }\r\n}'),(1186,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1659,'net.sourceforge.ganttproject.chart.ChartModelBase.fireFrameFinished(net.sourceforge.ganttproject.time.TimeFrame)',0,'void fireFrameFinished(TimeFrame timeFrame) {\r\n    for (int i = 0; i < (myTimeUnitVisitors.size()); i++) {\r\n        TimeUnitVisitor nextVisitor = ((TimeUnitVisitor) (myTimeUnitVisitors.get(i)));\r\n        if (!(nextVisitor.isEnabled())) {\r\n            continue;\r\n        }\r\n        nextVisitor.endTimeFrame(timeFrame);\r\n    }\r\n}'),(1187,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1663,'net.sourceforge.ganttproject.chart.ChartModelBase.fireUnitLineStarted(net.sourceforge.ganttproject.time.TimeUnit)',0,'void fireUnitLineStarted(TimeUnit timeUnit) {\r\n    for (int i = 0; i < (myTimeUnitVisitors.size()); i++) {\r\n        TimeUnitVisitor nextVisitor = ((TimeUnitVisitor) (myTimeUnitVisitors.get(i)));\r\n        if (!(nextVisitor.isEnabled())) {\r\n            continue;\r\n        }\r\n        nextVisitor.startUnitLine(timeUnit);\r\n    }\r\n}'),(1188,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1662,'net.sourceforge.ganttproject.chart.ChartModelBase.fireUnitLineFinished(net.sourceforge.ganttproject.time.TimeUnit)',0,'void fireUnitLineFinished(TimeUnit timeUnit) {\r\n    for (int i = 0; i < (myTimeUnitVisitors.size()); i++) {\r\n        TimeUnitVisitor nextVisitor = ((TimeUnitVisitor) (myTimeUnitVisitors.get(i)));\r\n        if (!(nextVisitor.isEnabled())) {\r\n            continue;\r\n        }\r\n        nextVisitor.endUnitLine(timeUnit);\r\n    }\r\n}'),(1189,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1704,'net.sourceforge.ganttproject.chart.ChartModelBase.visitTimeUnits(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit)',0,'void visitTimeUnits(TimeFrame timeFrame, TimeUnit timeUnit) {\r\n    for (int j = 0; j < (timeFrame.getUnitCount(timeUnit)); j++) {\r\n        for (int i = 0; i < (myTimeUnitVisitors.size()); i++) {\r\n            TimeUnitVisitor nextVisitor = ((TimeUnitVisitor) (myTimeUnitVisitors.get(i)));\r\n            if (!(nextVisitor.isEnabled())) {\r\n                continue;\r\n            }\r\n            nextVisitor.nextTimeUnit(j);\r\n        }\r\n    }\r\n}'),(1190,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1704,'net.sourceforge.ganttproject.chart.ChartModelBase.visitTimeUnits(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit)',0,'void visitTimeUnits(TimeFrame timeFrame, TimeUnit timeUnit) {\r\n    for (int j = 0; j < (timeFrame.getUnitCount(timeUnit)); j++) {\r\n        for (int i = 0; i < (myTimeUnitVisitors.size()); i++) {\r\n            TimeUnitVisitor nextVisitor = ((TimeUnitVisitor) (myTimeUnitVisitors.get(i)));\r\n            if (!(nextVisitor.isEnabled())) {\r\n                continue;\r\n            }\r\n            nextVisitor.nextTimeUnit(j);\r\n        }\r\n    }\r\n}'),(1191,'Dimension bounds','java.awt.Dimension',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1696,'net.sourceforge.ganttproject.chart.ChartModelBase.setBounds(java.awt.Dimension)',0,'public void setBounds(Dimension bounds) {\r\n    myBounds = bounds;\r\n}'),(1192,'Date startDate','java.util.Date',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1699,'net.sourceforge.ganttproject.chart.ChartModelBase.setStartDate(java.util.Date)',0,'public void setStartDate(Date startDate) {\r\n    if (!(startDate.equals(myStartDate))) {\r\n        myStartDate = startDate;\r\n        myTimeFrames = null;\r\n    }\r\n    myRange2DefaultUnitOffsets.clear();\r\n}'),(1193,'int pixelsWidth','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1695,'net.sourceforge.ganttproject.chart.ChartModelBase.setBottomUnitWidth(int)',0,'public void setBottomUnitWidth(int pixelsWidth) {\r\n    if ((myAtomUnitPixels) != pixelsWidth) {\r\n        myCachingOffsetCalculator.reset();\r\n    }\r\n    myAtomUnitPixels = pixelsWidth;\r\n}'),(1194,'int rowHeight','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1698,'net.sourceforge.ganttproject.chart.ChartModelBase.setRowHeight(int)',0,'public void setRowHeight(int rowHeight) {\r\n    getChartUIConfiguration().setRowHeight(rowHeight);\r\n}'),(1195,'TimeUnit topTimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1700,'net.sourceforge.ganttproject.chart.ChartModelBase.setTopTimeUnit(net.sourceforge.ganttproject.time.TimeUnit)',0,'public void setTopTimeUnit(TimeUnit topTimeUnit) {\r\n    setTopUnit(topTimeUnit);\r\n    myTimeFrames = null;\r\n}'),(1196,'TimeUnit bottomTimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1694,'net.sourceforge.ganttproject.chart.ChartModelBase.setBottomTimeUnit(net.sourceforge.ganttproject.time.TimeUnit)',0,'public void setBottomTimeUnit(TimeUnit bottomTimeUnit) {\r\n    myBottomUnit = bottomTimeUnit;\r\n    myTimeFrames = null;\r\n}'),(1197,'Date exactDate','java.util.Date',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1683,'net.sourceforge.ganttproject.chart.ChartModelBase.getTimeFrames(java.util.Date)',0,'TimeFrame[] getTimeFrames(Date exactDate) {\r\n    if ((myTimeFrames) == null) {\r\n        myTimeFrames = calculateTimeFrames(exactDate);\r\n    }\r\n    return myTimeFrames;\r\n}'),(1198,'Date exactDate','java.util.Date',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1653,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateTimeFrames(java.util.Date)',0,'private TimeFrame[] calculateTimeFrames(Date exactDate) {\r\n    ArrayList result = new ArrayList();\r\n    int totalFramesWidth = 0;\r\n    Date currentDate = myStartDate;\r\n    do {\r\n        TimeFrame currentFrame = myTimeUnitStack.createTimeFrame(currentDate, getTopUnit(currentDate), myBottomUnit);\r\n        if ((exactDate != null) && (currentFrame.getStartDate().before(exactDate))) {\r\n            currentFrame.trimLeft(exactDate);\r\n        }\r\n        if (currentFrame.getStartDate().after(currentFrame.getFinishDate())) {\r\n            throw new IllegalStateException((((\"Frame is invalid:\n\" + currentFrame) + \"\n date=\") + exactDate));\r\n        }\r\n        result.add(currentFrame);\r\n        int frameWidth = myFrameWidthFunction.getTimeFrameWidth(currentFrame);\r\n        totalFramesWidth += frameWidth;\r\n        currentDate = currentFrame.getFinishDate();\r\n    } while (totalFramesWidth <= (getBounds().getWidth()) );\r\n    // \r\n    return ((TimeFrame[]) (result.toArray(new TimeFrame[0])));\r\n}'),(1199,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1673,'net.sourceforge.ganttproject.chart.ChartModelBase.getDayType(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public GPCalendar.DayType getDayType(TimeFrame timeFrame, TimeUnit timeUnit, int unitIndex) {\r\n    Date startDate = timeFrame.getUnitStart(timeUnit, unitIndex);\r\n    Date endDate = timeFrame.getUnitFinish(timeUnit, unitIndex);\r\n    Calendar c = CalendarFactory.newCalendar();\r\n    c.setTime(startDate);\r\n    int startDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n    c.setTime(endDate);\r\n    int endDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n    // return startDayOfWeek==Calendar.SATURDAY ||\r\n    // startDayOfWeek==Calendar.SUNDAY;\r\n    // return getTaskManager().getCalendar().getWeekDayType(startDayOfWeek);\r\n    return getTaskManager().getCalendar().getDayTypeDate(startDate);\r\n}'),(1200,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1673,'net.sourceforge.ganttproject.chart.ChartModelBase.getDayType(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public GPCalendar.DayType getDayType(TimeFrame timeFrame, TimeUnit timeUnit, int unitIndex) {\r\n    Date startDate = timeFrame.getUnitStart(timeUnit, unitIndex);\r\n    Date endDate = timeFrame.getUnitFinish(timeUnit, unitIndex);\r\n    Calendar c = CalendarFactory.newCalendar();\r\n    c.setTime(startDate);\r\n    int startDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n    c.setTime(endDate);\r\n    int endDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n    // return startDayOfWeek==Calendar.SATURDAY ||\r\n    // startDayOfWeek==Calendar.SUNDAY;\r\n    // return getTaskManager().getCalendar().getWeekDayType(startDayOfWeek);\r\n    return getTaskManager().getCalendar().getDayTypeDate(startDate);\r\n}'),(1201,'int unitIndex','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1673,'net.sourceforge.ganttproject.chart.ChartModelBase.getDayType(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public GPCalendar.DayType getDayType(TimeFrame timeFrame, TimeUnit timeUnit, int unitIndex) {\r\n    Date startDate = timeFrame.getUnitStart(timeUnit, unitIndex);\r\n    Date endDate = timeFrame.getUnitFinish(timeUnit, unitIndex);\r\n    Calendar c = CalendarFactory.newCalendar();\r\n    c.setTime(startDate);\r\n    int startDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n    c.setTime(endDate);\r\n    int endDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n    // return startDayOfWeek==Calendar.SATURDAY ||\r\n    // startDayOfWeek==Calendar.SUNDAY;\r\n    // return getTaskManager().getCalendar().getWeekDayType(startDayOfWeek);\r\n    return getTaskManager().getCalendar().getDayTypeDate(startDate);\r\n}'),(1202,'ChartViewState.ViewStateEvent e','net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent',181,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1703,'net.sourceforge.ganttproject.chart.ChartModelBase.startDateChanged(net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent)',0,'public void startDateChanged(ChartViewState.ViewStateEvent e) {\r\n    setStartDate(((Date) (e.getNewValue())));\r\n}'),(1203,'ZoomEvent e','net.sourceforge.ganttproject.gui.zoom.ZoomEvent',422,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1705,'net.sourceforge.ganttproject.chart.ChartModelBase.zoomChanged(net.sourceforge.ganttproject.gui.zoom.ZoomEvent)',0,'public void zoomChanged(ZoomEvent e) {\r\n}'),(1204,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,169,'net.sourceforge.ganttproject.chart.ChartModelBase$TimeFrameWidthFunction',1725,'net.sourceforge.ganttproject.chart.ChartModelBase$TimeFrameWidthFunction.getTimeFrameWidth(net.sourceforge.ganttproject.time.TimeFrame)',0,'int getTimeFrameWidth(TimeFrame timeFrame);'),(1205,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1674,'net.sourceforge.ganttproject.chart.ChartModelBase.getDayTypeAlternance(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'protected DayTypeAlternance[] getDayTypeAlternance(TimeFrame timeFrame, TimeUnit timeUnit, int unitIndex) {\r\n    class AlternanceFactory {\r\n        private Calendar c = CalendarFactory.newCalendar();\r\n\r\n        DayTypeAlternance createAlternance(TimeUnit timeUnit, Date startDate, Date endDate) {\r\n            c.setTime(startDate);\r\n            int startDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n            c.setTime(endDate);\r\n            int endDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n            TaskLength duration = myTaskManager.createLength(timeUnit, startDate, endDate);\r\n            GPCalendar.DayType dayType = getTaskManager().getCalendar().getWeekDayType(startDayOfWeek);\r\n            dayType = getTaskManager().getCalendar().getDayTypeDate(startDate);\r\n            return new DayTypeAlternance(dayType, duration, endDate);\r\n        }\r\n\r\n        void createAlternance(TimeUnit timeUnit, TimeFrame timeFrame, List output) {\r\n            GPCalendar.DayType startType = null;\r\n            Date startDate = null;\r\n            int unitCount = timeFrame.getUnitCount(timeUnit);\r\n            for (int i = 0; i < unitCount; i++) {\r\n                Date start = timeFrame.getUnitStart(timeUnit, i);\r\n                c.setTime(start);\r\n                int startDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n                GPCalendar.DayType dayType = getTaskManager().getCalendar().getWeekDayType(startDayOfWeek);\r\n                if (startType == null) {\r\n                    startType = dayType;\r\n                    startDate = start;\r\n                }\r\n                if (startType != dayType) {\r\n                    Date end = timeFrame.getUnitFinish(timeUnit, (i - 1));\r\n                    TaskLength duration = myTaskManager.createLength(timeUnit, startDate, end);\r\n                    output.add(new DayTypeAlternance(startType, duration, end));\r\n                    startType = dayType;\r\n                    startDate = start;\r\n                }\r\n            }\r\n            Date end = timeFrame.getUnitFinish(timeUnit, (unitCount - 1));\r\n            TaskLength duration = myTaskManager.createLength(timeUnit, startDate, end);\r\n            output.add(new DayTypeAlternance(startType, duration, end));\r\n        }\r\n    }\r\n    AlternanceFactory f = new AlternanceFactory();\r\n    DayTypeAlternance[] result;\r\n    Date startDate = timeFrame.getUnitStart(timeUnit, unitIndex);\r\n    Date endDate = timeFrame.getUnitFinish(timeUnit, unitIndex);\r\n    if (timeUnit.equals(myTimeUnitStack.getDefaultTimeUnit())) {\r\n        result = new DayTypeAlternance[]{ f.createAlternance(timeUnit, startDate, endDate) };\r\n    } else\r\n        if (timeUnit.isConstructedFrom(myTimeUnitStack.getDefaultTimeUnit())) {\r\n            List buf = new ArrayList();\r\n            TimeUnit defaultUnit = myTimeUnitStack.getDefaultTimeUnit();\r\n            TimeFrame innerFrame = myTimeUnitStack.createTimeFrame(startDate, timeUnit, defaultUnit);\r\n            // System.err.println(\"[ChartModelImpl] topUnit=\"+timeUnit+\"\r\n            // bottom=\"+defaultUnit+\"\r\n            // count=\"+innerFrame.getUnitCount(defaultUnit));\r\n            f.createAlternance(defaultUnit, innerFrame, buf);\r\n            result = ((DayTypeAlternance[]) (buf.toArray(new DayTypeAlternance[buf.size()])));\r\n        } else {\r\n            throw new RuntimeException(\"We should not be here\");\r\n        }\r\n\r\n    // System.err.println(\"from \"+startDate+\" to\r\n    // \"+endDate+\"\n\"+java.util.Arrays.asList(result));\r\n    return result;\r\n}'),(1206,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1674,'net.sourceforge.ganttproject.chart.ChartModelBase.getDayTypeAlternance(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'protected DayTypeAlternance[] getDayTypeAlternance(TimeFrame timeFrame, TimeUnit timeUnit, int unitIndex) {\r\n    class AlternanceFactory {\r\n        private Calendar c = CalendarFactory.newCalendar();\r\n\r\n        DayTypeAlternance createAlternance(TimeUnit timeUnit, Date startDate, Date endDate) {\r\n            c.setTime(startDate);\r\n            int startDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n            c.setTime(endDate);\r\n            int endDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n            TaskLength duration = myTaskManager.createLength(timeUnit, startDate, endDate);\r\n            GPCalendar.DayType dayType = getTaskManager().getCalendar().getWeekDayType(startDayOfWeek);\r\n            dayType = getTaskManager().getCalendar().getDayTypeDate(startDate);\r\n            return new DayTypeAlternance(dayType, duration, endDate);\r\n        }\r\n\r\n        void createAlternance(TimeUnit timeUnit, TimeFrame timeFrame, List output) {\r\n            GPCalendar.DayType startType = null;\r\n            Date startDate = null;\r\n            int unitCount = timeFrame.getUnitCount(timeUnit);\r\n            for (int i = 0; i < unitCount; i++) {\r\n                Date start = timeFrame.getUnitStart(timeUnit, i);\r\n                c.setTime(start);\r\n                int startDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n                GPCalendar.DayType dayType = getTaskManager().getCalendar().getWeekDayType(startDayOfWeek);\r\n                if (startType == null) {\r\n                    startType = dayType;\r\n                    startDate = start;\r\n                }\r\n                if (startType != dayType) {\r\n                    Date end = timeFrame.getUnitFinish(timeUnit, (i - 1));\r\n                    TaskLength duration = myTaskManager.createLength(timeUnit, startDate, end);\r\n                    output.add(new DayTypeAlternance(startType, duration, end));\r\n                    startType = dayType;\r\n                    startDate = start;\r\n                }\r\n            }\r\n            Date end = timeFrame.getUnitFinish(timeUnit, (unitCount - 1));\r\n            TaskLength duration = myTaskManager.createLength(timeUnit, startDate, end);\r\n            output.add(new DayTypeAlternance(startType, duration, end));\r\n        }\r\n    }\r\n    AlternanceFactory f = new AlternanceFactory();\r\n    DayTypeAlternance[] result;\r\n    Date startDate = timeFrame.getUnitStart(timeUnit, unitIndex);\r\n    Date endDate = timeFrame.getUnitFinish(timeUnit, unitIndex);\r\n    if (timeUnit.equals(myTimeUnitStack.getDefaultTimeUnit())) {\r\n        result = new DayTypeAlternance[]{ f.createAlternance(timeUnit, startDate, endDate) };\r\n    } else\r\n        if (timeUnit.isConstructedFrom(myTimeUnitStack.getDefaultTimeUnit())) {\r\n            List buf = new ArrayList();\r\n            TimeUnit defaultUnit = myTimeUnitStack.getDefaultTimeUnit();\r\n            TimeFrame innerFrame = myTimeUnitStack.createTimeFrame(startDate, timeUnit, defaultUnit);\r\n            // System.err.println(\"[ChartModelImpl] topUnit=\"+timeUnit+\"\r\n            // bottom=\"+defaultUnit+\"\r\n            // count=\"+innerFrame.getUnitCount(defaultUnit));\r\n            f.createAlternance(defaultUnit, innerFrame, buf);\r\n            result = ((DayTypeAlternance[]) (buf.toArray(new DayTypeAlternance[buf.size()])));\r\n        } else {\r\n            throw new RuntimeException(\"We should not be here\");\r\n        }\r\n\r\n    // System.err.println(\"from \"+startDate+\" to\r\n    // \"+endDate+\"\n\"+java.util.Arrays.asList(result));\r\n    return result;\r\n}'),(1207,'int unitIndex','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1674,'net.sourceforge.ganttproject.chart.ChartModelBase.getDayTypeAlternance(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'protected DayTypeAlternance[] getDayTypeAlternance(TimeFrame timeFrame, TimeUnit timeUnit, int unitIndex) {\r\n    class AlternanceFactory {\r\n        private Calendar c = CalendarFactory.newCalendar();\r\n\r\n        DayTypeAlternance createAlternance(TimeUnit timeUnit, Date startDate, Date endDate) {\r\n            c.setTime(startDate);\r\n            int startDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n            c.setTime(endDate);\r\n            int endDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n            TaskLength duration = myTaskManager.createLength(timeUnit, startDate, endDate);\r\n            GPCalendar.DayType dayType = getTaskManager().getCalendar().getWeekDayType(startDayOfWeek);\r\n            dayType = getTaskManager().getCalendar().getDayTypeDate(startDate);\r\n            return new DayTypeAlternance(dayType, duration, endDate);\r\n        }\r\n\r\n        void createAlternance(TimeUnit timeUnit, TimeFrame timeFrame, List output) {\r\n            GPCalendar.DayType startType = null;\r\n            Date startDate = null;\r\n            int unitCount = timeFrame.getUnitCount(timeUnit);\r\n            for (int i = 0; i < unitCount; i++) {\r\n                Date start = timeFrame.getUnitStart(timeUnit, i);\r\n                c.setTime(start);\r\n                int startDayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n                GPCalendar.DayType dayType = getTaskManager().getCalendar().getWeekDayType(startDayOfWeek);\r\n                if (startType == null) {\r\n                    startType = dayType;\r\n                    startDate = start;\r\n                }\r\n                if (startType != dayType) {\r\n                    Date end = timeFrame.getUnitFinish(timeUnit, (i - 1));\r\n                    TaskLength duration = myTaskManager.createLength(timeUnit, startDate, end);\r\n                    output.add(new DayTypeAlternance(startType, duration, end));\r\n                    startType = dayType;\r\n                    startDate = start;\r\n                }\r\n            }\r\n            Date end = timeFrame.getUnitFinish(timeUnit, (unitCount - 1));\r\n            TaskLength duration = myTaskManager.createLength(timeUnit, startDate, end);\r\n            output.add(new DayTypeAlternance(startType, duration, end));\r\n        }\r\n    }\r\n    AlternanceFactory f = new AlternanceFactory();\r\n    DayTypeAlternance[] result;\r\n    Date startDate = timeFrame.getUnitStart(timeUnit, unitIndex);\r\n    Date endDate = timeFrame.getUnitFinish(timeUnit, unitIndex);\r\n    if (timeUnit.equals(myTimeUnitStack.getDefaultTimeUnit())) {\r\n        result = new DayTypeAlternance[]{ f.createAlternance(timeUnit, startDate, endDate) };\r\n    } else\r\n        if (timeUnit.isConstructedFrom(myTimeUnitStack.getDefaultTimeUnit())) {\r\n            List buf = new ArrayList();\r\n            TimeUnit defaultUnit = myTimeUnitStack.getDefaultTimeUnit();\r\n            TimeFrame innerFrame = myTimeUnitStack.createTimeFrame(startDate, timeUnit, defaultUnit);\r\n            // System.err.println(\"[ChartModelImpl] topUnit=\"+timeUnit+\"\r\n            // bottom=\"+defaultUnit+\"\r\n            // count=\"+innerFrame.getUnitCount(defaultUnit));\r\n            f.createAlternance(defaultUnit, innerFrame, buf);\r\n            result = ((DayTypeAlternance[]) (buf.toArray(new DayTypeAlternance[buf.size()])));\r\n        } else {\r\n            throw new RuntimeException(\"We should not be here\");\r\n        }\r\n\r\n    // System.err.println(\"from \"+startDate+\" to\r\n    // \"+endDate+\"\n\"+java.util.Arrays.asList(result));\r\n    return result;\r\n}'),(1208,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1652,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    return myCachingOffsetCalculator.calculateOffsets(timeFrame, frameBottomUnit, bottomUnitStartDate, offsetUnit, frameBottomUnitWidth);\r\n}'),(1209,'TimeUnit frameBottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1652,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    return myCachingOffsetCalculator.calculateOffsets(timeFrame, frameBottomUnit, bottomUnitStartDate, offsetUnit, frameBottomUnitWidth);\r\n}'),(1210,'Date bottomUnitStartDate','java.util.Date',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1652,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    return myCachingOffsetCalculator.calculateOffsets(timeFrame, frameBottomUnit, bottomUnitStartDate, offsetUnit, frameBottomUnitWidth);\r\n}'),(1211,'TimeUnit offsetUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1652,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    return myCachingOffsetCalculator.calculateOffsets(timeFrame, frameBottomUnit, bottomUnitStartDate, offsetUnit, frameBottomUnitWidth);\r\n}'),(1212,'int frameBottomUnitWidth','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1652,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    return myCachingOffsetCalculator.calculateOffsets(timeFrame, frameBottomUnit, bottomUnitStartDate, offsetUnit, frameBottomUnitWidth);\r\n}'),(1213,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,167,'net.sourceforge.ganttproject.chart.ChartModelBase$RegularFramesWithFunction',1721,'net.sourceforge.ganttproject.chart.ChartModelBase$RegularFramesWithFunction.getTimeFrameWidth(net.sourceforge.ganttproject.time.TimeFrame)',0,'public int getTimeFrameWidth(TimeFrame timeFrame) {\r\n    return (timeFrame.getUnitCount(myBottomUnit)) * (myAtomUnitPixels);\r\n}'),(1214,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,168,'net.sourceforge.ganttproject.chart.ChartModelBase$SkewedFramesWidthFunction',1723,'net.sourceforge.ganttproject.chart.ChartModelBase$SkewedFramesWidthFunction.getTimeFrameWidth(net.sourceforge.ganttproject.time.TimeFrame)',0,'public int getTimeFrameWidth(TimeFrame timeFrame) {\r\n    int defaultUnitsPerTopUnit = timeFrame.getUnitCount(myTimeUnitStack.getDefaultTimeUnit());\r\n    return ((int) (defaultUnitsPerTopUnit * (myWidthPerDefaultUnit)));\r\n}'),(1215,'TimeFrame nextFrame','net.sourceforge.ganttproject.time.TimeFrame',629,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1667,'net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnitWidth(net.sourceforge.ganttproject.time.TimeFrame)',0,'int getBottomUnitWidth(TimeFrame nextFrame) {\r\n    int frameWidth = myFrameWidthFunction.getTimeFrameWidth(nextFrame);\r\n    int bottomUnitsCount = nextFrame.getUnitCount(nextFrame.getBottomUnit());\r\n    // System.err.println(\"ChartModelImpl: getBottomUnitWidth:\r\n    // nextFrame=\"+nextFrame+\" width=\"+frameWidth+\"\r\n    // bottomUnitsCount=\"+bottomUnitsCount);\r\n    return frameWidth / bottomUnitsCount;\r\n}'),(1216,'int fromX','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1650,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateLength(int,int,int)',0,'public float calculateLength(int fromX, int toX, int y) {\r\n    // return toX - fromX;\r\n    int curX = fromX;\r\n    int totalPixels = toX - fromX;\r\n    int holidayPixels = 0;\r\n    while (curX < toX) {\r\n        GraphicPrimitiveContainer.GraphicPrimitive nextPrimitive = getChartGrid().getPrimitiveContainer().getPrimitive(curX, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n        if ((nextPrimitive instanceof GraphicPrimitiveContainer.Rectangle) && ((GPCalendar.DayType.WEEKEND) == (nextPrimitive.getModelObject()))) {\r\n            GraphicPrimitiveContainer.Rectangle nextRect = ((GraphicPrimitiveContainer.Rectangle) (nextPrimitive));\r\n            holidayPixels += (nextRect.getRightX()) - curX;\r\n            if ((nextRect.myLeftX) < curX) {\r\n                holidayPixels -= curX - (nextRect.myLeftX);\r\n            }\r\n            if ((nextRect.myLeftX) < fromX) {\r\n                holidayPixels -= fromX - (nextRect.myLeftX);\r\n            }\r\n            if ((nextRect.getRightX()) > toX) {\r\n                holidayPixels -= (nextRect.getRightX()) - toX;\r\n            }\r\n            curX = (nextRect.getRightX()) + 1;\r\n        } else {\r\n            curX += getBottomUnitWidth();\r\n        }\r\n    } \r\n    float workPixels = ((float) (totalPixels)) - ((float) (holidayPixels));\r\n    return workPixels / ((float) (getBottomUnitWidth()));\r\n}'),(1217,'int toX','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1650,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateLength(int,int,int)',0,'public float calculateLength(int fromX, int toX, int y) {\r\n    // return toX - fromX;\r\n    int curX = fromX;\r\n    int totalPixels = toX - fromX;\r\n    int holidayPixels = 0;\r\n    while (curX < toX) {\r\n        GraphicPrimitiveContainer.GraphicPrimitive nextPrimitive = getChartGrid().getPrimitiveContainer().getPrimitive(curX, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n        if ((nextPrimitive instanceof GraphicPrimitiveContainer.Rectangle) && ((GPCalendar.DayType.WEEKEND) == (nextPrimitive.getModelObject()))) {\r\n            GraphicPrimitiveContainer.Rectangle nextRect = ((GraphicPrimitiveContainer.Rectangle) (nextPrimitive));\r\n            holidayPixels += (nextRect.getRightX()) - curX;\r\n            if ((nextRect.myLeftX) < curX) {\r\n                holidayPixels -= curX - (nextRect.myLeftX);\r\n            }\r\n            if ((nextRect.myLeftX) < fromX) {\r\n                holidayPixels -= fromX - (nextRect.myLeftX);\r\n            }\r\n            if ((nextRect.getRightX()) > toX) {\r\n                holidayPixels -= (nextRect.getRightX()) - toX;\r\n            }\r\n            curX = (nextRect.getRightX()) + 1;\r\n        } else {\r\n            curX += getBottomUnitWidth();\r\n        }\r\n    } \r\n    float workPixels = ((float) (totalPixels)) - ((float) (holidayPixels));\r\n    return workPixels / ((float) (getBottomUnitWidth()));\r\n}'),(1218,'int y','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1650,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateLength(int,int,int)',0,'public float calculateLength(int fromX, int toX, int y) {\r\n    // return toX - fromX;\r\n    int curX = fromX;\r\n    int totalPixels = toX - fromX;\r\n    int holidayPixels = 0;\r\n    while (curX < toX) {\r\n        GraphicPrimitiveContainer.GraphicPrimitive nextPrimitive = getChartGrid().getPrimitiveContainer().getPrimitive(curX, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n        if ((nextPrimitive instanceof GraphicPrimitiveContainer.Rectangle) && ((GPCalendar.DayType.WEEKEND) == (nextPrimitive.getModelObject()))) {\r\n            GraphicPrimitiveContainer.Rectangle nextRect = ((GraphicPrimitiveContainer.Rectangle) (nextPrimitive));\r\n            holidayPixels += (nextRect.getRightX()) - curX;\r\n            if ((nextRect.myLeftX) < curX) {\r\n                holidayPixels -= curX - (nextRect.myLeftX);\r\n            }\r\n            if ((nextRect.myLeftX) < fromX) {\r\n                holidayPixels -= fromX - (nextRect.myLeftX);\r\n            }\r\n            if ((nextRect.getRightX()) > toX) {\r\n                holidayPixels -= (nextRect.getRightX()) - toX;\r\n            }\r\n            curX = (nextRect.getRightX()) + 1;\r\n        } else {\r\n            curX += getBottomUnitWidth();\r\n        }\r\n    } \r\n    float workPixels = ((float) (totalPixels)) - ((float) (holidayPixels));\r\n    return workPixels / ((float) (getBottomUnitWidth()));\r\n}'),(1219,'int fromX','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1651,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateLengthNoWeekends(int,int)',0,'public float calculateLengthNoWeekends(int fromX, int toX) {\r\n    int totalPixels = toX - fromX;\r\n    return totalPixels / ((float) (getBottomUnitWidth()));\r\n}'),(1220,'int toX','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1651,'net.sourceforge.ganttproject.chart.ChartModelBase.calculateLengthNoWeekends(int,int)',0,'public float calculateLengthNoWeekends(int fromX, int toX) {\r\n    int totalPixels = toX - fromX;\r\n    return totalPixels / ((float) (getBottomUnitWidth()));\r\n}'),(1221,'int i','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1697,'net.sourceforge.ganttproject.chart.ChartModelBase.setHeaderHeight(int)',0,'public void setHeaderHeight(int i) {\r\n    getChartUIConfiguration().setHeaderHeight(i);\r\n}'),(1222,'int offset','int',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1702,'net.sourceforge.ganttproject.chart.ChartModelBase.setVerticalOffset(int)',0,'public void setVerticalOffset(int offset) {\r\n    myVerticalOffset = offset;\r\n}'),(1223,'TimeUnit myTopUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1701,'net.sourceforge.ganttproject.chart.ChartModelBase.setTopUnit(net.sourceforge.ganttproject.time.TimeUnit)',0,'private void setTopUnit(TimeUnit myTopUnit) {\r\n    this.myTopUnit = myTopUnit;\r\n}'),(1224,'Date startDate','java.util.Date',0,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1686,'net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnit(java.util.Date)',0,'private TimeUnit getTopUnit(Date startDate) {\r\n    TimeUnit result = myTopUnit;\r\n    if ((myTopUnit) instanceof TimeUnitFunctionOfDate) {\r\n        if (startDate == null) {\r\n            throw new RuntimeException(\"No date is set\");\r\n        } else {\r\n            result = ((TimeUnitFunctionOfDate) (myTopUnit)).createTimeUnit(startDate);\r\n        }\r\n    }\r\n    return result;\r\n}'),(1225,'net.sourceforge.ganttproject.time.TimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1686,'net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnit(java.util.Date)',1,'private TimeUnit getTopUnit(Date startDate) {\r\n    TimeUnit result = myTopUnit;\r\n    if ((myTopUnit) instanceof TimeUnitFunctionOfDate) {\r\n        if (startDate == null) {\r\n            throw new RuntimeException(\"No date is set\");\r\n        } else {\r\n            result = ((TimeUnitFunctionOfDate) (myTopUnit)).createTimeUnit(startDate);\r\n        }\r\n    }\r\n    return result;\r\n}'),(1226,'GPOptionChangeListener listener','net.sourceforge.ganttproject.gui.options.model.GPOptionChangeListener',388,170,'net.sourceforge.ganttproject.chart.ChartModelBase',1649,'net.sourceforge.ganttproject.chart.ChartModelBase.addOptionChangeListener(net.sourceforge.ganttproject.gui.options.model.GPOptionChangeListener)',0,'public void addOptionChangeListener(GPOptionChangeListener listener) {\r\n    myOptionListeners.add(listener);\r\n}'),(1227,'Object that','java.lang.Object',0,164,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset',1707,'net.sourceforge.ganttproject.chart.ChartModelBase$Offset.equals(java.lang.Object)',0,'public boolean equals(Object that) {\r\n    if (false == (that instanceof ChartModelBase.Offset)) {\r\n        return false;\r\n    }\r\n    ChartModelBase.Offset thatOffset = ((ChartModelBase.Offset) (that));\r\n    return (((myOffsetPixels) == (thatOffset.myOffsetPixels)) && (myOffsetEnd.equals(thatOffset.myOffsetEnd))) && (myOffsetAnchor.equals(thatOffset.myOffsetAnchor));\r\n}'),(1228,'boolean renderProgress','boolean',0,171,'net.sourceforge.ganttproject.chart.ChartModelImpl$TuningOptions',1757,'net.sourceforge.ganttproject.chart.ChartModelImpl$TuningOptions.-init-(boolean,boolean)',0,'public TuningOptions(boolean renderProgress, boolean renderDependencies) {\r\n    this.renderProgress = renderProgress;\r\n    this.renderDependencies = renderDependencies;\r\n}'),(1229,'boolean renderDependencies','boolean',0,171,'net.sourceforge.ganttproject.chart.ChartModelImpl$TuningOptions',1757,'net.sourceforge.ganttproject.chart.ChartModelImpl$TuningOptions.-init-(boolean,boolean)',0,'public TuningOptions(boolean renderProgress, boolean renderDependencies) {\r\n    this.renderProgress = renderProgress;\r\n    this.renderDependencies = renderDependencies;\r\n}'),(1230,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1727,'net.sourceforge.ganttproject.chart.ChartModelImpl.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public ChartModelImpl(TaskManager taskManager, TimeUnitStack timeUnitStack, final UIConfiguration projectConfig) {\r\n    super(taskManager, timeUnitStack, projectConfig);\r\n    this.taskManager = taskManager;\r\n    myTaskRendererImpl = new TaskRendererImpl(this);\r\n    myTaskGridRendererImpl = new TaskGridRendererImpl(this);\r\n    // myResourcesRendererImpl = new ResourcesRendererImpl(this);\r\n    // myTaskProgressRendererImpl = new TaskProgressRendererImpl(this);\r\n    myTimeUnitVisitors.add(myTaskGridRendererImpl);\r\n    myTimeUnitVisitors.add(myTaskRendererImpl);\r\n    class NewTaskColorOption extends DefaultColorOption implements GP1XOptionConverter {\r\n        private NewTaskColorOption() {\r\n            super(\"newTaskDefaultColor\");\r\n        }\r\n\r\n        public String getTagName() {\r\n            return \"colors\";\r\n        }\r\n\r\n        public String getAttributeName() {\r\n            return \"tasks\";\r\n        }\r\n\r\n        public void loadValue(String legacyValue) {\r\n            lock();\r\n            loadPersistentValue(legacyValue);\r\n            commit();\r\n        }\r\n\r\n        public void commit() {\r\n            super.commit();\r\n            projectConfig.setTaskColor(getValue());\r\n        }\r\n    }\r\n    myTaskDefaultColorOption = new NewTaskColorOption();\r\n    myDefaultColorOptions = new ChartOptionGroup(\"ganttChartDefaultColors\", new GPOption[]{ myTaskDefaultColorOption, projectConfig.getWeekendAlphaRenderingOption() }, getOptionEventDispatcher());\r\n    {\r\n        myTaskAheadOfScheduleColor = new DefaultColorOption(\"ganttChartStateDiffColors.taskAheadOfScheduleColor\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setEarlierPreviousTaskColor(getValue());\r\n            }\r\n        };\r\n        myTaskAheadOfScheduleColor.lock();\r\n        myTaskAheadOfScheduleColor.setValue(new Color(50, 229, 50));\r\n        myTaskAheadOfScheduleColor.commit();\r\n        // \r\n        myTaskBehindScheduleColor = new DefaultColorOption(\"ganttChartStateDiffColors.taskBehindScheduleColor\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setLaterPreviousTaskColor(getValue());\r\n            }\r\n        };\r\n        myTaskBehindScheduleColor.lock();\r\n        myTaskBehindScheduleColor.setValue(new Color(229, 50, 50));\r\n        myTaskBehindScheduleColor.commit();\r\n        // \r\n        myTaskOnScheduleColor = new DefaultColorOption(\"ganttChartStateDiffColors.taskOnScheduleColor\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setPreviousTaskColor(getValue());\r\n            }\r\n        };\r\n        myTaskOnScheduleColor.lock();\r\n        myTaskOnScheduleColor.setValue(Color.LIGHT_GRAY);\r\n        myTaskOnScheduleColor.commit();\r\n        // \r\n        myStateDiffOptions = new ChartOptionGroup(\"ganttChartStateDiffColors\", new GPOption[]{ myTaskOnScheduleColor, myTaskAheadOfScheduleColor, myTaskBehindScheduleColor }, getOptionEventDispatcher());\r\n    }\r\n}'),(1231,'TimeUnitStack timeUnitStack','net.sourceforge.ganttproject.time.TimeUnitStack',639,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1727,'net.sourceforge.ganttproject.chart.ChartModelImpl.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public ChartModelImpl(TaskManager taskManager, TimeUnitStack timeUnitStack, final UIConfiguration projectConfig) {\r\n    super(taskManager, timeUnitStack, projectConfig);\r\n    this.taskManager = taskManager;\r\n    myTaskRendererImpl = new TaskRendererImpl(this);\r\n    myTaskGridRendererImpl = new TaskGridRendererImpl(this);\r\n    // myResourcesRendererImpl = new ResourcesRendererImpl(this);\r\n    // myTaskProgressRendererImpl = new TaskProgressRendererImpl(this);\r\n    myTimeUnitVisitors.add(myTaskGridRendererImpl);\r\n    myTimeUnitVisitors.add(myTaskRendererImpl);\r\n    class NewTaskColorOption extends DefaultColorOption implements GP1XOptionConverter {\r\n        private NewTaskColorOption() {\r\n            super(\"newTaskDefaultColor\");\r\n        }\r\n\r\n        public String getTagName() {\r\n            return \"colors\";\r\n        }\r\n\r\n        public String getAttributeName() {\r\n            return \"tasks\";\r\n        }\r\n\r\n        public void loadValue(String legacyValue) {\r\n            lock();\r\n            loadPersistentValue(legacyValue);\r\n            commit();\r\n        }\r\n\r\n        public void commit() {\r\n            super.commit();\r\n            projectConfig.setTaskColor(getValue());\r\n        }\r\n    }\r\n    myTaskDefaultColorOption = new NewTaskColorOption();\r\n    myDefaultColorOptions = new ChartOptionGroup(\"ganttChartDefaultColors\", new GPOption[]{ myTaskDefaultColorOption, projectConfig.getWeekendAlphaRenderingOption() }, getOptionEventDispatcher());\r\n    {\r\n        myTaskAheadOfScheduleColor = new DefaultColorOption(\"ganttChartStateDiffColors.taskAheadOfScheduleColor\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setEarlierPreviousTaskColor(getValue());\r\n            }\r\n        };\r\n        myTaskAheadOfScheduleColor.lock();\r\n        myTaskAheadOfScheduleColor.setValue(new Color(50, 229, 50));\r\n        myTaskAheadOfScheduleColor.commit();\r\n        // \r\n        myTaskBehindScheduleColor = new DefaultColorOption(\"ganttChartStateDiffColors.taskBehindScheduleColor\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setLaterPreviousTaskColor(getValue());\r\n            }\r\n        };\r\n        myTaskBehindScheduleColor.lock();\r\n        myTaskBehindScheduleColor.setValue(new Color(229, 50, 50));\r\n        myTaskBehindScheduleColor.commit();\r\n        // \r\n        myTaskOnScheduleColor = new DefaultColorOption(\"ganttChartStateDiffColors.taskOnScheduleColor\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setPreviousTaskColor(getValue());\r\n            }\r\n        };\r\n        myTaskOnScheduleColor.lock();\r\n        myTaskOnScheduleColor.setValue(Color.LIGHT_GRAY);\r\n        myTaskOnScheduleColor.commit();\r\n        // \r\n        myStateDiffOptions = new ChartOptionGroup(\"ganttChartStateDiffColors\", new GPOption[]{ myTaskOnScheduleColor, myTaskAheadOfScheduleColor, myTaskBehindScheduleColor }, getOptionEventDispatcher());\r\n    }\r\n}'),(1232,'final UIConfiguration projectConfig','net.sourceforge.ganttproject.gui.UIConfiguration',335,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1727,'net.sourceforge.ganttproject.chart.ChartModelImpl.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public ChartModelImpl(TaskManager taskManager, TimeUnitStack timeUnitStack, final UIConfiguration projectConfig) {\r\n    super(taskManager, timeUnitStack, projectConfig);\r\n    this.taskManager = taskManager;\r\n    myTaskRendererImpl = new TaskRendererImpl(this);\r\n    myTaskGridRendererImpl = new TaskGridRendererImpl(this);\r\n    // myResourcesRendererImpl = new ResourcesRendererImpl(this);\r\n    // myTaskProgressRendererImpl = new TaskProgressRendererImpl(this);\r\n    myTimeUnitVisitors.add(myTaskGridRendererImpl);\r\n    myTimeUnitVisitors.add(myTaskRendererImpl);\r\n    class NewTaskColorOption extends DefaultColorOption implements GP1XOptionConverter {\r\n        private NewTaskColorOption() {\r\n            super(\"newTaskDefaultColor\");\r\n        }\r\n\r\n        public String getTagName() {\r\n            return \"colors\";\r\n        }\r\n\r\n        public String getAttributeName() {\r\n            return \"tasks\";\r\n        }\r\n\r\n        public void loadValue(String legacyValue) {\r\n            lock();\r\n            loadPersistentValue(legacyValue);\r\n            commit();\r\n        }\r\n\r\n        public void commit() {\r\n            super.commit();\r\n            projectConfig.setTaskColor(getValue());\r\n        }\r\n    }\r\n    myTaskDefaultColorOption = new NewTaskColorOption();\r\n    myDefaultColorOptions = new ChartOptionGroup(\"ganttChartDefaultColors\", new GPOption[]{ myTaskDefaultColorOption, projectConfig.getWeekendAlphaRenderingOption() }, getOptionEventDispatcher());\r\n    {\r\n        myTaskAheadOfScheduleColor = new DefaultColorOption(\"ganttChartStateDiffColors.taskAheadOfScheduleColor\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setEarlierPreviousTaskColor(getValue());\r\n            }\r\n        };\r\n        myTaskAheadOfScheduleColor.lock();\r\n        myTaskAheadOfScheduleColor.setValue(new Color(50, 229, 50));\r\n        myTaskAheadOfScheduleColor.commit();\r\n        // \r\n        myTaskBehindScheduleColor = new DefaultColorOption(\"ganttChartStateDiffColors.taskBehindScheduleColor\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setLaterPreviousTaskColor(getValue());\r\n            }\r\n        };\r\n        myTaskBehindScheduleColor.lock();\r\n        myTaskBehindScheduleColor.setValue(new Color(229, 50, 50));\r\n        myTaskBehindScheduleColor.commit();\r\n        // \r\n        myTaskOnScheduleColor = new DefaultColorOption(\"ganttChartStateDiffColors.taskOnScheduleColor\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setPreviousTaskColor(getValue());\r\n            }\r\n        };\r\n        myTaskOnScheduleColor.lock();\r\n        myTaskOnScheduleColor.setValue(Color.LIGHT_GRAY);\r\n        myTaskOnScheduleColor.commit();\r\n        // \r\n        myStateDiffOptions = new ChartOptionGroup(\"ganttChartStateDiffColors\", new GPOption[]{ myTaskOnScheduleColor, myTaskAheadOfScheduleColor, myTaskBehindScheduleColor }, getOptionEventDispatcher());\r\n    }\r\n}'),(1233,'Graphics g','java.awt.Graphics',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1749,'net.sourceforge.ganttproject.chart.ChartModelImpl.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n    super.paint(g);\r\n    if (getTopUnit().isConstructedFrom(myBottomUnit)) {\r\n        myFrameWidthFunction = myRegularFrameWidthFunction;\r\n        for (int i = 0; i < (myTimeUnitVisitors.size()); i++) {\r\n            ((TimeUnitVisitor) (myTimeUnitVisitors.get(i))).setEnabled(true);\r\n        }\r\n        paintRegularTimeFrames(g, getTimeFrames(null));\r\n    } else {\r\n        myFrameWidthFunction = mySkewedFrameWidthFunction;\r\n        mySkewedFrameWidthFunction.initialize();\r\n        paintSkewedTimeFrames(g);\r\n    }\r\n}'),(1234,'Graphics mainArea','java.awt.Graphics',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1750,'net.sourceforge.ganttproject.chart.ChartModelImpl.paintMainArea(java.awt.Graphics,net.sourceforge.ganttproject.chart.Painter)',0,'protected void paintMainArea(Graphics mainArea, Painter p) {\r\n    super.paintMainArea(mainArea, p);\r\n    mainArea.translate(0, (-(getVerticalOffset())));\r\n    myTaskRendererImpl.getPrimitiveContainer().paint(p, mainArea);\r\n    myTaskGridRendererImpl.getPrimitiveContainer().paint(p, mainArea);\r\n    myTaskRendererImpl.getPrimitiveContainer().getLayer(1).paint(p, mainArea);\r\n    myTaskRendererImpl.getPrimitiveContainer().getLayer(2).paint(p, mainArea);\r\n    // \r\n    // myTaskRendererImpl.getPrimitiveContainer().paint(p, mainArea);\r\n    // myTaskRendererImpl.getPrimitiveContainer().getLayer(1).paint(p,\r\n    // mainArea);\r\n    // super.paintMainArea(mainArea, p);\r\n    // myTaskRendererImpl.getPrimitiveContainer().getLayer(2).paint(p,\r\n    // mainArea);\r\n    // myTaskGridRendererImpl.getPrimitiveContainer().paint(p, mainArea);\r\n}'),(1235,'Painter p','net.sourceforge.ganttproject.chart.Painter',196,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1750,'net.sourceforge.ganttproject.chart.ChartModelImpl.paintMainArea(java.awt.Graphics,net.sourceforge.ganttproject.chart.Painter)',0,'protected void paintMainArea(Graphics mainArea, Painter p) {\r\n    super.paintMainArea(mainArea, p);\r\n    mainArea.translate(0, (-(getVerticalOffset())));\r\n    myTaskRendererImpl.getPrimitiveContainer().paint(p, mainArea);\r\n    myTaskGridRendererImpl.getPrimitiveContainer().paint(p, mainArea);\r\n    myTaskRendererImpl.getPrimitiveContainer().getLayer(1).paint(p, mainArea);\r\n    myTaskRendererImpl.getPrimitiveContainer().getLayer(2).paint(p, mainArea);\r\n    // \r\n    // myTaskRendererImpl.getPrimitiveContainer().paint(p, mainArea);\r\n    // myTaskRendererImpl.getPrimitiveContainer().getLayer(1).paint(p,\r\n    // mainArea);\r\n    // super.paintMainArea(mainArea, p);\r\n    // myTaskRendererImpl.getPrimitiveContainer().getLayer(2).paint(p,\r\n    // mainArea);\r\n    // myTaskGridRendererImpl.getPrimitiveContainer().paint(p, mainArea);\r\n}'),(1236,'/* <Task> */\r\nList visibleTasks','java.util.List',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1756,'net.sourceforge.ganttproject.chart.ChartModelImpl.setVisibleTasks(java.util.List)',0,'public void setVisibleTasks(/* <Task> */\r\nList visibleTasks) {\r\n    myVisibleTasks = visibleTasks;\r\n}'),(1237,'Set hiddenTasks','java.util.Set',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1751,'net.sourceforge.ganttproject.chart.ChartModelImpl.setExplicitlyHiddenTasks(java.util.Set)',0,'public void setExplicitlyHiddenTasks(Set hiddenTasks) {\r\n    myHiddenTasks = hiddenTasks;\r\n}'),(1238,'int x','int',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1735,'net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskWithCoordinates(int,int)',0,'public Task findTaskWithCoordinates(int x, int y) {\r\n    y = y + (getVerticalOffset());\r\n    GraphicPrimitiveContainer.GraphicPrimitive primitive = myTaskRendererImpl.getPrimitiveContainer().getPrimitive(x, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n    if (primitive instanceof GraphicPrimitiveContainer.Rectangle) {\r\n        TaskActivity activity = ((TaskActivity) (primitive.getModelObject()));\r\n        return activity == null ? null : activity.getTask();\r\n    }\r\n    return null;\r\n}'),(1239,'net.sourceforge.ganttproject.task.Task','net.sourceforge.ganttproject.task.Task',548,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1735,'net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskWithCoordinates(int,int)',1,'public Task findTaskWithCoordinates(int x, int y) {\r\n    y = y + (getVerticalOffset());\r\n    GraphicPrimitiveContainer.GraphicPrimitive primitive = myTaskRendererImpl.getPrimitiveContainer().getPrimitive(x, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n    if (primitive instanceof GraphicPrimitiveContainer.Rectangle) {\r\n        TaskActivity activity = ((TaskActivity) (primitive.getModelObject()));\r\n        return activity == null ? null : activity.getTask();\r\n    }\r\n    return null;\r\n}'),(1240,'int y','int',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1735,'net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskWithCoordinates(int,int)',0,'public Task findTaskWithCoordinates(int x, int y) {\r\n    y = y + (getVerticalOffset());\r\n    GraphicPrimitiveContainer.GraphicPrimitive primitive = myTaskRendererImpl.getPrimitiveContainer().getPrimitive(x, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n    if (primitive instanceof GraphicPrimitiveContainer.Rectangle) {\r\n        TaskActivity activity = ((TaskActivity) (primitive.getModelObject()));\r\n        return activity == null ? null : activity.getTask();\r\n    }\r\n    return null;\r\n}'),(1241,'int x','int',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1737,'net.sourceforge.ganttproject.chart.ChartModelImpl.getChartItemWithCoordinates(int,int)',0,'public ChartItem getChartItemWithCoordinates(int x, int y) {\r\n    y = y + (getVerticalOffset());\r\n    ChartItem result = findTaskProgressItem(x, y);\r\n    if (result == null) {\r\n        result = findTaskBoundaryItem(x, y);\r\n    }\r\n    return result;\r\n}'),(1242,'net.sourceforge.ganttproject.chart.item.ChartItem','net.sourceforge.ganttproject.chart.item.ChartItem',224,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1737,'net.sourceforge.ganttproject.chart.ChartModelImpl.getChartItemWithCoordinates(int,int)',1,'public ChartItem getChartItemWithCoordinates(int x, int y) {\r\n    y = y + (getVerticalOffset());\r\n    ChartItem result = findTaskProgressItem(x, y);\r\n    if (result == null) {\r\n        result = findTaskBoundaryItem(x, y);\r\n    }\r\n    return result;\r\n}'),(1243,'int y','int',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1737,'net.sourceforge.ganttproject.chart.ChartModelImpl.getChartItemWithCoordinates(int,int)',0,'public ChartItem getChartItemWithCoordinates(int x, int y) {\r\n    y = y + (getVerticalOffset());\r\n    ChartItem result = findTaskProgressItem(x, y);\r\n    if (result == null) {\r\n        result = findTaskBoundaryItem(x, y);\r\n    }\r\n    return result;\r\n}'),(1244,'int x','int',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1734,'net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskProgressItem(int,int)',0,'private ChartItem findTaskProgressItem(int x, int y) {\r\n    ChartItem result = null;\r\n    GraphicPrimitiveContainer.GraphicPrimitive primitive = myTaskRendererImpl.getPrimitiveContainer().getLayer(1).getPrimitive(x, 4, (y - (getChartUIConfiguration().getHeaderHeight())), 0);\r\n    if (primitive instanceof GraphicPrimitiveContainer.Rectangle) {\r\n        GraphicPrimitiveContainer.Rectangle rect = ((GraphicPrimitiveContainer.Rectangle) (primitive));\r\n        if (((\"task.progress.end\".equals(primitive.getStyle())) && ((rect.getRightX()) >= (x - 4))) && ((rect.getRightX()) <= (x + 4))) {\r\n            result = new TaskProgressChartItem(x, getBottomUnitWidth(), getBottomUnit(), ((Task) (primitive.getModelObject())));\r\n        }\r\n    }\r\n    return result;\r\n}'),(1245,'net.sourceforge.ganttproject.chart.item.ChartItem','net.sourceforge.ganttproject.chart.item.ChartItem',224,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1734,'net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskProgressItem(int,int)',1,'private ChartItem findTaskProgressItem(int x, int y) {\r\n    ChartItem result = null;\r\n    GraphicPrimitiveContainer.GraphicPrimitive primitive = myTaskRendererImpl.getPrimitiveContainer().getLayer(1).getPrimitive(x, 4, (y - (getChartUIConfiguration().getHeaderHeight())), 0);\r\n    if (primitive instanceof GraphicPrimitiveContainer.Rectangle) {\r\n        GraphicPrimitiveContainer.Rectangle rect = ((GraphicPrimitiveContainer.Rectangle) (primitive));\r\n        if (((\"task.progress.end\".equals(primitive.getStyle())) && ((rect.getRightX()) >= (x - 4))) && ((rect.getRightX()) <= (x + 4))) {\r\n            result = new TaskProgressChartItem(x, getBottomUnitWidth(), getBottomUnit(), ((Task) (primitive.getModelObject())));\r\n        }\r\n    }\r\n    return result;\r\n}'),(1246,'int y','int',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1734,'net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskProgressItem(int,int)',0,'private ChartItem findTaskProgressItem(int x, int y) {\r\n    ChartItem result = null;\r\n    GraphicPrimitiveContainer.GraphicPrimitive primitive = myTaskRendererImpl.getPrimitiveContainer().getLayer(1).getPrimitive(x, 4, (y - (getChartUIConfiguration().getHeaderHeight())), 0);\r\n    if (primitive instanceof GraphicPrimitiveContainer.Rectangle) {\r\n        GraphicPrimitiveContainer.Rectangle rect = ((GraphicPrimitiveContainer.Rectangle) (primitive));\r\n        if (((\"task.progress.end\".equals(primitive.getStyle())) && ((rect.getRightX()) >= (x - 4))) && ((rect.getRightX()) <= (x + 4))) {\r\n            result = new TaskProgressChartItem(x, getBottomUnitWidth(), getBottomUnit(), ((Task) (primitive.getModelObject())));\r\n        }\r\n    }\r\n    return result;\r\n}'),(1247,'int x','int',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1733,'net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskBoundaryItem(int,int)',0,'private ChartItem findTaskBoundaryItem(int x, int y) {\r\n    ChartItem result = null;\r\n    GraphicPrimitiveContainer.GraphicPrimitive primitive = myTaskRendererImpl.getPrimitiveContainer().getPrimitive(x, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n    if (primitive == null) {\r\n        primitive = myTaskRendererImpl.getPrimitiveContainer().getLayer(2).getPrimitive(x, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n    }\r\n    if (primitive instanceof GraphicPrimitiveContainer.Rectangle) {\r\n        GraphicPrimitiveContainer.Rectangle rect = ((GraphicPrimitiveContainer.Rectangle) (primitive));\r\n        TaskActivity activity = ((TaskActivity) (primitive.getModelObject()));\r\n        if (activity != null) {\r\n            if (((activity.isFirst()) && (((rect.myLeftX) - 2) <= x)) && (((rect.myLeftX) + 2) >= x)) {\r\n                result = new TaskBoundaryChartItem(activity.getTask(), true);\r\n            }\r\n            if ((((result == null) && (activity.isLast())) && ((((rect.myLeftX) + (rect.myWidth)) - 2) <= x)) && ((((rect.myLeftX) + (rect.myWidth)) + 2) >= x)) {\r\n                result = new TaskBoundaryChartItem(activity.getTask(), false);\r\n            }\r\n            if (result == null) {\r\n                result = new TaskRegularAreaChartItem(activity.getTask());\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}'),(1248,'net.sourceforge.ganttproject.chart.item.ChartItem','net.sourceforge.ganttproject.chart.item.ChartItem',224,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1733,'net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskBoundaryItem(int,int)',1,'private ChartItem findTaskBoundaryItem(int x, int y) {\r\n    ChartItem result = null;\r\n    GraphicPrimitiveContainer.GraphicPrimitive primitive = myTaskRendererImpl.getPrimitiveContainer().getPrimitive(x, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n    if (primitive == null) {\r\n        primitive = myTaskRendererImpl.getPrimitiveContainer().getLayer(2).getPrimitive(x, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n    }\r\n    if (primitive instanceof GraphicPrimitiveContainer.Rectangle) {\r\n        GraphicPrimitiveContainer.Rectangle rect = ((GraphicPrimitiveContainer.Rectangle) (primitive));\r\n        TaskActivity activity = ((TaskActivity) (primitive.getModelObject()));\r\n        if (activity != null) {\r\n            if (((activity.isFirst()) && (((rect.myLeftX) - 2) <= x)) && (((rect.myLeftX) + 2) >= x)) {\r\n                result = new TaskBoundaryChartItem(activity.getTask(), true);\r\n            }\r\n            if ((((result == null) && (activity.isLast())) && ((((rect.myLeftX) + (rect.myWidth)) - 2) <= x)) && ((((rect.myLeftX) + (rect.myWidth)) + 2) >= x)) {\r\n                result = new TaskBoundaryChartItem(activity.getTask(), false);\r\n            }\r\n            if (result == null) {\r\n                result = new TaskRegularAreaChartItem(activity.getTask());\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}'),(1249,'int y','int',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1733,'net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskBoundaryItem(int,int)',0,'private ChartItem findTaskBoundaryItem(int x, int y) {\r\n    ChartItem result = null;\r\n    GraphicPrimitiveContainer.GraphicPrimitive primitive = myTaskRendererImpl.getPrimitiveContainer().getPrimitive(x, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n    if (primitive == null) {\r\n        primitive = myTaskRendererImpl.getPrimitiveContainer().getLayer(2).getPrimitive(x, (y - (getChartUIConfiguration().getHeaderHeight())));\r\n    }\r\n    if (primitive instanceof GraphicPrimitiveContainer.Rectangle) {\r\n        GraphicPrimitiveContainer.Rectangle rect = ((GraphicPrimitiveContainer.Rectangle) (primitive));\r\n        TaskActivity activity = ((TaskActivity) (primitive.getModelObject()));\r\n        if (activity != null) {\r\n            if (((activity.isFirst()) && (((rect.myLeftX) - 2) <= x)) && (((rect.myLeftX) + 2) >= x)) {\r\n                result = new TaskBoundaryChartItem(activity.getTask(), true);\r\n            }\r\n            if ((((result == null) && (activity.isLast())) && ((((rect.myLeftX) + (rect.myWidth)) - 2) <= x)) && ((((rect.myLeftX) + (rect.myWidth)) + 2) >= x)) {\r\n                result = new TaskBoundaryChartItem(activity.getTask(), false);\r\n            }\r\n            if (result == null) {\r\n                result = new TaskRegularAreaChartItem(activity.getTask());\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}'),(1250,'Task task','net.sourceforge.ganttproject.task.Task',548,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1736,'net.sourceforge.ganttproject.chart.ChartModelImpl.getBoundingRectangle(net.sourceforge.ganttproject.task.Task)',0,'public Rectangle getBoundingRectangle(Task task) {\r\n    Rectangle result = null;\r\n    TaskActivity[] activities = task.getActivities();\r\n    for (int i = 0; i < (activities.length); i++) {\r\n        GraphicPrimitiveContainer.Rectangle nextRectangle = ((GraphicPrimitiveContainer.Rectangle) (myTaskRendererImpl.getPrimitive(activities[i])));\r\n        if (nextRectangle != null) {\r\n            Rectangle nextAwtRectangle = new Rectangle(nextRectangle.myLeftX, nextRectangle.myTopY, nextRectangle.myWidth, nextRectangle.myHeight);\r\n            if (result == null) {\r\n                result = nextAwtRectangle;\r\n            } else {\r\n                result = result.union(nextAwtRectangle);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}'),(1251,'Task task','net.sourceforge.ganttproject.task.Task',548,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1740,'net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskActivityRectangles(net.sourceforge.ganttproject.task.Task)',0,'GraphicPrimitiveContainer.Rectangle[] getTaskActivityRectangles(Task task) {\r\n    List result = new ArrayList();\r\n    TaskActivity[] activities = task.getActivities();\r\n    for (int i = 0; i < (activities.length); i++) {\r\n        GraphicPrimitiveContainer.Rectangle nextRectangle = ((GraphicPrimitiveContainer.Rectangle) (myTaskRendererImpl.getPrimitive(activities[i])));\r\n        if (nextRectangle != null) {\r\n            result.add(nextRectangle);\r\n        }\r\n    }\r\n    return ((GraphicPrimitiveContainer.Rectangle[]) (result.toArray(new GraphicPrimitiveContainer.Rectangle[0])));\r\n}'),(1252,'TaskContainmentHierarchyFacade taskContainment','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1754,'net.sourceforge.ganttproject.chart.ChartModelImpl.setTaskContainment(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.chart.ChartModel#setTaskContainment(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)\n */\r\npublic void setTaskContainment(TaskContainmentHierarchyFacade taskContainment) {\r\n    myTaskContainment = taskContainment;\r\n}'),(1253,'ChartModelImpl.TuningOptions tuningOptions','net.sourceforge.ganttproject.chart.ChartModelImpl$TuningOptions',171,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1755,'net.sourceforge.ganttproject.chart.ChartModelImpl.setTuningOptions(net.sourceforge.ganttproject.chart.ChartModelImpl$TuningOptions)',0,'public void setTuningOptions(ChartModelImpl.TuningOptions tuningOptions) {\r\n    myTaskRendererImpl.setProgressRenderingEnabled(tuningOptions.renderProgress);\r\n    myTaskRendererImpl.setDependenciesRenderingEnabled(tuningOptions.renderDependencies);\r\n}'),(1254,'int index','int',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1748,'net.sourceforge.ganttproject.chart.ChartModelImpl.isSelected(int)',0,'public boolean isSelected(int index) {\r\n    return myTaskRendererImpl.isVisible(index);\r\n}'),(1255,'ArrayList tasks','java.util.ArrayList',0,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1752,'net.sourceforge.ganttproject.chart.ChartModelImpl.setPreviousStateTasks(java.util.ArrayList)',0,'public int setPreviousStateTasks(ArrayList tasks) {\r\n    if (tasks == null)\r\n        isPreviousState = false;\r\n    else\r\n        isPreviousState = true;\r\n\r\n    myTaskRendererImpl.setPreviousStateTasks(tasks);\r\n    return setRowHeight();\r\n}'),(1256,'Task task','net.sourceforge.ganttproject.task.Task',548,172,'net.sourceforge.ganttproject.chart.ChartModelImpl',1744,'net.sourceforge.ganttproject.chart.ChartModelImpl.isExplicitlyHidden(net.sourceforge.ganttproject.task.Task)',0,'public boolean isExplicitlyHidden(Task task) {\r\n    return (myHiddenTasks) == null ? false : myHiddenTasks.contains(task);\r\n}'),(1257,'String id','java.lang.String',0,173,'net.sourceforge.ganttproject.chart.ChartModelResource$ResourceLoadOption',1764,'net.sourceforge.ganttproject.chart.ChartModelResource$ResourceLoadOption.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'ResourceLoadOption(String id, String tagName, String attributeName) {\r\n    super(id);\r\n    myTagName = tagName;\r\n    myAttributeName = attributeName;\r\n}'),(1258,'String tagName','java.lang.String',0,173,'net.sourceforge.ganttproject.chart.ChartModelResource$ResourceLoadOption',1764,'net.sourceforge.ganttproject.chart.ChartModelResource$ResourceLoadOption.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'ResourceLoadOption(String id, String tagName, String attributeName) {\r\n    super(id);\r\n    myTagName = tagName;\r\n    myAttributeName = attributeName;\r\n}'),(1259,'String attributeName','java.lang.String',0,173,'net.sourceforge.ganttproject.chart.ChartModelResource$ResourceLoadOption',1764,'net.sourceforge.ganttproject.chart.ChartModelResource$ResourceLoadOption.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'ResourceLoadOption(String id, String tagName, String attributeName) {\r\n    super(id);\r\n    myTagName = tagName;\r\n    myAttributeName = attributeName;\r\n}'),(1260,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,174,'net.sourceforge.ganttproject.chart.ChartModelResource',1759,'net.sourceforge.ganttproject.chart.ChartModelResource.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.HumanResourceManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.chart.ResourceChart)',0,'public ChartModelResource(TaskManager taskManager, HumanResourceManager resourceManager, TimeUnitStack timeUnitStack, final UIConfiguration projectConfig, ResourceChart resourceChart) {\r\n    super(taskManager, timeUnitStack, projectConfig);\r\n    myResourceLoadRenderer = new ResourceLoadRenderer(this, resourceChart);\r\n    myBottomLineRenderer = new BottomUnitLineRendererImpl(this, projectConfig);\r\n    myManager = resourceManager;\r\n    {\r\n        myResourceNormalLoadOption = new ChartModelResource.ResourceLoadOption(\"resourceChartColors.normalLoad\", \"colors\", \"resources\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceColor(getValue());\r\n            }\r\n        };\r\n        myResourceNormalLoadOption.lock();\r\n        myResourceNormalLoadOption.setValue(new Color(140, 182, 206));\r\n        myResourceNormalLoadOption.commit();\r\n    }\r\n    {\r\n        myResourceOverloadOption = new ChartModelResource.ResourceLoadOption(\"resourceChartColors.overLoad\", \"colors\", \"resourceOverload\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceOverloadColor(getValue());\r\n            }\r\n        };\r\n        myResourceOverloadOption.lock();\r\n        myResourceOverloadOption.setValue(new Color(229, 50, 50));\r\n        myResourceOverloadOption.commit();\r\n    }\r\n    {\r\n        myResourceUnderloadOption = new DefaultColorOption(\"resourceChartColors.underLoad\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceUnderloadColor(getValue());\r\n            }\r\n        };\r\n        myResourceUnderloadOption.lock();\r\n        myResourceUnderloadOption.setValue(new Color(50, 229, 50));\r\n        myResourceUnderloadOption.commit();\r\n    }\r\n    {\r\n        myDayOffOption = new DefaultColorOption(\"resourceChartColors.dayOff\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setDayOffColor(getValue());\r\n            }\r\n        };\r\n        myDayOffOption.lock();\r\n        myDayOffOption.setValue(new Color(0.9F, 1.0F, 0.17F));\r\n        myDayOffOption.commit();\r\n    }\r\n    myColorOptions = new GPOptionGroup(\"resourceChartColors\", new GPOption[]{ myResourceNormalLoadOption, myResourceOverloadOption, myResourceUnderloadOption, myDayOffOption });\r\n}'),(1261,'HumanResourceManager resourceManager','net.sourceforge.ganttproject.resource.HumanResourceManager',501,174,'net.sourceforge.ganttproject.chart.ChartModelResource',1759,'net.sourceforge.ganttproject.chart.ChartModelResource.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.HumanResourceManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.chart.ResourceChart)',0,'public ChartModelResource(TaskManager taskManager, HumanResourceManager resourceManager, TimeUnitStack timeUnitStack, final UIConfiguration projectConfig, ResourceChart resourceChart) {\r\n    super(taskManager, timeUnitStack, projectConfig);\r\n    myResourceLoadRenderer = new ResourceLoadRenderer(this, resourceChart);\r\n    myBottomLineRenderer = new BottomUnitLineRendererImpl(this, projectConfig);\r\n    myManager = resourceManager;\r\n    {\r\n        myResourceNormalLoadOption = new ChartModelResource.ResourceLoadOption(\"resourceChartColors.normalLoad\", \"colors\", \"resources\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceColor(getValue());\r\n            }\r\n        };\r\n        myResourceNormalLoadOption.lock();\r\n        myResourceNormalLoadOption.setValue(new Color(140, 182, 206));\r\n        myResourceNormalLoadOption.commit();\r\n    }\r\n    {\r\n        myResourceOverloadOption = new ChartModelResource.ResourceLoadOption(\"resourceChartColors.overLoad\", \"colors\", \"resourceOverload\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceOverloadColor(getValue());\r\n            }\r\n        };\r\n        myResourceOverloadOption.lock();\r\n        myResourceOverloadOption.setValue(new Color(229, 50, 50));\r\n        myResourceOverloadOption.commit();\r\n    }\r\n    {\r\n        myResourceUnderloadOption = new DefaultColorOption(\"resourceChartColors.underLoad\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceUnderloadColor(getValue());\r\n            }\r\n        };\r\n        myResourceUnderloadOption.lock();\r\n        myResourceUnderloadOption.setValue(new Color(50, 229, 50));\r\n        myResourceUnderloadOption.commit();\r\n    }\r\n    {\r\n        myDayOffOption = new DefaultColorOption(\"resourceChartColors.dayOff\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setDayOffColor(getValue());\r\n            }\r\n        };\r\n        myDayOffOption.lock();\r\n        myDayOffOption.setValue(new Color(0.9F, 1.0F, 0.17F));\r\n        myDayOffOption.commit();\r\n    }\r\n    myColorOptions = new GPOptionGroup(\"resourceChartColors\", new GPOption[]{ myResourceNormalLoadOption, myResourceOverloadOption, myResourceUnderloadOption, myDayOffOption });\r\n}');
INSERT INTO `parameters` VALUES (1262,'TimeUnitStack timeUnitStack','net.sourceforge.ganttproject.time.TimeUnitStack',639,174,'net.sourceforge.ganttproject.chart.ChartModelResource',1759,'net.sourceforge.ganttproject.chart.ChartModelResource.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.HumanResourceManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.chart.ResourceChart)',0,'public ChartModelResource(TaskManager taskManager, HumanResourceManager resourceManager, TimeUnitStack timeUnitStack, final UIConfiguration projectConfig, ResourceChart resourceChart) {\r\n    super(taskManager, timeUnitStack, projectConfig);\r\n    myResourceLoadRenderer = new ResourceLoadRenderer(this, resourceChart);\r\n    myBottomLineRenderer = new BottomUnitLineRendererImpl(this, projectConfig);\r\n    myManager = resourceManager;\r\n    {\r\n        myResourceNormalLoadOption = new ChartModelResource.ResourceLoadOption(\"resourceChartColors.normalLoad\", \"colors\", \"resources\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceColor(getValue());\r\n            }\r\n        };\r\n        myResourceNormalLoadOption.lock();\r\n        myResourceNormalLoadOption.setValue(new Color(140, 182, 206));\r\n        myResourceNormalLoadOption.commit();\r\n    }\r\n    {\r\n        myResourceOverloadOption = new ChartModelResource.ResourceLoadOption(\"resourceChartColors.overLoad\", \"colors\", \"resourceOverload\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceOverloadColor(getValue());\r\n            }\r\n        };\r\n        myResourceOverloadOption.lock();\r\n        myResourceOverloadOption.setValue(new Color(229, 50, 50));\r\n        myResourceOverloadOption.commit();\r\n    }\r\n    {\r\n        myResourceUnderloadOption = new DefaultColorOption(\"resourceChartColors.underLoad\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceUnderloadColor(getValue());\r\n            }\r\n        };\r\n        myResourceUnderloadOption.lock();\r\n        myResourceUnderloadOption.setValue(new Color(50, 229, 50));\r\n        myResourceUnderloadOption.commit();\r\n    }\r\n    {\r\n        myDayOffOption = new DefaultColorOption(\"resourceChartColors.dayOff\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setDayOffColor(getValue());\r\n            }\r\n        };\r\n        myDayOffOption.lock();\r\n        myDayOffOption.setValue(new Color(0.9F, 1.0F, 0.17F));\r\n        myDayOffOption.commit();\r\n    }\r\n    myColorOptions = new GPOptionGroup(\"resourceChartColors\", new GPOption[]{ myResourceNormalLoadOption, myResourceOverloadOption, myResourceUnderloadOption, myDayOffOption });\r\n}'),(1263,'final UIConfiguration projectConfig','net.sourceforge.ganttproject.gui.UIConfiguration',335,174,'net.sourceforge.ganttproject.chart.ChartModelResource',1759,'net.sourceforge.ganttproject.chart.ChartModelResource.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.HumanResourceManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.chart.ResourceChart)',0,'public ChartModelResource(TaskManager taskManager, HumanResourceManager resourceManager, TimeUnitStack timeUnitStack, final UIConfiguration projectConfig, ResourceChart resourceChart) {\r\n    super(taskManager, timeUnitStack, projectConfig);\r\n    myResourceLoadRenderer = new ResourceLoadRenderer(this, resourceChart);\r\n    myBottomLineRenderer = new BottomUnitLineRendererImpl(this, projectConfig);\r\n    myManager = resourceManager;\r\n    {\r\n        myResourceNormalLoadOption = new ChartModelResource.ResourceLoadOption(\"resourceChartColors.normalLoad\", \"colors\", \"resources\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceColor(getValue());\r\n            }\r\n        };\r\n        myResourceNormalLoadOption.lock();\r\n        myResourceNormalLoadOption.setValue(new Color(140, 182, 206));\r\n        myResourceNormalLoadOption.commit();\r\n    }\r\n    {\r\n        myResourceOverloadOption = new ChartModelResource.ResourceLoadOption(\"resourceChartColors.overLoad\", \"colors\", \"resourceOverload\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceOverloadColor(getValue());\r\n            }\r\n        };\r\n        myResourceOverloadOption.lock();\r\n        myResourceOverloadOption.setValue(new Color(229, 50, 50));\r\n        myResourceOverloadOption.commit();\r\n    }\r\n    {\r\n        myResourceUnderloadOption = new DefaultColorOption(\"resourceChartColors.underLoad\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceUnderloadColor(getValue());\r\n            }\r\n        };\r\n        myResourceUnderloadOption.lock();\r\n        myResourceUnderloadOption.setValue(new Color(50, 229, 50));\r\n        myResourceUnderloadOption.commit();\r\n    }\r\n    {\r\n        myDayOffOption = new DefaultColorOption(\"resourceChartColors.dayOff\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setDayOffColor(getValue());\r\n            }\r\n        };\r\n        myDayOffOption.lock();\r\n        myDayOffOption.setValue(new Color(0.9F, 1.0F, 0.17F));\r\n        myDayOffOption.commit();\r\n    }\r\n    myColorOptions = new GPOptionGroup(\"resourceChartColors\", new GPOption[]{ myResourceNormalLoadOption, myResourceOverloadOption, myResourceUnderloadOption, myDayOffOption });\r\n}'),(1264,'ResourceChart resourceChart','net.sourceforge.ganttproject.chart.ResourceChart',202,174,'net.sourceforge.ganttproject.chart.ChartModelResource',1759,'net.sourceforge.ganttproject.chart.ChartModelResource.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.HumanResourceManager,net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.chart.ResourceChart)',0,'public ChartModelResource(TaskManager taskManager, HumanResourceManager resourceManager, TimeUnitStack timeUnitStack, final UIConfiguration projectConfig, ResourceChart resourceChart) {\r\n    super(taskManager, timeUnitStack, projectConfig);\r\n    myResourceLoadRenderer = new ResourceLoadRenderer(this, resourceChart);\r\n    myBottomLineRenderer = new BottomUnitLineRendererImpl(this, projectConfig);\r\n    myManager = resourceManager;\r\n    {\r\n        myResourceNormalLoadOption = new ChartModelResource.ResourceLoadOption(\"resourceChartColors.normalLoad\", \"colors\", \"resources\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceColor(getValue());\r\n            }\r\n        };\r\n        myResourceNormalLoadOption.lock();\r\n        myResourceNormalLoadOption.setValue(new Color(140, 182, 206));\r\n        myResourceNormalLoadOption.commit();\r\n    }\r\n    {\r\n        myResourceOverloadOption = new ChartModelResource.ResourceLoadOption(\"resourceChartColors.overLoad\", \"colors\", \"resourceOverload\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceOverloadColor(getValue());\r\n            }\r\n        };\r\n        myResourceOverloadOption.lock();\r\n        myResourceOverloadOption.setValue(new Color(229, 50, 50));\r\n        myResourceOverloadOption.commit();\r\n    }\r\n    {\r\n        myResourceUnderloadOption = new DefaultColorOption(\"resourceChartColors.underLoad\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setResourceUnderloadColor(getValue());\r\n            }\r\n        };\r\n        myResourceUnderloadOption.lock();\r\n        myResourceUnderloadOption.setValue(new Color(50, 229, 50));\r\n        myResourceUnderloadOption.commit();\r\n    }\r\n    {\r\n        myDayOffOption = new DefaultColorOption(\"resourceChartColors.dayOff\") {\r\n            public void commit() {\r\n                super.commit();\r\n                projectConfig.setDayOffColor(getValue());\r\n            }\r\n        };\r\n        myDayOffOption.lock();\r\n        myDayOffOption.setValue(new Color(0.9F, 1.0F, 0.17F));\r\n        myDayOffOption.commit();\r\n    }\r\n    myColorOptions = new GPOptionGroup(\"resourceChartColors\", new GPOption[]{ myResourceNormalLoadOption, myResourceOverloadOption, myResourceUnderloadOption, myDayOffOption });\r\n}'),(1265,'String legacyValue','java.lang.String',0,173,'net.sourceforge.ganttproject.chart.ChartModelResource$ResourceLoadOption',1767,'net.sourceforge.ganttproject.chart.ChartModelResource$ResourceLoadOption.loadValue(java.lang.String)',0,'public void loadValue(String legacyValue) {\r\n    loadPersistentValue(legacyValue);\r\n}'),(1266,'Graphics g','java.awt.Graphics',0,174,'net.sourceforge.ganttproject.chart.ChartModelResource',1763,'net.sourceforge.ganttproject.chart.ChartModelResource.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n    super.paint(g);\r\n    Graphics mainArea = g.create(0, getChartUIConfiguration().getHeaderHeight(), ((int) (getBounds().getWidth())), ((int) (getBounds().getHeight())));\r\n    mainArea.translate(0, (-(getVerticalOffset())));\r\n    getPainter().setGraphics(mainArea);\r\n    myResourceLoadRenderer.render();\r\n    myBottomLineRenderer.setHeight(getBounds().height);\r\n    myBottomLineRenderer.render();\r\n    myBottomLineRenderer.getPrimitiveContainer().paint(getPainter(), mainArea);\r\n    myResourceLoadRenderer.getPrimitiveContainer().paint(getPainter(), mainArea);\r\n}'),(1267,'String id','java.lang.String',0,175,'net.sourceforge.ganttproject.chart.ChartOptionGroup',1768,'net.sourceforge.ganttproject.chart.ChartOptionGroup.-init-(java.lang.String,net.sourceforge.ganttproject.gui.options.model.GPOption[],net.sourceforge.ganttproject.chart.ChartModelBase$OptionEventDispatcher)',0,'public ChartOptionGroup(String id, GPOption[] options, ChartModelBase.OptionEventDispatcher eventDispatcher) {\r\n    super(id, options);\r\n    myEventDispatcher = eventDispatcher;\r\n}'),(1268,'GPOption[] options','net.sourceforge.ganttproject.gui.options.model.GPOption[]',0,175,'net.sourceforge.ganttproject.chart.ChartOptionGroup',1768,'net.sourceforge.ganttproject.chart.ChartOptionGroup.-init-(java.lang.String,net.sourceforge.ganttproject.gui.options.model.GPOption[],net.sourceforge.ganttproject.chart.ChartModelBase$OptionEventDispatcher)',0,'public ChartOptionGroup(String id, GPOption[] options, ChartModelBase.OptionEventDispatcher eventDispatcher) {\r\n    super(id, options);\r\n    myEventDispatcher = eventDispatcher;\r\n}'),(1269,'ChartModelBase.OptionEventDispatcher eventDispatcher','net.sourceforge.ganttproject.chart.ChartModelBase$OptionEventDispatcher',165,175,'net.sourceforge.ganttproject.chart.ChartOptionGroup',1768,'net.sourceforge.ganttproject.chart.ChartOptionGroup.-init-(java.lang.String,net.sourceforge.ganttproject.gui.options.model.GPOption[],net.sourceforge.ganttproject.chart.ChartModelBase$OptionEventDispatcher)',0,'public ChartOptionGroup(String id, GPOption[] options, ChartModelBase.OptionEventDispatcher eventDispatcher) {\r\n    super(id, options);\r\n    myEventDispatcher = eventDispatcher;\r\n}'),(1270,'ChartModelBase model','net.sourceforge.ganttproject.chart.ChartModelBase',170,176,'net.sourceforge.ganttproject.chart.ChartRendererBase',1770,'net.sourceforge.ganttproject.chart.ChartRendererBase.-init-(net.sourceforge.ganttproject.chart.ChartModelBase)',0,'public ChartRendererBase(ChartModelBase model) {\r\n    myPrimitiveContainer = new GraphicPrimitiveContainer();\r\n    myChartModel = model;\r\n}'),(1271,'int height','int',0,176,'net.sourceforge.ganttproject.chart.ChartRendererBase',1779,'net.sourceforge.ganttproject.chart.ChartRendererBase.setHeight(int)',0,'void setHeight(int height) {\r\n    myHeight = height;\r\n}'),(1272,'boolean enabled','boolean',0,176,'net.sourceforge.ganttproject.chart.ChartRendererBase',1778,'net.sourceforge.ganttproject.chart.ChartRendererBase.setEnabled(boolean)',0,'public void setEnabled(boolean enabled) {\r\n    isEnabled = enabled;\r\n}'),(1273,'UIConfiguration projectConfig','net.sourceforge.ganttproject.gui.UIConfiguration',335,179,'net.sourceforge.ganttproject.chart.ChartUIConfiguration',1789,'net.sourceforge.ganttproject.chart.ChartUIConfiguration.-init-(net.sourceforge.ganttproject.gui.UIConfiguration)',0,'ChartUIConfiguration(UIConfiguration projectConfig) {\r\n    mySpanningRowTextFont = Fonts.TOP_UNIT_FONT;\r\n    myBottomUnitFont = projectConfig.getChartMainFont();\r\n    mySpanningHeaderBackgroundColor = new Color(0.93F, 0.93F, 0.93F);\r\n    myHeaderBorderColor = new Color(0.482F, 0.482F, 0.482F);\r\n    myWorkingTimeBackgroundColor = Color.WHITE;\r\n    myHolidayTimeBackgroundColor = new Color(0.93F, 0.93F, 0.93F);\r\n    myPublicHolidayTimeBackgroundColor = new Color(240, 220, 240);\r\n    // myHeaderBorderColor = new Color(0f, 1f, 0f);\r\n    myBottomUnitGridColor = new Color(0.482F, 0.482F, 0.482F);\r\n    myProjectConfig = projectConfig;\r\n}'),(1274,'int headerHeight','int',0,179,'net.sourceforge.ganttproject.chart.ChartUIConfiguration',1818,'net.sourceforge.ganttproject.chart.ChartUIConfiguration.setHeaderHeight(int)',0,'public void setHeaderHeight(int headerHeight) {\r\n    myHeaderHeight = headerHeight;\r\n}'),(1275,'int rowHeight','int',0,179,'net.sourceforge.ganttproject.chart.ChartUIConfiguration',1819,'net.sourceforge.ganttproject.chart.ChartUIConfiguration.setRowHeight(int)',0,'public void setRowHeight(int rowHeight) {\r\n    myRowHeight = rowHeight;\r\n}'),(1276,'int offset','int',0,179,'net.sourceforge.ganttproject.chart.ChartUIConfiguration',1820,'net.sourceforge.ganttproject.chart.ChartUIConfiguration.setYOffSet(int)',0,'public void setYOffSet(int offset) {\r\n    myYOffset = offset;\r\n}'),(1277,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,182,'net.sourceforge.ganttproject.chart.ChartViewState',1821,'net.sourceforge.ganttproject.chart.ChartViewState.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public ChartViewState(IGanttProject project, UIFacade uiFacade) {\r\n    iProject = project;\r\n    myUIFacade = uiFacade;\r\n    myTimeUnitStack = project.getTimeUnitStack();\r\n    myStartDate = CalendarFactory.newCalendar().getTime();\r\n    uiFacade.getZoomManager().addZoomListener(this);\r\n    myCurrentTimeFrame = myTimeUnitStack.createTimeFrame(myStartDate, getTopTimeUnit(), getBottomTimeUnit());\r\n    // setDefaultBottomUnitWidth();\r\n}'),(1278,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,182,'net.sourceforge.ganttproject.chart.ChartViewState',1821,'net.sourceforge.ganttproject.chart.ChartViewState.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public ChartViewState(IGanttProject project, UIFacade uiFacade) {\r\n    iProject = project;\r\n    myUIFacade = uiFacade;\r\n    myTimeUnitStack = project.getTimeUnitStack();\r\n    myStartDate = CalendarFactory.newCalendar().getTime();\r\n    uiFacade.getZoomManager().addZoomListener(this);\r\n    myCurrentTimeFrame = myTimeUnitStack.createTimeFrame(myStartDate, getTopTimeUnit(), getBottomTimeUnit());\r\n    // setDefaultBottomUnitWidth();\r\n}'),(1279,'ChartViewState viewState','net.sourceforge.ganttproject.chart.ChartViewState',182,181,'net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent',1840,'net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent.-init-(net.sourceforge.ganttproject.chart.ChartViewState,java.lang.Object,java.lang.Object)',0,'public ViewStateEvent(ChartViewState viewState, Object oldValue, Object newValue) {\r\n    super(viewState);\r\n    myOldValue = oldValue;\r\n    myNewValue = newValue;\r\n}'),(1280,'Object oldValue','java.lang.Object',0,181,'net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent',1840,'net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent.-init-(net.sourceforge.ganttproject.chart.ChartViewState,java.lang.Object,java.lang.Object)',0,'public ViewStateEvent(ChartViewState viewState, Object oldValue, Object newValue) {\r\n    super(viewState);\r\n    myOldValue = oldValue;\r\n    myNewValue = newValue;\r\n}'),(1281,'Object newValue','java.lang.Object',0,181,'net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent',1840,'net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent.-init-(net.sourceforge.ganttproject.chart.ChartViewState,java.lang.Object,java.lang.Object)',0,'public ViewStateEvent(ChartViewState viewState, Object oldValue, Object newValue) {\r\n    super(viewState);\r\n    myOldValue = oldValue;\r\n    myNewValue = newValue;\r\n}'),(1282,'Date date','java.util.Date',0,182,'net.sourceforge.ganttproject.chart.ChartViewState',1833,'net.sourceforge.ganttproject.chart.ChartViewState.scrollLeft(java.util.Date)',0,'public void scrollLeft(Date date) {\r\n    setStartDate(date);\r\n}'),(1283,'Date startDate','java.util.Date',0,182,'net.sourceforge.ganttproject.chart.ChartViewState',1836,'net.sourceforge.ganttproject.chart.ChartViewState.setStartDate(java.util.Date)',0,'public void setStartDate(Date startDate) {\r\n    myCurrentTimeFrame = scrollTimeFrame(startDate);\r\n    startDate = myCurrentTimeFrame.getStartDate();\r\n    ChartViewState.ViewStateEvent e = new ChartViewState.ViewStateEvent(this, myStartDate, startDate);\r\n    myStartDate = startDate;\r\n    fireStartDateChanged(e);\r\n}'),(1284,'Date scrolledDate','java.util.Date',0,182,'net.sourceforge.ganttproject.chart.ChartViewState',1835,'net.sourceforge.ganttproject.chart.ChartViewState.scrollTimeFrame(java.util.Date)',0,'private TimeFrame scrollTimeFrame(Date scrolledDate) {\r\n    TimeFrame result = null;\r\n    if (getTopTimeUnit().isConstructedFrom(getBottomTimeUnit())) {\r\n        result = myTimeUnitStack.createTimeFrame(scrolledDate, getTopTimeUnit(), getBottomTimeUnit());\r\n    } else {\r\n        result = myTimeUnitStack.createTimeFrame(scrolledDate, getBottomTimeUnit(), getBottomTimeUnit());\r\n    }\r\n    return result;\r\n}'),(1285,'net.sourceforge.ganttproject.time.TimeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,182,'net.sourceforge.ganttproject.chart.ChartViewState',1835,'net.sourceforge.ganttproject.chart.ChartViewState.scrollTimeFrame(java.util.Date)',1,'private TimeFrame scrollTimeFrame(Date scrolledDate) {\r\n    TimeFrame result = null;\r\n    if (getTopTimeUnit().isConstructedFrom(getBottomTimeUnit())) {\r\n        result = myTimeUnitStack.createTimeFrame(scrolledDate, getTopTimeUnit(), getBottomTimeUnit());\r\n    } else {\r\n        result = myTimeUnitStack.createTimeFrame(scrolledDate, getBottomTimeUnit(), getBottomTimeUnit());\r\n    }\r\n    return result;\r\n}'),(1286,'ChartViewState.ViewStateEvent e','net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent',181,182,'net.sourceforge.ganttproject.chart.ChartViewState',1825,'net.sourceforge.ganttproject.chart.ChartViewState.fireStartDateChanged(net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent)',0,'private void fireStartDateChanged(ChartViewState.ViewStateEvent e) {\r\n    for (int i = 0; i < (myListeners.size()); i++) {\r\n        ChartViewState.Listener nextListener = ((ChartViewState.Listener) (myListeners.get(i)));\r\n        nextListener.startDateChanged(e);\r\n    }\r\n}'),(1287,'ZoomEvent e','net.sourceforge.ganttproject.gui.zoom.ZoomEvent',422,182,'net.sourceforge.ganttproject.chart.ChartViewState',1837,'net.sourceforge.ganttproject.chart.ChartViewState.zoomChanged(net.sourceforge.ganttproject.gui.zoom.ZoomEvent)',0,'public void zoomChanged(ZoomEvent e) {\r\n    myCurrentZoomState = e.getNewZoomState();\r\n    Date date = null;\r\n    if ((myUIFacade.getViewIndex()) == (UIFacade.GANTT_INDEX)) {\r\n        Date d = Mediator.getTaskSelectionManager().getEarliestStart();\r\n        // boolean zoomin = e.getZoomValue() < e.getOldValue();\r\n        // if (zoomin && myZoomStateIndex>0) {\r\n        // myZoomStateIndex--;\r\n        // }\r\n        // else if (!zoomin && myZoomStateIndex<myZoomStates.length-1) {\r\n        // myZoomStateIndex++;\r\n        // }\r\n        // myCurrentTimeFrame = scrollTimeFrame(d==null ? getStartDate() :\r\n        // d);\r\n        date = (d == null) ? getStartDate() : d;\r\n    } else\r\n        date = getStartDate();\r\n\r\n    setStartDate(date);\r\n}'),(1288,'ChartViewState.Listener listener','net.sourceforge.ganttproject.chart.ChartViewState$Listener',180,182,'net.sourceforge.ganttproject.chart.ChartViewState',1824,'net.sourceforge.ganttproject.chart.ChartViewState.addStateListener(net.sourceforge.ganttproject.chart.ChartViewState$Listener)',0,'public void addStateListener(ChartViewState.Listener listener) {\r\n    myListeners.add(listener);\r\n}'),(1289,'ChartViewState.Listener listener','net.sourceforge.ganttproject.chart.ChartViewState$Listener',180,182,'net.sourceforge.ganttproject.chart.ChartViewState',1831,'net.sourceforge.ganttproject.chart.ChartViewState.removeStateListener(net.sourceforge.ganttproject.chart.ChartViewState$Listener)',0,'public void removeStateListener(ChartViewState.Listener listener) {\r\n    myListeners.remove(listener);\r\n}'),(1290,'ChartViewState.ViewStateEvent e','net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent',181,180,'net.sourceforge.ganttproject.chart.ChartViewState$Listener',1838,'net.sourceforge.ganttproject.chart.ChartViewState$Listener.startDateChanged(net.sourceforge.ganttproject.chart.ChartViewState$ViewStateEvent)',0,'public void startDateChanged(ChartViewState.ViewStateEvent e);'),(1291,'ZoomEvent e','net.sourceforge.ganttproject.gui.zoom.ZoomEvent',422,180,'net.sourceforge.ganttproject.chart.ChartViewState$Listener',1839,'net.sourceforge.ganttproject.chart.ChartViewState$Listener.zoomChanged(net.sourceforge.ganttproject.gui.zoom.ZoomEvent)',0,'public void zoomChanged(ZoomEvent e);'),(1292,'GPCalendar.DayType dayType','net.sourceforge.ganttproject.calendar.GPCalendar$DayType',145,183,'net.sourceforge.ganttproject.chart.DayTypeAlternance',1843,'net.sourceforge.ganttproject.chart.DayTypeAlternance.-init-(net.sourceforge.ganttproject.calendar.GPCalendar$DayType,net.sourceforge.ganttproject.task.TaskLength,java.util.Date)',0,'DayTypeAlternance(GPCalendar.DayType dayType, TaskLength duration, Date endDate) {\r\n    myDayType = dayType;\r\n    myDuration = duration;\r\n    myEnd = endDate;\r\n}'),(1293,'TaskLength duration','net.sourceforge.ganttproject.task.TaskLength',562,183,'net.sourceforge.ganttproject.chart.DayTypeAlternance',1843,'net.sourceforge.ganttproject.chart.DayTypeAlternance.-init-(net.sourceforge.ganttproject.calendar.GPCalendar$DayType,net.sourceforge.ganttproject.task.TaskLength,java.util.Date)',0,'DayTypeAlternance(GPCalendar.DayType dayType, TaskLength duration, Date endDate) {\r\n    myDayType = dayType;\r\n    myDuration = duration;\r\n    myEnd = endDate;\r\n}'),(1294,'Date endDate','java.util.Date',0,183,'net.sourceforge.ganttproject.chart.DayTypeAlternance',1843,'net.sourceforge.ganttproject.chart.DayTypeAlternance.-init-(net.sourceforge.ganttproject.calendar.GPCalendar$DayType,net.sourceforge.ganttproject.task.TaskLength,java.util.Date)',0,'DayTypeAlternance(GPCalendar.DayType dayType, TaskLength duration, Date endDate) {\r\n    myDayType = dayType;\r\n    myDuration = duration;\r\n    myEnd = endDate;\r\n}'),(1295,'int x1','int',0,184,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer',1849,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.-init-(int,int,int,int)',0,'public DependencyInteractionRenderer(int x1, int y1, int x2, int y2) {\r\n    this.x1 = x1;\r\n    this.x2 = x2;\r\n    this.y1 = y1;\r\n    this.y2 = y2;\r\n    this.draw = true;\r\n}'),(1296,'int y1','int',0,184,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer',1849,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.-init-(int,int,int,int)',0,'public DependencyInteractionRenderer(int x1, int y1, int x2, int y2) {\r\n    this.x1 = x1;\r\n    this.x2 = x2;\r\n    this.y1 = y1;\r\n    this.y2 = y2;\r\n    this.draw = true;\r\n}'),(1297,'int x2','int',0,184,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer',1849,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.-init-(int,int,int,int)',0,'public DependencyInteractionRenderer(int x1, int y1, int x2, int y2) {\r\n    this.x1 = x1;\r\n    this.x2 = x2;\r\n    this.y1 = y1;\r\n    this.y2 = y2;\r\n    this.draw = true;\r\n}'),(1298,'int y2','int',0,184,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer',1849,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.-init-(int,int,int,int)',0,'public DependencyInteractionRenderer(int x1, int y1, int x2, int y2) {\r\n    this.x1 = x1;\r\n    this.x2 = x2;\r\n    this.y1 = y1;\r\n    this.y2 = y2;\r\n    this.draw = true;\r\n}'),(1299,'boolean d','boolean',0,184,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer',1853,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.setDraw(boolean)',0,'public void setDraw(boolean d) {\r\n    draw = d;\r\n}'),(1300,'int x2','int',0,184,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer',1850,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.changePoint2(int,int)',0,'public void changePoint2(int x2, int y2) {\r\n    this.x2 = x2;\r\n    this.y2 = y2;\r\n}'),(1301,'int y2','int',0,184,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer',1850,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.changePoint2(int,int)',0,'public void changePoint2(int x2, int y2) {\r\n    this.x2 = x2;\r\n    this.y2 = y2;\r\n}'),(1302,'Graphics g','java.awt.Graphics',0,184,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer',1852,'net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n    if (draw) {\r\n        // draw the line\r\n        g.setColor(Color.black);\r\n        g.drawLine(x1, y1, x2, y2);\r\n        // Draw the triangle\r\n        int[] xPoints = new int[3];\r\n        int[] yPoints = new int[3];\r\n        int vx = (x2) - (x1);\r\n        int vy = (y2) - (y1);\r\n        int px = ((int) (0.08F * ((float) (vx))));\r\n        int py = ((int) (0.08F * ((float) (vy))));\r\n        int total = (px < 0 ? -px : px) + (py < 0 ? -py : py);\r\n        px = ((int) ((((float) (px)) * 10.0F) / ((float) (total))));\r\n        py = ((int) ((((float) (py)) * 10.0F) / ((float) (total))));\r\n        xPoints[0] = x2;\r\n        yPoints[0] = y2;\r\n        xPoints[1] = ((x2) - px) + (py / 2);\r\n        yPoints[1] = ((y2) - py) - (px / 2);\r\n        xPoints[2] = ((x2) - px) - (py / 2);\r\n        yPoints[2] = ((y2) - py) + (px / 2);\r\n        g.fillPolygon(xPoints, yPoints, 3);\r\n    }\r\n}'),(1303,'int leftx','int',0,189,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',1880,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle.-init-(int,int,int,int)',0,'private Rectangle(int leftx, int topy, int width, int height) {\r\n    myLeftX = leftx;\r\n    myTopY = topy;\r\n    myWidth = width;\r\n    myHeight = height;\r\n}'),(1304,'int topy','int',0,189,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',1880,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle.-init-(int,int,int,int)',0,'private Rectangle(int leftx, int topy, int width, int height) {\r\n    myLeftX = leftx;\r\n    myTopY = topy;\r\n    myWidth = width;\r\n    myHeight = height;\r\n}'),(1305,'int width','int',0,189,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',1880,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle.-init-(int,int,int,int)',0,'private Rectangle(int leftx, int topy, int width, int height) {\r\n    myLeftX = leftx;\r\n    myTopY = topy;\r\n    myWidth = width;\r\n    myHeight = height;\r\n}'),(1306,'int height','int',0,189,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',1880,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle.-init-(int,int,int,int)',0,'private Rectangle(int leftx, int topy, int width, int height) {\r\n    myLeftX = leftx;\r\n    myTopY = topy;\r\n    myWidth = width;\r\n    myHeight = height;\r\n}'),(1307,'int startx','int',0,188,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line',1879,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line.-init-(int,int,int,int)',0,'private Line(int startx, int starty, int finishx, int finishy) {\r\n    myStartX = startx;\r\n    myStartY = starty;\r\n    myFinishX = finishx;\r\n    myFinishY = finishy;\r\n}'),(1308,'int starty','int',0,188,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line',1879,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line.-init-(int,int,int,int)',0,'private Line(int startx, int starty, int finishx, int finishy) {\r\n    myStartX = startx;\r\n    myStartY = starty;\r\n    myFinishX = finishx;\r\n    myFinishY = finishy;\r\n}'),(1309,'int finishx','int',0,188,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line',1879,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line.-init-(int,int,int,int)',0,'private Line(int startx, int starty, int finishx, int finishy) {\r\n    myStartX = startx;\r\n    myStartY = starty;\r\n    myFinishX = finishx;\r\n    myFinishY = finishy;\r\n}'),(1310,'int finishy','int',0,188,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line',1879,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line.-init-(int,int,int,int)',0,'private Line(int startx, int starty, int finishx, int finishy) {\r\n    myStartX = startx;\r\n    myStartY = starty;\r\n    myFinishX = finishx;\r\n    myFinishY = finishy;\r\n}'),(1311,'int leftX','int',0,190,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text',1886,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text.-init-(int,int,java.lang.String)',0,'Text(int leftX, int bottomY, String text) {\r\n    myLeftX = leftX;\r\n    myBottomY = bottomY;\r\n    myText = text;\r\n    myMaxLength = -1;\r\n}'),(1312,'int bottomY','int',0,190,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text',1886,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text.-init-(int,int,java.lang.String)',0,'Text(int leftX, int bottomY, String text) {\r\n    myLeftX = leftX;\r\n    myBottomY = bottomY;\r\n    myText = text;\r\n    myMaxLength = -1;\r\n}'),(1313,'String text','java.lang.String',0,190,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text',1886,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text.-init-(int,int,java.lang.String)',0,'Text(int leftX, int bottomY, String text) {\r\n    myLeftX = leftX;\r\n    myBottomY = bottomY;\r\n    myText = text;\r\n    myMaxLength = -1;\r\n}'),(1314,'String styleName','java.lang.String',0,186,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive',1877,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive.setStyle(java.lang.String)',0,'public void setStyle(String styleName) {\r\n    myStyleName = styleName;\r\n}'),(1315,'Color myBackgroundColor','java.awt.Color',0,186,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive',1874,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive.setBackgroundColor(java.awt.Color)',0,'public void setBackgroundColor(Color myBackgroundColor) {\r\n    this.myBackgroundColor = myBackgroundColor;\r\n}'),(1316,'Color myForegroundColor','java.awt.Color',0,186,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive',1875,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive.setForegroundColor(java.awt.Color)',0,'public void setForegroundColor(Color myForegroundColor) {\r\n    this.myForegroundColor = myForegroundColor;\r\n}'),(1317,'Object modelObject','java.lang.Object',0,186,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive',1876,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive.setModelObject(java.lang.Object)',0,'/**\r\n *\r\n *\r\n * @param modelObject\r\n * 		\r\n */\r\nvoid setModelObject(Object modelObject) {\r\n    myModelObject = modelObject;\r\n}'),(1318,'Font font','java.awt.Font',0,190,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text',1895,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text.setFont(java.awt.Font)',0,'public void setFont(Font font) {\r\n    myFont = font;\r\n}'),(1319,'int maxLength','int',0,190,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text',1896,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text.setMaxLength(int)',0,'public void setMaxLength(int maxLength) {\r\n    myMaxLength = maxLength;\r\n}'),(1320,'GraphicPrimitiveContainer.HAlignment halignment','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$HAlignment',187,190,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text',1894,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text.setAlignment(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$HAlignment,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$VAlignment)',0,'public void setAlignment(GraphicPrimitiveContainer.HAlignment halignment, GraphicPrimitiveContainer.VAlignment valignment) {\r\n    myHAlignment = halignment;\r\n    myVAlignment = valignment;\r\n}'),(1321,'GraphicPrimitiveContainer.VAlignment valignment','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$VAlignment',191,190,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text',1894,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text.setAlignment(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$HAlignment,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$VAlignment)',0,'public void setAlignment(GraphicPrimitiveContainer.HAlignment halignment, GraphicPrimitiveContainer.VAlignment valignment) {\r\n    myHAlignment = halignment;\r\n    myVAlignment = valignment;\r\n}'),(1322,'int leftx','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1861,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createRectangle(int,int,int,int)',0,'GraphicPrimitiveContainer.Rectangle createRectangle(int leftx, int topy, int width, int height) {\r\n    if (width < 0) {\r\n        width = -width;\r\n        leftx = leftx - width;\r\n    }\r\n    GraphicPrimitiveContainer.Rectangle result = new GraphicPrimitiveContainer.Rectangle(leftx, topy, width, height);\r\n    myRectangles.add(result);\r\n    return result;\r\n}'),(1323,'int topy','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1861,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createRectangle(int,int,int,int)',0,'GraphicPrimitiveContainer.Rectangle createRectangle(int leftx, int topy, int width, int height) {\r\n    if (width < 0) {\r\n        width = -width;\r\n        leftx = leftx - width;\r\n    }\r\n    GraphicPrimitiveContainer.Rectangle result = new GraphicPrimitiveContainer.Rectangle(leftx, topy, width, height);\r\n    myRectangles.add(result);\r\n    return result;\r\n}'),(1324,'int width','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1861,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createRectangle(int,int,int,int)',0,'GraphicPrimitiveContainer.Rectangle createRectangle(int leftx, int topy, int width, int height) {\r\n    if (width < 0) {\r\n        width = -width;\r\n        leftx = leftx - width;\r\n    }\r\n    GraphicPrimitiveContainer.Rectangle result = new GraphicPrimitiveContainer.Rectangle(leftx, topy, width, height);\r\n    myRectangles.add(result);\r\n    return result;\r\n}'),(1325,'int height','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1861,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createRectangle(int,int,int,int)',0,'GraphicPrimitiveContainer.Rectangle createRectangle(int leftx, int topy, int width, int height) {\r\n    if (width < 0) {\r\n        width = -width;\r\n        leftx = leftx - width;\r\n    }\r\n    GraphicPrimitiveContainer.Rectangle result = new GraphicPrimitiveContainer.Rectangle(leftx, topy, width, height);\r\n    myRectangles.add(result);\r\n    return result;\r\n}'),(1326,'int startx','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1860,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createLine(int,int,int,int)',0,'GraphicPrimitiveContainer.Line createLine(int startx, int starty, int finishx, int finishy) {\r\n    GraphicPrimitiveContainer.Line result = new GraphicPrimitiveContainer.Line(startx, starty, finishx, finishy);\r\n    myLines.add(result);\r\n    return result;\r\n}'),(1327,'int starty','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1860,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createLine(int,int,int,int)',0,'GraphicPrimitiveContainer.Line createLine(int startx, int starty, int finishx, int finishy) {\r\n    GraphicPrimitiveContainer.Line result = new GraphicPrimitiveContainer.Line(startx, starty, finishx, finishy);\r\n    myLines.add(result);\r\n    return result;\r\n}'),(1328,'int finishx','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1860,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createLine(int,int,int,int)',0,'GraphicPrimitiveContainer.Line createLine(int startx, int starty, int finishx, int finishy) {\r\n    GraphicPrimitiveContainer.Line result = new GraphicPrimitiveContainer.Line(startx, starty, finishx, finishy);\r\n    myLines.add(result);\r\n    return result;\r\n}'),(1329,'int finishy','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1860,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createLine(int,int,int,int)',0,'GraphicPrimitiveContainer.Line createLine(int startx, int starty, int finishx, int finishy) {\r\n    GraphicPrimitiveContainer.Line result = new GraphicPrimitiveContainer.Line(startx, starty, finishx, finishy);\r\n    myLines.add(result);\r\n    return result;\r\n}'),(1330,'int leftx','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1862,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createText(int,int,java.lang.String)',0,'GraphicPrimitiveContainer.Text createText(int leftx, int bottomy, String text) {\r\n    GraphicPrimitiveContainer.Text result = new GraphicPrimitiveContainer.Text(leftx, bottomy, text);\r\n    myTexts.add(result);\r\n    return result;\r\n}'),(1331,'int bottomy','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1862,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createText(int,int,java.lang.String)',0,'GraphicPrimitiveContainer.Text createText(int leftx, int bottomy, String text) {\r\n    GraphicPrimitiveContainer.Text result = new GraphicPrimitiveContainer.Text(leftx, bottomy, text);\r\n    myTexts.add(result);\r\n    return result;\r\n}'),(1332,'String text','java.lang.String',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1862,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.createText(int,int,java.lang.String)',0,'GraphicPrimitiveContainer.Text createText(int leftx, int bottomy, String text) {\r\n    GraphicPrimitiveContainer.Text result = new GraphicPrimitiveContainer.Text(leftx, bottomy, text);\r\n    myTexts.add(result);\r\n    return result;\r\n}'),(1333,'Painter painter','net.sourceforge.ganttproject.chart.Painter',196,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1868,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.paint(net.sourceforge.ganttproject.chart.Painter,java.awt.Graphics)',0,'void paint(Painter painter, Graphics g) {\r\n    for (int i = 0; i < (myRectangles.size()); i++) {\r\n        GraphicPrimitiveContainer.Rectangle next = ((GraphicPrimitiveContainer.Rectangle) (myRectangles.get(i)));\r\n        painter.paint(next);\r\n    }\r\n    for (int i = 0; i < (myLines.size()); i++) {\r\n        GraphicPrimitiveContainer.Line next = ((GraphicPrimitiveContainer.Line) (myLines.get(i)));\r\n        Color foreColor = next.getForegroundColor();\r\n        if (foreColor == null) {\r\n            foreColor = Color.BLACK;\r\n        }\r\n        g.setColor(foreColor);\r\n        g.drawLine(next.myStartX, next.myStartY, next.myFinishX, next.myFinishY);\r\n    }\r\n    for (int i = 0; i < (myTexts.size()); i++) {\r\n        GraphicPrimitiveContainer.Text next = ((GraphicPrimitiveContainer.Text) (myTexts.get(i)));\r\n        painter.paint(next);\r\n    }\r\n}'),(1334,'Graphics g','java.awt.Graphics',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1868,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.paint(net.sourceforge.ganttproject.chart.Painter,java.awt.Graphics)',0,'void paint(Painter painter, Graphics g) {\r\n    for (int i = 0; i < (myRectangles.size()); i++) {\r\n        GraphicPrimitiveContainer.Rectangle next = ((GraphicPrimitiveContainer.Rectangle) (myRectangles.get(i)));\r\n        painter.paint(next);\r\n    }\r\n    for (int i = 0; i < (myLines.size()); i++) {\r\n        GraphicPrimitiveContainer.Line next = ((GraphicPrimitiveContainer.Line) (myLines.get(i)));\r\n        Color foreColor = next.getForegroundColor();\r\n        if (foreColor == null) {\r\n            foreColor = Color.BLACK;\r\n        }\r\n        g.setColor(foreColor);\r\n        g.drawLine(next.myStartX, next.myStartY, next.myFinishX, next.myFinishY);\r\n    }\r\n    for (int i = 0; i < (myTexts.size()); i++) {\r\n        GraphicPrimitiveContainer.Text next = ((GraphicPrimitiveContainer.Text) (myTexts.get(i)));\r\n        painter.paint(next);\r\n    }\r\n}'),(1335,'GraphicPrimitiveContainer.GraphicPrimitive primitive','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive',186,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1858,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.bind(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,java.lang.Object)',0,'void bind(GraphicPrimitiveContainer.GraphicPrimitive primitive, Object modelObject) {\r\n    myModelObject2primitive.put(modelObject, primitive);\r\n    primitive.setModelObject(modelObject);\r\n}'),(1336,'Object modelObject','java.lang.Object',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1858,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.bind(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,java.lang.Object)',0,'void bind(GraphicPrimitiveContainer.GraphicPrimitive primitive, Object modelObject) {\r\n    myModelObject2primitive.put(modelObject, primitive);\r\n    primitive.setModelObject(modelObject);\r\n}'),(1337,'Object modelObject','java.lang.Object',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1866,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.getPrimitive(java.lang.Object)',0,'GraphicPrimitiveContainer.GraphicPrimitive getPrimitive(Object modelObject) {\r\n    return ((GraphicPrimitiveContainer.GraphicPrimitive) (myModelObject2primitive.get(modelObject)));\r\n}'),(1338,'int x','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1864,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.getPrimitive(int,int)',0,'public GraphicPrimitiveContainer.GraphicPrimitive getPrimitive(int x, int y) {\r\n    // System.err.println(\"looking for primitive under point x=\"+x+\" y=\"+y);\r\n    return getPrimitive(x, 0, y, 0);\r\n    // for (int i = 0; i < myRectangles.size(); i++) {\r\n    // Rectangle next = (Rectangle) myRectangles.get(i);\r\n    // // System.err.println(\" next rectangle=\"+next);\r\n    // if (next.myLeftX <= x && next.myLeftX + next.myWidth >= x\r\n    // && next.myTopY <= y && next.myTopY + next.myHeight >= y) {\r\n    // return next;\r\n    // }\r\n    // }\r\n    // return null;\r\n}'),(1339,'int y','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1864,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.getPrimitive(int,int)',0,'public GraphicPrimitiveContainer.GraphicPrimitive getPrimitive(int x, int y) {\r\n    // System.err.println(\"looking for primitive under point x=\"+x+\" y=\"+y);\r\n    return getPrimitive(x, 0, y, 0);\r\n    // for (int i = 0; i < myRectangles.size(); i++) {\r\n    // Rectangle next = (Rectangle) myRectangles.get(i);\r\n    // // System.err.println(\" next rectangle=\"+next);\r\n    // if (next.myLeftX <= x && next.myLeftX + next.myWidth >= x\r\n    // && next.myTopY <= y && next.myTopY + next.myHeight >= y) {\r\n    // return next;\r\n    // }\r\n    // }\r\n    // return null;\r\n}'),(1340,'int x','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1865,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.getPrimitive(int,int,int,int)',0,'public GraphicPrimitiveContainer.GraphicPrimitive getPrimitive(int x, int xThreshold, int y, int yThreshold) {\r\n    for (int i = 0; i < (myRectangles.size()); i++) {\r\n        GraphicPrimitiveContainer.Rectangle next = ((GraphicPrimitiveContainer.Rectangle) (myRectangles.get(i)));\r\n        // System.err.println(\" next rectangle=\"+next);\r\n        if (((((next.myLeftX) <= (x + xThreshold)) && (((next.myLeftX) + (next.myWidth)) >= (x - xThreshold))) && ((next.myTopY) <= (y + yThreshold))) && (((next.myTopY) + (next.myHeight)) >= (y - yThreshold))) {\r\n            return next;\r\n        }\r\n    }\r\n    return null;\r\n}'),(1341,'int xThreshold','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1865,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.getPrimitive(int,int,int,int)',0,'public GraphicPrimitiveContainer.GraphicPrimitive getPrimitive(int x, int xThreshold, int y, int yThreshold) {\r\n    for (int i = 0; i < (myRectangles.size()); i++) {\r\n        GraphicPrimitiveContainer.Rectangle next = ((GraphicPrimitiveContainer.Rectangle) (myRectangles.get(i)));\r\n        // System.err.println(\" next rectangle=\"+next);\r\n        if (((((next.myLeftX) <= (x + xThreshold)) && (((next.myLeftX) + (next.myWidth)) >= (x - xThreshold))) && ((next.myTopY) <= (y + yThreshold))) && (((next.myTopY) + (next.myHeight)) >= (y - yThreshold))) {\r\n            return next;\r\n        }\r\n    }\r\n    return null;\r\n}'),(1342,'int y','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1865,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.getPrimitive(int,int,int,int)',0,'public GraphicPrimitiveContainer.GraphicPrimitive getPrimitive(int x, int xThreshold, int y, int yThreshold) {\r\n    for (int i = 0; i < (myRectangles.size()); i++) {\r\n        GraphicPrimitiveContainer.Rectangle next = ((GraphicPrimitiveContainer.Rectangle) (myRectangles.get(i)));\r\n        // System.err.println(\" next rectangle=\"+next);\r\n        if (((((next.myLeftX) <= (x + xThreshold)) && (((next.myLeftX) + (next.myWidth)) >= (x - xThreshold))) && ((next.myTopY) <= (y + yThreshold))) && (((next.myTopY) + (next.myHeight)) >= (y - yThreshold))) {\r\n            return next;\r\n        }\r\n    }\r\n    return null;\r\n}'),(1343,'int yThreshold','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1865,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.getPrimitive(int,int,int,int)',0,'public GraphicPrimitiveContainer.GraphicPrimitive getPrimitive(int x, int xThreshold, int y, int yThreshold) {\r\n    for (int i = 0; i < (myRectangles.size()); i++) {\r\n        GraphicPrimitiveContainer.Rectangle next = ((GraphicPrimitiveContainer.Rectangle) (myRectangles.get(i)));\r\n        // System.err.println(\" next rectangle=\"+next);\r\n        if (((((next.myLeftX) <= (x + xThreshold)) && (((next.myLeftX) + (next.myWidth)) >= (x - xThreshold))) && ((next.myTopY) <= (y + yThreshold))) && (((next.myTopY) + (next.myHeight)) >= (y - yThreshold))) {\r\n            return next;\r\n        }\r\n    }\r\n    return null;\r\n}'),(1344,'int layer','int',0,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1863,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.getLayer(int)',0,'public GraphicPrimitiveContainer getLayer(int layer) {\r\n    if ((layer < 0) || (layer >= (myLayers.size()))) {\r\n        return this;\r\n    }\r\n    return ((GraphicPrimitiveContainer) (myLayers.get(layer)));\r\n}'),(1345,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',192,192,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',1863,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer.getLayer(int)',1,'public GraphicPrimitiveContainer getLayer(int layer) {\r\n    if ((layer < 0) || (layer >= (myLayers.size()))) {\r\n        return this;\r\n    }\r\n    return ((GraphicPrimitiveContainer) (myLayers.get(layer)));\r\n}'),(1346,'String id','java.lang.String',0,193,'net.sourceforge.ganttproject.chart.LabelPositionOptionImpl',1898,'net.sourceforge.ganttproject.chart.LabelPositionOptionImpl.-init-(java.lang.String)',0,'LabelPositionOptionImpl(String id) {\r\n    super(id);\r\n    myValue = LabelPositionOptionImpl.VALUES[0];\r\n}'),(1347,'String value','java.lang.String',0,193,'net.sourceforge.ganttproject.chart.LabelPositionOptionImpl',1902,'net.sourceforge.ganttproject.chart.LabelPositionOptionImpl.setValue(java.lang.String)',0,'public void setValue(String value) {\r\n    if (!(isLocked())) {\r\n        throw new IllegalStateException(\"Lock option before setting value\");\r\n    }\r\n    myLockedValue = value;\r\n}'),(1348,'TimeUnitStack timeunitStack','net.sourceforge.ganttproject.time.TimeUnitStack',639,194,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl',1903,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl.-init-(net.sourceforge.ganttproject.time.TimeUnitStack)',0,'public OffsetCalculatorImpl(TimeUnitStack timeunitStack) {\r\n    myStack = timeunitStack;\r\n}'),(1349,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,194,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl',1904,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    ChartModelBase.Offset[] result;\r\n    // Date bottomUnitEndDate = timeFrame.getUnitFinish(frameBottomUnit, unitIndex);\r\n    if (offsetUnit.equals(frameBottomUnit)) {\r\n        result = new ChartModelBase.Offset[]{ new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, bottomUnitStartDate, 0, null) };\r\n    } else\r\n        if (frameBottomUnit.isConstructedFrom(offsetUnit)) {\r\n            // java.util.List buf = new ArrayList();\r\n            int outerFrameUnitCount = timeFrame.getUnitCount(offsetUnit);\r\n            TimeFrame innerFrame = myStack.createTimeFrame(bottomUnitStartDate, frameBottomUnit, offsetUnit);\r\n            int offsetUnitCount = innerFrame.getUnitCount(offsetUnit);\r\n            result = new ChartModelBase.Offset[offsetUnitCount];\r\n            for (int i = 0; i < offsetUnitCount; i++) {\r\n                Date offsetEnd = innerFrame.getUnitFinish(offsetUnit, i);\r\n                int offsetPixels = ((i + 1) * frameBottomUnitWidth) / outerFrameUnitCount;\r\n                result[i] = new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, offsetEnd, offsetPixels, null);\r\n            }\r\n        } else {\r\n            throw new RuntimeException(\"We should not be here\");\r\n        }\r\n\r\n    return result;\r\n}'),(1350,'TimeUnit frameBottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,194,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl',1904,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    ChartModelBase.Offset[] result;\r\n    // Date bottomUnitEndDate = timeFrame.getUnitFinish(frameBottomUnit, unitIndex);\r\n    if (offsetUnit.equals(frameBottomUnit)) {\r\n        result = new ChartModelBase.Offset[]{ new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, bottomUnitStartDate, 0, null) };\r\n    } else\r\n        if (frameBottomUnit.isConstructedFrom(offsetUnit)) {\r\n            // java.util.List buf = new ArrayList();\r\n            int outerFrameUnitCount = timeFrame.getUnitCount(offsetUnit);\r\n            TimeFrame innerFrame = myStack.createTimeFrame(bottomUnitStartDate, frameBottomUnit, offsetUnit);\r\n            int offsetUnitCount = innerFrame.getUnitCount(offsetUnit);\r\n            result = new ChartModelBase.Offset[offsetUnitCount];\r\n            for (int i = 0; i < offsetUnitCount; i++) {\r\n                Date offsetEnd = innerFrame.getUnitFinish(offsetUnit, i);\r\n                int offsetPixels = ((i + 1) * frameBottomUnitWidth) / outerFrameUnitCount;\r\n                result[i] = new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, offsetEnd, offsetPixels, null);\r\n            }\r\n        } else {\r\n            throw new RuntimeException(\"We should not be here\");\r\n        }\r\n\r\n    return result;\r\n}'),(1351,'Date bottomUnitStartDate','java.util.Date',0,194,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl',1904,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    ChartModelBase.Offset[] result;\r\n    // Date bottomUnitEndDate = timeFrame.getUnitFinish(frameBottomUnit, unitIndex);\r\n    if (offsetUnit.equals(frameBottomUnit)) {\r\n        result = new ChartModelBase.Offset[]{ new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, bottomUnitStartDate, 0, null) };\r\n    } else\r\n        if (frameBottomUnit.isConstructedFrom(offsetUnit)) {\r\n            // java.util.List buf = new ArrayList();\r\n            int outerFrameUnitCount = timeFrame.getUnitCount(offsetUnit);\r\n            TimeFrame innerFrame = myStack.createTimeFrame(bottomUnitStartDate, frameBottomUnit, offsetUnit);\r\n            int offsetUnitCount = innerFrame.getUnitCount(offsetUnit);\r\n            result = new ChartModelBase.Offset[offsetUnitCount];\r\n            for (int i = 0; i < offsetUnitCount; i++) {\r\n                Date offsetEnd = innerFrame.getUnitFinish(offsetUnit, i);\r\n                int offsetPixels = ((i + 1) * frameBottomUnitWidth) / outerFrameUnitCount;\r\n                result[i] = new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, offsetEnd, offsetPixels, null);\r\n            }\r\n        } else {\r\n            throw new RuntimeException(\"We should not be here\");\r\n        }\r\n\r\n    return result;\r\n}'),(1352,'TimeUnit offsetUnit','net.sourceforge.ganttproject.time.TimeUnit',630,194,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl',1904,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    ChartModelBase.Offset[] result;\r\n    // Date bottomUnitEndDate = timeFrame.getUnitFinish(frameBottomUnit, unitIndex);\r\n    if (offsetUnit.equals(frameBottomUnit)) {\r\n        result = new ChartModelBase.Offset[]{ new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, bottomUnitStartDate, 0, null) };\r\n    } else\r\n        if (frameBottomUnit.isConstructedFrom(offsetUnit)) {\r\n            // java.util.List buf = new ArrayList();\r\n            int outerFrameUnitCount = timeFrame.getUnitCount(offsetUnit);\r\n            TimeFrame innerFrame = myStack.createTimeFrame(bottomUnitStartDate, frameBottomUnit, offsetUnit);\r\n            int offsetUnitCount = innerFrame.getUnitCount(offsetUnit);\r\n            result = new ChartModelBase.Offset[offsetUnitCount];\r\n            for (int i = 0; i < offsetUnitCount; i++) {\r\n                Date offsetEnd = innerFrame.getUnitFinish(offsetUnit, i);\r\n                int offsetPixels = ((i + 1) * frameBottomUnitWidth) / outerFrameUnitCount;\r\n                result[i] = new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, offsetEnd, offsetPixels, null);\r\n            }\r\n        } else {\r\n            throw new RuntimeException(\"We should not be here\");\r\n        }\r\n\r\n    return result;\r\n}'),(1353,'int frameBottomUnitWidth','int',0,194,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl',1904,'net.sourceforge.ganttproject.chart.OffsetCalculatorImpl.calculateOffsets(net.sourceforge.ganttproject.time.TimeFrame,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {\r\n    ChartModelBase.Offset[] result;\r\n    // Date bottomUnitEndDate = timeFrame.getUnitFinish(frameBottomUnit, unitIndex);\r\n    if (offsetUnit.equals(frameBottomUnit)) {\r\n        result = new ChartModelBase.Offset[]{ new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, bottomUnitStartDate, 0, null) };\r\n    } else\r\n        if (frameBottomUnit.isConstructedFrom(offsetUnit)) {\r\n            // java.util.List buf = new ArrayList();\r\n            int outerFrameUnitCount = timeFrame.getUnitCount(offsetUnit);\r\n            TimeFrame innerFrame = myStack.createTimeFrame(bottomUnitStartDate, frameBottomUnit, offsetUnit);\r\n            int offsetUnitCount = innerFrame.getUnitCount(offsetUnit);\r\n            result = new ChartModelBase.Offset[offsetUnitCount];\r\n            for (int i = 0; i < offsetUnitCount; i++) {\r\n                Date offsetEnd = innerFrame.getUnitFinish(offsetUnit, i);\r\n                int offsetPixels = ((i + 1) * frameBottomUnitWidth) / outerFrameUnitCount;\r\n                result[i] = new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, offsetEnd, offsetPixels, null);\r\n            }\r\n        } else {\r\n            throw new RuntimeException(\"We should not be here\");\r\n        }\r\n\r\n    return result;\r\n}'),(1354,'GPOptionGroup[] groups','net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[]',0,195,'net.sourceforge.ganttproject.chart.OptionsDialogAction',1905,'net.sourceforge.ganttproject.chart.OptionsDialogAction.-init-(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[],net.sourceforge.ganttproject.gui.UIFacade)',0,'public OptionsDialogAction(GPOptionGroup[] groups, UIFacade uifacade) {\r\n    super(GanttLanguage.getInstance().getText(\"chartOptions\"));\r\n    myGroups = groups;\r\n    myUIFacade = uifacade;\r\n    this.putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(\"/icons/chartOptions_16.gif\")));\r\n}'),(1355,'UIFacade uifacade','net.sourceforge.ganttproject.gui.UIFacade',337,195,'net.sourceforge.ganttproject.chart.OptionsDialogAction',1905,'net.sourceforge.ganttproject.chart.OptionsDialogAction.-init-(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[],net.sourceforge.ganttproject.gui.UIFacade)',0,'public OptionsDialogAction(GPOptionGroup[] groups, UIFacade uifacade) {\r\n    super(GanttLanguage.getInstance().getText(\"chartOptions\"));\r\n    myGroups = groups;\r\n    myUIFacade = uifacade;\r\n    this.putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(\"/icons/chartOptions_16.gif\")));\r\n}'),(1356,'ActionEvent e','java.awt.event.ActionEvent',0,195,'net.sourceforge.ganttproject.chart.OptionsDialogAction',1907,'net.sourceforge.ganttproject.chart.OptionsDialogAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    for (int i = 0; i < (myGroups.length); i++) {\r\n        myGroups[i].lock();\r\n    }\r\n    final OkAction okAction = new OkAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            commit();\r\n        }\r\n    };\r\n    final CancelAction cancelAction = new CancelAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            rollback();\r\n        }\r\n    };\r\n    myUIFacade.showDialog(createDialogComponent(), new Action[]{ okAction, cancelAction });\r\n}'),(1357,'GraphicPrimitiveContainer.Rectangle rectangle','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',189,196,'net.sourceforge.ganttproject.chart.Painter',1914,'net.sourceforge.ganttproject.chart.Painter.paint(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle)',0,'void paint(GraphicPrimitiveContainer.Rectangle rectangle);'),(1358,'GraphicPrimitiveContainer.Text next','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text',190,196,'net.sourceforge.ganttproject.chart.Painter',1915,'net.sourceforge.ganttproject.chart.Painter.paint(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text)',0,'void paint(GraphicPrimitiveContainer.Text next);'),(1359,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,197,'net.sourceforge.ganttproject.chart.PublicHolidayDialogAction',1916,'net.sourceforge.ganttproject.chart.PublicHolidayDialogAction.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public PublicHolidayDialogAction(IGanttProject project, UIFacade uiFacade) {\r\n    super(GanttProject.correctLabel(PublicHolidayDialogAction.language.getText(\"editPublicHolidays\")));\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    this.putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(\"/icons/holidays_16.gif\")));\r\n}'),(1360,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,197,'net.sourceforge.ganttproject.chart.PublicHolidayDialogAction',1916,'net.sourceforge.ganttproject.chart.PublicHolidayDialogAction.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public PublicHolidayDialogAction(IGanttProject project, UIFacade uiFacade) {\r\n    super(GanttProject.correctLabel(PublicHolidayDialogAction.language.getText(\"editPublicHolidays\")));\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    this.putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(\"/icons/holidays_16.gif\")));\r\n}'),(1361,'ActionEvent arg0','java.awt.event.ActionEvent',0,197,'net.sourceforge.ganttproject.chart.PublicHolidayDialogAction',1918,'net.sourceforge.ganttproject.chart.PublicHolidayDialogAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent arg0) {\r\n    // myUIFacade.showDialog(createDialogComponent(), new Action[]{okAction,\r\n    // cancelAction});\r\n    final GanttDialogPublicHoliday dialog = new GanttDialogPublicHoliday(myProject, myUIFacade);\r\n    Component dialogContent = dialog.getContentPane();\r\n    myUIFacade.showDialog(dialogContent, new Action[]{ new OkAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            updateHolidays(dialog.getHolidays());\r\n        }\r\n    }, new CancelAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n        }\r\n    } });\r\n}'),(1362,'List holidays','java.util.List',0,197,'net.sourceforge.ganttproject.chart.PublicHolidayDialogAction',1919,'net.sourceforge.ganttproject.chart.PublicHolidayDialogAction.updateHolidays(java.util.List)',0,'private void updateHolidays(List holidays) {\r\n    myProject.getActiveCalendar().getPublicHolidays().clear();\r\n    for (int i = 0; i < (holidays.size()); i++) {\r\n        myProject.getActiveCalendar().setPublicHoliDayType(((GanttCalendar) (holidays.get(i))).getTime());\r\n    }\r\n}'),(1363,'TimeUnitStack timeUnitStack','net.sourceforge.ganttproject.time.TimeUnitStack',639,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1920,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int,float)',0,'RegularFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth, float weekendDecreaseFactor) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n    myWeekendDecreaseFactor = weekendDecreaseFactor;\r\n}'),(1364,'GPCalendar calendar','net.sourceforge.ganttproject.calendar.GPCalendar',146,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1920,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int,float)',0,'RegularFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth, float weekendDecreaseFactor) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n    myWeekendDecreaseFactor = weekendDecreaseFactor;\r\n}'),(1365,'TimeUnit topUnit','net.sourceforge.ganttproject.time.TimeUnit',630,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1920,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int,float)',0,'RegularFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth, float weekendDecreaseFactor) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n    myWeekendDecreaseFactor = weekendDecreaseFactor;\r\n}'),(1366,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1920,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int,float)',0,'RegularFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth, float weekendDecreaseFactor) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n    myWeekendDecreaseFactor = weekendDecreaseFactor;\r\n}'),(1367,'Date startDate','java.util.Date',0,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1920,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int,float)',0,'RegularFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth, float weekendDecreaseFactor) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n    myWeekendDecreaseFactor = weekendDecreaseFactor;\r\n}'),(1368,'int bottomUnitWidth','int',0,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1920,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int,float)',0,'RegularFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth, float weekendDecreaseFactor) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n    myWeekendDecreaseFactor = weekendDecreaseFactor;\r\n}'),(1369,'int chartWidth','int',0,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1920,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int,float)',0,'RegularFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth, float weekendDecreaseFactor) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n    myWeekendDecreaseFactor = weekendDecreaseFactor;\r\n}'),(1370,'float weekendDecreaseFactor','float',0,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1920,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int,float)',0,'RegularFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth, float weekendDecreaseFactor) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n    myWeekendDecreaseFactor = weekendDecreaseFactor;\r\n}'),(1371,'Date startDate','java.util.Date',0,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1930,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.getTopUnit(java.util.Date)',0,'protected TimeUnit getTopUnit(Date startDate) {\r\n    TimeUnit result = myTopUnit;\r\n    if ((myTopUnit) instanceof TimeUnitFunctionOfDate) {\r\n        if (startDate == null) {\r\n            throw new RuntimeException(\"No date is set\");\r\n        } else {\r\n            result = ((TimeUnitFunctionOfDate) (myTopUnit)).createTimeUnit(startDate);\r\n        }\r\n    }\r\n    return result;\r\n}'),(1372,'net.sourceforge.ganttproject.time.TimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1930,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.getTopUnit(java.util.Date)',1,'protected TimeUnit getTopUnit(Date startDate) {\r\n    TimeUnit result = myTopUnit;\r\n    if ((myTopUnit) instanceof TimeUnitFunctionOfDate) {\r\n        if (startDate == null) {\r\n            throw new RuntimeException(\"No date is set\");\r\n        } else {\r\n            result = ((TimeUnitFunctionOfDate) (myTopUnit)).createTimeUnit(startDate);\r\n        }\r\n    }\r\n    return result;\r\n}'),(1373,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1927,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.getOffsetStep(net.sourceforge.ganttproject.time.TimeFrame)',0,'protected float getOffsetStep(TimeFrame timeFrame) {\r\n    return 1;\r\n}'),(1374,'List topUnitOffsets','java.util.List',0,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1921,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.constructOffsets(java.util.List,java.util.List)',0,'void constructOffsets(List topUnitOffsets, /* <Offset> */\r\n/* <Offset> */\r\nList bottomUnitOffsets) {\r\n    constructOffsets(topUnitOffsets, bottomUnitOffsets, 0);\r\n}'),(1375,'/* <Offset> */\r\n/* <Offset> */\r\nList bottomUnitOffsets','java.util.List',0,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1921,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.constructOffsets(java.util.List,java.util.List)',0,'void constructOffsets(List topUnitOffsets, /* <Offset> */\r\n/* <Offset> */\r\nList bottomUnitOffsets) {\r\n    constructOffsets(topUnitOffsets, bottomUnitOffsets, 0);\r\n}'),(1376,'List topUnitOffsets','java.util.List',0,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1922,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.constructOffsets(java.util.List,java.util.List,int)',0,'void constructOffsets(List topUnitOffsets, /* <Offset> */\r\nList bottomUnitOffsets, /* <Offset> */\r\nint initialEnd) {\r\n    // Number relative to the chart start. It can only be increased.\r\n    float offsetEnd = 0;\r\n    Date currentDate = myStartDate;\r\n    // We dont want to create numerous vertical stripes for weekend units (e.g., for 16\r\n    // non-working hours may produce 16 vertical stripes that looks awful). We\r\n    // accumulate consecutive weekend units instead and add just a single block.\r\n    do {\r\n        TimeFrame currentFrame = getTimeUnitStack().createTimeFrame(currentDate, getTopUnit(currentDate), myBottomUnit);\r\n        int bottomUnitCount = currentFrame.getUnitCount(getBottomUnit());\r\n        // int bottomUnit\r\n        // This will be true if there is at least one working bottom unit in this time frame\r\n        // If there are only weekend bottom units, well merge neighbor top units\r\n        // (like merging two weekend days into one continuous grey stripe)\r\n        boolean addTopUnitOffset = false;\r\n        int bottomUnitWidth = getBottomUnitWidth();\r\n        float offsetStep = getOffsetStep(currentFrame);\r\n        if (bottomUnitWidth == 0) {\r\n            bottomUnitWidth = 1;\r\n        }\r\n        for (int i = 0; i < bottomUnitCount; i++) {\r\n            Date startDate = currentFrame.getUnitStart(getBottomUnit(), i);\r\n            Date endDate = currentFrame.getUnitFinish(getBottomUnit(), i);\r\n            GPCalendar.DayType dayType = getCalendar().getDayTypeDate(startDate);\r\n            if (dayType == (GPCalendar.DayType.WEEKEND)) {\r\n                offsetEnd += offsetStep / (myWeekendDecreaseFactor);\r\n                bottomUnitOffsets.add(new ChartModelBase.Offset(getBottomUnit(), myStartDate, endDate, (initialEnd + ((int) (offsetEnd * bottomUnitWidth))), dayType));\r\n                continue;\r\n            }\r\n            addTopUnitOffset = true;\r\n            offsetEnd += offsetStep;\r\n            bottomUnitOffsets.add(new ChartModelBase.Offset(getBottomUnit(), myStartDate, endDate, (initialEnd + ((int) (offsetEnd * bottomUnitWidth))), dayType));\r\n        }\r\n        currentDate = currentFrame.getFinishDate();\r\n        if (!addTopUnitOffset) {\r\n            continue;\r\n        }\r\n        topUnitOffsets.add(new ChartModelBase.Offset(getTopUnit(), myStartDate, currentDate, (initialEnd + ((int) (offsetEnd * bottomUnitWidth))), GPCalendar.DayType.WORKING));\r\n    } while ((offsetEnd * (getBottomUnitWidth())) <= (getChartWidth()) );\r\n}'),(1377,'/* <Offset> */\r\nList bottomUnitOffsets','java.util.List',0,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1922,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.constructOffsets(java.util.List,java.util.List,int)',0,'void constructOffsets(List topUnitOffsets, /* <Offset> */\r\nList bottomUnitOffsets, /* <Offset> */\r\nint initialEnd) {\r\n    // Number relative to the chart start. It can only be increased.\r\n    float offsetEnd = 0;\r\n    Date currentDate = myStartDate;\r\n    // We dont want to create numerous vertical stripes for weekend units (e.g., for 16\r\n    // non-working hours may produce 16 vertical stripes that looks awful). We\r\n    // accumulate consecutive weekend units instead and add just a single block.\r\n    do {\r\n        TimeFrame currentFrame = getTimeUnitStack().createTimeFrame(currentDate, getTopUnit(currentDate), myBottomUnit);\r\n        int bottomUnitCount = currentFrame.getUnitCount(getBottomUnit());\r\n        // int bottomUnit\r\n        // This will be true if there is at least one working bottom unit in this time frame\r\n        // If there are only weekend bottom units, well merge neighbor top units\r\n        // (like merging two weekend days into one continuous grey stripe)\r\n        boolean addTopUnitOffset = false;\r\n        int bottomUnitWidth = getBottomUnitWidth();\r\n        float offsetStep = getOffsetStep(currentFrame);\r\n        if (bottomUnitWidth == 0) {\r\n            bottomUnitWidth = 1;\r\n        }\r\n        for (int i = 0; i < bottomUnitCount; i++) {\r\n            Date startDate = currentFrame.getUnitStart(getBottomUnit(), i);\r\n            Date endDate = currentFrame.getUnitFinish(getBottomUnit(), i);\r\n            GPCalendar.DayType dayType = getCalendar().getDayTypeDate(startDate);\r\n            if (dayType == (GPCalendar.DayType.WEEKEND)) {\r\n                offsetEnd += offsetStep / (myWeekendDecreaseFactor);\r\n                bottomUnitOffsets.add(new ChartModelBase.Offset(getBottomUnit(), myStartDate, endDate, (initialEnd + ((int) (offsetEnd * bottomUnitWidth))), dayType));\r\n                continue;\r\n            }\r\n            addTopUnitOffset = true;\r\n            offsetEnd += offsetStep;\r\n            bottomUnitOffsets.add(new ChartModelBase.Offset(getBottomUnit(), myStartDate, endDate, (initialEnd + ((int) (offsetEnd * bottomUnitWidth))), dayType));\r\n        }\r\n        currentDate = currentFrame.getFinishDate();\r\n        if (!addTopUnitOffset) {\r\n            continue;\r\n        }\r\n        topUnitOffsets.add(new ChartModelBase.Offset(getTopUnit(), myStartDate, currentDate, (initialEnd + ((int) (offsetEnd * bottomUnitWidth))), GPCalendar.DayType.WORKING));\r\n    } while ((offsetEnd * (getBottomUnitWidth())) <= (getChartWidth()) );\r\n}'),(1378,'/* <Offset> */\r\nint initialEnd','int',0,198,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder',1922,'net.sourceforge.ganttproject.chart.RegularFrameOffsetBuilder.constructOffsets(java.util.List,java.util.List,int)',0,'void constructOffsets(List topUnitOffsets, /* <Offset> */\r\nList bottomUnitOffsets, /* <Offset> */\r\nint initialEnd) {\r\n    // Number relative to the chart start. It can only be increased.\r\n    float offsetEnd = 0;\r\n    Date currentDate = myStartDate;\r\n    // We dont want to create numerous vertical stripes for weekend units (e.g., for 16\r\n    // non-working hours may produce 16 vertical stripes that looks awful). We\r\n    // accumulate consecutive weekend units instead and add just a single block.\r\n    do {\r\n        TimeFrame currentFrame = getTimeUnitStack().createTimeFrame(currentDate, getTopUnit(currentDate), myBottomUnit);\r\n        int bottomUnitCount = currentFrame.getUnitCount(getBottomUnit());\r\n        // int bottomUnit\r\n        // This will be true if there is at least one working bottom unit in this time frame\r\n        // If there are only weekend bottom units, well merge neighbor top units\r\n        // (like merging two weekend days into one continuous grey stripe)\r\n        boolean addTopUnitOffset = false;\r\n        int bottomUnitWidth = getBottomUnitWidth();\r\n        float offsetStep = getOffsetStep(currentFrame);\r\n        if (bottomUnitWidth == 0) {\r\n            bottomUnitWidth = 1;\r\n        }\r\n        for (int i = 0; i < bottomUnitCount; i++) {\r\n            Date startDate = currentFrame.getUnitStart(getBottomUnit(), i);\r\n            Date endDate = currentFrame.getUnitFinish(getBottomUnit(), i);\r\n            GPCalendar.DayType dayType = getCalendar().getDayTypeDate(startDate);\r\n            if (dayType == (GPCalendar.DayType.WEEKEND)) {\r\n                offsetEnd += offsetStep / (myWeekendDecreaseFactor);\r\n                bottomUnitOffsets.add(new ChartModelBase.Offset(getBottomUnit(), myStartDate, endDate, (initialEnd + ((int) (offsetEnd * bottomUnitWidth))), dayType));\r\n                continue;\r\n            }\r\n            addTopUnitOffset = true;\r\n            offsetEnd += offsetStep;\r\n            bottomUnitOffsets.add(new ChartModelBase.Offset(getBottomUnit(), myStartDate, endDate, (initialEnd + ((int) (offsetEnd * bottomUnitWidth))), dayType));\r\n        }\r\n        currentDate = currentFrame.getFinishDate();\r\n        if (!addTopUnitOffset) {\r\n            continue;\r\n        }\r\n        topUnitOffsets.add(new ChartModelBase.Offset(getTopUnit(), myStartDate, currentDate, (initialEnd + ((int) (offsetEnd * bottomUnitWidth))), GPCalendar.DayType.WORKING));\r\n    } while ((offsetEnd * (getBottomUnitWidth())) <= (getChartWidth()) );\r\n}'),(1379,'ChartModelBase chartModel','net.sourceforge.ganttproject.chart.ChartModelBase',170,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1931,'net.sourceforge.ganttproject.chart.RenderedChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,java.awt.image.BufferedImage,int,int)',0,'public RenderedChartImage(ChartModelBase chartModel, BufferedImage taskImage, int chartWidth, int chartHeight) {\r\n    myChartModel = chartModel;\r\n    myTaskImage = taskImage;\r\n    sampleModel = myColorModel.createCompatibleSampleModel(chartWidth, chartHeight);\r\n    colorModel = myColorModel;\r\n    minX = 0;\r\n    minY = 0;\r\n    width = chartWidth + (taskImage.getWidth());\r\n    height = chartHeight;\r\n    tileWidth = width;\r\n    tileHeight = 32;\r\n}'),(1380,'BufferedImage taskImage','java.awt.image.BufferedImage',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1931,'net.sourceforge.ganttproject.chart.RenderedChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,java.awt.image.BufferedImage,int,int)',0,'public RenderedChartImage(ChartModelBase chartModel, BufferedImage taskImage, int chartWidth, int chartHeight) {\r\n    myChartModel = chartModel;\r\n    myTaskImage = taskImage;\r\n    sampleModel = myColorModel.createCompatibleSampleModel(chartWidth, chartHeight);\r\n    colorModel = myColorModel;\r\n    minX = 0;\r\n    minY = 0;\r\n    width = chartWidth + (taskImage.getWidth());\r\n    height = chartHeight;\r\n    tileWidth = width;\r\n    tileHeight = 32;\r\n}'),(1381,'int chartWidth','int',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1931,'net.sourceforge.ganttproject.chart.RenderedChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,java.awt.image.BufferedImage,int,int)',0,'public RenderedChartImage(ChartModelBase chartModel, BufferedImage taskImage, int chartWidth, int chartHeight) {\r\n    myChartModel = chartModel;\r\n    myTaskImage = taskImage;\r\n    sampleModel = myColorModel.createCompatibleSampleModel(chartWidth, chartHeight);\r\n    colorModel = myColorModel;\r\n    minX = 0;\r\n    minY = 0;\r\n    width = chartWidth + (taskImage.getWidth());\r\n    height = chartHeight;\r\n    tileWidth = width;\r\n    tileHeight = 32;\r\n}'),(1382,'int chartHeight','int',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1931,'net.sourceforge.ganttproject.chart.RenderedChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,java.awt.image.BufferedImage,int,int)',0,'public RenderedChartImage(ChartModelBase chartModel, BufferedImage taskImage, int chartWidth, int chartHeight) {\r\n    myChartModel = chartModel;\r\n    myTaskImage = taskImage;\r\n    sampleModel = myColorModel.createCompatibleSampleModel(chartWidth, chartHeight);\r\n    colorModel = myColorModel;\r\n    minX = 0;\r\n    minY = 0;\r\n    width = chartWidth + (taskImage.getWidth());\r\n    height = chartHeight;\r\n    tileWidth = width;\r\n    tileHeight = 32;\r\n}'),(1383,'int tileX','int',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1933,'net.sourceforge.ganttproject.chart.RenderedChartImage.getTile(int,int)',0,'public Raster getTile(int tileX, int tileY) {\r\n    if ((myCurrentTile) != tileY) {\r\n        int offsety = tileY * (getTileHeight());\r\n        BufferedImage tile = getChart(myTaskImage.getWidth(), offsety, getTileWidth(), getTileHeight(), getWidth(), getHeight());\r\n        Graphics g = tile.getGraphics();\r\n        g.translate(0, (-offsety));\r\n        g.drawImage(myTaskImage, 0, 0, null);\r\n        myCurrentRaster = tile.getRaster().createTranslatedChild(0, (tileY * (getTileHeight())));\r\n        myCurrentTile = tileY;\r\n    }\r\n    return myCurrentRaster;\r\n}'),(1384,'int tileY','int',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1933,'net.sourceforge.ganttproject.chart.RenderedChartImage.getTile(int,int)',0,'public Raster getTile(int tileX, int tileY) {\r\n    if ((myCurrentTile) != tileY) {\r\n        int offsety = tileY * (getTileHeight());\r\n        BufferedImage tile = getChart(myTaskImage.getWidth(), offsety, getTileWidth(), getTileHeight(), getWidth(), getHeight());\r\n        Graphics g = tile.getGraphics();\r\n        g.translate(0, (-offsety));\r\n        g.drawImage(myTaskImage, 0, 0, null);\r\n        myCurrentRaster = tile.getRaster().createTranslatedChild(0, (tileY * (getTileHeight())));\r\n        myCurrentTile = tileY;\r\n    }\r\n    return myCurrentRaster;\r\n}'),(1385,'Graphics g','java.awt.Graphics',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1935,'net.sourceforge.ganttproject.chart.RenderedChartImage.paintChart(java.awt.Graphics)',0,'protected abstract void paintChart(Graphics g);'),(1386,'int offsetx','int',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1932,'net.sourceforge.ganttproject.chart.RenderedChartImage.getChart(int,int,int,int,int,int)',0,'private BufferedImage getChart(int offsetx, int offsety, int width, int height, int chartWidth, int chartHeight) {\r\n    BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\r\n    Graphics g2 = result.getGraphics();\r\n    g2.setColor(Color.white);\r\n    g2.fillRect(0, 0, width, height);\r\n    g2.translate(offsetx, (-offsety));\r\n    g2.clipRect(0, offsety, width, height);\r\n    myChartModel.setBounds(new Dimension(chartWidth, chartHeight));\r\n    paintChart(g2);\r\n    // myChartModel.setTuningOptions(ChartModelImpl.TuningOptions.DEFAULT);\r\n    return result;\r\n}'),(1387,'int offsety','int',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1932,'net.sourceforge.ganttproject.chart.RenderedChartImage.getChart(int,int,int,int,int,int)',0,'private BufferedImage getChart(int offsetx, int offsety, int width, int height, int chartWidth, int chartHeight) {\r\n    BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\r\n    Graphics g2 = result.getGraphics();\r\n    g2.setColor(Color.white);\r\n    g2.fillRect(0, 0, width, height);\r\n    g2.translate(offsetx, (-offsety));\r\n    g2.clipRect(0, offsety, width, height);\r\n    myChartModel.setBounds(new Dimension(chartWidth, chartHeight));\r\n    paintChart(g2);\r\n    // myChartModel.setTuningOptions(ChartModelImpl.TuningOptions.DEFAULT);\r\n    return result;\r\n}'),(1388,'int width','int',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1932,'net.sourceforge.ganttproject.chart.RenderedChartImage.getChart(int,int,int,int,int,int)',0,'private BufferedImage getChart(int offsetx, int offsety, int width, int height, int chartWidth, int chartHeight) {\r\n    BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\r\n    Graphics g2 = result.getGraphics();\r\n    g2.setColor(Color.white);\r\n    g2.fillRect(0, 0, width, height);\r\n    g2.translate(offsetx, (-offsety));\r\n    g2.clipRect(0, offsety, width, height);\r\n    myChartModel.setBounds(new Dimension(chartWidth, chartHeight));\r\n    paintChart(g2);\r\n    // myChartModel.setTuningOptions(ChartModelImpl.TuningOptions.DEFAULT);\r\n    return result;\r\n}'),(1389,'int height','int',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1932,'net.sourceforge.ganttproject.chart.RenderedChartImage.getChart(int,int,int,int,int,int)',0,'private BufferedImage getChart(int offsetx, int offsety, int width, int height, int chartWidth, int chartHeight) {\r\n    BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\r\n    Graphics g2 = result.getGraphics();\r\n    g2.setColor(Color.white);\r\n    g2.fillRect(0, 0, width, height);\r\n    g2.translate(offsetx, (-offsety));\r\n    g2.clipRect(0, offsety, width, height);\r\n    myChartModel.setBounds(new Dimension(chartWidth, chartHeight));\r\n    paintChart(g2);\r\n    // myChartModel.setTuningOptions(ChartModelImpl.TuningOptions.DEFAULT);\r\n    return result;\r\n}'),(1390,'int chartWidth','int',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1932,'net.sourceforge.ganttproject.chart.RenderedChartImage.getChart(int,int,int,int,int,int)',0,'private BufferedImage getChart(int offsetx, int offsety, int width, int height, int chartWidth, int chartHeight) {\r\n    BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\r\n    Graphics g2 = result.getGraphics();\r\n    g2.setColor(Color.white);\r\n    g2.fillRect(0, 0, width, height);\r\n    g2.translate(offsetx, (-offsety));\r\n    g2.clipRect(0, offsety, width, height);\r\n    myChartModel.setBounds(new Dimension(chartWidth, chartHeight));\r\n    paintChart(g2);\r\n    // myChartModel.setTuningOptions(ChartModelImpl.TuningOptions.DEFAULT);\r\n    return result;\r\n}'),(1391,'int chartHeight','int',0,199,'net.sourceforge.ganttproject.chart.RenderedChartImage',1932,'net.sourceforge.ganttproject.chart.RenderedChartImage.getChart(int,int,int,int,int,int)',0,'private BufferedImage getChart(int offsetx, int offsety, int width, int height, int chartWidth, int chartHeight) {\r\n    BufferedImage result = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\r\n    Graphics g2 = result.getGraphics();\r\n    g2.setColor(Color.white);\r\n    g2.fillRect(0, 0, width, height);\r\n    g2.translate(offsetx, (-offsety));\r\n    g2.clipRect(0, offsety, width, height);\r\n    myChartModel.setBounds(new Dimension(chartWidth, chartHeight));\r\n    paintChart(g2);\r\n    // myChartModel.setTuningOptions(ChartModelImpl.TuningOptions.DEFAULT);\r\n    return result;\r\n}'),(1392,'ChartModelBase chartModel','net.sourceforge.ganttproject.chart.ChartModelBase',170,200,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage',1936,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation,java.util.List,java.awt.image.BufferedImage,int,int)',0,'public RenderedGanttChartImage(ChartModelBase chartModel, GanttGraphicArea.ChartImplementation chartImplementation, List tasks, BufferedImage taskImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, taskImage, chartWidth, chartHeight);\r\n    myVisibleTasks = tasks;\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1393,'GanttGraphicArea.ChartImplementation chartImplementation','net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation',32,200,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage',1936,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation,java.util.List,java.awt.image.BufferedImage,int,int)',0,'public RenderedGanttChartImage(ChartModelBase chartModel, GanttGraphicArea.ChartImplementation chartImplementation, List tasks, BufferedImage taskImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, taskImage, chartWidth, chartHeight);\r\n    myVisibleTasks = tasks;\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1394,'List tasks','java.util.List',0,200,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage',1936,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation,java.util.List,java.awt.image.BufferedImage,int,int)',0,'public RenderedGanttChartImage(ChartModelBase chartModel, GanttGraphicArea.ChartImplementation chartImplementation, List tasks, BufferedImage taskImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, taskImage, chartWidth, chartHeight);\r\n    myVisibleTasks = tasks;\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1395,'BufferedImage taskImage','java.awt.image.BufferedImage',0,200,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage',1936,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation,java.util.List,java.awt.image.BufferedImage,int,int)',0,'public RenderedGanttChartImage(ChartModelBase chartModel, GanttGraphicArea.ChartImplementation chartImplementation, List tasks, BufferedImage taskImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, taskImage, chartWidth, chartHeight);\r\n    myVisibleTasks = tasks;\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1396,'int chartWidth','int',0,200,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage',1936,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation,java.util.List,java.awt.image.BufferedImage,int,int)',0,'public RenderedGanttChartImage(ChartModelBase chartModel, GanttGraphicArea.ChartImplementation chartImplementation, List tasks, BufferedImage taskImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, taskImage, chartWidth, chartHeight);\r\n    myVisibleTasks = tasks;\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1397,'int chartHeight','int',0,200,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage',1936,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.GanttGraphicArea$ChartImplementation,java.util.List,java.awt.image.BufferedImage,int,int)',0,'public RenderedGanttChartImage(ChartModelBase chartModel, GanttGraphicArea.ChartImplementation chartImplementation, List tasks, BufferedImage taskImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, taskImage, chartWidth, chartHeight);\r\n    myVisibleTasks = tasks;\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1398,'Graphics g','java.awt.Graphics',0,200,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage',1937,'net.sourceforge.ganttproject.chart.RenderedGanttChartImage.paintChart(java.awt.Graphics)',0,'protected void paintChart(Graphics g) {\r\n    if (myVisibleTasks.isEmpty()) {\r\n        myChartImplementation.paintComponent(g);\r\n    } else {\r\n        myChartImplementation.paintComponent(g, myVisibleTasks);\r\n    }\r\n}'),(1399,'ChartModelBase chartModel','net.sourceforge.ganttproject.chart.ChartModelBase',170,201,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage',1938,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation,java.awt.image.BufferedImage,int,int)',0,'public RenderedResourceChartImage(ChartModelBase chartModel, ChartComponentBase.AbstractChartImplementation chartImplementation, BufferedImage resourceTreeImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, resourceTreeImage, chartWidth, chartHeight);\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1400,'ChartComponentBase.AbstractChartImplementation chartImplementation','net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation',1,201,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage',1938,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation,java.awt.image.BufferedImage,int,int)',0,'public RenderedResourceChartImage(ChartModelBase chartModel, ChartComponentBase.AbstractChartImplementation chartImplementation, BufferedImage resourceTreeImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, resourceTreeImage, chartWidth, chartHeight);\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1401,'BufferedImage resourceTreeImage','java.awt.image.BufferedImage',0,201,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage',1938,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation,java.awt.image.BufferedImage,int,int)',0,'public RenderedResourceChartImage(ChartModelBase chartModel, ChartComponentBase.AbstractChartImplementation chartImplementation, BufferedImage resourceTreeImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, resourceTreeImage, chartWidth, chartHeight);\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1402,'int chartWidth','int',0,201,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage',1938,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation,java.awt.image.BufferedImage,int,int)',0,'public RenderedResourceChartImage(ChartModelBase chartModel, ChartComponentBase.AbstractChartImplementation chartImplementation, BufferedImage resourceTreeImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, resourceTreeImage, chartWidth, chartHeight);\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1403,'int chartHeight','int',0,201,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage',1938,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage.-init-(net.sourceforge.ganttproject.chart.ChartModelBase,net.sourceforge.ganttproject.ChartComponentBase$AbstractChartImplementation,java.awt.image.BufferedImage,int,int)',0,'public RenderedResourceChartImage(ChartModelBase chartModel, ChartComponentBase.AbstractChartImplementation chartImplementation, BufferedImage resourceTreeImage, int chartWidth, int chartHeight) {\r\n    super(chartModel, resourceTreeImage, chartWidth, chartHeight);\r\n    myChartImplementation = chartImplementation;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1404,'Graphics g','java.awt.Graphics',0,201,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage',1939,'net.sourceforge.ganttproject.chart.RenderedResourceChartImage.paintChart(java.awt.Graphics)',0,'protected void paintChart(Graphics g) {\r\n    myChartImplementation.paintComponent(g);\r\n}'),(1405,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,202,'net.sourceforge.ganttproject.chart.ResourceChart',1940,'net.sourceforge.ganttproject.chart.ResourceChart.isExpanded(net.sourceforge.ganttproject.resource.ProjectResource)',0,'boolean isExpanded(ProjectResource resource);'),(1406,'ChartModelResource model','net.sourceforge.ganttproject.chart.ChartModelResource',174,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1941,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.-init-(net.sourceforge.ganttproject.chart.ChartModelResource,net.sourceforge.ganttproject.chart.ResourceChart)',0,'public ResourceLoadRenderer(ChartModelResource model, ResourceChart resourceChart) {\r\n    super(model);\r\n    myResourcechart = resourceChart;\r\n}'),(1407,'ResourceChart resourceChart','net.sourceforge.ganttproject.chart.ResourceChart',202,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1941,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.-init-(net.sourceforge.ganttproject.chart.ChartModelResource,net.sourceforge.ganttproject.chart.ResourceChart)',0,'public ResourceLoadRenderer(ChartModelResource model, ResourceChart resourceChart) {\r\n    super(model);\r\n    myResourcechart = resourceChart;\r\n}'),(1408,'float load','float',0,203,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer$ResourceLoad',1955,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer$ResourceLoad.-init-(float)',0,'ResourceLoad(float load) {\r\n    this.load = load;\r\n}'),(1409,'LoadDistribution distribution','net.sourceforge.ganttproject.resource.LoadDistribution',503,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1952,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoadDetails(net.sourceforge.ganttproject.resource.LoadDistribution,int)',0,'/**\r\n * Renders resource load details, that is, tasks where the resource\r\n * is assigned to, with that resource load percentage\r\n */\r\nprivate void renderLoadDetails(LoadDistribution distribution, int ypos) {\r\n    int yPos2 = ypos;\r\n    /* <Task, List<Load>> */\r\n    Map task2loads = distribution.getSeparatedTaskLoads();\r\n    ResourceAssignment[] assignments = distribution.getResource().getAssignments();\r\n    for (int i = 0; i < (assignments.length); i++) {\r\n        ResourceAssignment assignment = assignments[i];\r\n        List nextLoads = ((List) (task2loads.get(assignment.getTask())));\r\n        yPos2 += getConfig().getRowHeight();\r\n        if (nextLoads == null) {\r\n            continue;\r\n        }\r\n        buildTasksLoadsRectangles(nextLoads, yPos2);\r\n    }\r\n}'),(1410,'int ypos','int',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1952,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoadDetails(net.sourceforge.ganttproject.resource.LoadDistribution,int)',0,'/**\r\n * Renders resource load details, that is, tasks where the resource\r\n * is assigned to, with that resource load percentage\r\n */\r\nprivate void renderLoadDetails(LoadDistribution distribution, int ypos) {\r\n    int yPos2 = ypos;\r\n    /* <Task, List<Load>> */\r\n    Map task2loads = distribution.getSeparatedTaskLoads();\r\n    ResourceAssignment[] assignments = distribution.getResource().getAssignments();\r\n    for (int i = 0; i < (assignments.length); i++) {\r\n        ResourceAssignment assignment = assignments[i];\r\n        List nextLoads = ((List) (task2loads.get(assignment.getTask())));\r\n        yPos2 += getConfig().getRowHeight();\r\n        if (nextLoads == null) {\r\n            continue;\r\n        }\r\n        buildTasksLoadsRectangles(nextLoads, yPos2);\r\n    }\r\n}'),(1411,'List loads','java.util.List',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1953,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(java.util.List,int)',0,'/**\r\n * Renders the list of loads in a single chart row\r\n * Preconditions: loads come from the same distribution and are ordered by\r\n * their time offsets\r\n */\r\nprivate void renderLoads(List loads, /* <Load> */\r\nint ypos) {\r\n    LoadDistribution.Load prevLoad = null;\r\n    LoadDistribution.Load curLoad = null;\r\n    /* <Offset> */\r\n    LinkedList offsets = getOffsets();\r\n    String suffix = \"\";\r\n    for (int curIndex = 1; (curIndex < (loads.size())) && ((offsets.getFirst()) != null); curIndex++) {\r\n        curLoad = ((LoadDistribution.Load) (loads.get(curIndex)));\r\n        prevLoad = ((LoadDistribution.Load) (loads.get((curIndex - 1))));\r\n        if ((prevLoad.load) != 0) {\r\n            renderLoads(prevLoad, curLoad, offsets, ypos, suffix);\r\n            suffix = \"\";\r\n        } else\r\n            if ((curLoad.load) > 0) {\r\n                suffix = \".first\";\r\n            }\r\n\r\n    }\r\n}'),(1412,'/* <Load> */\r\nint ypos','int',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1953,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(java.util.List,int)',0,'/**\r\n * Renders the list of loads in a single chart row\r\n * Preconditions: loads come from the same distribution and are ordered by\r\n * their time offsets\r\n */\r\nprivate void renderLoads(List loads, /* <Load> */\r\nint ypos) {\r\n    LoadDistribution.Load prevLoad = null;\r\n    LoadDistribution.Load curLoad = null;\r\n    /* <Offset> */\r\n    LinkedList offsets = getOffsets();\r\n    String suffix = \"\";\r\n    for (int curIndex = 1; (curIndex < (loads.size())) && ((offsets.getFirst()) != null); curIndex++) {\r\n        curLoad = ((LoadDistribution.Load) (loads.get(curIndex)));\r\n        prevLoad = ((LoadDistribution.Load) (loads.get((curIndex - 1))));\r\n        if ((prevLoad.load) != 0) {\r\n            renderLoads(prevLoad, curLoad, offsets, ypos, suffix);\r\n            suffix = \"\";\r\n        } else\r\n            if ((curLoad.load) > 0) {\r\n                suffix = \".first\";\r\n            }\r\n\r\n    }\r\n}'),(1413,'LoadDistribution.Load prevLoad','net.sourceforge.ganttproject.resource.LoadDistribution$Load',502,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1954,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(net.sourceforge.ganttproject.resource.LoadDistribution$Load,net.sourceforge.ganttproject.resource.LoadDistribution$Load,java.util.LinkedList,int,java.lang.String)',0,'/**\r\n * Renders prevLoad, with curLoad serving as a load right border marker and style hint\r\n */\r\nprivate void renderLoads(LoadDistribution.Load prevLoad, LoadDistribution.Load curLoad, LinkedList offsets, /* <Offset> */\r\nint ypos, String suffix) {\r\n    final Date prevEnd = curLoad.startDate;\r\n    final Date prevStart = prevLoad.startDate;\r\n    GraphicPrimitiveContainer.Rectangle nextRect = createRectangle(offsets, prevStart, prevEnd, ypos);\r\n    if (nextRect == null) {\r\n        return;\r\n    }\r\n    String style;\r\n    if (prevLoad.isResourceUnavailable()) {\r\n        style = \"dayoff\";\r\n    } else {\r\n        suffix += ((curLoad.load) == 0) ? \".last\" : \"\";\r\n        if ((prevLoad.load) < 100.0F) {\r\n            style = \"load.underload\";\r\n        } else\r\n            if ((prevLoad.load) > 100.0F) {\r\n                style = \"load.overload\";\r\n            } else {\r\n                style = \"load.normal\";\r\n            }\r\n\r\n        style += suffix;\r\n    }\r\n    nextRect.setStyle(style);\r\n    nextRect.setModelObject(new ResourceLoadRenderer.ResourceLoad(prevLoad.load));\r\n}'),(1414,'LoadDistribution.Load curLoad','net.sourceforge.ganttproject.resource.LoadDistribution$Load',502,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1954,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(net.sourceforge.ganttproject.resource.LoadDistribution$Load,net.sourceforge.ganttproject.resource.LoadDistribution$Load,java.util.LinkedList,int,java.lang.String)',0,'/**\r\n * Renders prevLoad, with curLoad serving as a load right border marker and style hint\r\n */\r\nprivate void renderLoads(LoadDistribution.Load prevLoad, LoadDistribution.Load curLoad, LinkedList offsets, /* <Offset> */\r\nint ypos, String suffix) {\r\n    final Date prevEnd = curLoad.startDate;\r\n    final Date prevStart = prevLoad.startDate;\r\n    GraphicPrimitiveContainer.Rectangle nextRect = createRectangle(offsets, prevStart, prevEnd, ypos);\r\n    if (nextRect == null) {\r\n        return;\r\n    }\r\n    String style;\r\n    if (prevLoad.isResourceUnavailable()) {\r\n        style = \"dayoff\";\r\n    } else {\r\n        suffix += ((curLoad.load) == 0) ? \".last\" : \"\";\r\n        if ((prevLoad.load) < 100.0F) {\r\n            style = \"load.underload\";\r\n        } else\r\n            if ((prevLoad.load) > 100.0F) {\r\n                style = \"load.overload\";\r\n            } else {\r\n                style = \"load.normal\";\r\n            }\r\n\r\n        style += suffix;\r\n    }\r\n    nextRect.setStyle(style);\r\n    nextRect.setModelObject(new ResourceLoadRenderer.ResourceLoad(prevLoad.load));\r\n}'),(1415,'LinkedList offsets','java.util.LinkedList',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1954,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(net.sourceforge.ganttproject.resource.LoadDistribution$Load,net.sourceforge.ganttproject.resource.LoadDistribution$Load,java.util.LinkedList,int,java.lang.String)',0,'/**\r\n * Renders prevLoad, with curLoad serving as a load right border marker and style hint\r\n */\r\nprivate void renderLoads(LoadDistribution.Load prevLoad, LoadDistribution.Load curLoad, LinkedList offsets, /* <Offset> */\r\nint ypos, String suffix) {\r\n    final Date prevEnd = curLoad.startDate;\r\n    final Date prevStart = prevLoad.startDate;\r\n    GraphicPrimitiveContainer.Rectangle nextRect = createRectangle(offsets, prevStart, prevEnd, ypos);\r\n    if (nextRect == null) {\r\n        return;\r\n    }\r\n    String style;\r\n    if (prevLoad.isResourceUnavailable()) {\r\n        style = \"dayoff\";\r\n    } else {\r\n        suffix += ((curLoad.load) == 0) ? \".last\" : \"\";\r\n        if ((prevLoad.load) < 100.0F) {\r\n            style = \"load.underload\";\r\n        } else\r\n            if ((prevLoad.load) > 100.0F) {\r\n                style = \"load.overload\";\r\n            } else {\r\n                style = \"load.normal\";\r\n            }\r\n\r\n        style += suffix;\r\n    }\r\n    nextRect.setStyle(style);\r\n    nextRect.setModelObject(new ResourceLoadRenderer.ResourceLoad(prevLoad.load));\r\n}'),(1416,'/* <Offset> */\r\nint ypos','int',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1954,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(net.sourceforge.ganttproject.resource.LoadDistribution$Load,net.sourceforge.ganttproject.resource.LoadDistribution$Load,java.util.LinkedList,int,java.lang.String)',0,'/**\r\n * Renders prevLoad, with curLoad serving as a load right border marker and style hint\r\n */\r\nprivate void renderLoads(LoadDistribution.Load prevLoad, LoadDistribution.Load curLoad, LinkedList offsets, /* <Offset> */\r\nint ypos, String suffix) {\r\n    final Date prevEnd = curLoad.startDate;\r\n    final Date prevStart = prevLoad.startDate;\r\n    GraphicPrimitiveContainer.Rectangle nextRect = createRectangle(offsets, prevStart, prevEnd, ypos);\r\n    if (nextRect == null) {\r\n        return;\r\n    }\r\n    String style;\r\n    if (prevLoad.isResourceUnavailable()) {\r\n        style = \"dayoff\";\r\n    } else {\r\n        suffix += ((curLoad.load) == 0) ? \".last\" : \"\";\r\n        if ((prevLoad.load) < 100.0F) {\r\n            style = \"load.underload\";\r\n        } else\r\n            if ((prevLoad.load) > 100.0F) {\r\n                style = \"load.overload\";\r\n            } else {\r\n                style = \"load.normal\";\r\n            }\r\n\r\n        style += suffix;\r\n    }\r\n    nextRect.setStyle(style);\r\n    nextRect.setModelObject(new ResourceLoadRenderer.ResourceLoad(prevLoad.load));\r\n}'),(1417,'String suffix','java.lang.String',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1954,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(net.sourceforge.ganttproject.resource.LoadDistribution$Load,net.sourceforge.ganttproject.resource.LoadDistribution$Load,java.util.LinkedList,int,java.lang.String)',0,'/**\r\n * Renders prevLoad, with curLoad serving as a load right border marker and style hint\r\n */\r\nprivate void renderLoads(LoadDistribution.Load prevLoad, LoadDistribution.Load curLoad, LinkedList offsets, /* <Offset> */\r\nint ypos, String suffix) {\r\n    final Date prevEnd = curLoad.startDate;\r\n    final Date prevStart = prevLoad.startDate;\r\n    GraphicPrimitiveContainer.Rectangle nextRect = createRectangle(offsets, prevStart, prevEnd, ypos);\r\n    if (nextRect == null) {\r\n        return;\r\n    }\r\n    String style;\r\n    if (prevLoad.isResourceUnavailable()) {\r\n        style = \"dayoff\";\r\n    } else {\r\n        suffix += ((curLoad.load) == 0) ? \".last\" : \"\";\r\n        if ((prevLoad.load) < 100.0F) {\r\n            style = \"load.underload\";\r\n        } else\r\n            if ((prevLoad.load) > 100.0F) {\r\n                style = \"load.overload\";\r\n            } else {\r\n                style = \"load.normal\";\r\n            }\r\n\r\n        style += suffix;\r\n    }\r\n    nextRect.setStyle(style);\r\n    nextRect.setModelObject(new ResourceLoadRenderer.ResourceLoad(prevLoad.load));\r\n}'),(1418,'List partition','java.util.List',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1944,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.buildTasksLoadsRectangles(java.util.List,int)',0,'/**\r\n * Renders a list of loads in a single chart row\r\n * Precondition: loads belong to the same pair (resource,task) and are ordered\r\n * by their time values\r\n */\r\nprivate void buildTasksLoadsRectangles(List partition, /* <Load> */\r\nint ypos) {\r\n    /* <Offset> */\r\n    LinkedList offsets = getOffsets();\r\n    /* <Load> */\r\n    Iterator loads = partition.iterator();\r\n    while ((loads.hasNext()) && ((offsets.getFirst()) != null)) {\r\n        final LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.next()));\r\n        final Date nextStart = nextLoad.startDate;\r\n        final Date nextEnd = nextLoad.endDate;\r\n        GraphicPrimitiveContainer.Rectangle nextRect = createRectangle(offsets, nextStart, nextEnd, ypos);\r\n        if (nextRect == null) {\r\n            continue;\r\n        }\r\n        String style;\r\n        if ((nextLoad.load) < 100.0F) {\r\n            style = \"load.underload\";\r\n        } else\r\n            if ((nextLoad.load) > 100.0F) {\r\n                style = \"load.overload\";\r\n            } else {\r\n                style = \"load.normal\";\r\n            }\r\n\r\n        style += \".first.last\";\r\n        nextRect.setStyle(style);\r\n        nextRect.setModelObject(new ResourceLoadRenderer.ResourceLoad(nextLoad.load));\r\n    } \r\n}'),(1419,'/* <Load> */\r\nint ypos','int',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1944,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.buildTasksLoadsRectangles(java.util.List,int)',0,'/**\r\n * Renders a list of loads in a single chart row\r\n * Precondition: loads belong to the same pair (resource,task) and are ordered\r\n * by their time values\r\n */\r\nprivate void buildTasksLoadsRectangles(List partition, /* <Load> */\r\nint ypos) {\r\n    /* <Offset> */\r\n    LinkedList offsets = getOffsets();\r\n    /* <Load> */\r\n    Iterator loads = partition.iterator();\r\n    while ((loads.hasNext()) && ((offsets.getFirst()) != null)) {\r\n        final LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.next()));\r\n        final Date nextStart = nextLoad.startDate;\r\n        final Date nextEnd = nextLoad.endDate;\r\n        GraphicPrimitiveContainer.Rectangle nextRect = createRectangle(offsets, nextStart, nextEnd, ypos);\r\n        if (nextRect == null) {\r\n            continue;\r\n        }\r\n        String style;\r\n        if ((nextLoad.load) < 100.0F) {\r\n            style = \"load.underload\";\r\n        } else\r\n            if ((nextLoad.load) > 100.0F) {\r\n                style = \"load.overload\";\r\n            } else {\r\n                style = \"load.normal\";\r\n            }\r\n\r\n        style += \".first.last\";\r\n        nextRect.setStyle(style);\r\n        nextRect.setModelObject(new ResourceLoadRenderer.ResourceLoad(nextLoad.load));\r\n    } \r\n}'),(1420,'LinkedList offsets','java.util.LinkedList',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1946,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createRectangle(java.util.LinkedList,java.util.Date,java.util.Date,int)',0,'private GraphicPrimitiveContainer.Rectangle createRectangle(LinkedList offsets, /* <Offset> */\r\nDate start, Date end, int ypos) {\r\n    if ((start.after(getChartEndDate())) || ((end.compareTo(getChartStartDate())) <= 0)) {\r\n        return null;\r\n    }\r\n    Date lastOffsetEnd = ((ChartModelBase.Offset) (offsets.getLast())).getOffsetEnd();\r\n    if (end.after(lastOffsetEnd)) {\r\n        end = lastOffsetEnd;\r\n    }\r\n    ArrayList copy = new ArrayList(offsets);\r\n    ChartModelBase.Offset offsetBefore = null;\r\n    ChartModelBase.Offset offsetAfter = null;\r\n    LinkedList buffer = new LinkedList();\r\n    while ((offsets.getFirst()) != null) {\r\n        ChartModelBase.Offset offset = ((ChartModelBase.Offset) (offsets.getFirst()));\r\n        if ((offset.getOffsetEnd().compareTo(start)) <= 0) {\r\n            offsetBefore = offset;\r\n            buffer.clear();\r\n        }\r\n        if ((offset.getOffsetEnd().compareTo(end)) >= 0) {\r\n            offsetAfter = offset;\r\n            if (offset.getOffsetEnd().after(end)) {\r\n                offsets.addAll(0, buffer);\r\n            }\r\n            break;\r\n        }\r\n        buffer.addLast(offset);\r\n        offsets.removeFirst();\r\n    } \r\n    int rectStart;\r\n    int rectEnd;\r\n    if (offsetAfter == null) {\r\n        rectEnd = getChartModel().getBounds().width;\r\n    } else\r\n        if (offsetAfter.getOffsetEnd().equals(end)) {\r\n            rectEnd = offsetAfter.getOffsetPixels();\r\n        } else {\r\n            rectEnd = -1;\r\n        }\r\n\r\n    if (offsetBefore == null) {\r\n        rectStart = 0;\r\n    } else\r\n        if (offsetBefore.getOffsetEnd().equals(start)) {\r\n            rectStart = offsetBefore.getOffsetPixels();\r\n        } else {\r\n            rectStart = -1;\r\n        }\r\n\r\n    if ((rectStart == (-1)) || (rectEnd == (-1))) {\r\n        return createRectangle(getDefaultOffsetsInRange(offsetBefore, offsetAfter), start, end, ypos);\r\n    }\r\n    GraphicPrimitiveContainer.Rectangle nextRect = getPrimitiveContainer().createRectangle(rectStart, ypos, (rectEnd - rectStart), getConfig().getRowHeight());\r\n    return nextRect;\r\n}'),(1421,'/* <Offset> */\r\nDate start','java.util.Date',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1946,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createRectangle(java.util.LinkedList,java.util.Date,java.util.Date,int)',0,'private GraphicPrimitiveContainer.Rectangle createRectangle(LinkedList offsets, /* <Offset> */\r\nDate start, Date end, int ypos) {\r\n    if ((start.after(getChartEndDate())) || ((end.compareTo(getChartStartDate())) <= 0)) {\r\n        return null;\r\n    }\r\n    Date lastOffsetEnd = ((ChartModelBase.Offset) (offsets.getLast())).getOffsetEnd();\r\n    if (end.after(lastOffsetEnd)) {\r\n        end = lastOffsetEnd;\r\n    }\r\n    ArrayList copy = new ArrayList(offsets);\r\n    ChartModelBase.Offset offsetBefore = null;\r\n    ChartModelBase.Offset offsetAfter = null;\r\n    LinkedList buffer = new LinkedList();\r\n    while ((offsets.getFirst()) != null) {\r\n        ChartModelBase.Offset offset = ((ChartModelBase.Offset) (offsets.getFirst()));\r\n        if ((offset.getOffsetEnd().compareTo(start)) <= 0) {\r\n            offsetBefore = offset;\r\n            buffer.clear();\r\n        }\r\n        if ((offset.getOffsetEnd().compareTo(end)) >= 0) {\r\n            offsetAfter = offset;\r\n            if (offset.getOffsetEnd().after(end)) {\r\n                offsets.addAll(0, buffer);\r\n            }\r\n            break;\r\n        }\r\n        buffer.addLast(offset);\r\n        offsets.removeFirst();\r\n    } \r\n    int rectStart;\r\n    int rectEnd;\r\n    if (offsetAfter == null) {\r\n        rectEnd = getChartModel().getBounds().width;\r\n    } else\r\n        if (offsetAfter.getOffsetEnd().equals(end)) {\r\n            rectEnd = offsetAfter.getOffsetPixels();\r\n        } else {\r\n            rectEnd = -1;\r\n        }\r\n\r\n    if (offsetBefore == null) {\r\n        rectStart = 0;\r\n    } else\r\n        if (offsetBefore.getOffsetEnd().equals(start)) {\r\n            rectStart = offsetBefore.getOffsetPixels();\r\n        } else {\r\n            rectStart = -1;\r\n        }\r\n\r\n    if ((rectStart == (-1)) || (rectEnd == (-1))) {\r\n        return createRectangle(getDefaultOffsetsInRange(offsetBefore, offsetAfter), start, end, ypos);\r\n    }\r\n    GraphicPrimitiveContainer.Rectangle nextRect = getPrimitiveContainer().createRectangle(rectStart, ypos, (rectEnd - rectStart), getConfig().getRowHeight());\r\n    return nextRect;\r\n}'),(1422,'Date end','java.util.Date',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1946,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createRectangle(java.util.LinkedList,java.util.Date,java.util.Date,int)',0,'private GraphicPrimitiveContainer.Rectangle createRectangle(LinkedList offsets, /* <Offset> */\r\nDate start, Date end, int ypos) {\r\n    if ((start.after(getChartEndDate())) || ((end.compareTo(getChartStartDate())) <= 0)) {\r\n        return null;\r\n    }\r\n    Date lastOffsetEnd = ((ChartModelBase.Offset) (offsets.getLast())).getOffsetEnd();\r\n    if (end.after(lastOffsetEnd)) {\r\n        end = lastOffsetEnd;\r\n    }\r\n    ArrayList copy = new ArrayList(offsets);\r\n    ChartModelBase.Offset offsetBefore = null;\r\n    ChartModelBase.Offset offsetAfter = null;\r\n    LinkedList buffer = new LinkedList();\r\n    while ((offsets.getFirst()) != null) {\r\n        ChartModelBase.Offset offset = ((ChartModelBase.Offset) (offsets.getFirst()));\r\n        if ((offset.getOffsetEnd().compareTo(start)) <= 0) {\r\n            offsetBefore = offset;\r\n            buffer.clear();\r\n        }\r\n        if ((offset.getOffsetEnd().compareTo(end)) >= 0) {\r\n            offsetAfter = offset;\r\n            if (offset.getOffsetEnd().after(end)) {\r\n                offsets.addAll(0, buffer);\r\n            }\r\n            break;\r\n        }\r\n        buffer.addLast(offset);\r\n        offsets.removeFirst();\r\n    } \r\n    int rectStart;\r\n    int rectEnd;\r\n    if (offsetAfter == null) {\r\n        rectEnd = getChartModel().getBounds().width;\r\n    } else\r\n        if (offsetAfter.getOffsetEnd().equals(end)) {\r\n            rectEnd = offsetAfter.getOffsetPixels();\r\n        } else {\r\n            rectEnd = -1;\r\n        }\r\n\r\n    if (offsetBefore == null) {\r\n        rectStart = 0;\r\n    } else\r\n        if (offsetBefore.getOffsetEnd().equals(start)) {\r\n            rectStart = offsetBefore.getOffsetPixels();\r\n        } else {\r\n            rectStart = -1;\r\n        }\r\n\r\n    if ((rectStart == (-1)) || (rectEnd == (-1))) {\r\n        return createRectangle(getDefaultOffsetsInRange(offsetBefore, offsetAfter), start, end, ypos);\r\n    }\r\n    GraphicPrimitiveContainer.Rectangle nextRect = getPrimitiveContainer().createRectangle(rectStart, ypos, (rectEnd - rectStart), getConfig().getRowHeight());\r\n    return nextRect;\r\n}'),(1423,'int ypos','int',0,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1946,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createRectangle(java.util.LinkedList,java.util.Date,java.util.Date,int)',0,'private GraphicPrimitiveContainer.Rectangle createRectangle(LinkedList offsets, /* <Offset> */\r\nDate start, Date end, int ypos) {\r\n    if ((start.after(getChartEndDate())) || ((end.compareTo(getChartStartDate())) <= 0)) {\r\n        return null;\r\n    }\r\n    Date lastOffsetEnd = ((ChartModelBase.Offset) (offsets.getLast())).getOffsetEnd();\r\n    if (end.after(lastOffsetEnd)) {\r\n        end = lastOffsetEnd;\r\n    }\r\n    ArrayList copy = new ArrayList(offsets);\r\n    ChartModelBase.Offset offsetBefore = null;\r\n    ChartModelBase.Offset offsetAfter = null;\r\n    LinkedList buffer = new LinkedList();\r\n    while ((offsets.getFirst()) != null) {\r\n        ChartModelBase.Offset offset = ((ChartModelBase.Offset) (offsets.getFirst()));\r\n        if ((offset.getOffsetEnd().compareTo(start)) <= 0) {\r\n            offsetBefore = offset;\r\n            buffer.clear();\r\n        }\r\n        if ((offset.getOffsetEnd().compareTo(end)) >= 0) {\r\n            offsetAfter = offset;\r\n            if (offset.getOffsetEnd().after(end)) {\r\n                offsets.addAll(0, buffer);\r\n            }\r\n            break;\r\n        }\r\n        buffer.addLast(offset);\r\n        offsets.removeFirst();\r\n    } \r\n    int rectStart;\r\n    int rectEnd;\r\n    if (offsetAfter == null) {\r\n        rectEnd = getChartModel().getBounds().width;\r\n    } else\r\n        if (offsetAfter.getOffsetEnd().equals(end)) {\r\n            rectEnd = offsetAfter.getOffsetPixels();\r\n        } else {\r\n            rectEnd = -1;\r\n        }\r\n\r\n    if (offsetBefore == null) {\r\n        rectStart = 0;\r\n    } else\r\n        if (offsetBefore.getOffsetEnd().equals(start)) {\r\n            rectStart = offsetBefore.getOffsetPixels();\r\n        } else {\r\n            rectStart = -1;\r\n        }\r\n\r\n    if ((rectStart == (-1)) || (rectEnd == (-1))) {\r\n        return createRectangle(getDefaultOffsetsInRange(offsetBefore, offsetAfter), start, end, ypos);\r\n    }\r\n    GraphicPrimitiveContainer.Rectangle nextRect = getPrimitiveContainer().createRectangle(rectStart, ypos, (rectEnd - rectStart), getConfig().getRowHeight());\r\n    return nextRect;\r\n}'),(1424,'/* <Offset> */\r\nChartModelBase.Offset offsetBefore','net.sourceforge.ganttproject.chart.ChartModelBase$Offset',164,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1949,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getDefaultOffsetsInRange(net.sourceforge.ganttproject.chart.ChartModelBase$Offset,net.sourceforge.ganttproject.chart.ChartModelBase$Offset)',0,'private LinkedList getDefaultOffsetsInRange(/* <Offset> */\r\nChartModelBase.Offset offsetBefore, ChartModelBase.Offset offsetAfter) {\r\n    /* <Offset> */\r\n    LinkedList result = /* <Offset> */\r\n    new LinkedList(getChartModel().getDefaultUnitOffsetsInRange(offsetBefore, offsetAfter));\r\n    if (offsetBefore != null) {\r\n        result.addFirst(offsetBefore);\r\n    }\r\n    return result;\r\n}'),(1425,'ChartModelBase.Offset offsetAfter','net.sourceforge.ganttproject.chart.ChartModelBase$Offset',164,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1949,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getDefaultOffsetsInRange(net.sourceforge.ganttproject.chart.ChartModelBase$Offset,net.sourceforge.ganttproject.chart.ChartModelBase$Offset)',0,'private LinkedList getDefaultOffsetsInRange(/* <Offset> */\r\nChartModelBase.Offset offsetBefore, ChartModelBase.Offset offsetAfter) {\r\n    /* <Offset> */\r\n    LinkedList result = /* <Offset> */\r\n    new LinkedList(getChartModel().getDefaultUnitOffsetsInRange(offsetBefore, offsetAfter));\r\n    if (offsetBefore != null) {\r\n        result.addFirst(offsetBefore);\r\n    }\r\n    return result;\r\n}'),(1426,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,204,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer',1945,'net.sourceforge.ganttproject.chart.ResourceLoadRenderer.calculateGap(net.sourceforge.ganttproject.resource.ProjectResource)',0,'private int calculateGap(ProjectResource resource) {\r\n    return (resource.getAssignments().length) * (getConfig().getRowHeight());\r\n}'),(1427,'ChartModelImpl model','net.sourceforge.ganttproject.chart.ChartModelImpl',172,205,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl',1958,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelImpl)',0,'public ResourcesRendererImpl(ChartModelImpl model) {\r\n    super(model);\r\n    // TODO Auto-generated constructor stub\r\n}'),(1428,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,205,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl',1964,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl.startTimeFrame(net.sourceforge.ganttproject.time.TimeFrame)',0,'public void startTimeFrame(TimeFrame timeFrame) {\r\n    // TODO Auto-generated method stub\r\n}'),(1429,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,205,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl',1961,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl.endTimeFrame(net.sourceforge.ganttproject.time.TimeFrame)',0,'public void endTimeFrame(TimeFrame timeFrame) {\r\n    // TODO Auto-generated method stub\r\n}'),(1430,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,205,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl',1965,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl.startUnitLine(net.sourceforge.ganttproject.time.TimeUnit)',0,'public void startUnitLine(TimeUnit timeUnit) {\r\n    // TODO Auto-generated method stub\r\n}'),(1431,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,205,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl',1962,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl.endUnitLine(net.sourceforge.ganttproject.time.TimeUnit)',0,'public void endUnitLine(TimeUnit timeUnit) {\r\n    // TODO Auto-generated method stub\r\n}'),(1432,'int unitIndex','int',0,205,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl',1963,'net.sourceforge.ganttproject.chart.ResourcesRendererImpl.nextTimeUnit(int)',0,'public void nextTimeUnit(int unitIndex) {\r\n    // TODO Auto-generated method stub\r\n}'),(1433,'String name','java.lang.String',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1987,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.getProperty(java.lang.String)',0,'/**\r\n * Gets a property from the property set of this image.  If the\r\n * property name is not recognized,\r\n * <code>java.awt.Image.UndefinedProperty</code> will be returned.\r\n *\r\n * @param name\r\n * 		the name of the property to get, as a\r\n * 		<code>String</code>.  @return a reference to the property\r\n * 		<code>Object</code>, or the value\r\n * 		<code>java.awt.Image.UndefinedProperty.</code>\r\n */\r\npublic Object getProperty(String name) {\r\n    name = name.toLowerCase();\r\n    return properties.get(name);\r\n}'),(1434,'String prefix','java.lang.String',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1989,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.getPropertyNames(java.lang.String)',0,'/**\r\n * Returns an array of <code>String</code>s recognized as names by\r\n * this property source that begin with the supplied prefix.  If\r\n * no property names match, <code>null</code> will be returned.\r\n * The comparison is done in a case-independent manner.\r\n *\r\n * <p> The default implementation calls\r\n * <code>getPropertyNames()</code> and searches the list of names\r\n * for matches.\r\n *\r\n * @return an array of <code>String</code>s giving the valid\r\nproperty names.\r\n */\r\npublic String[] getPropertyNames(String prefix) {\r\n    String[] propertyNames = getPropertyNames();\r\n    if (propertyNames == null) {\r\n        return null;\r\n    }\r\n    prefix = prefix.toLowerCase();\r\n    Vector names = new Vector();\r\n    for (int i = 0; i < (propertyNames.length); i++) {\r\n        if (propertyNames[i].startsWith(prefix)) {\r\n            names.addElement(propertyNames[i]);\r\n        }\r\n    }\r\n    if ((names.size()) == 0) {\r\n        return null;\r\n    }\r\n    // Copy the strings from the Vector over to a String array.\r\n    String[] prefixNames = new String[names.size()];\r\n    int count = 0;\r\n    for (Iterator it = names.iterator(); it.hasNext();) {\r\n        prefixNames[(count++)] = ((String) (it.next()));\r\n    }\r\n    return prefixNames;\r\n}'),(1435,'int x','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1968,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int,int,int)',0,'// Utility methods.\r\n/**\r\n * Converts a pixels X coordinate into a horizontal tile index\r\n * relative to a given tile grid layout specified by its X offset\r\n * and tile width.\r\n */\r\npublic static int XToTileX(int x, int tileGridXOffset, int tileWidth) {\r\n    x -= tileGridXOffset;\r\n    if (x < 0) {\r\n        x += 1 - tileWidth;// Force round to -infinity\r\n\r\n    }\r\n    return x / tileWidth;\r\n}'),(1436,'int tileGridXOffset','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1968,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int,int,int)',0,'// Utility methods.\r\n/**\r\n * Converts a pixels X coordinate into a horizontal tile index\r\n * relative to a given tile grid layout specified by its X offset\r\n * and tile width.\r\n */\r\npublic static int XToTileX(int x, int tileGridXOffset, int tileWidth) {\r\n    x -= tileGridXOffset;\r\n    if (x < 0) {\r\n        x += 1 - tileWidth;// Force round to -infinity\r\n\r\n    }\r\n    return x / tileWidth;\r\n}'),(1437,'int tileWidth','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1968,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int,int,int)',0,'// Utility methods.\r\n/**\r\n * Converts a pixels X coordinate into a horizontal tile index\r\n * relative to a given tile grid layout specified by its X offset\r\n * and tile width.\r\n */\r\npublic static int XToTileX(int x, int tileGridXOffset, int tileWidth) {\r\n    x -= tileGridXOffset;\r\n    if (x < 0) {\r\n        x += 1 - tileWidth;// Force round to -infinity\r\n\r\n    }\r\n    return x / tileWidth;\r\n}'),(1438,'int y','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1970,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int,int,int)',0,'/**\r\n * Converts a pixels Y coordinate into a vertical tile index\r\n * relative to a given tile grid layout specified by its Y offset\r\n * and tile height.\r\n */\r\npublic static int YToTileY(int y, int tileGridYOffset, int tileHeight) {\r\n    y -= tileGridYOffset;\r\n    if (y < 0) {\r\n        y += 1 - tileHeight;// Force round to -infinity\r\n\r\n    }\r\n    return y / tileHeight;\r\n}'),(1439,'int tileGridYOffset','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1970,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int,int,int)',0,'/**\r\n * Converts a pixels Y coordinate into a vertical tile index\r\n * relative to a given tile grid layout specified by its Y offset\r\n * and tile height.\r\n */\r\npublic static int YToTileY(int y, int tileGridYOffset, int tileHeight) {\r\n    y -= tileGridYOffset;\r\n    if (y < 0) {\r\n        y += 1 - tileHeight;// Force round to -infinity\r\n\r\n    }\r\n    return y / tileHeight;\r\n}'),(1440,'int tileHeight','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1970,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int,int,int)',0,'/**\r\n * Converts a pixels Y coordinate into a vertical tile index\r\n * relative to a given tile grid layout specified by its Y offset\r\n * and tile height.\r\n */\r\npublic static int YToTileY(int y, int tileGridYOffset, int tileHeight) {\r\n    y -= tileGridYOffset;\r\n    if (y < 0) {\r\n        y += 1 - tileHeight;// Force round to -infinity\r\n\r\n    }\r\n    return y / tileHeight;\r\n}'),(1441,'int x','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1967,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int)',0,'/**\r\n * Converts a pixels X coordinate into a horizontal tile index.\r\n * This is a convenience method.  No attempt is made to detect\r\n * out-of-range coordinates.\r\n *\r\n * @param x\r\n * 		the X coordinate of a pixel.\r\n * @return the X index of the tile containing the pixel.\r\n */\r\npublic int XToTileX(int x) {\r\n    return SimpleRenderedImage.XToTileX(x, getTileGridXOffset(), getTileWidth());\r\n}'),(1442,'int y','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1969,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int)',0,'/**\r\n * Converts a pixels Y coordinate into a vertical tile index.\r\n * This is a convenience method.  No attempt is made to detect\r\n * out-of-range coordinates.\r\n *\r\n * @param y\r\n * 		the Y coordinate of a pixel.\r\n * @return the Y index of the tile containing the pixel.\r\n */\r\npublic int YToTileY(int y) {\r\n    return SimpleRenderedImage.YToTileY(y, getTileGridYOffset(), getTileHeight());\r\n}'),(1443,'int tx','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1998,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int,int,int)',0,'/**\r\n * Converts a horizontal tile index into the X coordinate of its\r\n * upper left pixel relative to a given tile grid layout specified\r\n * by its X offset and tile width.\r\n */\r\npublic static int tileXToX(int tx, int tileGridXOffset, int tileWidth) {\r\n    return (tx * tileWidth) + tileGridXOffset;\r\n}'),(1444,'int tileGridXOffset','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1998,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int,int,int)',0,'/**\r\n * Converts a horizontal tile index into the X coordinate of its\r\n * upper left pixel relative to a given tile grid layout specified\r\n * by its X offset and tile width.\r\n */\r\npublic static int tileXToX(int tx, int tileGridXOffset, int tileWidth) {\r\n    return (tx * tileWidth) + tileGridXOffset;\r\n}'),(1445,'int tileWidth','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1998,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int,int,int)',0,'/**\r\n * Converts a horizontal tile index into the X coordinate of its\r\n * upper left pixel relative to a given tile grid layout specified\r\n * by its X offset and tile width.\r\n */\r\npublic static int tileXToX(int tx, int tileGridXOffset, int tileWidth) {\r\n    return (tx * tileWidth) + tileGridXOffset;\r\n}'),(1446,'int ty','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',2000,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int,int,int)',0,'/**\r\n * Converts a vertical tile index into the Y coordinate of\r\n * its upper left pixel relative to a given tile grid layout\r\n * specified by its Y offset and tile height.\r\n */\r\npublic static int tileYToY(int ty, int tileGridYOffset, int tileHeight) {\r\n    return (ty * tileHeight) + tileGridYOffset;\r\n}'),(1447,'int tileGridYOffset','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',2000,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int,int,int)',0,'/**\r\n * Converts a vertical tile index into the Y coordinate of\r\n * its upper left pixel relative to a given tile grid layout\r\n * specified by its Y offset and tile height.\r\n */\r\npublic static int tileYToY(int ty, int tileGridYOffset, int tileHeight) {\r\n    return (ty * tileHeight) + tileGridYOffset;\r\n}'),(1448,'int tileHeight','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',2000,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int,int,int)',0,'/**\r\n * Converts a vertical tile index into the Y coordinate of\r\n * its upper left pixel relative to a given tile grid layout\r\n * specified by its Y offset and tile height.\r\n */\r\npublic static int tileYToY(int ty, int tileGridYOffset, int tileHeight) {\r\n    return (ty * tileHeight) + tileGridYOffset;\r\n}'),(1449,'int tx','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1997,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int)',0,'/**\r\n * Converts a horizontal tile index into the X coordinate of its\r\n * upper left pixel.  This is a convenience method.  No attempt is made\r\n * to detect out-of-range indices.\r\n *\r\n * @param tx\r\n * 		the horizontal index of a tile.\r\n * @return the X coordinate of the tiles upper left pixel.\r\n */\r\npublic int tileXToX(int tx) {\r\n    return (tx * (tileWidth)) + (tileGridXOffset);\r\n}'),(1450,'int ty','int',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1999,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int)',0,'/**\r\n * Converts a vertical tile index into the Y coordinate of its\r\n * upper left pixel.  This is a convenience method.  No attempt is made\r\n * to detect out-of-range indices.\r\n *\r\n * @param ty\r\n * 		the vertical index of a tile.\r\n * @return the Y coordinate of the tiles upper left pixel.\r\n */\r\npublic int tileYToY(int ty) {\r\n    return (ty * (tileHeight)) + (tileGridYOffset);\r\n}'),(1451,'Rectangle bounds','java.awt.Rectangle',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1975,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.getData(java.awt.Rectangle)',0,'/**\r\n * Returns an arbitrary rectangular region of the RenderedImage\r\n * in a Raster.  The rectangle of interest will be clipped against\r\n * the image bounds.\r\n *\r\n * <p> The returned Raster is semantically a copy.  This means\r\n * that updates to the source image will not be reflected in the\r\n * returned Raster.  For non-writable (immutable) source images,\r\n * the returned value may be a reference to the images internal\r\n * data.  The returned Raster should be considered non-writable;\r\n * any attempt to alter its pixel data (such as by casting it to\r\n * WritableRaster or obtaining and modifying its DataBuffer) may\r\n * result in undefined behavior.  The copyData method should be\r\n * used if the returned Raster is to be modified.\r\n *\r\n * @param bounds\r\n * 		the region of the RenderedImage to be returned.\r\n */\r\npublic Raster getData(Rectangle bounds) {\r\n    int startX = XToTileX(bounds.x);\r\n    int startY = YToTileY(bounds.y);\r\n    int endX = XToTileX((((bounds.x) + (bounds.width)) - 1));\r\n    int endY = YToTileY((((bounds.y) + (bounds.height)) - 1));\r\n    Raster tile;\r\n    if ((startX == endX) && (startY == endY)) {\r\n        tile = getTile(startX, startY);\r\n        return tile.createChild(bounds.x, bounds.y, bounds.width, bounds.height, bounds.x, bounds.y, null);\r\n    } else {\r\n        // Create a WritableRaster of the desired size\r\n        SampleModel sm = sampleModel.createCompatibleSampleModel(bounds.width, bounds.height);\r\n        // Translate it\r\n        WritableRaster dest = Raster.createWritableRaster(sm, bounds.getLocation());\r\n        for (int j = startY; j <= endY; j++) {\r\n            for (int i = startX; i <= endX; i++) {\r\n                tile = getTile(i, j);\r\n                Rectangle intersectRect = bounds.intersection(tile.getBounds());\r\n                Raster liveRaster = tile.createChild(intersectRect.x, intersectRect.y, intersectRect.width, intersectRect.height, intersectRect.x, intersectRect.y, null);\r\n                dest.setDataElements(0, 0, liveRaster);\r\n            }\r\n        }\r\n        return dest;\r\n    }\r\n}'),(1452,'WritableRaster dest','java.awt.image.WritableRaster',0,206,'net.sourceforge.ganttproject.chart.SimpleRenderedImage',1971,'net.sourceforge.ganttproject.chart.SimpleRenderedImage.copyData(java.awt.image.WritableRaster)',0,'/**\r\n * Copies an arbitrary rectangular region of the RenderedImage\r\n * into a caller-supplied WritableRaster.  The region to be\r\n * computed is determined by clipping the bounds of the supplied\r\n * WritableRaster against the bounds of the image.  The supplied\r\n * WritableRaster must have a SampleModel that is compatible with\r\n * that of the image.\r\n *\r\n * <p> If the raster argument is null, the entire image will\r\n * be copied into a newly-created WritableRaster with a SampleModel\r\n * that is compatible with that of the image.\r\n *\r\n * @param dest\r\n * 		a WritableRaster to hold the returned portion of\r\n * 		the image.\r\n * @return a reference to the supplied WritableRaster, or to a\r\nnew WritableRaster if the supplied one was null.\r\n */\r\npublic WritableRaster copyData(WritableRaster dest) {\r\n    Rectangle bounds;\r\n    Raster tile;\r\n    if (dest == null) {\r\n        bounds = getBounds();\r\n        Point p = new Point(minX, minY);\r\n        /* A SampleModel to hold the entire image. */\r\n        SampleModel sm = sampleModel.createCompatibleSampleModel(width, height);\r\n        dest = Raster.createWritableRaster(sm, p);\r\n    } else {\r\n        bounds = dest.getBounds();\r\n    }\r\n    int startX = XToTileX(bounds.x);\r\n    int startY = YToTileY(bounds.y);\r\n    int endX = XToTileX((((bounds.x) + (bounds.width)) - 1));\r\n    int endY = YToTileY((((bounds.y) + (bounds.height)) - 1));\r\n    for (int j = startY; j <= endY; j++) {\r\n        for (int i = startX; i <= endX; i++) {\r\n            tile = getTile(i, j);\r\n            Rectangle intersectRect = bounds.intersection(tile.getBounds());\r\n            Raster liveRaster = tile.createChild(intersectRect.x, intersectRect.y, intersectRect.width, intersectRect.height, intersectRect.x, intersectRect.y, null);\r\n            /* WritableRaster.setDataElements takes into account of\n            inRasters minX and minY and add these to x and y. Since\n            liveRaster has the origin at the correct location, the\n            following call should not again give these coordinates in\n            places of x and y.\n             */\r\n            dest.setDataElements(0, 0, liveRaster);\r\n        }\r\n    }\r\n    return dest;\r\n}'),(1453,'TimeUnitStack timeUnitStack','net.sourceforge.ganttproject.time.TimeUnitStack',639,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2001,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int)',0,'SkewedFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n}'),(1454,'GPCalendar calendar','net.sourceforge.ganttproject.calendar.GPCalendar',146,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2001,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int)',0,'SkewedFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n}'),(1455,'TimeUnit topUnit','net.sourceforge.ganttproject.time.TimeUnit',630,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2001,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int)',0,'SkewedFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n}'),(1456,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2001,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int)',0,'SkewedFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n}'),(1457,'Date startDate','java.util.Date',0,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2001,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int)',0,'SkewedFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n}'),(1458,'int bottomUnitWidth','int',0,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2001,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int)',0,'SkewedFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n}'),(1459,'int chartWidth','int',0,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2001,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.-init-(net.sourceforge.ganttproject.time.TimeUnitStack,net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,int,int)',0,'SkewedFrameOffsetBuilder(TimeUnitStack timeUnitStack, GPCalendar calendar, TimeUnit topUnit, TimeUnit bottomUnit, Date startDate, int bottomUnitWidth, int chartWidth) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    myCalendar = calendar;\r\n    myStartDate = startDate;\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myChartWidth = chartWidth;\r\n}'),(1460,'Date startDate','java.util.Date',0,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2009,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.getTopUnit(java.util.Date)',0,'// protected TimeUnit getTopUnit() {\r\n// return myTopUnit;\r\n// }\r\nprotected TimeUnit getTopUnit(Date startDate) {\r\n    TimeUnit result = myTopUnit;\r\n    if ((myTopUnit) instanceof TimeUnitFunctionOfDate) {\r\n        if (startDate == null) {\r\n            throw new RuntimeException(\"No date is set\");\r\n        } else {\r\n            result = ((TimeUnitFunctionOfDate) (myTopUnit)).createTimeUnit(startDate);\r\n        }\r\n    }\r\n    return result;\r\n}'),(1461,'net.sourceforge.ganttproject.time.TimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2009,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.getTopUnit(java.util.Date)',1,'// protected TimeUnit getTopUnit() {\r\n// return myTopUnit;\r\n// }\r\nprotected TimeUnit getTopUnit(Date startDate) {\r\n    TimeUnit result = myTopUnit;\r\n    if ((myTopUnit) instanceof TimeUnitFunctionOfDate) {\r\n        if (startDate == null) {\r\n            throw new RuntimeException(\"No date is set\");\r\n        } else {\r\n            result = ((TimeUnitFunctionOfDate) (myTopUnit)).createTimeUnit(startDate);\r\n        }\r\n    }\r\n    return result;\r\n}'),(1462,'List topUnitOffsets','java.util.List',0,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2003,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.constructOffsets(java.util.List,java.util.List)',0,'void constructOffsets(List topUnitOffsets, List bottomUnitOffsets) {\r\n    {\r\n        int offsetEnd = 0;\r\n        Date currentDate = myStartDate;\r\n        do {\r\n            final TimeUnit bottomUnit = getBottomUnit();\r\n            final TimeUnit defaultUnit = myTimeUnitStack.getDefaultTimeUnit();\r\n            TimeFrame currentFrame = myTimeUnitStack.createTimeFrame(currentDate, bottomUnit, defaultUnit);\r\n            Date endDate = currentFrame.getFinishDate();\r\n            offsetEnd += getBottomUnitWidth();\r\n            bottomUnitOffsets.add(new ChartModelBase.Offset(bottomUnit, myStartDate, endDate, offsetEnd, null));\r\n            currentDate = endDate;\r\n        } while (offsetEnd <= (getChartWidth()) );\r\n    }\r\n    {\r\n        int offsetEnd = 0;\r\n        Date currentDate = myStartDate;\r\n        SkewedFrameOffsetBuilder.SkewedFramesWidthFunction widthFunction = new SkewedFrameOffsetBuilder.SkewedFramesWidthFunction();\r\n        widthFunction.initialize();\r\n        do {\r\n            final TimeUnit topUnit = getTopUnit(currentDate);\r\n            final TimeUnit defaultUnit = myTimeUnitStack.getDefaultTimeUnit();\r\n            final TimeFrame currentFrame = myTimeUnitStack.createTimeFrame(currentDate, topUnit, defaultUnit);\r\n            Date endDate = currentFrame.getFinishDate();\r\n            offsetEnd += widthFunction.getTimeFrameWidth(currentFrame);\r\n            topUnitOffsets.add(new ChartModelBase.Offset(topUnit, myStartDate, endDate, offsetEnd, null));\r\n            currentDate = endDate;\r\n        } while (offsetEnd <= (getChartWidth()) );\r\n    }\r\n}'),(1463,'List bottomUnitOffsets','java.util.List',0,208,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder',2003,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder.constructOffsets(java.util.List,java.util.List)',0,'void constructOffsets(List topUnitOffsets, List bottomUnitOffsets) {\r\n    {\r\n        int offsetEnd = 0;\r\n        Date currentDate = myStartDate;\r\n        do {\r\n            final TimeUnit bottomUnit = getBottomUnit();\r\n            final TimeUnit defaultUnit = myTimeUnitStack.getDefaultTimeUnit();\r\n            TimeFrame currentFrame = myTimeUnitStack.createTimeFrame(currentDate, bottomUnit, defaultUnit);\r\n            Date endDate = currentFrame.getFinishDate();\r\n            offsetEnd += getBottomUnitWidth();\r\n            bottomUnitOffsets.add(new ChartModelBase.Offset(bottomUnit, myStartDate, endDate, offsetEnd, null));\r\n            currentDate = endDate;\r\n        } while (offsetEnd <= (getChartWidth()) );\r\n    }\r\n    {\r\n        int offsetEnd = 0;\r\n        Date currentDate = myStartDate;\r\n        SkewedFrameOffsetBuilder.SkewedFramesWidthFunction widthFunction = new SkewedFrameOffsetBuilder.SkewedFramesWidthFunction();\r\n        widthFunction.initialize();\r\n        do {\r\n            final TimeUnit topUnit = getTopUnit(currentDate);\r\n            final TimeUnit defaultUnit = myTimeUnitStack.getDefaultTimeUnit();\r\n            final TimeFrame currentFrame = myTimeUnitStack.createTimeFrame(currentDate, topUnit, defaultUnit);\r\n            Date endDate = currentFrame.getFinishDate();\r\n            offsetEnd += widthFunction.getTimeFrameWidth(currentFrame);\r\n            topUnitOffsets.add(new ChartModelBase.Offset(topUnit, myStartDate, endDate, offsetEnd, null));\r\n            currentDate = endDate;\r\n        } while (offsetEnd <= (getChartWidth()) );\r\n    }\r\n}'),(1464,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,207,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder$SkewedFramesWidthFunction',2011,'net.sourceforge.ganttproject.chart.SkewedFrameOffsetBuilder$SkewedFramesWidthFunction.getTimeFrameWidth(net.sourceforge.ganttproject.time.TimeFrame)',0,'public int getTimeFrameWidth(TimeFrame timeFrame) {\r\n    int defaultUnitsPerTopUnit = timeFrame.getUnitCount(myTimeUnitStack.getDefaultTimeUnit());\r\n    return ((int) (defaultUnitsPerTopUnit * (myWidthPerDefaultUnit)));\r\n}'),(1465,'ChartUIConfiguration configuration','net.sourceforge.ganttproject.chart.ChartUIConfiguration',179,212,'net.sourceforge.ganttproject.chart.StyledPainterImpl',2013,'net.sourceforge.ganttproject.chart.StyledPainterImpl.-init-(net.sourceforge.ganttproject.chart.ChartUIConfiguration)',0,'public StyledPainterImpl(ChartUIConfiguration configuration) {\r\n    // myGraphics = g;\r\n    myStyle2painter.put(\"task\", myTaskRectanglePainter);\r\n    myStyle2painter.put(\"task.start\", myTaskStartRectanglePainter);\r\n    myStyle2painter.put(\"task.end\", myTaskEndRectanglePainter);\r\n    myStyle2painter.put(\"task.startend\", myTaskStartEndRectanglePainter);\r\n    myConfig = configuration;\r\n    myStyle2painter.put(\"calendar.holiday\", myCalendarHolidayPainter);\r\n    myStyle2painter.put(\"task.milestone\", myMilestonePanter);\r\n    myStyle2painter.put(\"task.holiday\", myTaskHolidayRectanglePainter);\r\n    myStyle2painter.put(\"task.supertask\", myTaskSupertaskRectanglePainter);\r\n    myStyle2painter.put(\"task.supertask.start\", mySupertaskStartPainter);\r\n    myStyle2painter.put(\"task.supertask.end\", mySupertaskEndPainter);\r\n    myStyle2painter.put(\"task.projectTask\", myTaskProjectTaskRectanglePainter);\r\n    myStyle2painter.put(\"task.projectTask.start\", myProjectTaskStartPainter);\r\n    myStyle2painter.put(\"task.projectTask.end\", myProjectTaskEndPainter);\r\n    myStyle2painter.put(\"task.progress\", new StyledPainterImpl.ColouredRectanglePainter(Color.BLACK));\r\n    myStyle2painter.put(\"task.progress.end\", new StyledPainterImpl.ColouredRectanglePainter(Color.BLACK));\r\n    myStyle2painter.put(\"load.normal\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"load.normal.first\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"load.normal.last\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"load.normal.first.last\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"load.overload\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"dependency.arrow.down\", myArrowDownPainter);\r\n    myStyle2painter.put(\"load.overload.first\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"load.overload.last\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"load.overload.first.last\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"dependency.arrow.up\", myArrowUpPainter);\r\n    myStyle2painter.put(\"dependency.arrow.left\", myArrowLeftPainter);\r\n    myStyle2painter.put(\"dependency.arrow.right\", myArrowRightPainter);\r\n    myStyle2painter.put(\"dayoff\", myDayOffPainter);\r\n    myStyle2painter.put(\"load.underload\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"load.underload.first\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"load.underload.last\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"load.underload.first.last\", myResourceLoadPainter);\r\n    myStyle2painter.put(\"previousStateTask\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.earlier\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.later\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.milestone\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.milestone.earlier\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.milestone.later\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.super\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.super.earlier\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.super.later\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.super.apart\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.super.apart.earlier\", myPreviousStateTaskRectanglePainter);\r\n    myStyle2painter.put(\"previousStateTask.super.apart.later\", myPreviousStateTaskRectanglePainter);\r\n    myTextLengthCalculator = new TextLengthCalculatorImpl(myGraphics);\r\n    margin = myConfig.getMargin();\r\n}'),(1466,'Color color','java.awt.Color',0,209,'net.sourceforge.ganttproject.chart.StyledPainterImpl$ColouredRectanglePainter',2019,'net.sourceforge.ganttproject.chart.StyledPainterImpl$ColouredRectanglePainter.-init-(java.awt.Color)',0,'private ColouredRectanglePainter(Color color) {\r\n    myColor = color;\r\n}'),(1467,'Graphics g','java.awt.Graphics',0,212,'net.sourceforge.ganttproject.chart.StyledPainterImpl',2018,'net.sourceforge.ganttproject.chart.StyledPainterImpl.setGraphics(java.awt.Graphics)',0,'public void setGraphics(Graphics g) {\r\n    myGraphics = g;\r\n    myTextLengthCalculator.setGraphics(g);\r\n}'),(1468,'GraphicPrimitiveContainer.Rectangle next','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',189,212,'net.sourceforge.ganttproject.chart.StyledPainterImpl',2016,'net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle)',0,'public void paint(GraphicPrimitiveContainer.Rectangle next) {\r\n    if ((myGraphics) == null) {\r\n        throw new RuntimeException(\"Graphics is null\");\r\n    }\r\n    Graphics g = myGraphics;\r\n    StyledPainterImpl.RectanglePainter painter = ((StyledPainterImpl.RectanglePainter) (myStyle2painter.get(next.getStyle())));\r\n    if (painter != null) {\r\n        painter.paint(next);\r\n    } else {\r\n        if ((next.getBackgroundColor()) == null) {\r\n            Color foreColor = next.getForegroundColor();\r\n            if (foreColor == null) {\r\n                foreColor = Color.BLACK;\r\n            }\r\n            g.setColor(foreColor);\r\n            g.drawRect(next.myLeftX, next.myTopY, next.myWidth, next.myHeight);\r\n        } else {\r\n            g.setColor(next.getBackgroundColor());\r\n            g.fillRect(next.myLeftX, next.myTopY, next.myWidth, next.myHeight);\r\n        }\r\n    }\r\n}'),(1469,'GraphicPrimitiveContainer.Rectangle next','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',189,211,'net.sourceforge.ganttproject.chart.StyledPainterImpl$TaskRectanglePainter',2026,'net.sourceforge.ganttproject.chart.StyledPainterImpl$TaskRectanglePainter.paint(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle)',0,'public void paint(GraphicPrimitiveContainer.Rectangle next) {\r\n    Object modelObject = next.getModelObject();\r\n    if ((modelObject instanceof TaskActivity) == false) {\r\n        throw new RuntimeException(\"Model object is expected to be TaskActivity \");\r\n    }\r\n    Task task = ((TaskActivity) (modelObject)).getTask();\r\n    Color c = task.getColor();\r\n    if (c == null) {\r\n        c = getDefaultColor();\r\n    }\r\n    Graphics2D g = ((Graphics2D) (myGraphics));\r\n    g.setColor(c);\r\n    ShapePaint shapePaint = task.getShape();\r\n    if ((myConfig.isCriticalPathOn()) && (task.isCritical())) {\r\n        shapePaint = new ShapePaint(ShapeConstants.THICK_BACKSLASH, Color.BLACK, c);\r\n    }\r\n    if (shapePaint != null) {\r\n        g.setPaint(shapePaint);\r\n    }\r\n    g.fillRect(next.myLeftX, next.myTopY, next.myWidth, next.myHeight);\r\n    g.setColor(Color.black);\r\n    drawBorder(g, next);\r\n}'),(1470,'Graphics g','java.awt.Graphics',0,211,'net.sourceforge.ganttproject.chart.StyledPainterImpl$TaskRectanglePainter',2023,'net.sourceforge.ganttproject.chart.StyledPainterImpl$TaskRectanglePainter.drawBorder(java.awt.Graphics,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle)',0,'protected void drawBorder(Graphics g, GraphicPrimitiveContainer.Rectangle next) {\r\n    g.drawLine(((next.myLeftX) - (getCorrectionShift())), next.myTopY, ((next.getRightX()) - (getCorrectionShift())), next.myTopY);\r\n    g.drawLine(((next.myLeftX) - (getCorrectionShift())), next.getBottomY(), ((next.getRightX()) - (getCorrectionShift())), next.getBottomY());\r\n}'),(1471,'GraphicPrimitiveContainer.Rectangle next','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',189,211,'net.sourceforge.ganttproject.chart.StyledPainterImpl$TaskRectanglePainter',2023,'net.sourceforge.ganttproject.chart.StyledPainterImpl$TaskRectanglePainter.drawBorder(java.awt.Graphics,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle)',0,'protected void drawBorder(Graphics g, GraphicPrimitiveContainer.Rectangle next) {\r\n    g.drawLine(((next.myLeftX) - (getCorrectionShift())), next.myTopY, ((next.getRightX()) - (getCorrectionShift())), next.myTopY);\r\n    g.drawLine(((next.myLeftX) - (getCorrectionShift())), next.getBottomY(), ((next.getRightX()) - (getCorrectionShift())), next.getBottomY());\r\n}'),(1472,'GraphicPrimitiveContainer.Rectangle next','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',189,210,'net.sourceforge.ganttproject.chart.StyledPainterImpl$RectanglePainter',2021,'net.sourceforge.ganttproject.chart.StyledPainterImpl$RectanglePainter.paint(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle)',0,'public void paint(GraphicPrimitiveContainer.Rectangle next);'),(1473,'GraphicPrimitiveContainer.Rectangle next','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',189,209,'net.sourceforge.ganttproject.chart.StyledPainterImpl$ColouredRectanglePainter',2020,'net.sourceforge.ganttproject.chart.StyledPainterImpl$ColouredRectanglePainter.paint(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle)',0,'public void paint(GraphicPrimitiveContainer.Rectangle next) {\r\n    Graphics g = myGraphics;\r\n    g.setColor(myColor);\r\n    g.fillRect(next.myLeftX, next.myTopY, next.myWidth, next.myHeight);\r\n}'),(1474,'GraphicPrimitiveContainer.Text next','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text',190,212,'net.sourceforge.ganttproject.chart.StyledPainterImpl',2017,'net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text)',0,'public void paint(GraphicPrimitiveContainer.Text next) {\r\n    Font graphicFont = myGraphics.getFont();\r\n    int requestedMaxLength = next.getMaxLength();\r\n    Color foreColor = next.getForegroundColor();\r\n    if (foreColor == null) {\r\n        foreColor = Color.BLACK;\r\n    }\r\n    myGraphics.setColor(foreColor);\r\n    if ((next.getFont()) != null) {\r\n        myGraphics.setFont(next.getFont());\r\n    } else {\r\n        myGraphics.setFont(myConfig.getChartFont());\r\n    }\r\n    // myGraphics.setFont(myConfig.getChartFont().deriveFont(10f));\r\n    if (((next.getStyle()) != null) && (next.getStyle().equals(\"text.ganttinfo\")))\r\n        myGraphics.setFont(myConfig.getChartFont());\r\n\r\n    int actualLength;\r\n    String nextTextString = next.getText();\r\n    if ((next.getModelObject()) != null) {\r\n        TimeUnitText nextText = ((TimeUnitText) (next.getModelObject()));\r\n        nextTextString = nextText.getText(requestedMaxLength, myTextLengthCalculator);\r\n        actualLength = requestedMaxLength;\r\n    } else {\r\n        actualLength = TextLengthCalculatorImpl.getTextLength(myGraphics, next.getText());\r\n        if ((requestedMaxLength >= 0) && (actualLength > requestedMaxLength)) {\r\n            return;\r\n        }\r\n    }\r\n    int fontHeight = myGraphics.getFont().getSize();\r\n    int xleft = next.getLeftX();\r\n    int ybottom = next.getBottomY();\r\n    if ((GraphicPrimitiveContainer.HAlignment.CENTER) == (next.getHAlignment())) {\r\n        xleft -= actualLength / 2;\r\n    }\r\n    if ((GraphicPrimitiveContainer.HAlignment.RIGHT) == (next.getHAlignment())) {\r\n        xleft -= actualLength;\r\n    }\r\n    if ((GraphicPrimitiveContainer.VAlignment.CENTER) == (next.getVAlignment())) {\r\n        ybottom += fontHeight / 2;\r\n    }\r\n    if ((GraphicPrimitiveContainer.VAlignment.TOP) == (next.getVAlignment())) {\r\n        ybottom += fontHeight;\r\n    }\r\n    myGraphics.drawString(nextTextString, xleft, ybottom);\r\n    myGraphics.setFont(graphicFont);\r\n}'),(1475,'ChartModelImpl model','net.sourceforge.ganttproject.chart.ChartModelImpl',172,213,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl',2027,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelImpl)',0,'public TaskGridRendererImpl(ChartModelImpl model) {\r\n    super(model);\r\n}'),(1476,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,213,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl',2034,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl.startTimeFrame(net.sourceforge.ganttproject.time.TimeFrame)',0,'public void startTimeFrame(TimeFrame timeFrame) {\r\n}'),(1477,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,213,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl',2030,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl.endTimeFrame(net.sourceforge.ganttproject.time.TimeFrame)',0,'public void endTimeFrame(TimeFrame timeFrame) {\r\n}'),(1478,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,213,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl',2035,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl.startUnitLine(net.sourceforge.ganttproject.time.TimeUnit)',0,'public void startUnitLine(TimeUnit timeUnit) {\r\n}'),(1479,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,213,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl',2031,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl.endUnitLine(net.sourceforge.ganttproject.time.TimeUnit)',0,'public void endUnitLine(TimeUnit timeUnit) {\r\n}'),(1480,'int unitIndex','int',0,213,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl',2033,'net.sourceforge.ganttproject.chart.TaskGridRendererImpl.nextTimeUnit(int)',0,'public void nextTimeUnit(int unitIndex) {\r\n}'),(1481,'String s','java.lang.String',0,214,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer',2037,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.-init-(java.lang.String,int,int)',0,'public TaskInteractionHintRenderer(String s, int x, int y) {\r\n    this.n = s;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.draw = true;\r\n}'),(1482,'int x','int',0,214,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer',2037,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.-init-(java.lang.String,int,int)',0,'public TaskInteractionHintRenderer(String s, int x, int y) {\r\n    this.n = s;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.draw = true;\r\n}'),(1483,'int y','int',0,214,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer',2037,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.-init-(java.lang.String,int,int)',0,'public TaskInteractionHintRenderer(String s, int x, int y) {\r\n    this.n = s;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.draw = true;\r\n}'),(1484,'boolean d','boolean',0,214,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer',2040,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setDraw(boolean)',0,'public void setDraw(boolean d) {\r\n    draw = d;\r\n}'),(1485,'int x','int',0,214,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer',2042,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setX(int)',0,'public void setX(int x) {\r\n    this.x = x;\r\n}'),(1486,'String s','java.lang.String',0,214,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer',2041,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setString(java.lang.String)',0,'public void setString(String s) {\r\n    n = s;\r\n}'),(1487,'Graphics g','java.awt.Graphics',0,214,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer',2039,'net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n    if (draw) {\r\n        g.setColor(myColor);\r\n        g.fillRect(((x) - 2), y, 70, 16);\r\n        g.setColor(Color.black);\r\n        g.drawRect(((x) - 2), y, 70, 16);\r\n        g.drawString(n, x, ((y) + 12));\r\n    }\r\n}'),(1488,'ChartModelImpl model','net.sourceforge.ganttproject.chart.ChartModelImpl',172,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2043,'net.sourceforge.ganttproject.chart.TaskRendererImpl.-init-(net.sourceforge.ganttproject.chart.ChartModelImpl)',0,'public TaskRendererImpl(ChartModelImpl model) {\r\n    super(model);\r\n    this.myModel = model;\r\n    getPrimitiveContainer().newLayer();\r\n    getPrimitiveContainer().newLayer();\r\n    DefaultEnumerationOption deo0 = new DefaultEnumerationOption(\"taskLabelUp\", TaskRendererImpl.ourInfoList);\r\n    DefaultEnumerationOption deo1 = new DefaultEnumerationOption(\"taskLabelDown\", TaskRendererImpl.ourInfoList);\r\n    DefaultEnumerationOption deo2 = new DefaultEnumerationOption(\"taskLabelLeft\", TaskRendererImpl.ourInfoList);\r\n    DefaultEnumerationOption deo3 = new DefaultEnumerationOption(\"taskLabelRight\", TaskRendererImpl.ourInfoList);\r\n    Mediator.addChangeValueDispatcher(deo0);\r\n    Mediator.addChangeValueDispatcher(deo1);\r\n    Mediator.addChangeValueDispatcher(deo2);\r\n    Mediator.addChangeValueDispatcher(deo3);\r\n    myLabelOptions = new EnumerationOption[]{ deo0, deo1, deo2, deo3 };\r\n    myOptionGroups = new GPOptionGroup[1];\r\n    updateOptions();\r\n}'),(1489,'TaskDependency dependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,215,'net.sourceforge.ganttproject.chart.TaskRendererImpl$DependencyDrawData',2090,'net.sourceforge.ganttproject.chart.TaskRendererImpl$DependencyDrawData.-init-(net.sourceforge.ganttproject.task.dependency.TaskDependency,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector,net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector)',0,'public DependencyDrawData(TaskDependency dependency, GraphicPrimitiveContainer.GraphicPrimitive dependantPrimitive, GraphicPrimitiveContainer.GraphicPrimitive dependeePrimitive, TaskRendererImpl.PointVector dependantVector, TaskRendererImpl.PointVector dependeeVector) {\r\n    myDependency = dependency;\r\n    myDependantRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependantPrimitive));\r\n    myDependeeRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependeePrimitive));\r\n    myDependantVector = dependantVector;\r\n    myDependeeVector = dependeeVector;\r\n}'),(1490,'GraphicPrimitiveContainer.GraphicPrimitive dependantPrimitive','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive',186,215,'net.sourceforge.ganttproject.chart.TaskRendererImpl$DependencyDrawData',2090,'net.sourceforge.ganttproject.chart.TaskRendererImpl$DependencyDrawData.-init-(net.sourceforge.ganttproject.task.dependency.TaskDependency,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector,net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector)',0,'public DependencyDrawData(TaskDependency dependency, GraphicPrimitiveContainer.GraphicPrimitive dependantPrimitive, GraphicPrimitiveContainer.GraphicPrimitive dependeePrimitive, TaskRendererImpl.PointVector dependantVector, TaskRendererImpl.PointVector dependeeVector) {\r\n    myDependency = dependency;\r\n    myDependantRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependantPrimitive));\r\n    myDependeeRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependeePrimitive));\r\n    myDependantVector = dependantVector;\r\n    myDependeeVector = dependeeVector;\r\n}'),(1491,'GraphicPrimitiveContainer.GraphicPrimitive dependeePrimitive','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive',186,215,'net.sourceforge.ganttproject.chart.TaskRendererImpl$DependencyDrawData',2090,'net.sourceforge.ganttproject.chart.TaskRendererImpl$DependencyDrawData.-init-(net.sourceforge.ganttproject.task.dependency.TaskDependency,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector,net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector)',0,'public DependencyDrawData(TaskDependency dependency, GraphicPrimitiveContainer.GraphicPrimitive dependantPrimitive, GraphicPrimitiveContainer.GraphicPrimitive dependeePrimitive, TaskRendererImpl.PointVector dependantVector, TaskRendererImpl.PointVector dependeeVector) {\r\n    myDependency = dependency;\r\n    myDependantRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependantPrimitive));\r\n    myDependeeRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependeePrimitive));\r\n    myDependantVector = dependantVector;\r\n    myDependeeVector = dependeeVector;\r\n}'),(1492,'TaskRendererImpl.PointVector dependantVector','net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector',217,215,'net.sourceforge.ganttproject.chart.TaskRendererImpl$DependencyDrawData',2090,'net.sourceforge.ganttproject.chart.TaskRendererImpl$DependencyDrawData.-init-(net.sourceforge.ganttproject.task.dependency.TaskDependency,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector,net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector)',0,'public DependencyDrawData(TaskDependency dependency, GraphicPrimitiveContainer.GraphicPrimitive dependantPrimitive, GraphicPrimitiveContainer.GraphicPrimitive dependeePrimitive, TaskRendererImpl.PointVector dependantVector, TaskRendererImpl.PointVector dependeeVector) {\r\n    myDependency = dependency;\r\n    myDependantRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependantPrimitive));\r\n    myDependeeRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependeePrimitive));\r\n    myDependantVector = dependantVector;\r\n    myDependeeVector = dependeeVector;\r\n}'),(1493,'TaskRendererImpl.PointVector dependeeVector','net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector',217,215,'net.sourceforge.ganttproject.chart.TaskRendererImpl$DependencyDrawData',2090,'net.sourceforge.ganttproject.chart.TaskRendererImpl$DependencyDrawData.-init-(net.sourceforge.ganttproject.task.dependency.TaskDependency,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector,net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector)',0,'public DependencyDrawData(TaskDependency dependency, GraphicPrimitiveContainer.GraphicPrimitive dependantPrimitive, GraphicPrimitiveContainer.GraphicPrimitive dependeePrimitive, TaskRendererImpl.PointVector dependantVector, TaskRendererImpl.PointVector dependeeVector) {\r\n    myDependency = dependency;\r\n    myDependantRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependantPrimitive));\r\n    myDependeeRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependeePrimitive));\r\n    myDependantVector = dependantVector;\r\n    myDependeeVector = dependeeVector;\r\n}'),(1494,'Point point','java.awt.Point',0,217,'net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector',2096,'net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector.-init-(java.awt.Point)',0,'protected PointVector(Point point) {\r\n    myPoint = point;\r\n}'),(1495,'Point point','java.awt.Point',0,218,'net.sourceforge.ganttproject.chart.TaskRendererImpl$WestPointVector',2100,'net.sourceforge.ganttproject.chart.TaskRendererImpl$WestPointVector.-init-(java.awt.Point)',0,'protected WestPointVector(Point point) {\r\n    super(point);\r\n}'),(1496,'Point point','java.awt.Point',0,216,'net.sourceforge.ganttproject.chart.TaskRendererImpl$EastPointVector',2092,'net.sourceforge.ganttproject.chart.TaskRendererImpl$EastPointVector.-init-(java.awt.Point)',0,'protected EastPointVector(Point point) {\r\n    super(point);\r\n}'),(1497,'String name','java.lang.String',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2046,'net.sourceforge.ganttproject.chart.TaskRendererImpl.addOption(java.lang.String)',0,'private void addOption(String name) {\r\n    TaskRendererImpl.ourInfoList.add(name);\r\n    updateOptions();\r\n}'),(1498,'String name','java.lang.String',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2081,'net.sourceforge.ganttproject.chart.TaskRendererImpl.removeOption(java.lang.String)',0,'private void removeOption(String name) {\r\n    TaskRendererImpl.ourInfoList.remove(name);\r\n    updateOptions();\r\n}'),(1499,'Task task','net.sourceforge.ganttproject.task.Task',548,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2068,'net.sourceforge.ganttproject.chart.TaskRendererImpl.isPathExpanded(net.sourceforge.ganttproject.task.Task)',0,'private boolean isPathExpanded(Task task) {\r\n    boolean result = true;\r\n    TaskContainmentHierarchyFacade taskHierarchy = getChartModel().getTaskManager().getTaskHierarchy();\r\n    for (Task supertask = taskHierarchy.getContainer(task); (supertask != null) && (supertask != (getChartModel().getTaskManager().getRootTask())); supertask = taskHierarchy.getContainer(supertask)) {\r\n        if (!(supertask.getExpand())) {\r\n            result = false;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(1500,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2087,'net.sourceforge.ganttproject.chart.TaskRendererImpl.startTimeFrame(net.sourceforge.ganttproject.time.TimeFrame)',0,'public void startTimeFrame(TimeFrame timeFrame) {\r\n    myCurrentTimeFrame = timeFrame;\r\n}'),(1501,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2056,'net.sourceforge.ganttproject.chart.TaskRendererImpl.endTimeFrame(net.sourceforge.ganttproject.time.TimeFrame)',0,'public void endTimeFrame(TimeFrame timeFrame) {\r\n    myCurrentTimeFrame = null;\r\n}'),(1502,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2088,'net.sourceforge.ganttproject.chart.TaskRendererImpl.startUnitLine(net.sourceforge.ganttproject.time.TimeUnit)',0,'public void startUnitLine(TimeUnit timeUnit) {\r\n    if ((myCurrentTimeFrame.getBottomUnit()) == timeUnit) {\r\n        myCurrentUnit = timeUnit;\r\n    }\r\n}'),(1503,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2057,'net.sourceforge.ganttproject.chart.TaskRendererImpl.endUnitLine(net.sourceforge.ganttproject.time.TimeUnit)',0,'public void endUnitLine(TimeUnit timeUnit) {\r\n    myCurrentUnit = null;\r\n}'),(1504,'int unitIndex','int',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2072,'net.sourceforge.ganttproject.chart.TaskRendererImpl.nextTimeUnit(int)',0,'public void nextTimeUnit(int unitIndex) {\r\n    if ((myCurrentUnit) != null) {\r\n        Date unitStart = myCurrentTimeFrame.getUnitStart(myCurrentUnit, unitIndex);\r\n        Date unitFinish = myCurrentTimeFrame.getUnitFinish(myCurrentUnit, unitIndex);\r\n        myUnitStart = unitStart;\r\n        pullQueue(unitStart, unitFinish);\r\n        // System.err.println(\"[TaskRendererImpl] nextTimeUnit():\r\n        // unitStart=\"+unitStart+\" posX=\"+myPosX);\r\n        // if (!myCurrentlyProcessed.isEmpty()) {\r\n        // System.err.println(\"[TaskRendererImpl] nextTimeUnit():\r\n        // processing:\"+myCurrentlyProcessed);\r\n        // }\r\n        for (Iterator startedActivities = myCurrentlyProcessed.iterator(); startedActivities.hasNext(); startedActivities.remove()) {\r\n            TaskActivity nextStarted = ((TaskActivity) (startedActivities.next()));\r\n            processActivity(nextStarted);\r\n        }\r\n        if (myModel.isPrevious()) {\r\n            for (int i = 0; i < (myPreviousStateCurrentlyProcessed.size()); i++) {\r\n                Object next = myPreviousStateCurrentlyProcessed.get(i);\r\n                // System.out.println (next + \" : \" + i);\r\n                if (next != null) {\r\n                    GanttPreviousStateTask previousTask = ((GanttPreviousStateTask) (next));\r\n                    drawPreviousStateTask(previousTask, i);\r\n                }\r\n            }\r\n            myPreviousStateCurrentlyProcessed = new ArrayList();\r\n        }\r\n        myPosX += getChartModel().getBottomUnitWidth();\r\n    }\r\n}'),(1505,'TaskActivity nextStarted','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2075,'net.sourceforge.ganttproject.chart.TaskRendererImpl.processActivity(net.sourceforge.ganttproject.task.TaskActivity)',0,'private void processActivity(TaskActivity nextStarted) {\r\n    if (nextStarted.isLast()) {\r\n        processLastActivity(nextStarted);\r\n    } else\r\n        if (nextStarted.isFirst()) {\r\n            processFirstActivity(nextStarted);\r\n        } else {\r\n            processRegularActivity(nextStarted);\r\n        }\r\n\r\n}'),(1506,'TaskActivity nextStarted','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2078,'net.sourceforge.ganttproject.chart.TaskRendererImpl.processRegularActivity(net.sourceforge.ganttproject.task.TaskActivity)',0,'private GraphicPrimitiveContainer.Rectangle processRegularActivity(TaskActivity nextStarted) {\r\n    Task nextTask = nextStarted.getTask();\r\n    if ((nextTask.isMilestone()) && (!(nextStarted.isFirst()))) {\r\n        return null;\r\n    }\r\n    Rectangle nextBounds = getBoundingRectangle(nextStarted);\r\n    int nextLength = ((int) (nextBounds.width));\r\n    int topy = nextBounds.y;\r\n    topy = topy + (((getRowHeight()) - 20) / 2);\r\n    if (myModel.isOnlyDown())\r\n        topy = topy - 6;\r\n    else\r\n        if (myModel.isOnlyUp())\r\n            topy = topy + 6;\r\n\r\n\r\n    if (myModel.isPrevious())\r\n        topy = topy - 5;\r\n\r\n    // int posX = myPosX;\r\n    GraphicPrimitiveContainer.Rectangle nextRectangle;\r\n    // // if (nextStarted.getStart().compareTo(myUnitStart)>=0) {\r\n    // TaskLength deltaLength = nextTask.getManager().createLength(\r\n    // getChartModel().getTimeUnitStack().getDefaultTimeUnit(),\r\n    // myUnitStart, nextStarted.getStart());\r\n    // \r\n    // int deltaX = (int) (deltaLength.getLength(myCurrentUnit) * getChartModel()\r\n    // .getBottomUnitWidth());\r\n    // posX += deltaX;\r\n    // System.err.println(\"[TaskRendererImpl] myUnitStart=\"+myUnitStart+\"\r\n    // nextActivity=\"+nextStarted+\" deltaX=\"+deltaX+\"\r\n    // deltaLength=\"+deltaLength.getLength(myCurrentUnit));\r\n    // }\r\n    // else {\r\n    // nextRectangle =\r\n    // getPrimitiveContainer().createRectangle(myPosX+getChartModel().getBottomUnitWidth()-nextLength,\r\n    // topy, nextLength, getRowHeight()*3/5);\r\n    // }\r\n    boolean nextHasNested = ((ChartModelImpl) (getChartModel())).getTaskContainment().hasNestedTasks(nextTask);// JA Switch to\r\n\r\n    GraphicPrimitiveContainer container = getContainerFor(nextTask);\r\n    nextRectangle = container.createRectangle(nextBounds.x, topy, ((int) (nextLength)), 12);// CodeReview: why 12, not 15?\r\n\r\n    // System.err.println(\"task=\"+nextStarted.getTask()+\" nested tasks\r\n    // length=\"+nextStarted.getTask().getNestedTasks().length);\r\n    if (nextStarted.getTask().isMilestone()) {\r\n        nextRectangle.setStyle(\"task.milestone\");\r\n    } else\r\n        if (nextTask.isProjectTask()) {\r\n            nextRectangle.setStyle(\"task.projectTask\");\r\n            if (nextStarted.isFirst()) {\r\n                // CodeReview: why 12, not 15?\r\n                GraphicPrimitiveContainer.Rectangle supertaskStart = container.createRectangle(nextRectangle.myLeftX, topy, ((int) (nextLength)), 12);\r\n                supertaskStart.setStyle(\"task.projectTask.start\");\r\n            }\r\n            if (nextStarted.isLast()) {\r\n                GraphicPrimitiveContainer.Rectangle supertaskEnd = container.createRectangle(((myPosX) - 1), topy, ((int) (nextLength)), 12);\r\n                supertaskEnd.setStyle(\"task.projectTask.end\");\r\n            }\r\n        } else\r\n            if (nextHasNested) {\r\n                nextRectangle.setStyle(\"task.supertask\");\r\n                if (nextStarted.isFirst()) {\r\n                    // CodeReview: why 12, not 15?\r\n                    GraphicPrimitiveContainer.Rectangle supertaskStart = container.createRectangle(nextRectangle.myLeftX, topy, ((int) (nextLength)), 12);\r\n                    supertaskStart.setStyle(\"task.supertask.start\");\r\n                }\r\n                if (nextStarted.isLast()) {\r\n                    // CodeReview: why 12, not 15?\r\n                    GraphicPrimitiveContainer.Rectangle supertaskEnd = container.createRectangle(nextRectangle.myLeftX, topy, ((int) (nextLength)), 12);\r\n                    supertaskEnd.setStyle(\"task.supertask.end\");\r\n                }\r\n            } else\r\n                if ((nextStarted.getIntensity()) == 0.0F) {\r\n                    nextRectangle.setStyle(\"task.holiday\");\r\n                } else {\r\n                    if ((nextStarted.isFirst()) && (nextStarted.isLast())) {\r\n                        nextRectangle.setStyle(\"task.startend\");\r\n                    } else\r\n                        if ((false == (nextStarted.isFirst())) ^ (nextStarted.isLast())) {\r\n                            nextRectangle.setStyle(\"task\");\r\n                        } else\r\n                            if (nextStarted.isFirst()) {\r\n                                nextRectangle.setStyle(\"task.start\");\r\n                            } else\r\n                                if (nextStarted.isLast()) {\r\n                                    nextRectangle.setStyle(\"task.end\");\r\n                                }\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n    if (((myProgressRenderingEnabled) && (!(nextTask.isMilestone()))) && (!nextHasNested)) {\r\n        renderProgressBar(nextStarted, nextRectangle);\r\n    }\r\n    if ((!(\"task.holiday\".equals(nextRectangle.getStyle()))) && (!(\"task.supertask\".equals(nextRectangle.getStyle())))) {\r\n        nextRectangle.setBackgroundColor(nextStarted.getTask().getColor());\r\n    }\r\n    container.bind(nextRectangle, nextStarted);\r\n    return nextRectangle;\r\n}'),(1507,'TaskActivity nextStarted','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2082,'net.sourceforge.ganttproject.chart.TaskRendererImpl.renderProgressBar(net.sourceforge.ganttproject.task.TaskActivity,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle)',0,'private void renderProgressBar(TaskActivity nextStarted, GraphicPrimitiveContainer.Rectangle nextActivityRectangle) {\r\n    if ((nextStarted.getIntensity()) == 0) {\r\n        return;\r\n    }\r\n    Task nextTask = nextStarted.getTask();\r\n    int nextLength = nextActivityRectangle.myWidth;\r\n    Long workingRectanglesLength = ((Long) (myTask_WorkingRectanglesLength.get(nextTask)));\r\n    if (workingRectanglesLength != null) {\r\n        long nextProgressLength = nextLength;\r\n        String style;\r\n        if ((workingRectanglesLength.longValue()) > nextLength) {\r\n            myTask_WorkingRectanglesLength.put(nextTask, new Long(((workingRectanglesLength.longValue()) - nextLength)));\r\n            style = \"task.progress\";\r\n        } else {\r\n            nextProgressLength = workingRectanglesLength.longValue();\r\n            myTask_WorkingRectanglesLength.remove(nextTask);\r\n            style = \"task.progress.end\";\r\n        }\r\n        int nextMidY = nextActivityRectangle.getMiddleY();\r\n        GraphicPrimitiveContainer.GraphicPrimitive nextProgressRect = getPrimitiveContainer().getLayer(1).createRectangle(nextActivityRectangle.myLeftX, (nextMidY - 1), ((int) (nextProgressLength)), 3);\r\n        nextProgressRect.setStyle(style);\r\n        getPrimitiveContainer().getLayer(1).bind(nextProgressRect, nextTask);\r\n    }\r\n}'),(1508,'GraphicPrimitiveContainer.Rectangle nextActivityRectangle','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle',189,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2082,'net.sourceforge.ganttproject.chart.TaskRendererImpl.renderProgressBar(net.sourceforge.ganttproject.task.TaskActivity,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle)',0,'private void renderProgressBar(TaskActivity nextStarted, GraphicPrimitiveContainer.Rectangle nextActivityRectangle) {\r\n    if ((nextStarted.getIntensity()) == 0) {\r\n        return;\r\n    }\r\n    Task nextTask = nextStarted.getTask();\r\n    int nextLength = nextActivityRectangle.myWidth;\r\n    Long workingRectanglesLength = ((Long) (myTask_WorkingRectanglesLength.get(nextTask)));\r\n    if (workingRectanglesLength != null) {\r\n        long nextProgressLength = nextLength;\r\n        String style;\r\n        if ((workingRectanglesLength.longValue()) > nextLength) {\r\n            myTask_WorkingRectanglesLength.put(nextTask, new Long(((workingRectanglesLength.longValue()) - nextLength)));\r\n            style = \"task.progress\";\r\n        } else {\r\n            nextProgressLength = workingRectanglesLength.longValue();\r\n            myTask_WorkingRectanglesLength.remove(nextTask);\r\n            style = \"task.progress.end\";\r\n        }\r\n        int nextMidY = nextActivityRectangle.getMiddleY();\r\n        GraphicPrimitiveContainer.GraphicPrimitive nextProgressRect = getPrimitiveContainer().getLayer(1).createRectangle(nextActivityRectangle.myLeftX, (nextMidY - 1), ((int) (nextProgressLength)), 3);\r\n        nextProgressRect.setStyle(style);\r\n        getPrimitiveContainer().getLayer(1).bind(nextProgressRect, nextTask);\r\n    }\r\n}'),(1509,'TaskActivity taskActivity','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2076,'net.sourceforge.ganttproject.chart.TaskRendererImpl.processFirstActivity(net.sourceforge.ganttproject.task.TaskActivity)',0,'private void processFirstActivity(TaskActivity taskActivity) {\r\n    boolean stop = (taskActivity.getIntensity()) == 0.0F;\r\n    if (!stop) {\r\n        processRegularActivity(taskActivity);\r\n    }\r\n}'),(1510,'TaskActivity taskActivity','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2052,'net.sourceforge.ganttproject.chart.TaskRendererImpl.createRightSideText(net.sourceforge.ganttproject.task.TaskActivity)',0,'private void createRightSideText(TaskActivity taskActivity) {\r\n    Rectangle bounds = getBoundingRectangle(taskActivity);\r\n    String text = \"\";\r\n    int xText;\r\n    int yText;\r\n    text = getTaskLabel(taskActivity.getTask(), TaskRendererImpl.RIGHT);\r\n    xText = ((int) (bounds.getMaxX())) + 9;\r\n    yText = ((int) (myModel.getBoundingRectangle(taskActivity.getTask()).getMaxY())) - 3;\r\n    GraphicPrimitiveContainer.Text textPrimitive = processText(xText, yText, text);\r\n}'),(1511,'TaskActivity taskActivity','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2050,'net.sourceforge.ganttproject.chart.TaskRendererImpl.createDownSideText(net.sourceforge.ganttproject.task.TaskActivity)',0,'private void createDownSideText(TaskActivity taskActivity) {\r\n    String text;\r\n    text = getTaskLabel(taskActivity.getTask(), TaskRendererImpl.DOWN);\r\n    if ((text.length()) > 0) {\r\n        Rectangle taskRectangle = myModel.getBoundingRectangle(taskActivity.getTask());\r\n        int xOrigin = ((int) (taskRectangle.getMinX())) + (((int) (taskRectangle.getWidth())) / 2);\r\n        int yOrigin = ((int) (taskRectangle.getMaxY())) + 2;\r\n        GraphicPrimitiveContainer.Text textPrimitive = processText(xOrigin, yOrigin, text);\r\n        textPrimitive.setAlignment(GraphicPrimitiveContainer.HAlignment.CENTER, GraphicPrimitiveContainer.VAlignment.TOP);\r\n    }\r\n}'),(1512,'TaskActivity taskActivity','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2053,'net.sourceforge.ganttproject.chart.TaskRendererImpl.createUpSideText(net.sourceforge.ganttproject.task.TaskActivity)',0,'private void createUpSideText(TaskActivity taskActivity) {\r\n    String text;\r\n    text = getTaskLabel(taskActivity.getTask(), TaskRendererImpl.UP);\r\n    if ((text.length()) > 0) {\r\n        Rectangle taskRectangle = myModel.getBoundingRectangle(taskActivity.getTask());\r\n        int xOrigin = ((int) (taskRectangle.getMinX())) + (((int) (taskRectangle.getWidth())) / 2);\r\n        int yOrigin = ((int) (taskRectangle.getMinY())) - 3;\r\n        GraphicPrimitiveContainer.Text textPrimitive = processText(xOrigin, yOrigin, text);\r\n        textPrimitive.setAlignment(GraphicPrimitiveContainer.HAlignment.CENTER, GraphicPrimitiveContainer.VAlignment.BOTTOM);\r\n    }\r\n}'),(1513,'TaskActivity taskActivity','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2051,'net.sourceforge.ganttproject.chart.TaskRendererImpl.createLeftSideText(net.sourceforge.ganttproject.task.TaskActivity)',0,'private void createLeftSideText(TaskActivity taskActivity) {\r\n    String text;\r\n    text = getTaskLabel(taskActivity.getTask(), TaskRendererImpl.LEFT);\r\n    if ((text.length()) > 0) {\r\n        Rectangle taskRectangle = myModel.getBoundingRectangle(taskActivity.getTask());\r\n        int xOrigin = ((int) (taskRectangle.getMinX())) - 9;\r\n        int yOrigin = ((int) ((taskRectangle.getMaxY()) - 3));\r\n        GraphicPrimitiveContainer.Text textPrimitive = processText(xOrigin, yOrigin, text);\r\n        textPrimitive.setAlignment(GraphicPrimitiveContainer.HAlignment.RIGHT, GraphicPrimitiveContainer.VAlignment.BOTTOM);\r\n    }\r\n}'),(1514,'TaskActivity taskActivity','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2077,'net.sourceforge.ganttproject.chart.TaskRendererImpl.processLastActivity(net.sourceforge.ganttproject.task.TaskActivity)',0,'private void processLastActivity(TaskActivity taskActivity) {\r\n    if ((taskActivity.getIntensity()) != 0.0F) {\r\n        processRegularActivity(taskActivity);\r\n    }\r\n    if (taskActivity.getTask().isMilestone()) {\r\n        return;\r\n    }\r\n    createRightSideText(taskActivity);\r\n    createDownSideText(taskActivity);\r\n    createUpSideText(taskActivity);\r\n    createLeftSideText(taskActivity);\r\n    // \r\n    // drawProjectBoundaries();\r\n}'),(1515,'int xorigin','int',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2079,'net.sourceforge.ganttproject.chart.TaskRendererImpl.processText(int,int,java.lang.String)',0,'private GraphicPrimitiveContainer.Text processText(int xorigin, int yorigin, String text) {\r\n    GraphicPrimitiveContainer.Text res = getPrimitiveContainer().getLayer(2).createText(xorigin, yorigin, text);\r\n    res.setStyle(\"text.ganttinfo\");\r\n    return res;\r\n}'),(1516,'int yorigin','int',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2079,'net.sourceforge.ganttproject.chart.TaskRendererImpl.processText(int,int,java.lang.String)',0,'private GraphicPrimitiveContainer.Text processText(int xorigin, int yorigin, String text) {\r\n    GraphicPrimitiveContainer.Text res = getPrimitiveContainer().getLayer(2).createText(xorigin, yorigin, text);\r\n    res.setStyle(\"text.ganttinfo\");\r\n    return res;\r\n}'),(1517,'String text','java.lang.String',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2079,'net.sourceforge.ganttproject.chart.TaskRendererImpl.processText(int,int,java.lang.String)',0,'private GraphicPrimitiveContainer.Text processText(int xorigin, int yorigin, String text) {\r\n    GraphicPrimitiveContainer.Text res = getPrimitiveContainer().getLayer(2).createText(xorigin, yorigin, text);\r\n    res.setStyle(\"text.ganttinfo\");\r\n    return res;\r\n}'),(1518,'GanttPreviousStateTask task','net.sourceforge.ganttproject.GanttPreviousStateTask',50,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2055,'net.sourceforge.ganttproject.chart.TaskRendererImpl.drawPreviousStateTask(net.sourceforge.ganttproject.GanttPreviousStateTask,int)',0,'// [dbarashev] This method violates the rule: rendering model knows (almost)\r\n// nothing about\r\n// specific rendering library (such as java.awt.*) and knows absolutely\r\n// nothing about\r\n// application framework (such as GanttGraphicArea)\r\n// I understand that it is nice to render coordinators with bold font and\r\n// linebreak. However,\r\n// there exist other ways of doing this\r\n/* private void processText(int xInit, int yInit, String text) { String save =\ntext; boolean startNew = false; StringTokenizer st = new\nStringTokenizer(text, \"{}\", true); while (st.hasMoreTokens()) { String\ntoken = st.nextToken(); if (token.equals(\"{\")) { startNew = true;\ncontinue; } if (token.equals(\"}\")) { startNew = false; continue; } if\n(startNew) { Text t =\ngetPrimitiveContainer().getLayer(2).createText(xInit, yInit, token);\nxInit += TextLengthCalculatorImpl.getTextLength(myModel\n.getArea().getGraphics(), token); t.setFont(new Font(null, Font.BOLD,\n9)); continue; } getPrimitiveContainer().getLayer(2).createText(xInit,\nyInit, token); xInit +=\nTextLengthCalculatorImpl.getTextLength(myModel.getArea() .getGraphics(),\ntoken); } }\n */\r\nprivate void drawPreviousStateTask(GanttPreviousStateTask task, int row) {\r\n    int topy = ((row * (getRowHeight())) + (getRowHeight())) - 8;\r\n    int posX = myPosX;\r\n    if ((task.getStart().getTime().compareTo(myUnitStart)) >= 0) {\r\n        TaskLength deltaLength = myModel.getTaskManager().createLength(getChartModel().getTimeUnitStack().getDefaultTimeUnit(), myUnitStart, task.getStart().getTime());\r\n        int deltaX = ((int) ((deltaLength.getLength(myCurrentUnit)) * (getChartModel().getBottomUnitWidth())));\r\n        posX += deltaX;\r\n    }\r\n    int duration = task.getEnd(myModel.getTaskManager().getCalendar()).diff(task.getStart());\r\n    TaskLength tl = myModel.getTaskManager().createLength(duration);\r\n    int length = ((int) ((tl.getLength(myCurrentUnit)) * (getChartModel().getBottomUnitWidth())));\r\n    Integer nextOrdNumber = ((Integer) (myActivity2ordinalNumber.get(task)));\r\n    GraphicPrimitiveContainer container = getPrimitiveContainer();\r\n    GraphicPrimitiveContainer.Rectangle rect = container.createRectangle(posX, topy, length, 6);\r\n    String style = \"\";\r\n    if (task.isMilestone()) {\r\n        style = \"previousStateTask.milestone\";\r\n    } else\r\n        if (task.hasNested()) {\r\n            style = \"previousStateTask.super\";\r\n            if (task.isAPart())\r\n                style = \"previousStateTask.super.apart\";\r\n\r\n        } else {\r\n            style = \"previousStateTask\";\r\n        }\r\n\r\n    if ((task.getState()) == (GanttPreviousStateTask.EARLIER))\r\n        style = style + \".earlier\";\r\n    else\r\n        if ((task.getState()) == (GanttPreviousStateTask.LATER))\r\n            style = style + \".later\";\r\n\r\n\r\n    rect.setStyle(style);\r\n}'),(1519,'int row','int',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2055,'net.sourceforge.ganttproject.chart.TaskRendererImpl.drawPreviousStateTask(net.sourceforge.ganttproject.GanttPreviousStateTask,int)',0,'// [dbarashev] This method violates the rule: rendering model knows (almost)\r\n// nothing about\r\n// specific rendering library (such as java.awt.*) and knows absolutely\r\n// nothing about\r\n// application framework (such as GanttGraphicArea)\r\n// I understand that it is nice to render coordinators with bold font and\r\n// linebreak. However,\r\n// there exist other ways of doing this\r\n/* private void processText(int xInit, int yInit, String text) { String save =\ntext; boolean startNew = false; StringTokenizer st = new\nStringTokenizer(text, \"{}\", true); while (st.hasMoreTokens()) { String\ntoken = st.nextToken(); if (token.equals(\"{\")) { startNew = true;\ncontinue; } if (token.equals(\"}\")) { startNew = false; continue; } if\n(startNew) { Text t =\ngetPrimitiveContainer().getLayer(2).createText(xInit, yInit, token);\nxInit += TextLengthCalculatorImpl.getTextLength(myModel\n.getArea().getGraphics(), token); t.setFont(new Font(null, Font.BOLD,\n9)); continue; } getPrimitiveContainer().getLayer(2).createText(xInit,\nyInit, token); xInit +=\nTextLengthCalculatorImpl.getTextLength(myModel.getArea() .getGraphics(),\ntoken); } }\n */\r\nprivate void drawPreviousStateTask(GanttPreviousStateTask task, int row) {\r\n    int topy = ((row * (getRowHeight())) + (getRowHeight())) - 8;\r\n    int posX = myPosX;\r\n    if ((task.getStart().getTime().compareTo(myUnitStart)) >= 0) {\r\n        TaskLength deltaLength = myModel.getTaskManager().createLength(getChartModel().getTimeUnitStack().getDefaultTimeUnit(), myUnitStart, task.getStart().getTime());\r\n        int deltaX = ((int) ((deltaLength.getLength(myCurrentUnit)) * (getChartModel().getBottomUnitWidth())));\r\n        posX += deltaX;\r\n    }\r\n    int duration = task.getEnd(myModel.getTaskManager().getCalendar()).diff(task.getStart());\r\n    TaskLength tl = myModel.getTaskManager().createLength(duration);\r\n    int length = ((int) ((tl.getLength(myCurrentUnit)) * (getChartModel().getBottomUnitWidth())));\r\n    Integer nextOrdNumber = ((Integer) (myActivity2ordinalNumber.get(task)));\r\n    GraphicPrimitiveContainer container = getPrimitiveContainer();\r\n    GraphicPrimitiveContainer.Rectangle rect = container.createRectangle(posX, topy, length, 6);\r\n    String style = \"\";\r\n    if (task.isMilestone()) {\r\n        style = \"previousStateTask.milestone\";\r\n    } else\r\n        if (task.hasNested()) {\r\n            style = \"previousStateTask.super\";\r\n            if (task.isAPart())\r\n                style = \"previousStateTask.super.apart\";\r\n\r\n        } else {\r\n            style = \"previousStateTask\";\r\n        }\r\n\r\n    if ((task.getState()) == (GanttPreviousStateTask.EARLIER))\r\n        style = style + \".earlier\";\r\n    else\r\n        if ((task.getState()) == (GanttPreviousStateTask.LATER))\r\n            style = style + \".later\";\r\n\r\n\r\n    rect.setStyle(style);\r\n}'),(1520,'Task task','net.sourceforge.ganttproject.task.Task',548,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2067,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getTaskLabel(net.sourceforge.ganttproject.task.Task,int)',0,'private String getTaskLabel(Task task, int position) {\r\n    StringBuffer result = new StringBuffer();\r\n    Object property = TaskProperties.getProperty(task, myLabelOptions[position].getValue());\r\n    if (property != null) {\r\n        if (property instanceof Boolean)\r\n            if (((Boolean) (property)).booleanValue())\r\n                result.append(lang.getText(\"yes\"));\r\n            else\r\n                result.append(lang.getText(\"no\"));\r\n\r\n        else\r\n            result.append(property);\r\n\r\n    }\r\n    return result.toString();\r\n}'),(1521,'int position','int',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2067,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getTaskLabel(net.sourceforge.ganttproject.task.Task,int)',0,'private String getTaskLabel(Task task, int position) {\r\n    StringBuffer result = new StringBuffer();\r\n    Object property = TaskProperties.getProperty(task, myLabelOptions[position].getValue());\r\n    if (property != null) {\r\n        if (property instanceof Boolean)\r\n            if (((Boolean) (property)).booleanValue())\r\n                result.append(lang.getText(\"yes\"));\r\n            else\r\n                result.append(lang.getText(\"no\"));\r\n\r\n        else\r\n            result.append(property);\r\n\r\n    }\r\n    return result.toString();\r\n}'),(1522,'Date offsetDate','java.util.Date',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2060,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getNegativeOffset(java.util.Date,java.util.Date)',0,'private long getNegativeOffset(Date offsetDate, Date anchorDate) {\r\n    if (getChartModel().getTimeUnitStack().getDefaultTimeUnit().equals(myCurrentUnit)) {\r\n        TaskLength length = getChartModel().getTaskManager().createLength(myCurrentUnit, offsetDate, anchorDate);\r\n        return (-(length.getLength())) * (getChartModel().getBottomUnitWidth());\r\n    }\r\n    int length = 0;\r\n    while (true) {\r\n        ChartModelBase.Offset[] offsets = getChartModel().calculateOffsets(myCurrentTimeFrame, myCurrentUnit, offsetDate, getChartModel().getTimeUnitStack().getDefaultTimeUnit(), getChartModel().getBottomUnitWidth());\r\n        assert (offsets.length) > 0;\r\n        Date lastOffsetEnd = offsets[((offsets.length) - 1)].getOffsetEnd();\r\n        if (lastOffsetEnd.before(anchorDate)) {\r\n            offsetDate = lastOffsetEnd;\r\n            length += offsets[((offsets.length) - 1)].getOffsetPixels();\r\n            continue;\r\n        }\r\n        for (int i = (offsets.length) - 1; i >= 0; i--) {\r\n            ChartModelBase.Offset offset = offsets[i];\r\n            if (offset.getOffsetEnd().after(anchorDate)) {\r\n                continue;\r\n            }\r\n            length += offset.getOffsetPixels();\r\n            break;\r\n        }\r\n        break;\r\n    } \r\n    return -length;\r\n}'),(1523,'Date anchorDate','java.util.Date',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2060,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getNegativeOffset(java.util.Date,java.util.Date)',0,'private long getNegativeOffset(Date offsetDate, Date anchorDate) {\r\n    if (getChartModel().getTimeUnitStack().getDefaultTimeUnit().equals(myCurrentUnit)) {\r\n        TaskLength length = getChartModel().getTaskManager().createLength(myCurrentUnit, offsetDate, anchorDate);\r\n        return (-(length.getLength())) * (getChartModel().getBottomUnitWidth());\r\n    }\r\n    int length = 0;\r\n    while (true) {\r\n        ChartModelBase.Offset[] offsets = getChartModel().calculateOffsets(myCurrentTimeFrame, myCurrentUnit, offsetDate, getChartModel().getTimeUnitStack().getDefaultTimeUnit(), getChartModel().getBottomUnitWidth());\r\n        assert (offsets.length) > 0;\r\n        Date lastOffsetEnd = offsets[((offsets.length) - 1)].getOffsetEnd();\r\n        if (lastOffsetEnd.before(anchorDate)) {\r\n            offsetDate = lastOffsetEnd;\r\n            length += offsets[((offsets.length) - 1)].getOffsetPixels();\r\n            continue;\r\n        }\r\n        for (int i = (offsets.length) - 1; i >= 0; i--) {\r\n            ChartModelBase.Offset offset = offsets[i];\r\n            if (offset.getOffsetEnd().after(anchorDate)) {\r\n                continue;\r\n            }\r\n            length += offset.getOffsetPixels();\r\n            break;\r\n        }\r\n        break;\r\n    } \r\n    return -length;\r\n}'),(1524,'Date offsetDate','java.util.Date',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2062,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getPositiveOffset(java.util.Date,java.util.Date)',0,'private long getPositiveOffset(Date offsetDate, Date anchorDate) {\r\n    if (getChartModel().getTimeUnitStack().getDefaultTimeUnit().equals(myCurrentUnit)) {\r\n        TaskLength length = getChartModel().getTaskManager().createLength(myCurrentUnit, anchorDate, offsetDate);\r\n        return (length.getLength()) * (getChartModel().getBottomUnitWidth());\r\n    }\r\n    int length = 0;\r\n    while (true) {\r\n        ChartModelBase.Offset[] offsets = getChartModel().calculateOffsets(myCurrentTimeFrame, myCurrentUnit, anchorDate, getChartModel().getTimeUnitStack().getDefaultTimeUnit(), getChartModel().getBottomUnitWidth());\r\n        if ((offsets.length) == 0) {\r\n            throw new IllegalStateException((\"Failed to calculate offsets for anchorDate=\" + anchorDate));\r\n        }\r\n        Date lastOffsetEnd = offsets[((offsets.length) - 1)].getOffsetEnd();\r\n        // System.err.println(\"[TaskRendererImpl] getPositiveOffset(): |offsets|=\"+offsets.length+\" last offset end=\"+lastOffsetEnd+\" last offset pixels=\"+offsets[offsets.length-1].getOffsetPixels());\r\n        if (lastOffsetEnd.before(offsetDate)) {\r\n            anchorDate = lastOffsetEnd;\r\n            length += offsets[((offsets.length) - 1)].getOffsetPixels();\r\n            continue;\r\n        }\r\n        // int firstOffsetPixels = offsets[0].getOffsetPixels();\r\n        for (int i = 0; i < (offsets.length); i++) {\r\n            ChartModelBase.Offset offset = offsets[i];\r\n            if (false == (offset.getOffsetEnd().before(offsetDate))) {\r\n                length += offset.getOffsetPixels();\r\n                break;\r\n            }\r\n        }\r\n        break;\r\n    } \r\n    return length;\r\n}'),(1525,'Date anchorDate','java.util.Date',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2062,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getPositiveOffset(java.util.Date,java.util.Date)',0,'private long getPositiveOffset(Date offsetDate, Date anchorDate) {\r\n    if (getChartModel().getTimeUnitStack().getDefaultTimeUnit().equals(myCurrentUnit)) {\r\n        TaskLength length = getChartModel().getTaskManager().createLength(myCurrentUnit, anchorDate, offsetDate);\r\n        return (length.getLength()) * (getChartModel().getBottomUnitWidth());\r\n    }\r\n    int length = 0;\r\n    while (true) {\r\n        ChartModelBase.Offset[] offsets = getChartModel().calculateOffsets(myCurrentTimeFrame, myCurrentUnit, anchorDate, getChartModel().getTimeUnitStack().getDefaultTimeUnit(), getChartModel().getBottomUnitWidth());\r\n        if ((offsets.length) == 0) {\r\n            throw new IllegalStateException((\"Failed to calculate offsets for anchorDate=\" + anchorDate));\r\n        }\r\n        Date lastOffsetEnd = offsets[((offsets.length) - 1)].getOffsetEnd();\r\n        // System.err.println(\"[TaskRendererImpl] getPositiveOffset(): |offsets|=\"+offsets.length+\" last offset end=\"+lastOffsetEnd+\" last offset pixels=\"+offsets[offsets.length-1].getOffsetPixels());\r\n        if (lastOffsetEnd.before(offsetDate)) {\r\n            anchorDate = lastOffsetEnd;\r\n            length += offsets[((offsets.length) - 1)].getOffsetPixels();\r\n            continue;\r\n        }\r\n        // int firstOffsetPixels = offsets[0].getOffsetPixels();\r\n        for (int i = 0; i < (offsets.length); i++) {\r\n            ChartModelBase.Offset offset = offsets[i];\r\n            if (false == (offset.getOffsetEnd().before(offsetDate))) {\r\n                length += offset.getOffsetPixels();\r\n                break;\r\n            }\r\n        }\r\n        break;\r\n    } \r\n    return length;\r\n}'),(1526,'TaskActivity activity','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2058,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getBoundingRectangle(net.sourceforge.ganttproject.task.TaskActivity)',0,'private Rectangle getBoundingRectangle(TaskActivity activity) {\r\n    // System.err.println(\"[TaskRendererImpl] getBoundingRectangle():\nunit start=\"+myUnitStart+\"\nactivity=\"+activity);\r\n    int posX = myPosX;\r\n    int length;\r\n    if (false == (activity.getStart().equals(myUnitStart))) {\r\n        int deltaX = 0;\r\n        if (activity.getStart().before(myUnitStart)) {\r\n            deltaX = ((int) (getNegativeOffset(activity.getStart(), myUnitStart)));\r\n        } else\r\n            if (activity.getStart().after(myUnitStart)) {\r\n                deltaX = ((int) (getPositiveOffset(activity.getStart(), myUnitStart)));\r\n            }\r\n\r\n        posX += deltaX;\r\n        length = ((int) (getPositiveOffset(activity.getEnd(), myUnitStart))) - deltaX;\r\n        // System.err.println(\"[TaskRendererImpl] getBoundingRectangle(): delta=\"+deltaX+\" length=\"+length);\r\n    } else {\r\n        length = ((int) ((activity.getDuration().getLength(myCurrentUnit)) * (getChartModel().getBottomUnitWidth())));\r\n    }\r\n    Integer nextOrdNumber = ((Integer) (myActivity2ordinalNumber.get(activity)));\r\n    int topy = ((nextOrdNumber.intValue()) * (getRowHeight())) + 4;// JA Added\r\n\r\n    // 4 so that\r\n    // it draws\r\n    // in middle\r\n    // of row\r\n    return new Rectangle(posX, topy, length, getRowHeight());\r\n}'),(1527,'List dependencyDrawData','java.util.List',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2054,'net.sourceforge.ganttproject.chart.TaskRendererImpl.drawDependencies(java.util.List)',0,'/**\r\n *\r\n *\r\n * @param dependencyDrawData\r\n * 		\r\n */\r\nprivate void drawDependencies(List dependencyDrawData) {\r\n    // if(dependencyDrawData.size() == 0)\r\n    // System.out.println(\"VIDE\");\r\n    GraphicPrimitiveContainer primitiveContainer = getPrimitiveContainer().getLayer(2);\r\n    int arrowLength = 7;\r\n    for (int i = 0; i < (dependencyDrawData.size()); i++) {\r\n        TaskRendererImpl.DependencyDrawData next = ((TaskRendererImpl.DependencyDrawData) (dependencyDrawData.get(i)));\r\n        if (next.myDependeeVector.reaches(next.myDependantVector.getPoint())) {\r\n            // when dependee.end <= dependant.start && dependency.type is\r\n            // any\r\n            // or dependee.end <= dependant.end && dependency.type==FF\r\n            // or dependee.start >= dependant.end && dependency.type==SF\r\n            int ysign = signum(((next.myDependantVector.getPoint().y) - (next.myDependeeVector.getPoint().y)));\r\n            Point first = new Point(next.myDependeeVector.getPoint().x, next.myDependeeVector.getPoint().y);\r\n            Point second = new Point(next.myDependantVector.getPoint((-3)).x, next.myDependeeVector.getPoint().y);\r\n            Point third = new Point(next.myDependantVector.getPoint((-3)).x, next.myDependantVector.getPoint().y);\r\n            Rectangle arrowBoundary = null;\r\n            String style;\r\n            if (next.myDependantVector.reaches(third)) {\r\n                second.x += arrowLength;\r\n                third.x += arrowLength;\r\n                Point forth = next.myDependantVector.getPoint();\r\n                primitiveContainer.createLine(third.x, third.y, forth.x, forth.y);\r\n                arrowBoundary = new Rectangle(forth.x, ((forth.y) - 3), arrowLength, 6);\r\n                style = \"dependency.arrow.left\";\r\n            } else {\r\n                third.y -= (ysign * (next.myDependantRectangle.myHeight)) / 2;\r\n                arrowBoundary = new Rectangle(((third.x) - 3), ((third.y) - (ysign > 0 ? ysign * arrowLength : 0)), 6, arrowLength);\r\n                style = (ysign > 0) ? \"dependency.arrow.down\" : \"dependency.arrow.up\";\r\n            }\r\n            primitiveContainer.createLine(first.x, first.y, second.x, second.y);\r\n            primitiveContainer.createLine(second.x, second.y, third.x, third.y);\r\n            if (arrowBoundary != null) {\r\n                GraphicPrimitiveContainer.Rectangle arrow = getPrimitiveContainer().createRectangle(arrowBoundary.x, arrowBoundary.y, arrowBoundary.width, arrowBoundary.height);\r\n                arrow.setStyle(style);\r\n            }\r\n        } else {\r\n            Point first = next.myDependeeVector.getPoint(3);\r\n            if (next.myDependantVector.reaches(first)) {\r\n                Point second = new Point(first.x, next.myDependantVector.getPoint().y);\r\n                primitiveContainer.createLine(next.myDependeeVector.getPoint().x, next.myDependeeVector.getPoint().y, first.x, first.y);\r\n                primitiveContainer.createLine(first.x, first.y, second.x, second.y);\r\n                primitiveContainer.createLine(second.x, second.y, next.myDependantVector.getPoint().x, next.myDependantVector.getPoint().y);\r\n                int xsign = signum(((next.myDependantVector.getPoint().x) - (second.x)));\r\n                Rectangle arrowBoundary = new Rectangle(next.myDependantVector.getPoint(7).x, ((next.myDependantVector.getPoint().y) - 3), (xsign * 7), 6);\r\n                GraphicPrimitiveContainer.Rectangle arrow = primitiveContainer.createRectangle(arrowBoundary.x, arrowBoundary.y, arrowBoundary.width, arrowBoundary.height);\r\n                arrow.setStyle((xsign < 0 ? \"dependency.arrow.left\" : \"dependency.arrow.right\"));\r\n            } else {\r\n                Point forth = next.myDependantVector.getPoint(3);\r\n                Point second = new Point(first.x, (((first.y) + (forth.y)) / 2));\r\n                Point third = new Point(forth.x, (((first.y) + (forth.y)) / 2));\r\n                primitiveContainer.createLine(next.myDependeeVector.getPoint().x, next.myDependeeVector.getPoint().y, first.x, first.y);\r\n                primitiveContainer.createLine(first.x, first.y, second.x, second.y);\r\n                primitiveContainer.createLine(second.x, second.y, third.x, third.y);\r\n                primitiveContainer.createLine(third.x, third.y, forth.x, forth.y);\r\n                primitiveContainer.createLine(forth.x, forth.y, next.myDependantVector.getPoint().x, next.myDependantVector.getPoint().y);\r\n            }\r\n        }\r\n    }\r\n}'),(1528,'int value','int',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2086,'net.sourceforge.ganttproject.chart.TaskRendererImpl.signum(int)',0,'private final int signum(int value) {\r\n    if (value == 0) {\r\n        return 0;\r\n    }\r\n    return value < 0 ? -1 : 1;\r\n}'),(1529,'Task task','net.sourceforge.ganttproject.task.Task',548,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2074,'net.sourceforge.ganttproject.chart.TaskRendererImpl.prepareDependencyDrawData(net.sourceforge.ganttproject.task.Task,java.util.List)',0,'private void prepareDependencyDrawData(Task task, List result) {\r\n    TaskDependency[] deps = task.getDependencies().toArray();\r\n    for (int i = 0; i < (deps.length); i++) {\r\n        TaskDependency next = deps[i];\r\n        TaskDependency.ActivityBinding activityBinding = next.getActivityBinding();\r\n        TaskActivity dependant = activityBinding.getDependantActivity();\r\n        GraphicPrimitiveContainer dependantContainer = getContainerFor(dependant.getTask());\r\n        GraphicPrimitiveContainer.Rectangle dependantRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependantContainer.getPrimitive(dependant)));\r\n        if (dependantRectangle == null) {\r\n            // System.out.println(\"dependantRectangle == null\");\r\n            continue;\r\n        }\r\n        TaskActivity dependee = activityBinding.getDependeeActivity();\r\n        GraphicPrimitiveContainer dependeeContainer = getContainerFor(dependee.getTask());\r\n        GraphicPrimitiveContainer.Rectangle dependeeRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependeeContainer.getPrimitive(dependee)));\r\n        if (dependeeRectangle == null) {\r\n            // System.out.println(\"dependeeRectangle == null\");\r\n            continue;\r\n        }\r\n        Date[] bounds = activityBinding.getAlignedBounds();\r\n        TaskRendererImpl.PointVector dependantVector;\r\n        if (bounds[0].equals(dependant.getStart())) {\r\n            dependantVector = new TaskRendererImpl.WestPointVector(new Point(dependantRectangle.myLeftX, dependantRectangle.getMiddleY()));\r\n        } else\r\n            if (bounds[0].equals(dependant.getEnd())) {\r\n                dependantVector = new TaskRendererImpl.EastPointVector(new Point(dependantRectangle.getRightX(), dependantRectangle.getMiddleY()));\r\n            } else {\r\n                throw new RuntimeException();\r\n            }\r\n\r\n        // \r\n        TaskRendererImpl.PointVector dependeeVector;\r\n        if (bounds[1].equals(dependee.getStart())) {\r\n            dependeeVector = new TaskRendererImpl.WestPointVector(new Point(dependeeRectangle.myLeftX, dependeeRectangle.getMiddleY()));\r\n        } else\r\n            if (bounds[1].equals(dependee.getEnd())) {\r\n                dependeeVector = new TaskRendererImpl.EastPointVector(new Point(dependeeRectangle.getRightX(), dependeeRectangle.getMiddleY()));\r\n            } else {\r\n                throw new RuntimeException();\r\n            }\r\n\r\n        TaskRendererImpl.DependencyDrawData data = new TaskRendererImpl.DependencyDrawData(next, dependantRectangle, dependeeRectangle, dependantVector, dependeeVector);\r\n        result.add(data);\r\n    }\r\n}'),(1530,'List result','java.util.List',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2074,'net.sourceforge.ganttproject.chart.TaskRendererImpl.prepareDependencyDrawData(net.sourceforge.ganttproject.task.Task,java.util.List)',0,'private void prepareDependencyDrawData(Task task, List result) {\r\n    TaskDependency[] deps = task.getDependencies().toArray();\r\n    for (int i = 0; i < (deps.length); i++) {\r\n        TaskDependency next = deps[i];\r\n        TaskDependency.ActivityBinding activityBinding = next.getActivityBinding();\r\n        TaskActivity dependant = activityBinding.getDependantActivity();\r\n        GraphicPrimitiveContainer dependantContainer = getContainerFor(dependant.getTask());\r\n        GraphicPrimitiveContainer.Rectangle dependantRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependantContainer.getPrimitive(dependant)));\r\n        if (dependantRectangle == null) {\r\n            // System.out.println(\"dependantRectangle == null\");\r\n            continue;\r\n        }\r\n        TaskActivity dependee = activityBinding.getDependeeActivity();\r\n        GraphicPrimitiveContainer dependeeContainer = getContainerFor(dependee.getTask());\r\n        GraphicPrimitiveContainer.Rectangle dependeeRectangle = ((GraphicPrimitiveContainer.Rectangle) (dependeeContainer.getPrimitive(dependee)));\r\n        if (dependeeRectangle == null) {\r\n            // System.out.println(\"dependeeRectangle == null\");\r\n            continue;\r\n        }\r\n        Date[] bounds = activityBinding.getAlignedBounds();\r\n        TaskRendererImpl.PointVector dependantVector;\r\n        if (bounds[0].equals(dependant.getStart())) {\r\n            dependantVector = new TaskRendererImpl.WestPointVector(new Point(dependantRectangle.myLeftX, dependantRectangle.getMiddleY()));\r\n        } else\r\n            if (bounds[0].equals(dependant.getEnd())) {\r\n                dependantVector = new TaskRendererImpl.EastPointVector(new Point(dependantRectangle.getRightX(), dependantRectangle.getMiddleY()));\r\n            } else {\r\n                throw new RuntimeException();\r\n            }\r\n\r\n        // \r\n        TaskRendererImpl.PointVector dependeeVector;\r\n        if (bounds[1].equals(dependee.getStart())) {\r\n            dependeeVector = new TaskRendererImpl.WestPointVector(new Point(dependeeRectangle.myLeftX, dependeeRectangle.getMiddleY()));\r\n        } else\r\n            if (bounds[1].equals(dependee.getEnd())) {\r\n                dependeeVector = new TaskRendererImpl.EastPointVector(new Point(dependeeRectangle.getRightX(), dependeeRectangle.getMiddleY()));\r\n            } else {\r\n                throw new RuntimeException();\r\n            }\r\n\r\n        TaskRendererImpl.DependencyDrawData data = new TaskRendererImpl.DependencyDrawData(next, dependantRectangle, dependeeRectangle, dependantVector, dependeeVector);\r\n        result.add(data);\r\n    }\r\n}'),(1531,'Date unitStart','java.util.Date',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2080,'net.sourceforge.ganttproject.chart.TaskRendererImpl.pullQueue(java.util.Date,java.util.Date)',0,'private void pullQueue(Date unitStart, Date unitFinish) {\r\n    for (Iterator activities = myVisibleActivities.iterator(); activities.hasNext();) {\r\n        TaskActivity next = ((TaskActivity) (activities.next()));\r\n        if (next.getEnd().before(getChartModel().getStartDate())) {\r\n            myActivitiesOutOfView.add(next);\r\n            activities.remove();\r\n            continue;\r\n        }\r\n        if ((next.getStart().before(getChartModel().getStartDate())) && (next.getEnd().after(getChartModel().getEndDate()))) {\r\n            myCurrentlyProcessed.add(next);\r\n            activities.remove();\r\n            continue;\r\n        }\r\n        if (next.getStart().after(unitFinish)) {\r\n            break;\r\n        }\r\n        if ((((next.getStart().compareTo(unitStart)) >= 0) && ((next.getStart().compareTo(unitFinish)) < 0)) || (((next.getEnd().compareTo(unitStart)) >= 0) && ((next.getEnd().compareTo(unitFinish)) < 0))) {\r\n            // System.err.println(\"pullQueue: \nnextActivity=\"+next+\"\ntask=\"+next.getTask()+\" \nunitStart=\"+unitStart+\" unitFinish=\"+unitFinish);\r\n            myCurrentlyProcessed.add(next);\r\n            activities.remove();\r\n        }\r\n    }\r\n    // initialize the myPreviousCurrentlyProcessed List\r\n    // each index value matches with the row\r\n    // null value means there is no previous task for this row or\r\n    // the previous task is not between unitStart & unitFinish\r\n    if (myModel.isPrevious()) {\r\n        List visibleTasks = ((ChartModelImpl) (getChartModel())).getVisibleTasks();\r\n        for (int i = 0; i < (visibleTasks.size()); i++) {\r\n            Task task = ((Task) (visibleTasks.get(i)));\r\n            int index = getPreviousStateTaskIndex(task);\r\n            GPCalendar calendar = myModel.getTaskManager().getCalendar();\r\n            if (index != (-1)) {\r\n                GanttPreviousStateTask previousStateTask = ((GanttPreviousStateTask) (myPreviousStateTasks.get(index)));\r\n                previousStateTask.setState(task, calendar);\r\n                if (previousStateTask.getStart().after(unitFinish)) {\r\n                    myPreviousStateCurrentlyProcessed.add(null);\r\n                } else\r\n                    // )|| previousStateTask.getEnd(\r\n                    // calendar)\r\n                    // .getTime().compareTo(unitStart) > 0\r\n                    // && previousStateTask.getEnd(\r\n                    // calendar)\r\n                    // .getTime().compareTo(unitFinish) < 0)\r\n                    if (((previousStateTask.getStart().getTime().compareTo(unitStart)) >= 0) && ((previousStateTask.getStart().getTime().compareTo(unitFinish)) < 0)) {\r\n                        myPreviousStateCurrentlyProcessed.add(previousStateTask);\r\n                        myPreviousStateTasks.remove(index);\r\n                    } else// if just a part of the previous task is visible\r\n\r\n                        if (((previousStateTask.getStart().getTime().compareTo(unitStart)) < 0) && ((previousStateTask.getEnd(calendar).getTime().compareTo(unitStart)) > 0)) {\r\n                            GanttCalendar newStart = new GanttCalendar(unitStart);\r\n                            int id = previousStateTask.getId();\r\n                            int duration = (previousStateTask.getDuration()) - (newStart.diff(previousStateTask.getStart()));\r\n                            int diff = newStart.diff(previousStateTask.getStart());\r\n                            for (int j = 0; j < diff; j++) {\r\n                                if (calendar.isNonWorkingDay(previousStateTask.getStart().newAdd(j).getTime())) {\r\n                                    duration++;\r\n                                }\r\n                            }\r\n                            boolean isMilestone = previousStateTask.isMilestone();\r\n                            boolean hasNested = previousStateTask.hasNested();\r\n                            GanttPreviousStateTask partOfPreviousTask = new GanttPreviousStateTask(id, newStart, duration, isMilestone, hasNested);\r\n                            partOfPreviousTask.setState(task, calendar);\r\n                            partOfPreviousTask.setIsAPart(true);\r\n                            myPreviousStateCurrentlyProcessed.add(partOfPreviousTask);\r\n                            myPreviousStateTasks.remove(index);\r\n                        } else\r\n                            myPreviousStateCurrentlyProcessed.add(null);\r\n\r\n\r\n\r\n            } else\r\n                myPreviousStateCurrentlyProcessed.add(null);\r\n\r\n        }\r\n    }\r\n}'),(1532,'Date unitFinish','java.util.Date',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2080,'net.sourceforge.ganttproject.chart.TaskRendererImpl.pullQueue(java.util.Date,java.util.Date)',0,'private void pullQueue(Date unitStart, Date unitFinish) {\r\n    for (Iterator activities = myVisibleActivities.iterator(); activities.hasNext();) {\r\n        TaskActivity next = ((TaskActivity) (activities.next()));\r\n        if (next.getEnd().before(getChartModel().getStartDate())) {\r\n            myActivitiesOutOfView.add(next);\r\n            activities.remove();\r\n            continue;\r\n        }\r\n        if ((next.getStart().before(getChartModel().getStartDate())) && (next.getEnd().after(getChartModel().getEndDate()))) {\r\n            myCurrentlyProcessed.add(next);\r\n            activities.remove();\r\n            continue;\r\n        }\r\n        if (next.getStart().after(unitFinish)) {\r\n            break;\r\n        }\r\n        if ((((next.getStart().compareTo(unitStart)) >= 0) && ((next.getStart().compareTo(unitFinish)) < 0)) || (((next.getEnd().compareTo(unitStart)) >= 0) && ((next.getEnd().compareTo(unitFinish)) < 0))) {\r\n            // System.err.println(\"pullQueue: \nnextActivity=\"+next+\"\ntask=\"+next.getTask()+\" \nunitStart=\"+unitStart+\" unitFinish=\"+unitFinish);\r\n            myCurrentlyProcessed.add(next);\r\n            activities.remove();\r\n        }\r\n    }\r\n    // initialize the myPreviousCurrentlyProcessed List\r\n    // each index value matches with the row\r\n    // null value means there is no previous task for this row or\r\n    // the previous task is not between unitStart & unitFinish\r\n    if (myModel.isPrevious()) {\r\n        List visibleTasks = ((ChartModelImpl) (getChartModel())).getVisibleTasks();\r\n        for (int i = 0; i < (visibleTasks.size()); i++) {\r\n            Task task = ((Task) (visibleTasks.get(i)));\r\n            int index = getPreviousStateTaskIndex(task);\r\n            GPCalendar calendar = myModel.getTaskManager().getCalendar();\r\n            if (index != (-1)) {\r\n                GanttPreviousStateTask previousStateTask = ((GanttPreviousStateTask) (myPreviousStateTasks.get(index)));\r\n                previousStateTask.setState(task, calendar);\r\n                if (previousStateTask.getStart().after(unitFinish)) {\r\n                    myPreviousStateCurrentlyProcessed.add(null);\r\n                } else\r\n                    // )|| previousStateTask.getEnd(\r\n                    // calendar)\r\n                    // .getTime().compareTo(unitStart) > 0\r\n                    // && previousStateTask.getEnd(\r\n                    // calendar)\r\n                    // .getTime().compareTo(unitFinish) < 0)\r\n                    if (((previousStateTask.getStart().getTime().compareTo(unitStart)) >= 0) && ((previousStateTask.getStart().getTime().compareTo(unitFinish)) < 0)) {\r\n                        myPreviousStateCurrentlyProcessed.add(previousStateTask);\r\n                        myPreviousStateTasks.remove(index);\r\n                    } else// if just a part of the previous task is visible\r\n\r\n                        if (((previousStateTask.getStart().getTime().compareTo(unitStart)) < 0) && ((previousStateTask.getEnd(calendar).getTime().compareTo(unitStart)) > 0)) {\r\n                            GanttCalendar newStart = new GanttCalendar(unitStart);\r\n                            int id = previousStateTask.getId();\r\n                            int duration = (previousStateTask.getDuration()) - (newStart.diff(previousStateTask.getStart()));\r\n                            int diff = newStart.diff(previousStateTask.getStart());\r\n                            for (int j = 0; j < diff; j++) {\r\n                                if (calendar.isNonWorkingDay(previousStateTask.getStart().newAdd(j).getTime())) {\r\n                                    duration++;\r\n                                }\r\n                            }\r\n                            boolean isMilestone = previousStateTask.isMilestone();\r\n                            boolean hasNested = previousStateTask.hasNested();\r\n                            GanttPreviousStateTask partOfPreviousTask = new GanttPreviousStateTask(id, newStart, duration, isMilestone, hasNested);\r\n                            partOfPreviousTask.setState(task, calendar);\r\n                            partOfPreviousTask.setIsAPart(true);\r\n                            myPreviousStateCurrentlyProcessed.add(partOfPreviousTask);\r\n                            myPreviousStateTasks.remove(index);\r\n                        } else\r\n                            myPreviousStateCurrentlyProcessed.add(null);\r\n\r\n\r\n\r\n            } else\r\n                myPreviousStateCurrentlyProcessed.add(null);\r\n\r\n        }\r\n    }\r\n}'),(1533,'Task task','net.sourceforge.ganttproject.task.Task',548,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2063,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getPreviousStateTaskIndex(net.sourceforge.ganttproject.task.Task)',0,'// return the index in the List tasks of the previous Task which have the\r\n// same ID as next\r\n// return -1 if there is no previous Task with the next ID\r\nprivate int getPreviousStateTaskIndex(Task task) {\r\n    if ((myPreviousStateTasks) == null)\r\n        return -1;\r\n\r\n    for (int i = 0; i < (myPreviousStateTasks.size()); i++) {\r\n        if ((task.getTaskID()) == (((GanttPreviousStateTask) (myPreviousStateTasks.get(i))).getId()))\r\n            return i;\r\n\r\n    }\r\n    return -1;\r\n}'),(1534,'Point targetPoint','java.awt.Point',0,217,'net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector',2099,'net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector.reaches(java.awt.Point)',0,'abstract boolean reaches(Point targetPoint);'),(1535,'int i','int',0,217,'net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector',2098,'net.sourceforge.ganttproject.chart.TaskRendererImpl$PointVector.getPoint(int)',0,'abstract Point getPoint(int i);'),(1536,'Point targetPoint','java.awt.Point',0,218,'net.sourceforge.ganttproject.chart.TaskRendererImpl$WestPointVector',2102,'net.sourceforge.ganttproject.chart.TaskRendererImpl$WestPointVector.reaches(java.awt.Point)',0,'boolean reaches(Point targetPoint) {\r\n    return (targetPoint.x) <= (getPoint().x);\r\n}'),(1537,'int diff','int',0,218,'net.sourceforge.ganttproject.chart.TaskRendererImpl$WestPointVector',2101,'net.sourceforge.ganttproject.chart.TaskRendererImpl$WestPointVector.getPoint(int)',0,'Point getPoint(int diff) {\r\n    return new Point(((getPoint().x) - diff), getPoint().y);\r\n}'),(1538,'Point targetPoint','java.awt.Point',0,216,'net.sourceforge.ganttproject.chart.TaskRendererImpl$EastPointVector',2094,'net.sourceforge.ganttproject.chart.TaskRendererImpl$EastPointVector.reaches(java.awt.Point)',0,'boolean reaches(Point targetPoint) {\r\n    return (targetPoint.x) >= (getPoint().x);\r\n}'),(1539,'int diff','int',0,216,'net.sourceforge.ganttproject.chart.TaskRendererImpl$EastPointVector',2093,'net.sourceforge.ganttproject.chart.TaskRendererImpl$EastPointVector.getPoint(int)',0,'Point getPoint(int diff) {\r\n    return new Point(((getPoint().x) + diff), getPoint().y);\r\n}'),(1540,'boolean renderProgress','boolean',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2085,'net.sourceforge.ganttproject.chart.TaskRendererImpl.setProgressRenderingEnabled(boolean)',0,'public void setProgressRenderingEnabled(boolean renderProgress) {\r\n    myProgressRenderingEnabled = renderProgress;\r\n}'),(1541,'boolean renderDependencies','boolean',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2083,'net.sourceforge.ganttproject.chart.TaskRendererImpl.setDependenciesRenderingEnabled(boolean)',0,'public void setDependenciesRenderingEnabled(boolean renderDependencies) {\r\n    myDependenciesRenderingEnabled = renderDependencies;\r\n}'),(1542,'int index','int',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2071,'net.sourceforge.ganttproject.chart.TaskRendererImpl.isVisible(int)',0,'public boolean isVisible(int index) {\r\n    return isVisible[index];\r\n}'),(1543,'ArrayList tasks','java.util.ArrayList',0,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2084,'net.sourceforge.ganttproject.chart.TaskRendererImpl.setPreviousStateTasks(java.util.ArrayList)',0,'public void setPreviousStateTasks(ArrayList tasks) {\r\n    myTasks = tasks;\r\n}'),(1544,'TaskActivity activity','net.sourceforge.ganttproject.task.TaskActivity',549,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2064,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getPrimitive(net.sourceforge.ganttproject.task.TaskActivity)',0,'public GraphicPrimitiveContainer.Rectangle getPrimitive(TaskActivity activity) {\r\n    return ((GraphicPrimitiveContainer.Rectangle) (getContainerFor(activity.getTask()).getPrimitive(activity)));\r\n}'),(1545,'Task task','net.sourceforge.ganttproject.task.Task',548,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2059,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getContainerFor(net.sourceforge.ganttproject.task.Task)',0,'private GraphicPrimitiveContainer getContainerFor(Task task) {\r\n    boolean hasNested = ((ChartModelImpl) (getChartModel())).getTaskContainment().hasNestedTasks(task);// JA Switch to\r\n\r\n    return hasNested ? getPrimitiveContainer().getLayer(2) : getPrimitiveContainer();\r\n}'),(1546,'net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer','net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer',192,219,'net.sourceforge.ganttproject.chart.TaskRendererImpl',2059,'net.sourceforge.ganttproject.chart.TaskRendererImpl.getContainerFor(net.sourceforge.ganttproject.task.Task)',1,'private GraphicPrimitiveContainer getContainerFor(Task task) {\r\n    boolean hasNested = ((ChartModelImpl) (getChartModel())).getTaskContainment().hasNestedTasks(task);// JA Switch to\r\n\r\n    return hasNested ? getPrimitiveContainer().getLayer(2) : getPrimitiveContainer();\r\n}'),(1547,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,220,'net.sourceforge.ganttproject.chart.TestChart',2109,'net.sourceforge.ganttproject.chart.TestChart.getChart(net.sourceforge.ganttproject.GanttExportSettings)',0,'public BufferedImage getChart(GanttExportSettings settings) {\r\n    throw new UnsupportedOperationException();\r\n}'),(1548,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,220,'net.sourceforge.ganttproject.chart.TestChart',2120,'net.sourceforge.ganttproject.chart.TestChart.setTaskManager(net.sourceforge.ganttproject.task.TaskManager)',0,'public void setTaskManager(TaskManager taskManager) {\r\n    // TODO Auto-generated method stub\r\n}'),(1549,'Class arg0','java.lang.Class',0,220,'net.sourceforge.ganttproject.chart.TestChart',2108,'net.sourceforge.ganttproject.chart.TestChart.getAdapter(java.lang.Class)',0,'public Object getAdapter(Class arg0) {\r\n    return null;\r\n}'),(1550,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,220,'net.sourceforge.ganttproject.chart.TestChart',2114,'net.sourceforge.ganttproject.chart.TestChart.getRenderedImage(net.sourceforge.ganttproject.GanttExportSettings)',0,'public RenderedImage getRenderedImage(GanttExportSettings settings) {\r\n    // TODO Auto-generated method stub\r\n    return null;\r\n}'),(1551,'ChartSelection selection','net.sourceforge.ganttproject.chart.ChartSelection',177,220,'net.sourceforge.ganttproject.chart.TestChart',2106,'net.sourceforge.ganttproject.chart.TestChart.canPaste(net.sourceforge.ganttproject.chart.ChartSelection)',0,'public IStatus canPaste(ChartSelection selection) {\r\n    // TODO Auto-generated method stub\r\n    return null;\r\n}'),(1552,'ChartSelection selection','net.sourceforge.ganttproject.chart.ChartSelection',177,220,'net.sourceforge.ganttproject.chart.TestChart',2117,'net.sourceforge.ganttproject.chart.TestChart.paste(net.sourceforge.ganttproject.chart.ChartSelection)',0,'public void paste(ChartSelection selection) {\r\n    // TODO Auto-generated method stub\r\n}'),(1553,'ChartSelectionListener listener','net.sourceforge.ganttproject.chart.ChartSelectionListener',178,220,'net.sourceforge.ganttproject.chart.TestChart',2105,'net.sourceforge.ganttproject.chart.TestChart.addSelectionListener(net.sourceforge.ganttproject.chart.ChartSelectionListener)',0,'public void addSelectionListener(ChartSelectionListener listener) {\r\n    // TODO Auto-generated method stub\r\n}'),(1554,'ChartSelectionListener listener','net.sourceforge.ganttproject.chart.ChartSelectionListener',178,220,'net.sourceforge.ganttproject.chart.TestChart',2118,'net.sourceforge.ganttproject.chart.TestChart.removeSelectionListener(net.sourceforge.ganttproject.chart.ChartSelectionListener)',0,'public void removeSelectionListener(ChartSelectionListener listener) {\r\n    // TODO Auto-generated method stub\r\n}'),(1555,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,221,'net.sourceforge.ganttproject.chart.TimeUnitVisitor',2128,'net.sourceforge.ganttproject.chart.TimeUnitVisitor.startTimeFrame(net.sourceforge.ganttproject.time.TimeFrame)',0,'void startTimeFrame(TimeFrame timeFrame);'),(1556,'TimeFrame timeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,221,'net.sourceforge.ganttproject.chart.TimeUnitVisitor',2123,'net.sourceforge.ganttproject.chart.TimeUnitVisitor.endTimeFrame(net.sourceforge.ganttproject.time.TimeFrame)',0,'void endTimeFrame(TimeFrame timeFrame);'),(1557,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,221,'net.sourceforge.ganttproject.chart.TimeUnitVisitor',2129,'net.sourceforge.ganttproject.chart.TimeUnitVisitor.startUnitLine(net.sourceforge.ganttproject.time.TimeUnit)',0,'void startUnitLine(TimeUnit timeUnit);'),(1558,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,221,'net.sourceforge.ganttproject.chart.TimeUnitVisitor',2124,'net.sourceforge.ganttproject.chart.TimeUnitVisitor.endUnitLine(net.sourceforge.ganttproject.time.TimeUnit)',0,'void endUnitLine(TimeUnit timeUnit);'),(1559,'int unitIndex','int',0,221,'net.sourceforge.ganttproject.chart.TimeUnitVisitor',2126,'net.sourceforge.ganttproject.chart.TimeUnitVisitor.nextTimeUnit(int)',0,'void nextTimeUnit(int unitIndex);'),(1560,'boolean enabled','boolean',0,221,'net.sourceforge.ganttproject.chart.TimeUnitVisitor',2127,'net.sourceforge.ganttproject.chart.TimeUnitVisitor.setEnabled(boolean)',0,'void setEnabled(boolean enabled);'),(1561,'Chart chart','net.sourceforge.ganttproject.chart.Chart',159,222,'net.sourceforge.ganttproject.chart.ToggleChartAction',2130,'net.sourceforge.ganttproject.chart.ToggleChartAction.-init-(net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GPViewManager)',0,'public ToggleChartAction(Chart chart, GPViewManager viewManager) {\r\n    myChart = chart;\r\n    putValue(Action.NAME, getLocalizedName());\r\n    // putValue(Action.SMALL_ICON,chart.getIcon());\r\n    myView = viewManager.createView(chart, chart.getIcon());\r\n    myViewManager = viewManager;\r\n}'),(1562,'GPViewManager viewManager','net.sourceforge.ganttproject.GPViewManager',23,222,'net.sourceforge.ganttproject.chart.ToggleChartAction',2130,'net.sourceforge.ganttproject.chart.ToggleChartAction.-init-(net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GPViewManager)',0,'public ToggleChartAction(Chart chart, GPViewManager viewManager) {\r\n    myChart = chart;\r\n    putValue(Action.NAME, getLocalizedName());\r\n    // putValue(Action.SMALL_ICON,chart.getIcon());\r\n    myView = viewManager.createView(chart, chart.getIcon());\r\n    myViewManager = viewManager;\r\n}'),(1563,'ActionEvent e','java.awt.event.ActionEvent',0,222,'net.sourceforge.ganttproject.chart.ToggleChartAction',2131,'net.sourceforge.ganttproject.chart.ToggleChartAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    System.err.println((\"[ToggleChartAction] actionPerformed: toggling chart=\" + (myChart.getName())));\r\n    myView.setVisible((!(myView.isVisible())));\r\n}'),(1564,'/* <Task> */\r\nJTree jtree','javax.swing.JTree',0,223,'net.sourceforge.ganttproject.chart.VisibleNodesFilter',2135,'net.sourceforge.ganttproject.chart.VisibleNodesFilter.getVisibleNodes(javax.swing.JTree,int,int,int)',0,'public List getVisibleNodes(/* <Task> */\r\nJTree jtree, int minHeight, int maxHeight, int nodeHeight) {\r\n    List preorderedNodes = Collections.list(((DefaultMutableTreeNode) (jtree.getModel().getRoot())).preorderEnumeration());\r\n    List result = new ArrayList();\r\n    int currentHeight = 0;\r\n    for (int i = 1; i < (preorderedNodes.size()); i++) {\r\n        DefaultMutableTreeNode nextNode = ((DefaultMutableTreeNode) (preorderedNodes.get(i)));\r\n        if (false == ((nextNode.getUserObject()) instanceof Task)) {\r\n            continue;\r\n        }\r\n        if (((currentHeight + nodeHeight) > minHeight) && (jtree.isVisible(new TreePath(nextNode.getPath())))) {\r\n            result.add(nextNode.getUserObject());\r\n        }\r\n        if (jtree.isVisible(new TreePath(nextNode.getPath()))) {\r\n            currentHeight += nodeHeight;\r\n        }\r\n        if (currentHeight > (minHeight + maxHeight)) {\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(1565,'int minHeight','int',0,223,'net.sourceforge.ganttproject.chart.VisibleNodesFilter',2135,'net.sourceforge.ganttproject.chart.VisibleNodesFilter.getVisibleNodes(javax.swing.JTree,int,int,int)',0,'public List getVisibleNodes(/* <Task> */\r\nJTree jtree, int minHeight, int maxHeight, int nodeHeight) {\r\n    List preorderedNodes = Collections.list(((DefaultMutableTreeNode) (jtree.getModel().getRoot())).preorderEnumeration());\r\n    List result = new ArrayList();\r\n    int currentHeight = 0;\r\n    for (int i = 1; i < (preorderedNodes.size()); i++) {\r\n        DefaultMutableTreeNode nextNode = ((DefaultMutableTreeNode) (preorderedNodes.get(i)));\r\n        if (false == ((nextNode.getUserObject()) instanceof Task)) {\r\n            continue;\r\n        }\r\n        if (((currentHeight + nodeHeight) > minHeight) && (jtree.isVisible(new TreePath(nextNode.getPath())))) {\r\n            result.add(nextNode.getUserObject());\r\n        }\r\n        if (jtree.isVisible(new TreePath(nextNode.getPath()))) {\r\n            currentHeight += nodeHeight;\r\n        }\r\n        if (currentHeight > (minHeight + maxHeight)) {\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(1566,'int maxHeight','int',0,223,'net.sourceforge.ganttproject.chart.VisibleNodesFilter',2135,'net.sourceforge.ganttproject.chart.VisibleNodesFilter.getVisibleNodes(javax.swing.JTree,int,int,int)',0,'public List getVisibleNodes(/* <Task> */\r\nJTree jtree, int minHeight, int maxHeight, int nodeHeight) {\r\n    List preorderedNodes = Collections.list(((DefaultMutableTreeNode) (jtree.getModel().getRoot())).preorderEnumeration());\r\n    List result = new ArrayList();\r\n    int currentHeight = 0;\r\n    for (int i = 1; i < (preorderedNodes.size()); i++) {\r\n        DefaultMutableTreeNode nextNode = ((DefaultMutableTreeNode) (preorderedNodes.get(i)));\r\n        if (false == ((nextNode.getUserObject()) instanceof Task)) {\r\n            continue;\r\n        }\r\n        if (((currentHeight + nodeHeight) > minHeight) && (jtree.isVisible(new TreePath(nextNode.getPath())))) {\r\n            result.add(nextNode.getUserObject());\r\n        }\r\n        if (jtree.isVisible(new TreePath(nextNode.getPath()))) {\r\n            currentHeight += nodeHeight;\r\n        }\r\n        if (currentHeight > (minHeight + maxHeight)) {\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(1567,'int nodeHeight','int',0,223,'net.sourceforge.ganttproject.chart.VisibleNodesFilter',2135,'net.sourceforge.ganttproject.chart.VisibleNodesFilter.getVisibleNodes(javax.swing.JTree,int,int,int)',0,'public List getVisibleNodes(/* <Task> */\r\nJTree jtree, int minHeight, int maxHeight, int nodeHeight) {\r\n    List preorderedNodes = Collections.list(((DefaultMutableTreeNode) (jtree.getModel().getRoot())).preorderEnumeration());\r\n    List result = new ArrayList();\r\n    int currentHeight = 0;\r\n    for (int i = 1; i < (preorderedNodes.size()); i++) {\r\n        DefaultMutableTreeNode nextNode = ((DefaultMutableTreeNode) (preorderedNodes.get(i)));\r\n        if (false == ((nextNode.getUserObject()) instanceof Task)) {\r\n            continue;\r\n        }\r\n        if (((currentHeight + nodeHeight) > minHeight) && (jtree.isVisible(new TreePath(nextNode.getPath())))) {\r\n            result.add(nextNode.getUserObject());\r\n        }\r\n        if (jtree.isVisible(new TreePath(nextNode.getPath()))) {\r\n            currentHeight += nodeHeight;\r\n        }\r\n        if (currentHeight > (minHeight + maxHeight)) {\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(1568,'Task task','net.sourceforge.ganttproject.task.Task',548,224,'net.sourceforge.ganttproject.chart.item.ChartItem',2136,'net.sourceforge.ganttproject.chart.item.ChartItem.-init-(net.sourceforge.ganttproject.task.Task)',0,'protected ChartItem(Task task) {\r\n    myTask = task;\r\n}'),(1569,'Task task','net.sourceforge.ganttproject.task.Task',548,225,'net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem',2138,'net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem.-init-(net.sourceforge.ganttproject.task.Task,boolean)',0,'public TaskBoundaryChartItem(Task task, boolean isStart) {\r\n    super(task);\r\n    this.isStart = isStart;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1570,'boolean isStart','boolean',0,225,'net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem',2138,'net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem.-init-(net.sourceforge.ganttproject.task.Task,boolean)',0,'public TaskBoundaryChartItem(Task task, boolean isStart) {\r\n    super(task);\r\n    this.isStart = isStart;\r\n    // TODO Auto-generated constructor stub\r\n}'),(1571,'int posX','int',0,226,'net.sourceforge.ganttproject.chart.item.TaskProgressChartItem',2140,'net.sourceforge.ganttproject.chart.item.TaskProgressChartItem.-init-(int,int,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.task.Task)',0,'public TaskProgressChartItem(int posX, int unitWidth, TimeUnit bottomUnit, Task task) {\r\n    super(task);\r\n    myPosX = posX;\r\n    myUnitWidth = unitWidth;\r\n    myTimeUnit = bottomUnit;\r\n    myTaskLength = task.getDuration().getLength(bottomUnit);\r\n}'),(1572,'int unitWidth','int',0,226,'net.sourceforge.ganttproject.chart.item.TaskProgressChartItem',2140,'net.sourceforge.ganttproject.chart.item.TaskProgressChartItem.-init-(int,int,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.task.Task)',0,'public TaskProgressChartItem(int posX, int unitWidth, TimeUnit bottomUnit, Task task) {\r\n    super(task);\r\n    myPosX = posX;\r\n    myUnitWidth = unitWidth;\r\n    myTimeUnit = bottomUnit;\r\n    myTaskLength = task.getDuration().getLength(bottomUnit);\r\n}'),(1573,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,226,'net.sourceforge.ganttproject.chart.item.TaskProgressChartItem',2140,'net.sourceforge.ganttproject.chart.item.TaskProgressChartItem.-init-(int,int,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.task.Task)',0,'public TaskProgressChartItem(int posX, int unitWidth, TimeUnit bottomUnit, Task task) {\r\n    super(task);\r\n    myPosX = posX;\r\n    myUnitWidth = unitWidth;\r\n    myTimeUnit = bottomUnit;\r\n    myTaskLength = task.getDuration().getLength(bottomUnit);\r\n}'),(1574,'Task task','net.sourceforge.ganttproject.task.Task',548,226,'net.sourceforge.ganttproject.chart.item.TaskProgressChartItem',2140,'net.sourceforge.ganttproject.chart.item.TaskProgressChartItem.-init-(int,int,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.task.Task)',0,'public TaskProgressChartItem(int posX, int unitWidth, TimeUnit bottomUnit, Task task) {\r\n    super(task);\r\n    myPosX = posX;\r\n    myUnitWidth = unitWidth;\r\n    myTimeUnit = bottomUnit;\r\n    myTaskLength = task.getDuration().getLength(bottomUnit);\r\n}'),(1575,'int currentX','int',0,226,'net.sourceforge.ganttproject.chart.item.TaskProgressChartItem',2141,'net.sourceforge.ganttproject.chart.item.TaskProgressChartItem.getProgressDelta(int)',0,'public float getProgressDelta(int currentX) {\r\n    int deltaX = currentX - (myPosX);\r\n    float deltaUnits = ((float) (deltaX)) / ((float) (myUnitWidth));\r\n    return (100 * deltaUnits) / (myTaskLength);\r\n}'),(1576,'Task task','net.sourceforge.ganttproject.task.Task',548,227,'net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem',2142,'net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem.-init-(net.sourceforge.ganttproject.task.Task)',0,'public TaskRegularAreaChartItem(Task task) {\r\n    super(task);\r\n    // TODO Auto-generated constructor stub\r\n}'),(1577,'int type','int',0,228,'net.sourceforge.ganttproject.delay.Delay',2143,'net.sourceforge.ganttproject.delay.Delay.-init-(int)',0,'private Delay(int type) {\r\n    myType = type;\r\n}'),(1578,'int type','int',0,228,'net.sourceforge.ganttproject.delay.Delay',2146,'net.sourceforge.ganttproject.delay.Delay.setType(int)',0,'public void setType(int type) {\r\n    myType = type;\r\n}'),(1579,'int type','int',0,228,'net.sourceforge.ganttproject.delay.Delay',2144,'net.sourceforge.ganttproject.delay.Delay.getDelay(int)',0,'public static Delay getDelay(int type) {\r\n    return new Delay(type);\r\n}'),(1580,'net.sourceforge.ganttproject.delay.Delay','net.sourceforge.ganttproject.delay.Delay',228,228,'net.sourceforge.ganttproject.delay.Delay',2144,'net.sourceforge.ganttproject.delay.Delay.getDelay(int)',1,'public static Delay getDelay(int type) {\r\n    return new Delay(type);\r\n}'),(1581,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,229,'net.sourceforge.ganttproject.delay.DelayManager',2147,'net.sourceforge.ganttproject.delay.DelayManager.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.GanttTree2)',0,'public DelayManager(TaskManager taskManager, GanttTree2 tree) {\r\n    myObservers = new ArrayList();\r\n    myTaskManager = taskManager;\r\n    myRoot = ((TaskNode) (tree.getRoot()));\r\n    myTree = tree;\r\n    Mediator.getUndoManager().addUndoableEditListener(this);\r\n}'),(1582,'GanttTree2 tree','net.sourceforge.ganttproject.GanttTree2',73,229,'net.sourceforge.ganttproject.delay.DelayManager',2147,'net.sourceforge.ganttproject.delay.DelayManager.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.GanttTree2)',0,'public DelayManager(TaskManager taskManager, GanttTree2 tree) {\r\n    myObservers = new ArrayList();\r\n    myTaskManager = taskManager;\r\n    myRoot = ((TaskNode) (tree.getRoot()));\r\n    myTree = tree;\r\n    Mediator.getUndoManager().addUndoableEditListener(this);\r\n}'),(1583,'DelayObserver observer','net.sourceforge.ganttproject.delay.DelayObserver',230,229,'net.sourceforge.ganttproject.delay.DelayManager',2148,'net.sourceforge.ganttproject.delay.DelayManager.addObserver(net.sourceforge.ganttproject.delay.DelayObserver)',0,'public void addObserver(DelayObserver observer) {\r\n    myObservers.add(observer);\r\n}'),(1584,'DelayObserver observer','net.sourceforge.ganttproject.delay.DelayObserver',230,229,'net.sourceforge.ganttproject.delay.DelayManager',2153,'net.sourceforge.ganttproject.delay.DelayManager.removeObserver(net.sourceforge.ganttproject.delay.DelayObserver)',0,'public void removeObserver(DelayObserver observer) {\r\n    myObservers.remove(observer);\r\n}'),(1585,'Task t','net.sourceforge.ganttproject.task.Task',548,229,'net.sourceforge.ganttproject.delay.DelayManager',2149,'net.sourceforge.ganttproject.delay.DelayManager.calculateDelay(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * The delay is calculated as follow : The reference date is today. The\r\n * check is performed on the end date of the task. There could be a delay\r\n * only if percentage completion is not equal to 100%. If task end date <\r\n * today && completion < 100 there is a delay. The delay is critical is the\r\n * task is critical.\r\n *\r\n * @param t\r\n * 		The task.\r\n * @return The calculated delay\r\n */\r\nprivate Delay calculateDelay(Task t) {\r\n    Delay res = Delay.getDelay(Delay.NONE);\r\n    int completionPercentage = t.getCompletionPercentage();\r\n    if ((t.isMilestone()) || (completionPercentage == 100))\r\n        return res;\r\n\r\n    Date endDate = t.getEnd().getTime();\r\n    if (endDate.before(myToday))\r\n        if (t.isCritical())\r\n            res.setType(Delay.CRITICAL);\r\n        else\r\n            res.setType(Delay.NORMAL);\r\n\r\n\r\n    return res;\r\n}'),(1586,'net.sourceforge.ganttproject.delay.Delay','net.sourceforge.ganttproject.delay.Delay',228,229,'net.sourceforge.ganttproject.delay.DelayManager',2149,'net.sourceforge.ganttproject.delay.DelayManager.calculateDelay(net.sourceforge.ganttproject.task.Task)',1,'/**\r\n * The delay is calculated as follow : The reference date is today. The\r\n * check is performed on the end date of the task. There could be a delay\r\n * only if percentage completion is not equal to 100%. If task end date <\r\n * today && completion < 100 there is a delay. The delay is critical is the\r\n * task is critical.\r\n *\r\n * @param t\r\n * 		The task.\r\n * @return The calculated delay\r\n */\r\nprivate Delay calculateDelay(Task t) {\r\n    Delay res = Delay.getDelay(Delay.NONE);\r\n    int completionPercentage = t.getCompletionPercentage();\r\n    if ((t.isMilestone()) || (completionPercentage == 100))\r\n        return res;\r\n\r\n    Date endDate = t.getEnd().getTime();\r\n    if (endDate.before(myToday))\r\n        if (t.isCritical())\r\n            res.setType(Delay.CRITICAL);\r\n        else\r\n            res.setType(Delay.NORMAL);\r\n\r\n\r\n    return res;\r\n}'),(1587,'TaskScheduleEvent e','net.sourceforge.ganttproject.task.event.TaskScheduleEvent',624,229,'net.sourceforge.ganttproject.delay.DelayManager',2159,'net.sourceforge.ganttproject.delay.DelayManager.taskScheduleChanged(net.sourceforge.ganttproject.task.event.TaskScheduleEvent)',0,'public void taskScheduleChanged(TaskScheduleEvent e) {\r\n    if (!(e.getNewFinishDate().equals(e.getOldFinishDate()))) {\r\n        // ourCriticProcess = false;\r\n        fireDelayObservation();\r\n    }\r\n}'),(1588,'TaskDependencyEvent e','net.sourceforge.ganttproject.task.event.TaskDependencyEvent',619,229,'net.sourceforge.ganttproject.delay.DelayManager',2150,'net.sourceforge.ganttproject.delay.DelayManager.dependencyAdded(net.sourceforge.ganttproject.task.event.TaskDependencyEvent)',0,'public void dependencyAdded(TaskDependencyEvent e) {\r\n    // ourCriticProcess = true;\r\n    fireDelayObservation();\r\n}'),(1589,'TaskDependencyEvent e','net.sourceforge.ganttproject.task.event.TaskDependencyEvent',619,229,'net.sourceforge.ganttproject.delay.DelayManager',2151,'net.sourceforge.ganttproject.delay.DelayManager.dependencyRemoved(net.sourceforge.ganttproject.task.event.TaskDependencyEvent)',0,'public void dependencyRemoved(TaskDependencyEvent e) {\r\n    // ourCriticProcess = true;\r\n    fireDelayObservation();\r\n}'),(1590,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,229,'net.sourceforge.ganttproject.delay.DelayManager',2154,'net.sourceforge.ganttproject.delay.DelayManager.taskAdded(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'public void taskAdded(TaskHierarchyEvent e) {\r\n    // ourCriticProcess = true;\r\n    fireDelayObservation();\r\n}'),(1591,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,229,'net.sourceforge.ganttproject.delay.DelayManager',2158,'net.sourceforge.ganttproject.delay.DelayManager.taskRemoved(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'public void taskRemoved(TaskHierarchyEvent e) {\r\n    // ourCriticProcess = true;\r\n    fireDelayObservation();\r\n}'),(1592,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,229,'net.sourceforge.ganttproject.delay.DelayManager',2155,'net.sourceforge.ganttproject.delay.DelayManager.taskMoved(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'public void taskMoved(TaskHierarchyEvent e) {\r\n}'),(1593,'TaskPropertyEvent e','net.sourceforge.ganttproject.task.event.TaskPropertyEvent',623,229,'net.sourceforge.ganttproject.delay.DelayManager',2157,'net.sourceforge.ganttproject.delay.DelayManager.taskPropertiesChanged(net.sourceforge.ganttproject.task.event.TaskPropertyEvent)',0,'public void taskPropertiesChanged(TaskPropertyEvent e) {\r\n}'),(1594,'TaskPropertyEvent e','net.sourceforge.ganttproject.task.event.TaskPropertyEvent',623,229,'net.sourceforge.ganttproject.delay.DelayManager',2156,'net.sourceforge.ganttproject.delay.DelayManager.taskProgressChanged(net.sourceforge.ganttproject.task.event.TaskPropertyEvent)',0,'public void taskProgressChanged(TaskPropertyEvent e) {\r\n    fireDelayObservation();\r\n}'),(1595,'UndoableEditEvent arg0','javax.swing.event.UndoableEditEvent',0,229,'net.sourceforge.ganttproject.delay.DelayManager',2161,'net.sourceforge.ganttproject.delay.DelayManager.undoableEditHappened(javax.swing.event.UndoableEditEvent)',0,'public void undoableEditHappened(UndoableEditEvent arg0) {\r\n    // TODO Auto-generated method stub\r\n}'),(1596,'Task task','net.sourceforge.ganttproject.task.Task',548,230,'net.sourceforge.ganttproject.delay.DelayObserver',2162,'net.sourceforge.ganttproject.delay.DelayObserver.setDelay(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.delay.Delay)',0,'public void setDelay(Task task, Delay delay);'),(1597,'Delay delay','net.sourceforge.ganttproject.delay.Delay',228,230,'net.sourceforge.ganttproject.delay.DelayObserver',2162,'net.sourceforge.ganttproject.delay.DelayObserver.setDelay(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.delay.Delay)',0,'public void setDelay(Task task, Delay delay);'),(1598,'Object o','java.lang.Object',0,231,'net.sourceforge.ganttproject.document.AbstractDocument',2165,'net.sourceforge.ganttproject.document.AbstractDocument.equals(java.lang.Object)',0,'public boolean equals(Object o) {\r\n    if (o instanceof Document) {\r\n        return ((Document) (o)).getPath().equals(this.getPath());\r\n    }\r\n    return false;\r\n}'),(1599,'String user','java.lang.String',0,231,'net.sourceforge.ganttproject.document.AbstractDocument',2174,'net.sourceforge.ganttproject.document.AbstractDocument.setUserInfo(java.lang.String,java.lang.String)',0,'public void setUserInfo(String user, String pass) {\r\n}'),(1600,'String pass','java.lang.String',0,231,'net.sourceforge.ganttproject.document.AbstractDocument',2174,'net.sourceforge.ganttproject.document.AbstractDocument.setUserInfo(java.lang.String,java.lang.String)',0,'public void setUserInfo(String user, String pass) {\r\n}'),(1601,'String user','java.lang.String',0,233,'net.sourceforge.ganttproject.document.Document',2195,'net.sourceforge.ganttproject.document.Document.setUserInfo(java.lang.String,java.lang.String)',0,'/**\r\n * Sets the credentials used to authenticate to the storage container\r\n *\r\n * @param user\r\n * 		username\r\n * @param pass\r\n * 		password\r\n */\r\npublic void setUserInfo(String user, String pass);'),(1602,'String pass','java.lang.String',0,233,'net.sourceforge.ganttproject.document.Document',2195,'net.sourceforge.ganttproject.document.Document.setUserInfo(java.lang.String,java.lang.String)',0,'/**\r\n * Sets the credentials used to authenticate to the storage container\r\n *\r\n * @param user\r\n * 		username\r\n * @param pass\r\n * 		password\r\n */\r\npublic void setUserInfo(String user, String pass);'),(1603,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,235,'net.sourceforge.ganttproject.document.DocumentCreator',2197,'net.sourceforge.ganttproject.document.DocumentCreator.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.parser.ParserFactory)',0,'public DocumentCreator(IGanttProject project, UIFacade uiFacade, ParserFactory parserFactory) {\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    setParserFactory(parserFactory);\r\n}'),(1604,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,235,'net.sourceforge.ganttproject.document.DocumentCreator',2197,'net.sourceforge.ganttproject.document.DocumentCreator.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.parser.ParserFactory)',0,'public DocumentCreator(IGanttProject project, UIFacade uiFacade, ParserFactory parserFactory) {\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    setParserFactory(parserFactory);\r\n}'),(1605,'ParserFactory parserFactory','net.sourceforge.ganttproject.parser.ParserFactory',475,235,'net.sourceforge.ganttproject.document.DocumentCreator',2197,'net.sourceforge.ganttproject.document.DocumentCreator.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.parser.ParserFactory)',0,'public DocumentCreator(IGanttProject project, UIFacade uiFacade, ParserFactory parserFactory) {\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    setParserFactory(parserFactory);\r\n}'),(1606,'String optionName','java.lang.String',0,234,'net.sourceforge.ganttproject.document.DocumentCreator$StringOptionImpl',2216,'net.sourceforge.ganttproject.document.DocumentCreator$StringOptionImpl.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'private StringOptionImpl(String optionName, String legacyTagName, String legacyAttrName) {\r\n    super(optionName);\r\n    myLegacyTagName = legacyTagName;\r\n    myLegacyAttrName = legacyAttrName;\r\n}'),(1607,'String legacyTagName','java.lang.String',0,234,'net.sourceforge.ganttproject.document.DocumentCreator$StringOptionImpl',2216,'net.sourceforge.ganttproject.document.DocumentCreator$StringOptionImpl.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'private StringOptionImpl(String optionName, String legacyTagName, String legacyAttrName) {\r\n    super(optionName);\r\n    myLegacyTagName = legacyTagName;\r\n    myLegacyAttrName = legacyAttrName;\r\n}'),(1608,'String legacyAttrName','java.lang.String',0,234,'net.sourceforge.ganttproject.document.DocumentCreator$StringOptionImpl',2216,'net.sourceforge.ganttproject.document.DocumentCreator$StringOptionImpl.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'private StringOptionImpl(String optionName, String legacyTagName, String legacyAttrName) {\r\n    super(optionName);\r\n    myLegacyTagName = legacyTagName;\r\n    myLegacyAttrName = legacyAttrName;\r\n}'),(1609,'String path','java.lang.String',0,235,'net.sourceforge.ganttproject.document.DocumentCreator',2202,'net.sourceforge.ganttproject.document.DocumentCreator.createDocument(java.lang.String)',0,'/**\r\n * Creates an HttpDocument if path starts with \"http://\" or \"https://\";\r\n * creates a FileDocument otherwise.\r\n *\r\n * @param path\r\n * 		path to the document\r\n * @return an implementation of the interface Document\r\n */\r\nprivate Document createDocument(String path) {\r\n    return createDocument(path, null, null);\r\n}'),(1610,'net.sourceforge.ganttproject.document.Document','net.sourceforge.ganttproject.document.Document',233,235,'net.sourceforge.ganttproject.document.DocumentCreator',2202,'net.sourceforge.ganttproject.document.DocumentCreator.createDocument(java.lang.String)',1,'/**\r\n * Creates an HttpDocument if path starts with \"http://\" or \"https://\";\r\n * creates a FileDocument otherwise.\r\n *\r\n * @param path\r\n * 		path to the document\r\n * @return an implementation of the interface Document\r\n */\r\nprivate Document createDocument(String path) {\r\n    return createDocument(path, null, null);\r\n}'),(1611,'String path','java.lang.String',0,235,'net.sourceforge.ganttproject.document.DocumentCreator',2203,'net.sourceforge.ganttproject.document.DocumentCreator.createDocument(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Creates an HttpDocument if path starts with \"http://\" or \"https://\";\r\n * creates a FileDocument otherwise.\r\n *\r\n * @param path\r\n * 		path to the document\r\n * @param user\r\n * 		username\r\n * @param pass\r\n * 		password\r\n * @return an implementation of the interface Document\r\n */\r\nprivate Document createDocument(String path, String user, String pass) {\r\n    assert path != null;\r\n    path = path.trim();\r\n    if ((path.toLowerCase().startsWith(\"http://\")) || (path.toLowerCase().startsWith(\"https://\"))) {\r\n        return new HttpDocument(path, user, pass);\r\n    } else\r\n        if (path.toLowerCase().startsWith(\"ftp:\")) {\r\n            return new FtpDocument(path, myFtpUserOption, myFtpPasswordOption);\r\n        } else {\r\n            return new FileDocument(new File(path));\r\n        }\r\n\r\n}'),(1612,'net.sourceforge.ganttproject.document.Document','net.sourceforge.ganttproject.document.Document',233,235,'net.sourceforge.ganttproject.document.DocumentCreator',2203,'net.sourceforge.ganttproject.document.DocumentCreator.createDocument(java.lang.String,java.lang.String,java.lang.String)',1,'/**\r\n * Creates an HttpDocument if path starts with \"http://\" or \"https://\";\r\n * creates a FileDocument otherwise.\r\n *\r\n * @param path\r\n * 		path to the document\r\n * @param user\r\n * 		username\r\n * @param pass\r\n * 		password\r\n * @return an implementation of the interface Document\r\n */\r\nprivate Document createDocument(String path, String user, String pass) {\r\n    assert path != null;\r\n    path = path.trim();\r\n    if ((path.toLowerCase().startsWith(\"http://\")) || (path.toLowerCase().startsWith(\"https://\"))) {\r\n        return new HttpDocument(path, user, pass);\r\n    } else\r\n        if (path.toLowerCase().startsWith(\"ftp:\")) {\r\n            return new FtpDocument(path, myFtpUserOption, myFtpPasswordOption);\r\n        } else {\r\n            return new FileDocument(new File(path));\r\n        }\r\n\r\n}'),(1613,'String user','java.lang.String',0,235,'net.sourceforge.ganttproject.document.DocumentCreator',2203,'net.sourceforge.ganttproject.document.DocumentCreator.createDocument(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Creates an HttpDocument if path starts with \"http://\" or \"https://\";\r\n * creates a FileDocument otherwise.\r\n *\r\n * @param path\r\n * 		path to the document\r\n * @param user\r\n * 		username\r\n * @param pass\r\n * 		password\r\n * @return an implementation of the interface Document\r\n */\r\nprivate Document createDocument(String path, String user, String pass) {\r\n    assert path != null;\r\n    path = path.trim();\r\n    if ((path.toLowerCase().startsWith(\"http://\")) || (path.toLowerCase().startsWith(\"https://\"))) {\r\n        return new HttpDocument(path, user, pass);\r\n    } else\r\n        if (path.toLowerCase().startsWith(\"ftp:\")) {\r\n            return new FtpDocument(path, myFtpUserOption, myFtpPasswordOption);\r\n        } else {\r\n            return new FileDocument(new File(path));\r\n        }\r\n\r\n}'),(1614,'String pass','java.lang.String',0,235,'net.sourceforge.ganttproject.document.DocumentCreator',2203,'net.sourceforge.ganttproject.document.DocumentCreator.createDocument(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Creates an HttpDocument if path starts with \"http://\" or \"https://\";\r\n * creates a FileDocument otherwise.\r\n *\r\n * @param path\r\n * 		path to the document\r\n * @param user\r\n * 		username\r\n * @param pass\r\n * 		password\r\n * @return an implementation of the interface Document\r\n */\r\nprivate Document createDocument(String path, String user, String pass) {\r\n    assert path != null;\r\n    path = path.trim();\r\n    if ((path.toLowerCase().startsWith(\"http://\")) || (path.toLowerCase().startsWith(\"https://\"))) {\r\n        return new HttpDocument(path, user, pass);\r\n    } else\r\n        if (path.toLowerCase().startsWith(\"ftp:\")) {\r\n            return new FtpDocument(path, myFtpUserOption, myFtpPasswordOption);\r\n        } else {\r\n            return new FileDocument(new File(path));\r\n        }\r\n\r\n}'),(1615,'String path','java.lang.String',0,235,'net.sourceforge.ganttproject.document.DocumentCreator',2205,'net.sourceforge.ganttproject.document.DocumentCreator.getDocument(java.lang.String)',0,'public Document getDocument(String path) {\r\n    Document physicalDocument = createDocument(path);\r\n    Document proxyDocument = new ProxyDocument(this, physicalDocument, myProject, myUIFacade, getVisibleFields(), getParserFactory());\r\n    return proxyDocument;\r\n}'),(1616,'net.sourceforge.ganttproject.document.Document','net.sourceforge.ganttproject.document.Document',233,235,'net.sourceforge.ganttproject.document.DocumentCreator',2205,'net.sourceforge.ganttproject.document.DocumentCreator.getDocument(java.lang.String)',1,'public Document getDocument(String path) {\r\n    Document physicalDocument = createDocument(path);\r\n    Document proxyDocument = new ProxyDocument(this, physicalDocument, myProject, myUIFacade, getVisibleFields(), getParserFactory());\r\n    return proxyDocument;\r\n}'),(1617,'String path','java.lang.String',0,235,'net.sourceforge.ganttproject.document.DocumentCreator',2206,'net.sourceforge.ganttproject.document.DocumentCreator.getDocument(java.lang.String,java.lang.String,java.lang.String)',0,'public Document getDocument(String path, String userName, String password) {\r\n    Document physicalDocument = createDocument(path, userName, password);\r\n    Document proxyDocument = new ProxyDocument(this, physicalDocument, myProject, myUIFacade, getVisibleFields(), getParserFactory());\r\n    return proxyDocument;\r\n}'),(1618,'net.sourceforge.ganttproject.document.Document','net.sourceforge.ganttproject.document.Document',233,235,'net.sourceforge.ganttproject.document.DocumentCreator',2206,'net.sourceforge.ganttproject.document.DocumentCreator.getDocument(java.lang.String,java.lang.String,java.lang.String)',1,'public Document getDocument(String path, String userName, String password) {\r\n    Document physicalDocument = createDocument(path, userName, password);\r\n    Document proxyDocument = new ProxyDocument(this, physicalDocument, myProject, myUIFacade, getVisibleFields(), getParserFactory());\r\n    return proxyDocument;\r\n}'),(1619,'String userName','java.lang.String',0,235,'net.sourceforge.ganttproject.document.DocumentCreator',2206,'net.sourceforge.ganttproject.document.DocumentCreator.getDocument(java.lang.String,java.lang.String,java.lang.String)',0,'public Document getDocument(String path, String userName, String password) {\r\n    Document physicalDocument = createDocument(path, userName, password);\r\n    Document proxyDocument = new ProxyDocument(this, physicalDocument, myProject, myUIFacade, getVisibleFields(), getParserFactory());\r\n    return proxyDocument;\r\n}'),(1620,'String password','java.lang.String',0,235,'net.sourceforge.ganttproject.document.DocumentCreator',2206,'net.sourceforge.ganttproject.document.DocumentCreator.getDocument(java.lang.String,java.lang.String,java.lang.String)',0,'public Document getDocument(String path, String userName, String password) {\r\n    Document physicalDocument = createDocument(path, userName, password);\r\n    Document proxyDocument = new ProxyDocument(this, physicalDocument, myProject, myUIFacade, getVisibleFields(), getParserFactory());\r\n    return proxyDocument;\r\n}'),(1621,'Document document','net.sourceforge.ganttproject.document.Document',233,235,'net.sourceforge.ganttproject.document.DocumentCreator',2200,'net.sourceforge.ganttproject.document.DocumentCreator.addToRecentDocuments(net.sourceforge.ganttproject.document.Document)',0,'public void addToRecentDocuments(Document document) {\r\n    // TODO Auto-generated method stub\r\n}'),(1622,'ParserFactory myParserFactory','net.sourceforge.ganttproject.parser.ParserFactory',475,235,'net.sourceforge.ganttproject.document.DocumentCreator',2215,'net.sourceforge.ganttproject.document.DocumentCreator.setParserFactory(net.sourceforge.ganttproject.parser.ParserFactory)',0,'protected void setParserFactory(ParserFactory myParserFactory) {\r\n    this.myParserFactory = myParserFactory;\r\n}'),(1623,'File directory','java.io.File',0,235,'net.sourceforge.ganttproject.document.DocumentCreator',2201,'net.sourceforge.ganttproject.document.DocumentCreator.changeWorkingDirectory(java.io.File)',0,'public void changeWorkingDirectory(File directory) {\r\n    assert directory.isDirectory();\r\n    myWorkingDirectory.lock();\r\n    myWorkingDirectory.setValue(directory.getAbsolutePath());\r\n    myWorkingDirectory.commit();\r\n}'),(1624,'String legacyValue','java.lang.String',0,234,'net.sourceforge.ganttproject.document.DocumentCreator$StringOptionImpl',2219,'net.sourceforge.ganttproject.document.DocumentCreator$StringOptionImpl.loadValue(java.lang.String)',0,'public void loadValue(String legacyValue) {\r\n    lock();\r\n    loadPersistentValue(legacyValue);\r\n    commit();\r\n}'),(1625,'String id','java.lang.String',0,236,'net.sourceforge.ganttproject.document.DocumentManager$FTPOptions',2230,'net.sourceforge.ganttproject.document.DocumentManager$FTPOptions.-init-(java.lang.String,net.sourceforge.ganttproject.gui.options.model.GPOption[])',0,'public FTPOptions(String id, GPOption[] options) {\r\n    super(id, options);\r\n}'),(1626,'GPOption[] options','net.sourceforge.ganttproject.gui.options.model.GPOption[]',0,236,'net.sourceforge.ganttproject.document.DocumentManager$FTPOptions',2230,'net.sourceforge.ganttproject.document.DocumentManager$FTPOptions.-init-(java.lang.String,net.sourceforge.ganttproject.gui.options.model.GPOption[])',0,'public FTPOptions(String id, GPOption[] options) {\r\n    super(id, options);\r\n}'),(1627,'String path','java.lang.String',0,237,'net.sourceforge.ganttproject.document.DocumentManager',2223,'net.sourceforge.ganttproject.document.DocumentManager.getDocument(java.lang.String)',0,'Document getDocument(String path);'),(1628,'net.sourceforge.ganttproject.document.Document','net.sourceforge.ganttproject.document.Document',233,237,'net.sourceforge.ganttproject.document.DocumentManager',2223,'net.sourceforge.ganttproject.document.DocumentManager.getDocument(java.lang.String)',1,'Document getDocument(String path);'),(1629,'Document document','net.sourceforge.ganttproject.document.Document',233,237,'net.sourceforge.ganttproject.document.DocumentManager',2221,'net.sourceforge.ganttproject.document.DocumentManager.addToRecentDocuments(net.sourceforge.ganttproject.document.Document)',0,'void addToRecentDocuments(Document document);'),(1630,'String path','java.lang.String',0,237,'net.sourceforge.ganttproject.document.DocumentManager',2224,'net.sourceforge.ganttproject.document.DocumentManager.getDocument(java.lang.String,java.lang.String,java.lang.String)',0,'Document getDocument(String path, String userName, String password);'),(1631,'net.sourceforge.ganttproject.document.Document','net.sourceforge.ganttproject.document.Document',233,237,'net.sourceforge.ganttproject.document.DocumentManager',2224,'net.sourceforge.ganttproject.document.DocumentManager.getDocument(java.lang.String,java.lang.String,java.lang.String)',1,'Document getDocument(String path, String userName, String password);'),(1632,'String userName','java.lang.String',0,237,'net.sourceforge.ganttproject.document.DocumentManager',2224,'net.sourceforge.ganttproject.document.DocumentManager.getDocument(java.lang.String,java.lang.String,java.lang.String)',0,'Document getDocument(String path, String userName, String password);'),(1633,'String password','java.lang.String',0,237,'net.sourceforge.ganttproject.document.DocumentManager',2224,'net.sourceforge.ganttproject.document.DocumentManager.getDocument(java.lang.String,java.lang.String,java.lang.String)',0,'Document getDocument(String path, String userName, String password);'),(1634,'File parentFile','java.io.File',0,237,'net.sourceforge.ganttproject.document.DocumentManager',2222,'net.sourceforge.ganttproject.document.DocumentManager.changeWorkingDirectory(java.io.File)',0,'void changeWorkingDirectory(File parentFile);'),(1635,'int maxSize','int',0,238,'net.sourceforge.ganttproject.document.DocumentsMRU',2235,'net.sourceforge.ganttproject.document.DocumentsMRU.-init-(int)',0,'public DocumentsMRU(int maxSize) {\r\n    if (maxSize <= 0)\r\n        throw new IllegalArgumentException(((\"maxSize must be larger than zero (\" + maxSize) + \")\"));\r\n\r\n    this.maxSize = maxSize;\r\n    documents = new ArrayList(maxSize);\r\n}'),(1636,'Document document','net.sourceforge.ganttproject.document.Document',233,238,'net.sourceforge.ganttproject.document.DocumentsMRU',2236,'net.sourceforge.ganttproject.document.DocumentsMRU.add(net.sourceforge.ganttproject.document.Document)',0,'/**\r\n * Adds a Document at the top of the list of Documents MRU. If the list is\r\n * already full, an old entry is removed, to make place for this new\r\n * document.\r\n *\r\n * @param document\r\n * 		the Document that should be added\r\n * @return wether the list has changed through the addition\r\n */\r\npublic boolean add(Document document) {\r\n    // if the document is invalid, we dont add it\r\n    if (!(document.isValidForMRU()))\r\n        return false;\r\n\r\n    int i = documents.indexOf(document);\r\n    // if the document is already on the top,\r\n    // nothing needs to change.\r\n    if (0 == i)\r\n        return false;\r\n\r\n    if (0 < i) {\r\n        documents.remove(i);\r\n    } else {\r\n        while ((documents.size()) >= (maxSize))\r\n            documents.remove(((maxSize) - 1));\r\n\r\n    }\r\n    documents.add(0, document);\r\n    return true;\r\n}'),(1637,'Document document','net.sourceforge.ganttproject.document.Document',233,238,'net.sourceforge.ganttproject.document.DocumentsMRU',2237,'net.sourceforge.ganttproject.document.DocumentsMRU.append(net.sourceforge.ganttproject.document.Document)',0,'/**\r\n * Appends a Document to the list of Documents MRU. If the list is already\r\n * full, the document will <b>not</b> be appended.\r\n *\r\n * @param document\r\n * 		the Document that should be added\r\n * @return wether the list has changed through the addition\r\n */\r\npublic boolean append(Document document) {\r\n    // if the document is invalid, we dont add it\r\n    if (!(document.isValidForMRU()))\r\n        return false;\r\n\r\n    int i = documents.indexOf(document);\r\n    // if the document is already at the bottom,\r\n    // nothing needs to change.\r\n    if (i == ((maxSize) - 1))\r\n        return false;\r\n\r\n    if (i != (-1)) {\r\n        documents.remove(i);\r\n    }\r\n    if ((documents.size()) < (maxSize)) {\r\n        documents.add(document);\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}'),(1638,'File file','java.io.File',0,239,'net.sourceforge.ganttproject.document.FileDocument',2240,'net.sourceforge.ganttproject.document.FileDocument.-init-(java.io.File)',0,'public FileDocument(File file) {\r\n    this.file = file;\r\n}'),(1639,'String urlAsString','java.lang.String',0,240,'net.sourceforge.ganttproject.document.FtpDocument',2253,'net.sourceforge.ganttproject.document.FtpDocument.-init-(java.lang.String,net.sourceforge.ganttproject.gui.options.model.StringOption,net.sourceforge.ganttproject.gui.options.model.StringOption)',0,'FtpDocument(String urlAsString, StringOption ftpUser, StringOption ftpPassword) {\r\n    assert urlAsString != null;\r\n    try {\r\n        URI url = new URI(urlAsString);\r\n        String userInfo = url.getUserInfo();\r\n        if ((userInfo == null) || (FtpDocument.EMPTY_STRING.equals(userInfo))) {\r\n            StringBuffer buf = new StringBuffer();\r\n            if ((ftpUser.getValue()) != null) {\r\n                buf.append(ftpUser.getValue());\r\n            }\r\n            if ((ftpPassword.getValue()) != null) {\r\n                buf.append(:).append(ftpPassword.getValue());\r\n            }\r\n            myURI = new URI(\"ftp\", buf.toString(), url.getHost(), url.getPort(), url.getPath(), url.getQuery(), url.getFragment());\r\n        } else {\r\n            myURI = url;\r\n        }\r\n        urlAsString = myURI.toString();\r\n        myURI.toURL().openConnection().connect();\r\n    } catch (URISyntaxException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n        throw new RuntimeException((\"Failed to create FTP document addressed by URL=\" + urlAsString), e);\r\n    } catch (MalformedURLException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace();\r\n        }\r\n        throw new RuntimeException((\"Failed to create FTP document addressed by URL=\" + urlAsString), e);\r\n    } catch (IOException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace();\r\n        }\r\n        throw new RuntimeException((\"Failed to create FTP document addressed by URL=\" + urlAsString), e);\r\n    }\r\n}'),(1640,'StringOption ftpUser','net.sourceforge.ganttproject.gui.options.model.StringOption',391,240,'net.sourceforge.ganttproject.document.FtpDocument',2253,'net.sourceforge.ganttproject.document.FtpDocument.-init-(java.lang.String,net.sourceforge.ganttproject.gui.options.model.StringOption,net.sourceforge.ganttproject.gui.options.model.StringOption)',0,'FtpDocument(String urlAsString, StringOption ftpUser, StringOption ftpPassword) {\r\n    assert urlAsString != null;\r\n    try {\r\n        URI url = new URI(urlAsString);\r\n        String userInfo = url.getUserInfo();\r\n        if ((userInfo == null) || (FtpDocument.EMPTY_STRING.equals(userInfo))) {\r\n            StringBuffer buf = new StringBuffer();\r\n            if ((ftpUser.getValue()) != null) {\r\n                buf.append(ftpUser.getValue());\r\n            }\r\n            if ((ftpPassword.getValue()) != null) {\r\n                buf.append(:).append(ftpPassword.getValue());\r\n            }\r\n            myURI = new URI(\"ftp\", buf.toString(), url.getHost(), url.getPort(), url.getPath(), url.getQuery(), url.getFragment());\r\n        } else {\r\n            myURI = url;\r\n        }\r\n        urlAsString = myURI.toString();\r\n        myURI.toURL().openConnection().connect();\r\n    } catch (URISyntaxException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n        throw new RuntimeException((\"Failed to create FTP document addressed by URL=\" + urlAsString), e);\r\n    } catch (MalformedURLException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace();\r\n        }\r\n        throw new RuntimeException((\"Failed to create FTP document addressed by URL=\" + urlAsString), e);\r\n    } catch (IOException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace();\r\n        }\r\n        throw new RuntimeException((\"Failed to create FTP document addressed by URL=\" + urlAsString), e);\r\n    }\r\n}'),(1641,'StringOption ftpPassword','net.sourceforge.ganttproject.gui.options.model.StringOption',391,240,'net.sourceforge.ganttproject.document.FtpDocument',2253,'net.sourceforge.ganttproject.document.FtpDocument.-init-(java.lang.String,net.sourceforge.ganttproject.gui.options.model.StringOption,net.sourceforge.ganttproject.gui.options.model.StringOption)',0,'FtpDocument(String urlAsString, StringOption ftpUser, StringOption ftpPassword) {\r\n    assert urlAsString != null;\r\n    try {\r\n        URI url = new URI(urlAsString);\r\n        String userInfo = url.getUserInfo();\r\n        if ((userInfo == null) || (FtpDocument.EMPTY_STRING.equals(userInfo))) {\r\n            StringBuffer buf = new StringBuffer();\r\n            if ((ftpUser.getValue()) != null) {\r\n                buf.append(ftpUser.getValue());\r\n            }\r\n            if ((ftpPassword.getValue()) != null) {\r\n                buf.append(:).append(ftpPassword.getValue());\r\n            }\r\n            myURI = new URI(\"ftp\", buf.toString(), url.getHost(), url.getPort(), url.getPath(), url.getQuery(), url.getFragment());\r\n        } else {\r\n            myURI = url;\r\n        }\r\n        urlAsString = myURI.toString();\r\n        myURI.toURL().openConnection().connect();\r\n    } catch (URISyntaxException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n        throw new RuntimeException((\"Failed to create FTP document addressed by URL=\" + urlAsString), e);\r\n    } catch (MalformedURLException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace();\r\n        }\r\n        throw new RuntimeException((\"Failed to create FTP document addressed by URL=\" + urlAsString), e);\r\n    } catch (IOException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace();\r\n        }\r\n        throw new RuntimeException((\"Failed to create FTP document addressed by URL=\" + urlAsString), e);\r\n    }\r\n}'),(1642,'String url','java.lang.String',0,241,'net.sourceforge.ganttproject.document.HttpDocument',2264,'net.sourceforge.ganttproject.document.HttpDocument.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'public HttpDocument(String url, String user, String pass) {\r\n    this.url = url;\r\n    try {\r\n        httpURL = new HttpURL(url);\r\n        if ((user == null) || ((user.length()) == 0))\r\n            user = httpURL.getUser();\r\n\r\n        if ((pass == null) || ((pass.length()) == 0))\r\n            pass = httpURL.getPassword();\r\n\r\n        if (user != null)\r\n            httpURL.setUserinfo(user, pass);\r\n\r\n    } catch (URIException e) {\r\n        lastError = e.getMessage();\r\n        malformedURL = true;\r\n    }\r\n}'),(1643,'String user','java.lang.String',0,241,'net.sourceforge.ganttproject.document.HttpDocument',2264,'net.sourceforge.ganttproject.document.HttpDocument.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'public HttpDocument(String url, String user, String pass) {\r\n    this.url = url;\r\n    try {\r\n        httpURL = new HttpURL(url);\r\n        if ((user == null) || ((user.length()) == 0))\r\n            user = httpURL.getUser();\r\n\r\n        if ((pass == null) || ((pass.length()) == 0))\r\n            pass = httpURL.getPassword();\r\n\r\n        if (user != null)\r\n            httpURL.setUserinfo(user, pass);\r\n\r\n    } catch (URIException e) {\r\n        lastError = e.getMessage();\r\n        malformedURL = true;\r\n    }\r\n}'),(1644,'String pass','java.lang.String',0,241,'net.sourceforge.ganttproject.document.HttpDocument',2264,'net.sourceforge.ganttproject.document.HttpDocument.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'public HttpDocument(String url, String user, String pass) {\r\n    this.url = url;\r\n    try {\r\n        httpURL = new HttpURL(url);\r\n        if ((user == null) || ((user.length()) == 0))\r\n            user = httpURL.getUser();\r\n\r\n        if ((pass == null) || ((pass.length()) == 0))\r\n            pass = httpURL.getPassword();\r\n\r\n        if (user != null)\r\n            httpURL.setUserinfo(user, pass);\r\n\r\n    } catch (URIException e) {\r\n        lastError = e.getMessage();\r\n        malformedURL = true;\r\n    }\r\n}'),(1645,'String user','java.lang.String',0,241,'net.sourceforge.ganttproject.document.HttpDocument',2282,'net.sourceforge.ganttproject.document.HttpDocument.setUserInfo(java.lang.String,java.lang.String)',0,'public void setUserInfo(String user, String pass) {\r\n    try {\r\n        httpURL.setUserinfo(user, pass);\r\n        webdavResource = null;\r\n    } catch (URIException e) {\r\n        lastError = e.getMessage();\r\n        malformedURL = true;\r\n    }\r\n}'),(1646,'String pass','java.lang.String',0,241,'net.sourceforge.ganttproject.document.HttpDocument',2282,'net.sourceforge.ganttproject.document.HttpDocument.setUserInfo(java.lang.String,java.lang.String)',0,'public void setUserInfo(String user, String pass) {\r\n    try {\r\n        httpURL.setUserinfo(user, pass);\r\n        webdavResource = null;\r\n    } catch (URIException e) {\r\n        lastError = e.getMessage();\r\n        malformedURL = true;\r\n    }\r\n}'),(1647,'int i','int',0,241,'net.sourceforge.ganttproject.document.HttpDocument',2281,'net.sourceforge.ganttproject.document.HttpDocument.setLockDAVMinutes(int)',0,'public static void setLockDAVMinutes(int i) {\r\n    HttpDocument.lockDAVMinutes = i;\r\n}'),(1648,'WebdavResource webdavResource','org.apache.webdav.lib.WebdavResource',0,242,'net.sourceforge.ganttproject.document.HttpDocumentOutputStream',2284,'net.sourceforge.ganttproject.document.HttpDocumentOutputStream.-init-(org.apache.webdav.lib.WebdavResource)',0,'public HttpDocumentOutputStream(WebdavResource webdavResource) {\r\n    super();\r\n    this.webdavResource = webdavResource;\r\n}'),(1649,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,243,'net.sourceforge.ganttproject.document.NetworkOptionPageProvider',2289,'net.sourceforge.ganttproject.document.NetworkOptionPageProvider.getOptionGroups(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GPOptionGroup[] getOptionGroups(IGanttProject project, UIFacade uiFacade) {\r\n    return project.getDocumentManager().getNetworkOptionGroups();\r\n}'),(1650,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,243,'net.sourceforge.ganttproject.document.NetworkOptionPageProvider',2289,'net.sourceforge.ganttproject.document.NetworkOptionPageProvider.getOptionGroups(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GPOptionGroup[] getOptionGroups(IGanttProject project, UIFacade uiFacade) {\r\n    return project.getDocumentManager().getNetworkOptionGroups();\r\n}'),(1651,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,243,'net.sourceforge.ganttproject.document.NetworkOptionPageProvider',2287,'net.sourceforge.ganttproject.document.NetworkOptionPageProvider.buildPageComponent(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public Component buildPageComponent(IGanttProject project, final UIFacade uiFacade) {\r\n    OptionsPageBuilder builder = new OptionsPageBuilder();\r\n    builder.setI18N(new OptionsPageBuilder.I18N() {\r\n        public String getPageTitle(String pageID) {\r\n            return getValue(\"ftpexport\");\r\n        }\r\n\r\n        public String getPageDescription(String pageID) {\r\n            return getValue(\"settingsFTPExport\");\r\n        }\r\n\r\n        public String getOptionGroupLabel(GPOptionGroup group) {\r\n            return getValue(\"ftpexport\");\r\n        }\r\n\r\n        public String getOptionLabel(GPOption option) {\r\n            final String id = option.getID();\r\n            if (DocumentCreator.DIRECTORYNAME_OPTION_ID.equals(id)) {\r\n                return getValue(\"ftpdirectory\");\r\n            }\r\n            if (DocumentCreator.PASSWORD_OPTION_ID.equals(id)) {\r\n                return getValue(\"ftppwd\");\r\n            }\r\n            if (DocumentCreator.SERVERNAME_OPTION_ID.equals(id)) {\r\n                return getValue(\"ftpserver\");\r\n            }\r\n            if (DocumentCreator.USERNAME_OPTION_ID.equals(id)) {\r\n                return getValue(\"ftpuser\");\r\n            }\r\n            return super.getOptionLabel(option);\r\n        }\r\n    });\r\n    final GPOptionGroup ftpGroup = project.getDocumentManager().getNetworkOptionGroups()[0];\r\n    final DefaultStringOption usernameOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.USERNAME_OPTION_ID)));\r\n    final DefaultStringOption servernameOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.SERVERNAME_OPTION_ID)));\r\n    final DefaultStringOption dirnameOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.DIRECTORYNAME_OPTION_ID)));\r\n    final DefaultStringOption passwordOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.PASSWORD_OPTION_ID)));\r\n    final JComponent optionsPane = builder.buildPage(project.getDocumentManager().getNetworkOptionGroups(), getPageID());\r\n    final Action testConnectionAction = new AbstractAction() {\r\n        {\r\n            putValue(Action.NAME, GanttLanguage.getInstance().getText(\"testFTPConnection\"));\r\n            setEnabled(canEnableTestAction(ftpGroup));\r\n        }\r\n\r\n        public void actionPerformed(ActionEvent e) {\r\n            StringBuffer urlString = new StringBuffer();\r\n            urlString.append(\"ftp://\");\r\n            urlString.append(((usernameOption.getUncommitedValue()) == null ? \"\" : usernameOption.getUncommitedValue()));\r\n            urlString.append(((passwordOption.getUncommitedValue()) == null ? \"\" : \":\" + (passwordOption.getUncommitedValue())));\r\n            urlString.append(\"@\");\r\n            urlString.append(servernameOption.getUncommitedValue());\r\n            urlString.append(\"/\");\r\n            urlString.append(dirnameOption.getUncommitedValue());\r\n            urlString.append(\"/\");\r\n            URL url = null;\r\n            try {\r\n                url = new URL(((urlString.toString()) + \"test.txt\"));\r\n                URLConnection urlc = url.openConnection();\r\n                OutputStream os = urlc.getOutputStream();\r\n                os.write(\"This is GanttProject +++ I was here!\".getBytes());\r\n                os.close();\r\n                JOptionPane.showMessageDialog(optionsPane, GanttLanguage.getInstance().getText(\"successFTPConnection\"), GanttLanguage.getInstance().getText(\"success\"), JOptionPane.INFORMATION_MESSAGE);\r\n            } catch (IOException e2) {\r\n                uiFacade.showErrorDialog(e2);\r\n                // JOptionPane.showMessageDialog(, GanttLanguage\r\n                // .getInstance().getText(\"errorFTPConnection\"),\r\n                // GanttLanguage.getInstance().getText(\"error\"),\r\n                // JOptionPane.ERROR_MESSAGE);\r\n            } finally {\r\n            }\r\n        }\r\n    };\r\n    ChangeValueListener listener = new ChangeValueListener() {\r\n        public void changeValue(ChangeValueEvent event) {\r\n            testConnectionAction.setEnabled(canEnableTestAction(ftpGroup));\r\n        }\r\n    };\r\n    servernameOption.addChangeValueListener(listener);\r\n    usernameOption.addChangeValueListener(listener);\r\n    passwordOption.addChangeValueListener(listener);\r\n    Box result = Box.createVerticalBox();\r\n    result.add(optionsPane);\r\n    result.add(new JButton(testConnectionAction));\r\n    return result;\r\n}'),(1652,'final UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,243,'net.sourceforge.ganttproject.document.NetworkOptionPageProvider',2287,'net.sourceforge.ganttproject.document.NetworkOptionPageProvider.buildPageComponent(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public Component buildPageComponent(IGanttProject project, final UIFacade uiFacade) {\r\n    OptionsPageBuilder builder = new OptionsPageBuilder();\r\n    builder.setI18N(new OptionsPageBuilder.I18N() {\r\n        public String getPageTitle(String pageID) {\r\n            return getValue(\"ftpexport\");\r\n        }\r\n\r\n        public String getPageDescription(String pageID) {\r\n            return getValue(\"settingsFTPExport\");\r\n        }\r\n\r\n        public String getOptionGroupLabel(GPOptionGroup group) {\r\n            return getValue(\"ftpexport\");\r\n        }\r\n\r\n        public String getOptionLabel(GPOption option) {\r\n            final String id = option.getID();\r\n            if (DocumentCreator.DIRECTORYNAME_OPTION_ID.equals(id)) {\r\n                return getValue(\"ftpdirectory\");\r\n            }\r\n            if (DocumentCreator.PASSWORD_OPTION_ID.equals(id)) {\r\n                return getValue(\"ftppwd\");\r\n            }\r\n            if (DocumentCreator.SERVERNAME_OPTION_ID.equals(id)) {\r\n                return getValue(\"ftpserver\");\r\n            }\r\n            if (DocumentCreator.USERNAME_OPTION_ID.equals(id)) {\r\n                return getValue(\"ftpuser\");\r\n            }\r\n            return super.getOptionLabel(option);\r\n        }\r\n    });\r\n    final GPOptionGroup ftpGroup = project.getDocumentManager().getNetworkOptionGroups()[0];\r\n    final DefaultStringOption usernameOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.USERNAME_OPTION_ID)));\r\n    final DefaultStringOption servernameOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.SERVERNAME_OPTION_ID)));\r\n    final DefaultStringOption dirnameOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.DIRECTORYNAME_OPTION_ID)));\r\n    final DefaultStringOption passwordOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.PASSWORD_OPTION_ID)));\r\n    final JComponent optionsPane = builder.buildPage(project.getDocumentManager().getNetworkOptionGroups(), getPageID());\r\n    final Action testConnectionAction = new AbstractAction() {\r\n        {\r\n            putValue(Action.NAME, GanttLanguage.getInstance().getText(\"testFTPConnection\"));\r\n            setEnabled(canEnableTestAction(ftpGroup));\r\n        }\r\n\r\n        public void actionPerformed(ActionEvent e) {\r\n            StringBuffer urlString = new StringBuffer();\r\n            urlString.append(\"ftp://\");\r\n            urlString.append(((usernameOption.getUncommitedValue()) == null ? \"\" : usernameOption.getUncommitedValue()));\r\n            urlString.append(((passwordOption.getUncommitedValue()) == null ? \"\" : \":\" + (passwordOption.getUncommitedValue())));\r\n            urlString.append(\"@\");\r\n            urlString.append(servernameOption.getUncommitedValue());\r\n            urlString.append(\"/\");\r\n            urlString.append(dirnameOption.getUncommitedValue());\r\n            urlString.append(\"/\");\r\n            URL url = null;\r\n            try {\r\n                url = new URL(((urlString.toString()) + \"test.txt\"));\r\n                URLConnection urlc = url.openConnection();\r\n                OutputStream os = urlc.getOutputStream();\r\n                os.write(\"This is GanttProject +++ I was here!\".getBytes());\r\n                os.close();\r\n                JOptionPane.showMessageDialog(optionsPane, GanttLanguage.getInstance().getText(\"successFTPConnection\"), GanttLanguage.getInstance().getText(\"success\"), JOptionPane.INFORMATION_MESSAGE);\r\n            } catch (IOException e2) {\r\n                uiFacade.showErrorDialog(e2);\r\n                // JOptionPane.showMessageDialog(, GanttLanguage\r\n                // .getInstance().getText(\"errorFTPConnection\"),\r\n                // GanttLanguage.getInstance().getText(\"error\"),\r\n                // JOptionPane.ERROR_MESSAGE);\r\n            } finally {\r\n            }\r\n        }\r\n    };\r\n    ChangeValueListener listener = new ChangeValueListener() {\r\n        public void changeValue(ChangeValueEvent event) {\r\n            testConnectionAction.setEnabled(canEnableTestAction(ftpGroup));\r\n        }\r\n    };\r\n    servernameOption.addChangeValueListener(listener);\r\n    usernameOption.addChangeValueListener(listener);\r\n    passwordOption.addChangeValueListener(listener);\r\n    Box result = Box.createVerticalBox();\r\n    result.add(optionsPane);\r\n    result.add(new JButton(testConnectionAction));\r\n    return result;\r\n}'),(1653,'GPOptionGroup ftpGroup','net.sourceforge.ganttproject.gui.options.model.GPOptionGroup',389,243,'net.sourceforge.ganttproject.document.NetworkOptionPageProvider',2288,'net.sourceforge.ganttproject.document.NetworkOptionPageProvider.canEnableTestAction(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup)',0,'private boolean canEnableTestAction(GPOptionGroup ftpGroup) {\r\n    final DefaultStringOption usernameOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.USERNAME_OPTION_ID)));\r\n    final DefaultStringOption servernameOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.SERVERNAME_OPTION_ID)));\r\n    final DefaultStringOption passwordOption = ((DefaultStringOption) (ftpGroup.getOption(DocumentCreator.PASSWORD_OPTION_ID)));\r\n    return (((servernameOption.getUncommitedValue()) != null) && ((usernameOption.getUncommitedValue()) != null)) && ((passwordOption.getUncommitedValue()) != null);\r\n}'),(1654,'int index','int',0,244,'net.sourceforge.ganttproject.document.OpenDocumentAction',2293,'net.sourceforge.ganttproject.document.OpenDocumentAction.-init-(int,net.sourceforge.ganttproject.document.Document,java.awt.event.ActionListener)',0,'/**\r\n * Creates a new action, that stores the specified document and invokes the\r\n * specified listener.\r\n */\r\npublic OpenDocumentAction(int index, Document document, ActionListener listener) {\r\n    super(((index + \". \") + (document.getDescription())));\r\n    this.document = document;\r\n    this.listener = listener;\r\n    if (index < (OpenDocumentAction.MNEMONIC_KEYS.length)) {\r\n        putValue(Action.MNEMONIC_KEY, new Integer(OpenDocumentAction.MNEMONIC_KEYS[(index - 1)]));\r\n    }\r\n    if (index < (OpenDocumentAction.SHORTCUT_KEYS.length))\r\n        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(OpenDocumentAction.SHORTCUT_KEYS[(index - 1)], OpenDocumentAction.MENU_MASK));\r\n\r\n}'),(1655,'Document document','net.sourceforge.ganttproject.document.Document',233,244,'net.sourceforge.ganttproject.document.OpenDocumentAction',2293,'net.sourceforge.ganttproject.document.OpenDocumentAction.-init-(int,net.sourceforge.ganttproject.document.Document,java.awt.event.ActionListener)',0,'/**\r\n * Creates a new action, that stores the specified document and invokes the\r\n * specified listener.\r\n */\r\npublic OpenDocumentAction(int index, Document document, ActionListener listener) {\r\n    super(((index + \". \") + (document.getDescription())));\r\n    this.document = document;\r\n    this.listener = listener;\r\n    if (index < (OpenDocumentAction.MNEMONIC_KEYS.length)) {\r\n        putValue(Action.MNEMONIC_KEY, new Integer(OpenDocumentAction.MNEMONIC_KEYS[(index - 1)]));\r\n    }\r\n    if (index < (OpenDocumentAction.SHORTCUT_KEYS.length))\r\n        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(OpenDocumentAction.SHORTCUT_KEYS[(index - 1)], OpenDocumentAction.MENU_MASK));\r\n\r\n}'),(1656,'ActionListener listener','java.awt.event.ActionListener',0,244,'net.sourceforge.ganttproject.document.OpenDocumentAction',2293,'net.sourceforge.ganttproject.document.OpenDocumentAction.-init-(int,net.sourceforge.ganttproject.document.Document,java.awt.event.ActionListener)',0,'/**\r\n * Creates a new action, that stores the specified document and invokes the\r\n * specified listener.\r\n */\r\npublic OpenDocumentAction(int index, Document document, ActionListener listener) {\r\n    super(((index + \". \") + (document.getDescription())));\r\n    this.document = document;\r\n    this.listener = listener;\r\n    if (index < (OpenDocumentAction.MNEMONIC_KEYS.length)) {\r\n        putValue(Action.MNEMONIC_KEY, new Integer(OpenDocumentAction.MNEMONIC_KEYS[(index - 1)]));\r\n    }\r\n    if (index < (OpenDocumentAction.SHORTCUT_KEYS.length))\r\n        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(OpenDocumentAction.SHORTCUT_KEYS[(index - 1)], OpenDocumentAction.MENU_MASK));\r\n\r\n}'),(1657,'ActionEvent e','java.awt.event.ActionEvent',0,244,'net.sourceforge.ganttproject.document.OpenDocumentAction',2294,'net.sourceforge.ganttproject.document.OpenDocumentAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    listener.actionPerformed(new ActionEvent(document, e.getID(), e.getActionCommand()));\r\n}'),(1658,'DocumentCreator creator','net.sourceforge.ganttproject.document.DocumentCreator',235,253,'net.sourceforge.ganttproject.document.ProxyDocument',2296,'net.sourceforge.ganttproject.document.ProxyDocument.-init-(net.sourceforge.ganttproject.document.DocumentCreator,net.sourceforge.ganttproject.document.Document,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.TableHeaderUIFacade,net.sourceforge.ganttproject.parser.ParserFactory)',0,'ProxyDocument(DocumentCreator creator, Document physicalDocument, IGanttProject project, UIFacade uiFacade, TableHeaderUIFacade visibleFields, ParserFactory parserFactory) {\r\n    myPhysicalDocument = physicalDocument;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myParserFactory = parserFactory;\r\n    myCreator = creator;\r\n    myVisibleFields = visibleFields;\r\n}'),(1659,'Document physicalDocument','net.sourceforge.ganttproject.document.Document',233,253,'net.sourceforge.ganttproject.document.ProxyDocument',2296,'net.sourceforge.ganttproject.document.ProxyDocument.-init-(net.sourceforge.ganttproject.document.DocumentCreator,net.sourceforge.ganttproject.document.Document,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.TableHeaderUIFacade,net.sourceforge.ganttproject.parser.ParserFactory)',0,'ProxyDocument(DocumentCreator creator, Document physicalDocument, IGanttProject project, UIFacade uiFacade, TableHeaderUIFacade visibleFields, ParserFactory parserFactory) {\r\n    myPhysicalDocument = physicalDocument;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myParserFactory = parserFactory;\r\n    myCreator = creator;\r\n    myVisibleFields = visibleFields;\r\n}'),(1660,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,253,'net.sourceforge.ganttproject.document.ProxyDocument',2296,'net.sourceforge.ganttproject.document.ProxyDocument.-init-(net.sourceforge.ganttproject.document.DocumentCreator,net.sourceforge.ganttproject.document.Document,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.TableHeaderUIFacade,net.sourceforge.ganttproject.parser.ParserFactory)',0,'ProxyDocument(DocumentCreator creator, Document physicalDocument, IGanttProject project, UIFacade uiFacade, TableHeaderUIFacade visibleFields, ParserFactory parserFactory) {\r\n    myPhysicalDocument = physicalDocument;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myParserFactory = parserFactory;\r\n    myCreator = creator;\r\n    myVisibleFields = visibleFields;\r\n}'),(1661,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,253,'net.sourceforge.ganttproject.document.ProxyDocument',2296,'net.sourceforge.ganttproject.document.ProxyDocument.-init-(net.sourceforge.ganttproject.document.DocumentCreator,net.sourceforge.ganttproject.document.Document,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.TableHeaderUIFacade,net.sourceforge.ganttproject.parser.ParserFactory)',0,'ProxyDocument(DocumentCreator creator, Document physicalDocument, IGanttProject project, UIFacade uiFacade, TableHeaderUIFacade visibleFields, ParserFactory parserFactory) {\r\n    myPhysicalDocument = physicalDocument;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myParserFactory = parserFactory;\r\n    myCreator = creator;\r\n    myVisibleFields = visibleFields;\r\n}'),(1662,'TableHeaderUIFacade visibleFields','net.sourceforge.ganttproject.gui.TableHeaderUIFacade',324,253,'net.sourceforge.ganttproject.document.ProxyDocument',2296,'net.sourceforge.ganttproject.document.ProxyDocument.-init-(net.sourceforge.ganttproject.document.DocumentCreator,net.sourceforge.ganttproject.document.Document,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.TableHeaderUIFacade,net.sourceforge.ganttproject.parser.ParserFactory)',0,'ProxyDocument(DocumentCreator creator, Document physicalDocument, IGanttProject project, UIFacade uiFacade, TableHeaderUIFacade visibleFields, ParserFactory parserFactory) {\r\n    myPhysicalDocument = physicalDocument;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myParserFactory = parserFactory;\r\n    myCreator = creator;\r\n    myVisibleFields = visibleFields;\r\n}'),(1663,'ParserFactory parserFactory','net.sourceforge.ganttproject.parser.ParserFactory',475,253,'net.sourceforge.ganttproject.document.ProxyDocument',2296,'net.sourceforge.ganttproject.document.ProxyDocument.-init-(net.sourceforge.ganttproject.document.DocumentCreator,net.sourceforge.ganttproject.document.Document,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.TableHeaderUIFacade,net.sourceforge.ganttproject.parser.ParserFactory)',0,'ProxyDocument(DocumentCreator creator, Document physicalDocument, IGanttProject project, UIFacade uiFacade, TableHeaderUIFacade visibleFields, ParserFactory parserFactory) {\r\n    myPhysicalDocument = physicalDocument;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myParserFactory = parserFactory;\r\n    myCreator = creator;\r\n    myVisibleFields = visibleFields;\r\n}'),(1664,'ProxyDocument.ParsingState parsing','net.sourceforge.ganttproject.document.ProxyDocument$ParsingState',249,246,'net.sourceforge.ganttproject.document.ProxyDocument$AcquireLockState',2328,'net.sourceforge.ganttproject.document.ProxyDocument$AcquireLockState.-init-(net.sourceforge.ganttproject.document.ProxyDocument$ParsingState,net.sourceforge.ganttproject.document.ProxyDocument$OpenCopyConfirmationState)',0,'/**\r\n *\r\n *\r\n * @param parsing\r\n * 		\r\n * @param confirmation\r\n * 		\r\n */\r\npublic AcquireLockState(ProxyDocument.ParsingState parsing, ProxyDocument.OpenCopyConfirmationState confirmation) {\r\n    myParsingState = parsing;\r\n    myConfirmationState = confirmation;\r\n}'),(1665,'ProxyDocument.OpenCopyConfirmationState confirmation','net.sourceforge.ganttproject.document.ProxyDocument$OpenCopyConfirmationState',248,246,'net.sourceforge.ganttproject.document.ProxyDocument$AcquireLockState',2328,'net.sourceforge.ganttproject.document.ProxyDocument$AcquireLockState.-init-(net.sourceforge.ganttproject.document.ProxyDocument$ParsingState,net.sourceforge.ganttproject.document.ProxyDocument$OpenCopyConfirmationState)',0,'/**\r\n *\r\n *\r\n * @param parsing\r\n * 		\r\n * @param confirmation\r\n * 		\r\n */\r\npublic AcquireLockState(ProxyDocument.ParsingState parsing, ProxyDocument.OpenCopyConfirmationState confirmation) {\r\n    myParsingState = parsing;\r\n    myConfirmationState = confirmation;\r\n}'),(1666,'ProxyDocument.ParsingState parsing','net.sourceforge.ganttproject.document.ProxyDocument$ParsingState',249,248,'net.sourceforge.ganttproject.document.ProxyDocument$OpenCopyConfirmationState',2332,'net.sourceforge.ganttproject.document.ProxyDocument$OpenCopyConfirmationState.-init-(net.sourceforge.ganttproject.document.ProxyDocument$ParsingState,net.sourceforge.ganttproject.document.ProxyDocument$FailureState)',0,'/**\r\n *\r\n *\r\n * @param parsing\r\n * 		\r\n * @param failure\r\n * 		\r\n */\r\npublic OpenCopyConfirmationState(ProxyDocument.ParsingState parsing, ProxyDocument.FailureState failure) {\r\n    myParsingState = parsing;\r\n    myExitState = failure;\r\n}'),(1667,'ProxyDocument.FailureState failure','net.sourceforge.ganttproject.document.ProxyDocument$FailureState',247,248,'net.sourceforge.ganttproject.document.ProxyDocument$OpenCopyConfirmationState',2332,'net.sourceforge.ganttproject.document.ProxyDocument$OpenCopyConfirmationState.-init-(net.sourceforge.ganttproject.document.ProxyDocument$ParsingState,net.sourceforge.ganttproject.document.ProxyDocument$FailureState)',0,'/**\r\n *\r\n *\r\n * @param parsing\r\n * 		\r\n * @param failure\r\n * 		\r\n */\r\npublic OpenCopyConfirmationState(ProxyDocument.ParsingState parsing, ProxyDocument.FailureState failure) {\r\n    myParsingState = parsing;\r\n    myExitState = failure;\r\n}'),(1668,'ProxyDocument.SuccessState success','net.sourceforge.ganttproject.document.ProxyDocument$SuccessState',252,249,'net.sourceforge.ganttproject.document.ProxyDocument$ParsingState',2334,'net.sourceforge.ganttproject.document.ProxyDocument$ParsingState.-init-(net.sourceforge.ganttproject.document.ProxyDocument$SuccessState,net.sourceforge.ganttproject.document.ProxyDocument$FailureState)',0,'/**\r\n *\r\n *\r\n * @param success\r\n * 		\r\n * @param failure\r\n * 		\r\n */\r\npublic ParsingState(ProxyDocument.SuccessState success, ProxyDocument.FailureState failure) {\r\n    mySuccessState = success;\r\n    myFailureState = failure;\r\n}'),(1669,'ProxyDocument.FailureState failure','net.sourceforge.ganttproject.document.ProxyDocument$FailureState',247,249,'net.sourceforge.ganttproject.document.ProxyDocument$ParsingState',2334,'net.sourceforge.ganttproject.document.ProxyDocument$ParsingState.-init-(net.sourceforge.ganttproject.document.ProxyDocument$SuccessState,net.sourceforge.ganttproject.document.ProxyDocument$FailureState)',0,'/**\r\n *\r\n *\r\n * @param success\r\n * 		\r\n * @param failure\r\n * 		\r\n */\r\npublic ParsingState(ProxyDocument.SuccessState success, ProxyDocument.FailureState failure) {\r\n    mySuccessState = success;\r\n    myFailureState = failure;\r\n}'),(1670,'String user','java.lang.String',0,253,'net.sourceforge.ganttproject.document.ProxyDocument',2326,'net.sourceforge.ganttproject.document.ProxyDocument.setUserInfo(java.lang.String,java.lang.String)',0,'public void setUserInfo(String user, String pass) {\r\n    myPhysicalDocument.setUserInfo(user, pass);\r\n}'),(1671,'String pass','java.lang.String',0,253,'net.sourceforge.ganttproject.document.ProxyDocument',2326,'net.sourceforge.ganttproject.document.ProxyDocument.setUserInfo(java.lang.String,java.lang.String)',0,'public void setUserInfo(String user, String pass) {\r\n    myPhysicalDocument.setUserInfo(user, pass);\r\n}'),(1672,'Object doc','java.lang.Object',0,253,'net.sourceforge.ganttproject.document.ProxyDocument',2304,'net.sourceforge.ganttproject.document.ProxyDocument.equals(java.lang.Object)',0,'/* (non-Javadoc)\n@see java.lang.Object#equals(java.lang.Object)\n@author arun_ram\nAdded on Feb 26, 2006\n */\r\npublic boolean equals(Object doc) {\r\n    if (false == (doc instanceof ProxyDocument)) {\r\n        return false;\r\n    }\r\n    return getPath().equals(((Document) (doc)).getPath());\r\n}'),(1673,'Document document','net.sourceforge.ganttproject.document.Document',233,250,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioImpl',2338,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioImpl.setDefaultDocument(net.sourceforge.ganttproject.document.Document)',0,'void setDefaultDocument(Document document) {\r\n    if ((myDefaultDocument) != null) {\r\n        throw new IllegalStateException(\"Dont set default document twice\");\r\n    }\r\n    myDefaultDocument = document;\r\n}'),(1674,'String namespaceURI','java.lang.String',0,251,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler',2341,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (ProxyDocument.PortfolioTagHandler.PORTFOLIO_TAG.equals(qName)) {\r\n        isReadingPortfolio = true;\r\n        return;\r\n    }\r\n    if ((ProxyDocument.PortfolioTagHandler.PROJECT_TAG.equals(qName)) && (isReadingPortfolio)) {\r\n        String locationAsString = attrs.getValue(ProxyDocument.PortfolioTagHandler.LOCATION_ATTR);\r\n        if (locationAsString != null) {\r\n            Document document = myCreator.getDocument(locationAsString);\r\n            getPortfolioImpl().setDefaultDocument(document);\r\n        }\r\n    }\r\n}'),(1675,'String sName','java.lang.String',0,251,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler',2341,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (ProxyDocument.PortfolioTagHandler.PORTFOLIO_TAG.equals(qName)) {\r\n        isReadingPortfolio = true;\r\n        return;\r\n    }\r\n    if ((ProxyDocument.PortfolioTagHandler.PROJECT_TAG.equals(qName)) && (isReadingPortfolio)) {\r\n        String locationAsString = attrs.getValue(ProxyDocument.PortfolioTagHandler.LOCATION_ATTR);\r\n        if (locationAsString != null) {\r\n            Document document = myCreator.getDocument(locationAsString);\r\n            getPortfolioImpl().setDefaultDocument(document);\r\n        }\r\n    }\r\n}'),(1676,'String qName','java.lang.String',0,251,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler',2341,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (ProxyDocument.PortfolioTagHandler.PORTFOLIO_TAG.equals(qName)) {\r\n        isReadingPortfolio = true;\r\n        return;\r\n    }\r\n    if ((ProxyDocument.PortfolioTagHandler.PROJECT_TAG.equals(qName)) && (isReadingPortfolio)) {\r\n        String locationAsString = attrs.getValue(ProxyDocument.PortfolioTagHandler.LOCATION_ATTR);\r\n        if (locationAsString != null) {\r\n            Document document = myCreator.getDocument(locationAsString);\r\n            getPortfolioImpl().setDefaultDocument(document);\r\n        }\r\n    }\r\n}'),(1677,'Attributes attrs','org.xml.sax.Attributes',0,251,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler',2341,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (ProxyDocument.PortfolioTagHandler.PORTFOLIO_TAG.equals(qName)) {\r\n        isReadingPortfolio = true;\r\n        return;\r\n    }\r\n    if ((ProxyDocument.PortfolioTagHandler.PROJECT_TAG.equals(qName)) && (isReadingPortfolio)) {\r\n        String locationAsString = attrs.getValue(ProxyDocument.PortfolioTagHandler.LOCATION_ATTR);\r\n        if (locationAsString != null) {\r\n            Document document = myCreator.getDocument(locationAsString);\r\n            getPortfolioImpl().setDefaultDocument(document);\r\n        }\r\n    }\r\n}'),(1678,'String namespaceURI','java.lang.String',0,251,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler',2340,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    if (ProxyDocument.PortfolioTagHandler.PORTFOLIO_TAG.equals(qName)) {\r\n        isReadingPortfolio = false;\r\n    }\r\n}'),(1679,'String sName','java.lang.String',0,251,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler',2340,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    if (ProxyDocument.PortfolioTagHandler.PORTFOLIO_TAG.equals(qName)) {\r\n        isReadingPortfolio = false;\r\n    }\r\n}'),(1680,'String qName','java.lang.String',0,251,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler',2340,'net.sourceforge.ganttproject.document.ProxyDocument$PortfolioTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    if (ProxyDocument.PortfolioTagHandler.PORTFOLIO_TAG.equals(qName)) {\r\n        isReadingPortfolio = false;\r\n    }\r\n}'),(1681,'Map parsedArgs','java.util.Map',0,254,'net.sourceforge.ganttproject.export.CommandLineExportApplication',2345,'net.sourceforge.ganttproject.export.CommandLineExportApplication.export(java.util.Map)',0,'public boolean export(Map parsedArgs) {\r\n    if (parsedArgs.isEmpty()) {\r\n        return false;\r\n    }\r\n    List values = new ArrayList();\r\n    Exporter exporter = findExporter(parsedArgs, values);\r\n    if ((exporter != null) && ((values.size()) > 0)) {\r\n        GanttProject project = new GanttProject(false);\r\n        String inputFileName = String.valueOf(values.get(0));\r\n        project.openStartupDocument(inputFileName);\r\n        ConsoleUIFacade consoleUI = new ConsoleUIFacade(project.getUIFacade());\r\n        File inputFile = new File(inputFileName);\r\n        if (false == (inputFile.exists())) {\r\n            consoleUI.showErrorDialog(((\"File \" + inputFileName) + \" does not exist.\"));\r\n            return true;\r\n        }\r\n        if (false == (inputFile.canRead())) {\r\n            consoleUI.showErrorDialog(((\"File \" + inputFileName) + \" is not readable.\"));\r\n            return true;\r\n        }\r\n        org.eclipse.core.runtime.Platform.getJobManager().setProgressProvider(null);\r\n        File outputFile;\r\n        if ((values.size()) > 1) {\r\n            outputFile = new File(String.valueOf(values.get(1)));\r\n        } else {\r\n            outputFile = FileChooserPage.proposeOutputFile(project, exporter);\r\n        }\r\n        System.err.println((\"[CommandLineExportApplication] export(): exporting with \" + exporter));\r\n        exporter.setContext(project, consoleUI);\r\n        if (exporter instanceof ExportFileWizardImpl.LegacyOptionsClient) {\r\n            ((ExportFileWizardImpl.LegacyOptionsClient) (exporter)).setOptions(project.getOptions());\r\n        }\r\n        try {\r\n            ExportFinalizationJob finalizationJob = new ExportFinalizationJob() {\r\n                public void run(File[] exportedFiles) {\r\n                    System.exit(0);\r\n                }\r\n            };\r\n            exporter.run(outputFile, finalizationJob);\r\n        } catch (Exception e) {\r\n            consoleUI.showErrorDialog(e);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}'),(1682,'Map args','java.util.Map',0,254,'net.sourceforge.ganttproject.export.CommandLineExportApplication',2346,'net.sourceforge.ganttproject.export.CommandLineExportApplication.findExporter(java.util.Map,java.util.List)',0,'private Exporter findExporter(Map args, List outputParams) {\r\n    for (Iterator exporters = myFlag2exporter.entrySet().iterator(); exporters.hasNext();) {\r\n        Map.Entry nextEntry = ((Map.Entry) (exporters.next()));\r\n        String flag = ((String) (nextEntry.getKey()));\r\n        if (args.containsKey(flag)) {\r\n            outputParams.addAll(((Collection) (args.get(flag))));\r\n            return ((Exporter) (nextEntry.getValue()));\r\n        }\r\n    }\r\n    return null;\r\n}'),(1683,'net.sourceforge.ganttproject.export.Exporter','net.sourceforge.ganttproject.export.Exporter',264,254,'net.sourceforge.ganttproject.export.CommandLineExportApplication',2346,'net.sourceforge.ganttproject.export.CommandLineExportApplication.findExporter(java.util.Map,java.util.List)',1,'private Exporter findExporter(Map args, List outputParams) {\r\n    for (Iterator exporters = myFlag2exporter.entrySet().iterator(); exporters.hasNext();) {\r\n        Map.Entry nextEntry = ((Map.Entry) (exporters.next()));\r\n        String flag = ((String) (nextEntry.getKey()));\r\n        if (args.containsKey(flag)) {\r\n            outputParams.addAll(((Collection) (args.get(flag))));\r\n            return ((Exporter) (nextEntry.getValue()));\r\n        }\r\n    }\r\n    return null;\r\n}'),(1684,'List outputParams','java.util.List',0,254,'net.sourceforge.ganttproject.export.CommandLineExportApplication',2346,'net.sourceforge.ganttproject.export.CommandLineExportApplication.findExporter(java.util.Map,java.util.List)',0,'private Exporter findExporter(Map args, List outputParams) {\r\n    for (Iterator exporters = myFlag2exporter.entrySet().iterator(); exporters.hasNext();) {\r\n        Map.Entry nextEntry = ((Map.Entry) (exporters.next()));\r\n        String flag = ((String) (nextEntry.getKey()));\r\n        if (args.containsKey(flag)) {\r\n            outputParams.addAll(((Collection) (args.get(flag))));\r\n            return ((Exporter) (nextEntry.getValue()));\r\n        }\r\n    }\r\n    return null;\r\n}'),(1685,'UIFacade realFacade','net.sourceforge.ganttproject.gui.UIFacade',337,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2348,'net.sourceforge.ganttproject.export.ConsoleUIFacade.-init-(net.sourceforge.ganttproject.gui.UIFacade)',0,'ConsoleUIFacade(UIFacade realFacade) {\r\n    myRealFacade = realFacade;\r\n}'),(1686,'String message','java.lang.String',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2370,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showConfirmationDialog(java.lang.String,java.lang.String)',0,'public UIFacade.Choice showConfirmationDialog(String message, String title) {\r\n    // TODO Auto-generated method stub\r\n    return null;\r\n}'),(1687,'String title','java.lang.String',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2370,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showConfirmationDialog(java.lang.String,java.lang.String)',0,'public UIFacade.Choice showConfirmationDialog(String message, String title) {\r\n    // TODO Auto-generated method stub\r\n    return null;\r\n}'),(1688,'Component invoker','java.awt.Component',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2375,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    // TODO Auto-generated method stub\r\n}'),(1689,'Action[] actions','javax.swing.Action[]',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2375,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    // TODO Auto-generated method stub\r\n}'),(1690,'int x','int',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2375,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    // TODO Auto-generated method stub\r\n}'),(1691,'int y','int',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2375,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'public void showPopupMenu(Component invoker, Action[] actions, int x, int y) {\r\n    // TODO Auto-generated method stub\r\n}'),(1692,'Component content','java.awt.Component',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2371,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showDialog(java.awt.Component,javax.swing.Action[])',0,'public void showDialog(Component content, Action[] buttonActions) {\r\n    // TODO Auto-generated method stub\r\n}'),(1693,'Action[] buttonActions','javax.swing.Action[]',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2371,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showDialog(java.awt.Component,javax.swing.Action[])',0,'public void showDialog(Component content, Action[] buttonActions) {\r\n    // TODO Auto-generated method stub\r\n}'),(1694,'Component content','java.awt.Component',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2372,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'public void showDialog(Component content, Action[] buttonActions, String title) {\r\n    // TODO Auto-generated method stub\r\n}'),(1695,'Action[] buttonActions','javax.swing.Action[]',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2372,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'public void showDialog(Component content, Action[] buttonActions, String title) {\r\n    // TODO Auto-generated method stub\r\n}'),(1696,'String title','java.lang.String',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2372,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'public void showDialog(Component content, Action[] buttonActions, String title) {\r\n    // TODO Auto-generated method stub\r\n}'),(1697,'String text','java.lang.String',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2367,'net.sourceforge.ganttproject.export.ConsoleUIFacade.setStatusText(java.lang.String)',0,'public void setStatusText(String text) {\r\n    // TODO Auto-generated method stub\r\n}'),(1698,'String errorMessage','java.lang.String',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2373,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showErrorDialog(java.lang.String)',0,'public void showErrorDialog(String errorMessage) {\r\n    System.err.println((\"[ConsoleUIFacade] ERROR: \" + errorMessage));\r\n}'),(1699,'Throwable e','java.lang.Throwable',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2374,'net.sourceforge.ganttproject.export.ConsoleUIFacade.showErrorDialog(java.lang.Throwable)',0,'public void showErrorDialog(Throwable e) {\r\n    System.err.println((\"[ConsoleUIFacade] ERROR: \" + (e.getMessage())));\r\n    e.printStackTrace();\r\n}'),(1700,'Throwable e','java.lang.Throwable',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2363,'net.sourceforge.ganttproject.export.ConsoleUIFacade.logErrorMessage(java.lang.Throwable)',0,'public void logErrorMessage(Throwable e) {\r\n    System.err.println((\"[ConsoleUIFacade] ERROR:\" + (e.getMessage())));\r\n    e.printStackTrace();\r\n}'),(1701,'int viewIndex','int',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2368,'net.sourceforge.ganttproject.export.ConsoleUIFacade.setViewIndex(int)',0,'public void setViewIndex(int viewIndex) {\r\n    // TODO Auto-generated method stub\r\n}'),(1702,'int location','int',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2365,'net.sourceforge.ganttproject.export.ConsoleUIFacade.setGanttDividerLocation(int)',0,'public void setGanttDividerLocation(int location) {\r\n    // TODO Auto-generated method stub\r\n}'),(1703,'int location','int',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2366,'net.sourceforge.ganttproject.export.ConsoleUIFacade.setResourceDividerLocation(int)',0,'public void setResourceDividerLocation(int location) {\r\n    // TODO Auto-generated method stub\r\n}'),(1704,'String title','java.lang.String',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2369,'net.sourceforge.ganttproject.export.ConsoleUIFacade.setWorkbenchTitle(java.lang.String)',0,'public void setWorkbenchTitle(String title) {\r\n    // TODO Auto-generated method stub\r\n}'),(1705,'File parentFile','java.io.File',0,255,'net.sourceforge.ganttproject.export.ConsoleUIFacade',2349,'net.sourceforge.ganttproject.export.ConsoleUIFacade.changeWorkingDirectory(java.io.File)',0,'public void changeWorkingDirectory(File parentFile) {\r\n    // TODO Auto-generated method stub\r\n}'),(1706,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,256,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData',2376,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData.-init-(net.sourceforge.ganttproject.IGanttProject,java.lang.String,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttExportSettings,java.lang.String)',0,'public DeprecatedProjectExportData(IGanttProject project, final String myFilename, final Chart myGanttChart, final Chart myResourceChart, final GanttExportSettings myExportOptions, final String myXslFoScript) {\r\n    super();\r\n    this.myProject = project;\r\n    this.myFilename = myFilename;\r\n    this.myGanttChart = myGanttChart;\r\n    this.myResourceChart = myResourceChart;\r\n    this.myExportOptions = myExportOptions;\r\n    this.myXslFoScript = myXslFoScript;\r\n}'),(1707,'final String myFilename','java.lang.String',0,256,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData',2376,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData.-init-(net.sourceforge.ganttproject.IGanttProject,java.lang.String,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttExportSettings,java.lang.String)',0,'public DeprecatedProjectExportData(IGanttProject project, final String myFilename, final Chart myGanttChart, final Chart myResourceChart, final GanttExportSettings myExportOptions, final String myXslFoScript) {\r\n    super();\r\n    this.myProject = project;\r\n    this.myFilename = myFilename;\r\n    this.myGanttChart = myGanttChart;\r\n    this.myResourceChart = myResourceChart;\r\n    this.myExportOptions = myExportOptions;\r\n    this.myXslFoScript = myXslFoScript;\r\n}'),(1708,'final Chart myGanttChart','net.sourceforge.ganttproject.chart.Chart',159,256,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData',2376,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData.-init-(net.sourceforge.ganttproject.IGanttProject,java.lang.String,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttExportSettings,java.lang.String)',0,'public DeprecatedProjectExportData(IGanttProject project, final String myFilename, final Chart myGanttChart, final Chart myResourceChart, final GanttExportSettings myExportOptions, final String myXslFoScript) {\r\n    super();\r\n    this.myProject = project;\r\n    this.myFilename = myFilename;\r\n    this.myGanttChart = myGanttChart;\r\n    this.myResourceChart = myResourceChart;\r\n    this.myExportOptions = myExportOptions;\r\n    this.myXslFoScript = myXslFoScript;\r\n}'),(1709,'final Chart myResourceChart','net.sourceforge.ganttproject.chart.Chart',159,256,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData',2376,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData.-init-(net.sourceforge.ganttproject.IGanttProject,java.lang.String,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttExportSettings,java.lang.String)',0,'public DeprecatedProjectExportData(IGanttProject project, final String myFilename, final Chart myGanttChart, final Chart myResourceChart, final GanttExportSettings myExportOptions, final String myXslFoScript) {\r\n    super();\r\n    this.myProject = project;\r\n    this.myFilename = myFilename;\r\n    this.myGanttChart = myGanttChart;\r\n    this.myResourceChart = myResourceChart;\r\n    this.myExportOptions = myExportOptions;\r\n    this.myXslFoScript = myXslFoScript;\r\n}'),(1710,'final GanttExportSettings myExportOptions','net.sourceforge.ganttproject.GanttExportSettings',27,256,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData',2376,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData.-init-(net.sourceforge.ganttproject.IGanttProject,java.lang.String,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttExportSettings,java.lang.String)',0,'public DeprecatedProjectExportData(IGanttProject project, final String myFilename, final Chart myGanttChart, final Chart myResourceChart, final GanttExportSettings myExportOptions, final String myXslFoScript) {\r\n    super();\r\n    this.myProject = project;\r\n    this.myFilename = myFilename;\r\n    this.myGanttChart = myGanttChart;\r\n    this.myResourceChart = myResourceChart;\r\n    this.myExportOptions = myExportOptions;\r\n    this.myXslFoScript = myXslFoScript;\r\n}'),(1711,'final String myXslFoScript','java.lang.String',0,256,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData',2376,'net.sourceforge.ganttproject.export.DeprecatedProjectExportData.-init-(net.sourceforge.ganttproject.IGanttProject,java.lang.String,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttExportSettings,java.lang.String)',0,'public DeprecatedProjectExportData(IGanttProject project, final String myFilename, final Chart myGanttChart, final Chart myResourceChart, final GanttExportSettings myExportOptions, final String myXslFoScript) {\r\n    super();\r\n    this.myProject = project;\r\n    this.myFilename = myFilename;\r\n    this.myGanttChart = myGanttChart;\r\n    this.myResourceChart = myResourceChart;\r\n    this.myExportOptions = myExportOptions;\r\n    this.myXslFoScript = myXslFoScript;\r\n}'),(1712,'String message','java.lang.String',0,257,'net.sourceforge.ganttproject.export.ExportException',2377,'net.sourceforge.ganttproject.export.ExportException.-init-(java.lang.String,java.lang.Throwable)',0,'public ExportException(String message, Throwable cause) {\r\n    super(message, cause);\r\n}'),(1713,'Throwable cause','java.lang.Throwable',0,257,'net.sourceforge.ganttproject.export.ExportException',2377,'net.sourceforge.ganttproject.export.ExportException.-init-(java.lang.String,java.lang.Throwable)',0,'public ExportException(String message, Throwable cause) {\r\n    super(message, cause);\r\n}'),(1714,'String message','java.lang.String',0,257,'net.sourceforge.ganttproject.export.ExportException',2378,'net.sourceforge.ganttproject.export.ExportException.-init-(java.lang.String)',0,'public ExportException(String message) {\r\n    super(message);\r\n}'),(1715,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,258,'net.sourceforge.ganttproject.export.ExportFileAction',2379,'net.sourceforge.ganttproject.export.ExportFileAction.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileAction(UIFacade uiFacade, IGanttProject project, GanttOptions options) {\r\n    super(null, \"16\");\r\n    /* putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_E,\n    MENU_MASK));\n     */\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myOptions = options;\r\n}'),(1716,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,258,'net.sourceforge.ganttproject.export.ExportFileAction',2379,'net.sourceforge.ganttproject.export.ExportFileAction.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileAction(UIFacade uiFacade, IGanttProject project, GanttOptions options) {\r\n    super(null, \"16\");\r\n    /* putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_E,\n    MENU_MASK));\n     */\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myOptions = options;\r\n}'),(1717,'GanttOptions options','net.sourceforge.ganttproject.GanttOptions',48,258,'net.sourceforge.ganttproject.export.ExportFileAction',2379,'net.sourceforge.ganttproject.export.ExportFileAction.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileAction(UIFacade uiFacade, IGanttProject project, GanttOptions options) {\r\n    super(null, \"16\");\r\n    /* putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_E,\n    MENU_MASK));\n     */\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myOptions = options;\r\n}'),(1718,'ActionEvent e','java.awt.event.ActionEvent',0,258,'net.sourceforge.ganttproject.export.ExportFileAction',2380,'net.sourceforge.ganttproject.export.ExportFileAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    ExportFileWizardImpl wizard = new ExportFileWizardImpl(myUIFacade, myProject, myOptions);\r\n    wizard.show();\r\n    // myProject.export();\r\n}'),(1719,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,262,'net.sourceforge.ganttproject.export.ExportFileWizardImpl',2383,'net.sourceforge.ganttproject.export.ExportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileWizardImpl(UIFacade uiFacade, IGanttProject project, GanttOptions options) {\r\n    this(uiFacade, project, uiFacade.getGanttChart(), uiFacade.getResourceChart(), uiFacade.getActiveChart(), options);\r\n}'),(1720,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,262,'net.sourceforge.ganttproject.export.ExportFileWizardImpl',2383,'net.sourceforge.ganttproject.export.ExportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileWizardImpl(UIFacade uiFacade, IGanttProject project, GanttOptions options) {\r\n    this(uiFacade, project, uiFacade.getGanttChart(), uiFacade.getResourceChart(), uiFacade.getActiveChart(), options);\r\n}'),(1721,'GanttOptions options','net.sourceforge.ganttproject.GanttOptions',48,262,'net.sourceforge.ganttproject.export.ExportFileWizardImpl',2383,'net.sourceforge.ganttproject.export.ExportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileWizardImpl(UIFacade uiFacade, IGanttProject project, GanttOptions options) {\r\n    this(uiFacade, project, uiFacade.getGanttChart(), uiFacade.getResourceChart(), uiFacade.getActiveChart(), options);\r\n}'),(1722,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,262,'net.sourceforge.ganttproject.export.ExportFileWizardImpl',2384,'net.sourceforge.ganttproject.export.ExportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileWizardImpl(UIFacade uiFacade, IGanttProject project, Chart ganttChart, Chart resourceChart, Chart visibleChart, GanttOptions options) {\r\n    super(uiFacade, GanttLanguage.getInstance().getText(\"exportWizard.dialog.title\"));\r\n    myUIFacade = uiFacade;\r\n    myProject = project;\r\n    myGanttChart = ganttChart;\r\n    myResourceChart = resourceChart;\r\n    myVisibleChart = visibleChart;\r\n    myOptions = options;\r\n    myState = new ExportFileWizardImpl.State(project.getDocument());\r\n    if ((ExportFileWizardImpl.ourExporters) == null) {\r\n        ExportFileWizardImpl.ourExporters = Mediator.getPluginManager().getExporters();\r\n    }\r\n    Exporter[] exporters = ExportFileWizardImpl.ourExporters;\r\n    myState.setExporter(((ExportFileWizardImpl.ourLastSelectedExporter) == null ? exporters[0] : ExportFileWizardImpl.ourLastSelectedExporter));\r\n    for (int i = 0; i < (exporters.length); i++) {\r\n        exporters[i].setContext(project, uiFacade);\r\n        if ((exporters[i]) instanceof ExportFileWizardImpl.LegacyOptionsClient) {\r\n            ((ExportFileWizardImpl.LegacyOptionsClient) (exporters[i])).setOptions(myOptions);\r\n        }\r\n    }\r\n    addPage(new ExporterChooserPage(exporters, myState));\r\n    addPage(new FileChooserPage(myState, myProject));\r\n}'),(1723,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,262,'net.sourceforge.ganttproject.export.ExportFileWizardImpl',2384,'net.sourceforge.ganttproject.export.ExportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileWizardImpl(UIFacade uiFacade, IGanttProject project, Chart ganttChart, Chart resourceChart, Chart visibleChart, GanttOptions options) {\r\n    super(uiFacade, GanttLanguage.getInstance().getText(\"exportWizard.dialog.title\"));\r\n    myUIFacade = uiFacade;\r\n    myProject = project;\r\n    myGanttChart = ganttChart;\r\n    myResourceChart = resourceChart;\r\n    myVisibleChart = visibleChart;\r\n    myOptions = options;\r\n    myState = new ExportFileWizardImpl.State(project.getDocument());\r\n    if ((ExportFileWizardImpl.ourExporters) == null) {\r\n        ExportFileWizardImpl.ourExporters = Mediator.getPluginManager().getExporters();\r\n    }\r\n    Exporter[] exporters = ExportFileWizardImpl.ourExporters;\r\n    myState.setExporter(((ExportFileWizardImpl.ourLastSelectedExporter) == null ? exporters[0] : ExportFileWizardImpl.ourLastSelectedExporter));\r\n    for (int i = 0; i < (exporters.length); i++) {\r\n        exporters[i].setContext(project, uiFacade);\r\n        if ((exporters[i]) instanceof ExportFileWizardImpl.LegacyOptionsClient) {\r\n            ((ExportFileWizardImpl.LegacyOptionsClient) (exporters[i])).setOptions(myOptions);\r\n        }\r\n    }\r\n    addPage(new ExporterChooserPage(exporters, myState));\r\n    addPage(new FileChooserPage(myState, myProject));\r\n}'),(1724,'Chart ganttChart','net.sourceforge.ganttproject.chart.Chart',159,262,'net.sourceforge.ganttproject.export.ExportFileWizardImpl',2384,'net.sourceforge.ganttproject.export.ExportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileWizardImpl(UIFacade uiFacade, IGanttProject project, Chart ganttChart, Chart resourceChart, Chart visibleChart, GanttOptions options) {\r\n    super(uiFacade, GanttLanguage.getInstance().getText(\"exportWizard.dialog.title\"));\r\n    myUIFacade = uiFacade;\r\n    myProject = project;\r\n    myGanttChart = ganttChart;\r\n    myResourceChart = resourceChart;\r\n    myVisibleChart = visibleChart;\r\n    myOptions = options;\r\n    myState = new ExportFileWizardImpl.State(project.getDocument());\r\n    if ((ExportFileWizardImpl.ourExporters) == null) {\r\n        ExportFileWizardImpl.ourExporters = Mediator.getPluginManager().getExporters();\r\n    }\r\n    Exporter[] exporters = ExportFileWizardImpl.ourExporters;\r\n    myState.setExporter(((ExportFileWizardImpl.ourLastSelectedExporter) == null ? exporters[0] : ExportFileWizardImpl.ourLastSelectedExporter));\r\n    for (int i = 0; i < (exporters.length); i++) {\r\n        exporters[i].setContext(project, uiFacade);\r\n        if ((exporters[i]) instanceof ExportFileWizardImpl.LegacyOptionsClient) {\r\n            ((ExportFileWizardImpl.LegacyOptionsClient) (exporters[i])).setOptions(myOptions);\r\n        }\r\n    }\r\n    addPage(new ExporterChooserPage(exporters, myState));\r\n    addPage(new FileChooserPage(myState, myProject));\r\n}'),(1725,'Chart resourceChart','net.sourceforge.ganttproject.chart.Chart',159,262,'net.sourceforge.ganttproject.export.ExportFileWizardImpl',2384,'net.sourceforge.ganttproject.export.ExportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileWizardImpl(UIFacade uiFacade, IGanttProject project, Chart ganttChart, Chart resourceChart, Chart visibleChart, GanttOptions options) {\r\n    super(uiFacade, GanttLanguage.getInstance().getText(\"exportWizard.dialog.title\"));\r\n    myUIFacade = uiFacade;\r\n    myProject = project;\r\n    myGanttChart = ganttChart;\r\n    myResourceChart = resourceChart;\r\n    myVisibleChart = visibleChart;\r\n    myOptions = options;\r\n    myState = new ExportFileWizardImpl.State(project.getDocument());\r\n    if ((ExportFileWizardImpl.ourExporters) == null) {\r\n        ExportFileWizardImpl.ourExporters = Mediator.getPluginManager().getExporters();\r\n    }\r\n    Exporter[] exporters = ExportFileWizardImpl.ourExporters;\r\n    myState.setExporter(((ExportFileWizardImpl.ourLastSelectedExporter) == null ? exporters[0] : ExportFileWizardImpl.ourLastSelectedExporter));\r\n    for (int i = 0; i < (exporters.length); i++) {\r\n        exporters[i].setContext(project, uiFacade);\r\n        if ((exporters[i]) instanceof ExportFileWizardImpl.LegacyOptionsClient) {\r\n            ((ExportFileWizardImpl.LegacyOptionsClient) (exporters[i])).setOptions(myOptions);\r\n        }\r\n    }\r\n    addPage(new ExporterChooserPage(exporters, myState));\r\n    addPage(new FileChooserPage(myState, myProject));\r\n}'),(1726,'Chart visibleChart','net.sourceforge.ganttproject.chart.Chart',159,262,'net.sourceforge.ganttproject.export.ExportFileWizardImpl',2384,'net.sourceforge.ganttproject.export.ExportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileWizardImpl(UIFacade uiFacade, IGanttProject project, Chart ganttChart, Chart resourceChart, Chart visibleChart, GanttOptions options) {\r\n    super(uiFacade, GanttLanguage.getInstance().getText(\"exportWizard.dialog.title\"));\r\n    myUIFacade = uiFacade;\r\n    myProject = project;\r\n    myGanttChart = ganttChart;\r\n    myResourceChart = resourceChart;\r\n    myVisibleChart = visibleChart;\r\n    myOptions = options;\r\n    myState = new ExportFileWizardImpl.State(project.getDocument());\r\n    if ((ExportFileWizardImpl.ourExporters) == null) {\r\n        ExportFileWizardImpl.ourExporters = Mediator.getPluginManager().getExporters();\r\n    }\r\n    Exporter[] exporters = ExportFileWizardImpl.ourExporters;\r\n    myState.setExporter(((ExportFileWizardImpl.ourLastSelectedExporter) == null ? exporters[0] : ExportFileWizardImpl.ourLastSelectedExporter));\r\n    for (int i = 0; i < (exporters.length); i++) {\r\n        exporters[i].setContext(project, uiFacade);\r\n        if ((exporters[i]) instanceof ExportFileWizardImpl.LegacyOptionsClient) {\r\n            ((ExportFileWizardImpl.LegacyOptionsClient) (exporters[i])).setOptions(myOptions);\r\n        }\r\n    }\r\n    addPage(new ExporterChooserPage(exporters, myState));\r\n    addPage(new FileChooserPage(myState, myProject));\r\n}'),(1727,'GanttOptions options','net.sourceforge.ganttproject.GanttOptions',48,262,'net.sourceforge.ganttproject.export.ExportFileWizardImpl',2384,'net.sourceforge.ganttproject.export.ExportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttOptions)',0,'public ExportFileWizardImpl(UIFacade uiFacade, IGanttProject project, Chart ganttChart, Chart resourceChart, Chart visibleChart, GanttOptions options) {\r\n    super(uiFacade, GanttLanguage.getInstance().getText(\"exportWizard.dialog.title\"));\r\n    myUIFacade = uiFacade;\r\n    myProject = project;\r\n    myGanttChart = ganttChart;\r\n    myResourceChart = resourceChart;\r\n    myVisibleChart = visibleChart;\r\n    myOptions = options;\r\n    myState = new ExportFileWizardImpl.State(project.getDocument());\r\n    if ((ExportFileWizardImpl.ourExporters) == null) {\r\n        ExportFileWizardImpl.ourExporters = Mediator.getPluginManager().getExporters();\r\n    }\r\n    Exporter[] exporters = ExportFileWizardImpl.ourExporters;\r\n    myState.setExporter(((ExportFileWizardImpl.ourLastSelectedExporter) == null ? exporters[0] : ExportFileWizardImpl.ourLastSelectedExporter));\r\n    for (int i = 0; i < (exporters.length); i++) {\r\n        exporters[i].setContext(project, uiFacade);\r\n        if ((exporters[i]) instanceof ExportFileWizardImpl.LegacyOptionsClient) {\r\n            ((ExportFileWizardImpl.LegacyOptionsClient) (exporters[i])).setOptions(myOptions);\r\n        }\r\n    }\r\n    addPage(new ExporterChooserPage(exporters, myState));\r\n    addPage(new FileChooserPage(myState, myProject));\r\n}'),(1728,'Document projectDocument','net.sourceforge.ganttproject.document.Document',233,261,'net.sourceforge.ganttproject.export.ExportFileWizardImpl$State',2394,'net.sourceforge.ganttproject.export.ExportFileWizardImpl$State.-init-(net.sourceforge.ganttproject.document.Document)',0,'State(Document projectDocument) {\r\n    // myProjectDocument = projectDocument;\r\n}'),(1729,'File[] exportedFiles','java.io.File[]',0,259,'net.sourceforge.ganttproject.export.ExportFileWizardImpl$ExportFinalizationJobImpl',2392,'net.sourceforge.ganttproject.export.ExportFileWizardImpl$ExportFinalizationJobImpl.run(java.io.File[])',0,'public void run(File[] exportedFiles) {\r\n    if ((myState.getPublishInWebOption().isChecked()) && ((exportedFiles.length) > 0)) {\r\n        WebPublisher publisher = new WebPublisher();\r\n        publisher.run(exportedFiles, myProject.getDocumentManager().getFTPOptions(), getUIFacade());\r\n    }\r\n}'),(1730,'String text','java.lang.String',0,262,'net.sourceforge.ganttproject.export.ExportFileWizardImpl',2390,'net.sourceforge.ganttproject.export.ExportFileWizardImpl.setStatusText(java.lang.String)',0,'private void setStatusText(String text) {\r\n    getUIFacade().setStatusText(text);\r\n}'),(1731,'File file','java.io.File',0,261,'net.sourceforge.ganttproject.export.ExportFileWizardImpl$State',2399,'net.sourceforge.ganttproject.export.ExportFileWizardImpl$State.setFile(java.io.File)',0,'public void setFile(File file) {\r\n    myFile = file;\r\n    this.adjustButtonState();\r\n}'),(1732,'Exporter exporter','net.sourceforge.ganttproject.export.Exporter',264,261,'net.sourceforge.ganttproject.export.ExportFileWizardImpl$State',2398,'net.sourceforge.ganttproject.export.ExportFileWizardImpl$State.setExporter(net.sourceforge.ganttproject.export.Exporter)',0,'void setExporter(Exporter exporter) {\r\n    myExporter = exporter;\r\n    ExportFileWizardImpl.ourLastSelectedExporter = exporter;\r\n}'),(1733,'GanttOptions options','net.sourceforge.ganttproject.GanttOptions',48,260,'net.sourceforge.ganttproject.export.ExportFileWizardImpl$LegacyOptionsClient',2393,'net.sourceforge.ganttproject.export.ExportFileWizardImpl$LegacyOptionsClient.setOptions(net.sourceforge.ganttproject.GanttOptions)',0,'void setOptions(GanttOptions options);'),(1734,'File[] exportedFiles','java.io.File[]',0,263,'net.sourceforge.ganttproject.export.ExportFinalizationJob',2400,'net.sourceforge.ganttproject.export.ExportFinalizationJob.run(java.io.File[])',0,'void run(File[] exportedFiles);'),(1735,'File outputFile','java.io.File',0,264,'net.sourceforge.ganttproject.export.Exporter',2407,'net.sourceforge.ganttproject.export.Exporter.run(java.io.File,net.sourceforge.ganttproject.export.ExportFinalizationJob)',0,'void run(File outputFile, ExportFinalizationJob finalizationJob) throws Exception;'),(1736,'ExportFinalizationJob finalizationJob','net.sourceforge.ganttproject.export.ExportFinalizationJob',263,264,'net.sourceforge.ganttproject.export.Exporter',2407,'net.sourceforge.ganttproject.export.Exporter.run(java.io.File,net.sourceforge.ganttproject.export.ExportFinalizationJob)',0,'void run(File outputFile, ExportFinalizationJob finalizationJob) throws Exception;'),(1737,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,264,'net.sourceforge.ganttproject.export.Exporter',2408,'net.sourceforge.ganttproject.export.Exporter.setContext(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'void setContext(IGanttProject project, UIFacade uiFacade);'),(1738,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,264,'net.sourceforge.ganttproject.export.Exporter',2408,'net.sourceforge.ganttproject.export.Exporter.setContext(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'void setContext(IGanttProject project, UIFacade uiFacade);'),(1739,'Exporter[] exporters','net.sourceforge.ganttproject.export.Exporter[]',0,265,'net.sourceforge.ganttproject.export.ExporterChooserPage',2409,'net.sourceforge.ganttproject.export.ExporterChooserPage.-init-(net.sourceforge.ganttproject.export.Exporter[],net.sourceforge.ganttproject.export.ExportFileWizardImpl$State)',0,'/**\r\n *\r\n */\r\nExporterChooserPage(Exporter[] exporters, ExportFileWizardImpl.State state) {\r\n    myExporters = exporters;\r\n    myState = state;\r\n}'),(1740,'ExportFileWizardImpl.State state','net.sourceforge.ganttproject.export.ExportFileWizardImpl$State',261,265,'net.sourceforge.ganttproject.export.ExporterChooserPage',2409,'net.sourceforge.ganttproject.export.ExporterChooserPage.-init-(net.sourceforge.ganttproject.export.Exporter[],net.sourceforge.ganttproject.export.ExportFileWizardImpl$State)',0,'/**\r\n *\r\n */\r\nExporterChooserPage(Exporter[] exporters, ExportFileWizardImpl.State state) {\r\n    myExporters = exporters;\r\n    myState = state;\r\n}'),(1741,'boolean b','boolean',0,265,'net.sourceforge.ganttproject.export.ExporterChooserPage',2413,'net.sourceforge.ganttproject.export.ExporterChooserPage.setActive(boolean)',0,'public void setActive(boolean b) {\r\n    if (false == b) {\r\n        for (int i = 0; i < (myExporters.length); i++) {\r\n            if ((myExporters[i].getOptions()) != null) {\r\n                myExporters[i].getOptions().commit();\r\n            }\r\n        }\r\n    } else {\r\n        for (int i = 0; i < (myExporters.length); i++) {\r\n            if ((myExporters[i].getOptions()) != null) {\r\n                myExporters[i].getOptions().lock();\r\n            }\r\n        }\r\n    }\r\n}'),(1742,'File outputFile','java.io.File',0,266,'net.sourceforge.ganttproject.export.ExporterToCSV',2421,'net.sourceforge.ganttproject.export.ExporterToCSV.run(java.io.File,net.sourceforge.ganttproject.export.ExportFinalizationJob)',0,'public void run(File outputFile, ExportFinalizationJob finalizationJob) throws Exception {\r\n    // TODO Auto-generated method stub\r\n    if (!(outputFile.exists())) {\r\n        outputFile.createNewFile();\r\n    }\r\n    GanttCSVExport legacyExporter = new GanttCSVExport(myProject, myOptions.getCSVOptions());\r\n    legacyExporter.save(new FileOutputStream(outputFile));\r\n    finalizationJob.run(new File[]{ outputFile });\r\n}'),(1743,'ExportFinalizationJob finalizationJob','net.sourceforge.ganttproject.export.ExportFinalizationJob',263,266,'net.sourceforge.ganttproject.export.ExporterToCSV',2421,'net.sourceforge.ganttproject.export.ExporterToCSV.run(java.io.File,net.sourceforge.ganttproject.export.ExportFinalizationJob)',0,'public void run(File outputFile, ExportFinalizationJob finalizationJob) throws Exception {\r\n    // TODO Auto-generated method stub\r\n    if (!(outputFile.exists())) {\r\n        outputFile.createNewFile();\r\n    }\r\n    GanttCSVExport legacyExporter = new GanttCSVExport(myProject, myOptions.getCSVOptions());\r\n    legacyExporter.save(new FileOutputStream(outputFile));\r\n    finalizationJob.run(new File[]{ outputFile });\r\n}'),(1744,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,266,'net.sourceforge.ganttproject.export.ExporterToCSV',2422,'net.sourceforge.ganttproject.export.ExporterToCSV.setContext(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public void setContext(IGanttProject project, UIFacade uiFacade) {\r\n    myProject = project;\r\n}'),(1745,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,266,'net.sourceforge.ganttproject.export.ExporterToCSV',2422,'net.sourceforge.ganttproject.export.ExporterToCSV.setContext(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public void setContext(IGanttProject project, UIFacade uiFacade) {\r\n    myProject = project;\r\n}'),(1746,'GanttOptions options','net.sourceforge.ganttproject.GanttOptions',48,266,'net.sourceforge.ganttproject.export.ExporterToCSV',2423,'net.sourceforge.ganttproject.export.ExporterToCSV.setOptions(net.sourceforge.ganttproject.GanttOptions)',0,'public void setOptions(GanttOptions options) {\r\n    myOptions = options;\r\n}'),(1747,'String value','java.lang.String',0,267,'net.sourceforge.ganttproject.export.ExporterToImage$FileTypeOption',2440,'net.sourceforge.ganttproject.export.ExporterToImage$FileTypeOption.setValue(java.lang.String)',0,'public void setValue(String value) {\r\n    myValue = value;\r\n}'),(1748,'String value','java.lang.String',0,267,'net.sourceforge.ganttproject.export.ExporterToImage$FileTypeOption',2438,'net.sourceforge.ganttproject.export.ExporterToImage$FileTypeOption.loadPersistentValue(java.lang.String)',0,'public void loadPersistentValue(String value) {\r\n}'),(1749,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,268,'net.sourceforge.ganttproject.export.ExporterToImage',2432,'net.sourceforge.ganttproject.export.ExporterToImage.setContext(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public void setContext(IGanttProject project, UIFacade uiFacade) {\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myGanttChart = uiFacade.getGanttChart().createCopy();\r\n}'),(1750,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,268,'net.sourceforge.ganttproject.export.ExporterToImage',2432,'net.sourceforge.ganttproject.export.ExporterToImage.setContext(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public void setContext(IGanttProject project, UIFacade uiFacade) {\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myGanttChart = uiFacade.getGanttChart().createCopy();\r\n}'),(1751,'File outputFile','java.io.File',0,268,'net.sourceforge.ganttproject.export.ExporterToImage',2431,'net.sourceforge.ganttproject.export.ExporterToImage.run(java.io.File,net.sourceforge.ganttproject.export.ExportFinalizationJob)',0,'public void run(File outputFile, ExportFinalizationJob finalizationJob) throws Exception {\r\n    Chart chart = myUIFacade.getActiveChart();\r\n    if (chart == null) {\r\n        chart = myUIFacade.getGanttChart();\r\n    }\r\n    RenderedImage renderedImage = chart.getRenderedImage(new GanttExportSettings());\r\n    ImageIO.write(renderedImage, myFileTypeOption.proposeFileExtension(), outputFile);\r\n    finalizationJob.run(new File[]{ outputFile });\r\n}'),(1752,'ExportFinalizationJob finalizationJob','net.sourceforge.ganttproject.export.ExportFinalizationJob',263,268,'net.sourceforge.ganttproject.export.ExporterToImage',2431,'net.sourceforge.ganttproject.export.ExporterToImage.run(java.io.File,net.sourceforge.ganttproject.export.ExportFinalizationJob)',0,'public void run(File outputFile, ExportFinalizationJob finalizationJob) throws Exception {\r\n    Chart chart = myUIFacade.getActiveChart();\r\n    if (chart == null) {\r\n        chart = myUIFacade.getGanttChart();\r\n    }\r\n    RenderedImage renderedImage = chart.getRenderedImage(new GanttExportSettings());\r\n    ImageIO.write(renderedImage, myFileTypeOption.proposeFileExtension(), outputFile);\r\n    finalizationJob.run(new File[]{ outputFile });\r\n}'),(1753,'ExportFileWizardImpl.State state','net.sourceforge.ganttproject.export.ExportFileWizardImpl$State',261,269,'net.sourceforge.ganttproject.export.FileChooserPage',2441,'net.sourceforge.ganttproject.export.FileChooserPage.-init-(net.sourceforge.ganttproject.export.ExportFileWizardImpl$State,net.sourceforge.ganttproject.IGanttProject)',0,'FileChooserPage(ExportFileWizardImpl.State state, IGanttProject project) {\r\n    myState = state;\r\n    myProject = project;\r\n    myWebPublishingGroup = new GPOptionGroup(\"exporter.webPublishing\", new GPOption[]{ state.getPublishInWebOption() });\r\n    myWebPublishingGroup.setTitled(false);\r\n    // myOptionsBuilder = new OptionsPageBuilder();\r\n}'),(1754,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,269,'net.sourceforge.ganttproject.export.FileChooserPage',2441,'net.sourceforge.ganttproject.export.FileChooserPage.-init-(net.sourceforge.ganttproject.export.ExportFileWizardImpl$State,net.sourceforge.ganttproject.IGanttProject)',0,'FileChooserPage(ExportFileWizardImpl.State state, IGanttProject project) {\r\n    myState = state;\r\n    myProject = project;\r\n    myWebPublishingGroup = new GPOptionGroup(\"exporter.webPublishing\", new GPOption[]{ state.getPublishInWebOption() });\r\n    myWebPublishingGroup.setTitled(false);\r\n    // myOptionsBuilder = new OptionsPageBuilder();\r\n}'),(1755,'File file','java.io.File',0,269,'net.sourceforge.ganttproject.export.FileChooserPage',2446,'net.sourceforge.ganttproject.export.FileChooserPage.onFileChosen(java.io.File)',0,'protected void onFileChosen(File file) {\r\n    String proposedExtension = myState.getExporter().proposeFileExtension();\r\n    if (proposedExtension != null) {\r\n        if (false == (file.getName().toLowerCase().endsWith(proposedExtension))) {\r\n            file = new File((((file.getAbsolutePath()) + \".\") + proposedExtension));\r\n        }\r\n    }\r\n    myState.setFile(file);\r\n}'),(1756,'boolean b','boolean',0,269,'net.sourceforge.ganttproject.export.FileChooserPage',2449,'net.sourceforge.ganttproject.export.FileChooserPage.setActive(boolean)',0,'public void setActive(boolean b) {\r\n    if (b == false) {\r\n        myState.setFile(getSelectedFile());\r\n        FileChooserPage.ourLastSelectedFile = getSelectedFile();\r\n        super.setActive(b);\r\n    } else {\r\n        super.setActive(b);\r\n        File proposedFile = proposeOutputFile(myProject);\r\n        if (proposedFile == null) {\r\n            setSelectedFile(myState.getFile());\r\n            return;\r\n        }\r\n        if (false == (proposedFile.equals(getSelectedFile()))) {\r\n            setSelectedFile(proposedFile);\r\n            myState.setFile(proposedFile);\r\n        }\r\n    }\r\n}'),(1757,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,269,'net.sourceforge.ganttproject.export.FileChooserPage',2447,'net.sourceforge.ganttproject.export.FileChooserPage.proposeOutputFile(net.sourceforge.ganttproject.IGanttProject)',0,'public File proposeOutputFile(IGanttProject project) {\r\n    return FileChooserPage.proposeOutputFile(project, myState.getExporter());\r\n}'),(1758,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,269,'net.sourceforge.ganttproject.export.FileChooserPage',2448,'net.sourceforge.ganttproject.export.FileChooserPage.proposeOutputFile(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.export.Exporter)',0,'static File proposeOutputFile(IGanttProject project, Exporter exporter) {\r\n    String proposedExtension = exporter.proposeFileExtension();\r\n    if (proposedExtension == null) {\r\n        return null;\r\n    }\r\n    if ((FileChooserPage.ourLastSelectedFile) != null) {\r\n        String name = FileChooserPage.ourLastSelectedFile.getAbsolutePath();\r\n        int lastDot = name.lastIndexOf(.);\r\n        String extension = (lastDot >= 0) ? name.substring((lastDot + 1)) : \"\";\r\n        if (extension.equals(proposedExtension)) {\r\n            return FileChooserPage.ourLastSelectedFile;\r\n        }\r\n    }\r\n    File userHome = new File(System.getProperty(\"user.home\"));\r\n    File result = new File(userHome, (((project.getProjectName()) + \".\") + proposedExtension));\r\n    Document projectDocument = project.getDocument();\r\n    if (projectDocument != null) {\r\n        File localFile = new File(projectDocument.getFilePath());\r\n        if (localFile.exists()) {\r\n            String name = localFile.getAbsolutePath();\r\n            int lastDot = name.lastIndexOf(.);\r\n            name = ((name.substring(0, lastDot)) + \".\") + proposedExtension;\r\n            result = new File(name);\r\n        } else {\r\n            File directory = localFile.getParentFile();\r\n            if (directory.exists()) {\r\n                result = new File(directory, (((project.getProjectName()) + \".\") + proposedExtension));\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}'),(1759,'Exporter exporter','net.sourceforge.ganttproject.export.Exporter',264,269,'net.sourceforge.ganttproject.export.FileChooserPage',2448,'net.sourceforge.ganttproject.export.FileChooserPage.proposeOutputFile(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.export.Exporter)',0,'static File proposeOutputFile(IGanttProject project, Exporter exporter) {\r\n    String proposedExtension = exporter.proposeFileExtension();\r\n    if (proposedExtension == null) {\r\n        return null;\r\n    }\r\n    if ((FileChooserPage.ourLastSelectedFile) != null) {\r\n        String name = FileChooserPage.ourLastSelectedFile.getAbsolutePath();\r\n        int lastDot = name.lastIndexOf(.);\r\n        String extension = (lastDot >= 0) ? name.substring((lastDot + 1)) : \"\";\r\n        if (extension.equals(proposedExtension)) {\r\n            return FileChooserPage.ourLastSelectedFile;\r\n        }\r\n    }\r\n    File userHome = new File(System.getProperty(\"user.home\"));\r\n    File result = new File(userHome, (((project.getProjectName()) + \".\") + proposedExtension));\r\n    Document projectDocument = project.getDocument();\r\n    if (projectDocument != null) {\r\n        File localFile = new File(projectDocument.getFilePath());\r\n        if (localFile.exists()) {\r\n            String name = localFile.getAbsolutePath();\r\n            int lastDot = name.lastIndexOf(.);\r\n            name = ((name.substring(0, lastDot)) + \".\") + proposedExtension;\r\n            result = new File(name);\r\n        } else {\r\n            File directory = localFile.getParentFile();\r\n            if (directory.exists()) {\r\n                result = new File(directory, (((project.getProjectName()) + \".\") + proposedExtension));\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}'),(1760,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,270,'net.sourceforge.ganttproject.export.TaskVisitor',2453,'net.sourceforge.ganttproject.export.TaskVisitor.visit(net.sourceforge.ganttproject.task.TaskManager)',0,'public String visit(TaskManager taskManager) throws Exception {\r\n    StringBuffer out = new StringBuffer();\r\n    visit(taskManager.getTaskHierarchy().getRootTask(), 0, out);\r\n    return out.toString();\r\n}'),(1761,'Task task','net.sourceforge.ganttproject.task.Task',548,270,'net.sourceforge.ganttproject.export.TaskVisitor',2452,'net.sourceforge.ganttproject.export.TaskVisitor.visit(net.sourceforge.ganttproject.task.Task,int,java.lang.StringBuffer)',0,'void visit(Task task, int depth, StringBuffer out) throws Exception {\r\n    Task[] nestedTasks = task.getManager().getTaskHierarchy().getNestedTasks(task);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        Task next = nestedTasks[i];\r\n        String nextSerialized = serializeTask(next, depth);\r\n        out.append(nextSerialized);\r\n        visit(next, (depth + 1), out);\r\n    }\r\n}'),(1762,'int depth','int',0,270,'net.sourceforge.ganttproject.export.TaskVisitor',2452,'net.sourceforge.ganttproject.export.TaskVisitor.visit(net.sourceforge.ganttproject.task.Task,int,java.lang.StringBuffer)',0,'void visit(Task task, int depth, StringBuffer out) throws Exception {\r\n    Task[] nestedTasks = task.getManager().getTaskHierarchy().getNestedTasks(task);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        Task next = nestedTasks[i];\r\n        String nextSerialized = serializeTask(next, depth);\r\n        out.append(nextSerialized);\r\n        visit(next, (depth + 1), out);\r\n    }\r\n}'),(1763,'StringBuffer out','java.lang.StringBuffer',0,270,'net.sourceforge.ganttproject.export.TaskVisitor',2452,'net.sourceforge.ganttproject.export.TaskVisitor.visit(net.sourceforge.ganttproject.task.Task,int,java.lang.StringBuffer)',0,'void visit(Task task, int depth, StringBuffer out) throws Exception {\r\n    Task[] nestedTasks = task.getManager().getTaskHierarchy().getNestedTasks(task);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        Task next = nestedTasks[i];\r\n        String nextSerialized = serializeTask(next, depth);\r\n        out.append(nextSerialized);\r\n        visit(next, (depth + 1), out);\r\n    }\r\n}'),(1764,'Task t','net.sourceforge.ganttproject.task.Task',548,270,'net.sourceforge.ganttproject.export.TaskVisitor',2451,'net.sourceforge.ganttproject.export.TaskVisitor.serializeTask(net.sourceforge.ganttproject.task.Task,int)',0,'protected abstract String serializeTask(Task t, int depth) throws Exception;'),(1765,'int depth','int',0,270,'net.sourceforge.ganttproject.export.TaskVisitor',2451,'net.sourceforge.ganttproject.export.TaskVisitor.serializeTask(net.sourceforge.ganttproject.task.Task,int)',0,'protected abstract String serializeTask(Task t, int depth) throws Exception;'),(1766,'final File[] exportFiles','java.io.File[]',0,271,'net.sourceforge.ganttproject.export.WebPublisher',2457,'net.sourceforge.ganttproject.export.WebPublisher.run(java.io.File[],net.sourceforge.ganttproject.document.DocumentManager$FTPOptions,net.sourceforge.ganttproject.gui.UIFacade)',0,'public void run(final File[] exportFiles, final DocumentManager.FTPOptions options, UIFacade uiFacade) {\r\n    IJobManager jobManager = org.eclipse.core.runtime.Platform.getJobManager();\r\n    IProgressMonitor monitor = jobManager.createProgressGroup();\r\n    Job startingJob = new Job(\"starting\") {\r\n        protected IStatus run(IProgressMonitor monitor) {\r\n            monitor.beginTask(\"Publishing files on FTP\", exportFiles.length);\r\n            try {\r\n                final URL baseUrl = buildURL(options);\r\n                if (baseUrl == null) {\r\n                    throw new RuntimeException(\"Failed to discover your FTP settings. Please make sure that you specified server name and user name\");\r\n                }\r\n                for (int i = 0; i < (exportFiles.length); i++) {\r\n                    Job nextJob = createTransferJob(baseUrl, exportFiles[i]);\r\n                    nextJob.setProgressGroup(monitor, 1);\r\n                    nextJob.schedule();\r\n                    nextJob.join();\r\n                }\r\n                Job finishingJob = new Job(\"finishing\") {\r\n                    protected IStatus run(IProgressMonitor monitor) {\r\n                        monitor.done();\r\n                        return Status.OK_STATUS;\r\n                    }\r\n                };\r\n                finishingJob.setProgressGroup(monitor, 0);\r\n                finishingJob.schedule();\r\n                finishingJob.join();\r\n            } catch (IOException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            } catch (InterruptedException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n            return Status.OK_STATUS;\r\n        }\r\n\r\n        private URL buildURL(DocumentManager.FTPOptions options) {\r\n            if ((options.getServerName().getValue()) == null) {\r\n                return null;\r\n            }\r\n            StringBuffer spec = new StringBuffer(\"ftp://\");\r\n            boolean hasUserSpec = false;\r\n            if ((options.getUserName().getValue()) != null) {\r\n                spec.append(options.getUserName().getValue());\r\n                hasUserSpec = true;\r\n            }\r\n            if ((options.getPassword().getValue()) != null) {\r\n                spec.append(:).append(options.getPassword().getValue());\r\n            }\r\n            if (hasUserSpec) {\r\n                spec.append(@);\r\n            }\r\n            spec.append(options.getServerName().getValue()).append(/);\r\n            if ((options.getDirectoryName().getValue()) != null) {\r\n                spec.append(options.getDirectoryName().getValue()).append(/);\r\n            }\r\n            try {\r\n                URL result = new URL(spec.toString());\r\n                return result;\r\n            } catch (MalformedURLException e) {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    startingJob.setProgressGroup(monitor, 0);\r\n    startingJob.schedule();\r\n}'),(1767,'final DocumentManager.FTPOptions options','net.sourceforge.ganttproject.document.DocumentManager$FTPOptions',236,271,'net.sourceforge.ganttproject.export.WebPublisher',2457,'net.sourceforge.ganttproject.export.WebPublisher.run(java.io.File[],net.sourceforge.ganttproject.document.DocumentManager$FTPOptions,net.sourceforge.ganttproject.gui.UIFacade)',0,'public void run(final File[] exportFiles, final DocumentManager.FTPOptions options, UIFacade uiFacade) {\r\n    IJobManager jobManager = org.eclipse.core.runtime.Platform.getJobManager();\r\n    IProgressMonitor monitor = jobManager.createProgressGroup();\r\n    Job startingJob = new Job(\"starting\") {\r\n        protected IStatus run(IProgressMonitor monitor) {\r\n            monitor.beginTask(\"Publishing files on FTP\", exportFiles.length);\r\n            try {\r\n                final URL baseUrl = buildURL(options);\r\n                if (baseUrl == null) {\r\n                    throw new RuntimeException(\"Failed to discover your FTP settings. Please make sure that you specified server name and user name\");\r\n                }\r\n                for (int i = 0; i < (exportFiles.length); i++) {\r\n                    Job nextJob = createTransferJob(baseUrl, exportFiles[i]);\r\n                    nextJob.setProgressGroup(monitor, 1);\r\n                    nextJob.schedule();\r\n                    nextJob.join();\r\n                }\r\n                Job finishingJob = new Job(\"finishing\") {\r\n                    protected IStatus run(IProgressMonitor monitor) {\r\n                        monitor.done();\r\n                        return Status.OK_STATUS;\r\n                    }\r\n                };\r\n                finishingJob.setProgressGroup(monitor, 0);\r\n                finishingJob.schedule();\r\n                finishingJob.join();\r\n            } catch (IOException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            } catch (InterruptedException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n            return Status.OK_STATUS;\r\n        }\r\n\r\n        private URL buildURL(DocumentManager.FTPOptions options) {\r\n            if ((options.getServerName().getValue()) == null) {\r\n                return null;\r\n            }\r\n            StringBuffer spec = new StringBuffer(\"ftp://\");\r\n            boolean hasUserSpec = false;\r\n            if ((options.getUserName().getValue()) != null) {\r\n                spec.append(options.getUserName().getValue());\r\n                hasUserSpec = true;\r\n            }\r\n            if ((options.getPassword().getValue()) != null) {\r\n                spec.append(:).append(options.getPassword().getValue());\r\n            }\r\n            if (hasUserSpec) {\r\n                spec.append(@);\r\n            }\r\n            spec.append(options.getServerName().getValue()).append(/);\r\n            if ((options.getDirectoryName().getValue()) != null) {\r\n                spec.append(options.getDirectoryName().getValue()).append(/);\r\n            }\r\n            try {\r\n                URL result = new URL(spec.toString());\r\n                return result;\r\n            } catch (MalformedURLException e) {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    startingJob.setProgressGroup(monitor, 0);\r\n    startingJob.schedule();\r\n}'),(1768,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,271,'net.sourceforge.ganttproject.export.WebPublisher',2457,'net.sourceforge.ganttproject.export.WebPublisher.run(java.io.File[],net.sourceforge.ganttproject.document.DocumentManager$FTPOptions,net.sourceforge.ganttproject.gui.UIFacade)',0,'public void run(final File[] exportFiles, final DocumentManager.FTPOptions options, UIFacade uiFacade) {\r\n    IJobManager jobManager = org.eclipse.core.runtime.Platform.getJobManager();\r\n    IProgressMonitor monitor = jobManager.createProgressGroup();\r\n    Job startingJob = new Job(\"starting\") {\r\n        protected IStatus run(IProgressMonitor monitor) {\r\n            monitor.beginTask(\"Publishing files on FTP\", exportFiles.length);\r\n            try {\r\n                final URL baseUrl = buildURL(options);\r\n                if (baseUrl == null) {\r\n                    throw new RuntimeException(\"Failed to discover your FTP settings. Please make sure that you specified server name and user name\");\r\n                }\r\n                for (int i = 0; i < (exportFiles.length); i++) {\r\n                    Job nextJob = createTransferJob(baseUrl, exportFiles[i]);\r\n                    nextJob.setProgressGroup(monitor, 1);\r\n                    nextJob.schedule();\r\n                    nextJob.join();\r\n                }\r\n                Job finishingJob = new Job(\"finishing\") {\r\n                    protected IStatus run(IProgressMonitor monitor) {\r\n                        monitor.done();\r\n                        return Status.OK_STATUS;\r\n                    }\r\n                };\r\n                finishingJob.setProgressGroup(monitor, 0);\r\n                finishingJob.schedule();\r\n                finishingJob.join();\r\n            } catch (IOException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            } catch (InterruptedException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n            return Status.OK_STATUS;\r\n        }\r\n\r\n        private URL buildURL(DocumentManager.FTPOptions options) {\r\n            if ((options.getServerName().getValue()) == null) {\r\n                return null;\r\n            }\r\n            StringBuffer spec = new StringBuffer(\"ftp://\");\r\n            boolean hasUserSpec = false;\r\n            if ((options.getUserName().getValue()) != null) {\r\n                spec.append(options.getUserName().getValue());\r\n                hasUserSpec = true;\r\n            }\r\n            if ((options.getPassword().getValue()) != null) {\r\n                spec.append(:).append(options.getPassword().getValue());\r\n            }\r\n            if (hasUserSpec) {\r\n                spec.append(@);\r\n            }\r\n            spec.append(options.getServerName().getValue()).append(/);\r\n            if ((options.getDirectoryName().getValue()) != null) {\r\n                spec.append(options.getDirectoryName().getValue()).append(/);\r\n            }\r\n            try {\r\n                URL result = new URL(spec.toString());\r\n                return result;\r\n            } catch (MalformedURLException e) {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    startingJob.setProgressGroup(monitor, 0);\r\n    startingJob.schedule();\r\n}'),(1769,'URL baseUrl','java.net.URL',0,271,'net.sourceforge.ganttproject.export.WebPublisher',2456,'net.sourceforge.ganttproject.export.WebPublisher.createTransferJob(java.net.URL,java.io.File)',0,'private Job createTransferJob(URL baseUrl, final File file) throws IOException {\r\n    final URL outUrl = new URL(baseUrl, file.getName());\r\n    Job result = new Job((\"transfer file \" + (file.getName()))) {\r\n        protected IStatus run(IProgressMonitor monitor) {\r\n            byte[] buffer = new byte[((int) (file.length()))];\r\n            FileInputStream inputStream = null;\r\n            OutputStream outStream = null;\r\n            try {\r\n                inputStream = new FileInputStream(file);\r\n                inputStream.read(buffer);\r\n                GPLogger.log((\"writing to file=\" + outUrl));\r\n                outStream = outUrl.openConnection().getOutputStream();\r\n                outStream.write(buffer);\r\n                outStream.flush();\r\n                monitor.worked(1);\r\n                return Status.OK_STATUS;\r\n            } catch (IOException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n                return Status.CANCEL_STATUS;\r\n            } finally {\r\n                if (inputStream != null) {\r\n                    try {\r\n                        inputStream.close();\r\n                    } catch (IOException e) {\r\n                        if (!(GPLogger.log(e))) {\r\n                            e.printStackTrace(System.err);\r\n                        }\r\n                    }\r\n                }\r\n                if (outStream != null) {\r\n                    try {\r\n                        outStream.close();\r\n                    } catch (IOException e) {\r\n                        if (!(GPLogger.log(e))) {\r\n                            e.printStackTrace(System.err);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return result;\r\n}'),(1770,'final File file','java.io.File',0,271,'net.sourceforge.ganttproject.export.WebPublisher',2456,'net.sourceforge.ganttproject.export.WebPublisher.createTransferJob(java.net.URL,java.io.File)',0,'private Job createTransferJob(URL baseUrl, final File file) throws IOException {\r\n    final URL outUrl = new URL(baseUrl, file.getName());\r\n    Job result = new Job((\"transfer file \" + (file.getName()))) {\r\n        protected IStatus run(IProgressMonitor monitor) {\r\n            byte[] buffer = new byte[((int) (file.length()))];\r\n            FileInputStream inputStream = null;\r\n            OutputStream outStream = null;\r\n            try {\r\n                inputStream = new FileInputStream(file);\r\n                inputStream.read(buffer);\r\n                GPLogger.log((\"writing to file=\" + outUrl));\r\n                outStream = outUrl.openConnection().getOutputStream();\r\n                outStream.write(buffer);\r\n                outStream.flush();\r\n                monitor.worked(1);\r\n                return Status.OK_STATUS;\r\n            } catch (IOException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n                return Status.CANCEL_STATUS;\r\n            } finally {\r\n                if (inputStream != null) {\r\n                    try {\r\n                        inputStream.close();\r\n                    } catch (IOException e) {\r\n                        if (!(GPLogger.log(e))) {\r\n                            e.printStackTrace(System.err);\r\n                        }\r\n                    }\r\n                }\r\n                if (outStream != null) {\r\n                    try {\r\n                        outStream.close();\r\n                    } catch (IOException e) {\r\n                        if (!(GPLogger.log(e))) {\r\n                            e.printStackTrace(System.err);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return result;\r\n}'),(1771,'String fileExtension','java.lang.String',0,272,'net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter',2458,'net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.-init-(java.lang.String,java.lang.String)',0,'public ExtensionBasedFileFilter(String fileExtension, String description) {\r\n    myDescription = description;\r\n    myPattern = Pattern.compile(fileExtension);\r\n}'),(1772,'String description','java.lang.String',0,272,'net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter',2458,'net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.-init-(java.lang.String,java.lang.String)',0,'public ExtensionBasedFileFilter(String fileExtension, String description) {\r\n    myDescription = description;\r\n    myPattern = Pattern.compile(fileExtension);\r\n}'),(1773,'File f','java.io.File',0,272,'net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter',2459,'net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.accept(java.io.File)',0,'public boolean accept(File f) {\r\n    if (f.isDirectory()) {\r\n        return true;\r\n    }\r\n    return matches(ExtensionBasedFileFilter.getExtension(f));\r\n}'),(1774,'File f','java.io.File',0,272,'net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter',2461,'net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.getExtension(java.io.File)',0,'/**\r\n * Extention return\r\n */\r\nprivate static String getExtension(File f) {\r\n    String ext = null;\r\n    String s = f.getName();\r\n    int i = s.lastIndexOf(.);\r\n    if ((i > 0) && (i < ((s.length()) - 1))) {\r\n        ext = s.substring((i + 1)).toLowerCase();\r\n    }\r\n    return ext;\r\n}'),(1775,'String fileExtension','java.lang.String',0,272,'net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter',2462,'net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.matches(java.lang.String)',0,'private boolean matches(String fileExtension) {\r\n    boolean result = (fileExtension != null) && (myPattern.matcher(fileExtension).matches());\r\n    return result;\r\n}'),(1776,'File f','java.io.File',0,273,'net.sourceforge.ganttproject.filter.GanttCSVFilter',2464,'net.sourceforge.ganttproject.filter.GanttCSVFilter.accept(java.io.File)',0,'/* (non-Javadoc)\n\n@see javax.swing.filechooser.FileFilter#accept(java.io.File)\n */\r\npublic boolean accept(File f) {\r\n    if (f.isDirectory()) {\r\n        return true;\r\n    }\r\n    String extension = GanttCSVFilter.getExtension(f);\r\n    if ((extension != null) && /* extension.equals(\"txt\") || */\r\n    (extension.equals(\"csv\")))\r\n        return true;\r\n\r\n    return false;\r\n}'),(1777,'File f','java.io.File',0,273,'net.sourceforge.ganttproject.filter.GanttCSVFilter',2466,'net.sourceforge.ganttproject.filter.GanttCSVFilter.getExtension(java.io.File)',0,'/**\r\n * Extention return\r\n */\r\npublic static String getExtension(File f) {\r\n    String ext = null;\r\n    String s = f.getName();\r\n    int i = s.lastIndexOf(.);\r\n    if ((i > 0) && (i < ((s.length()) - 1))) {\r\n        ext = s.substring((i + 1)).toLowerCase();\r\n    }\r\n    return ext;\r\n}'),(1778,'File f','java.io.File',0,274,'net.sourceforge.ganttproject.filter.GanttHTMLFileFilter',2468,'net.sourceforge.ganttproject.filter.GanttHTMLFileFilter.accept(java.io.File)',0,'/* (non-Javadoc)\n\n@see javax.swing.filechooser.FileFilter#accept(java.io.File)\n */\r\npublic boolean accept(File f) {\r\n    return ((f.getName().toLowerCase().endsWith(\".html\")) || (f.getName().toLowerCase().endsWith(\".htm\"))) || (f.isDirectory());\r\n}'),(1779,'File f','java.io.File',0,275,'net.sourceforge.ganttproject.filter.GanttJPGFileFilter',2471,'net.sourceforge.ganttproject.filter.GanttJPGFileFilter.accept(java.io.File)',0,'/* (non-Javadoc)\n\n@see javax.swing.filechooser.FileFilter#accept(java.io.File)\n */\r\npublic boolean accept(File f) {\r\n    return ((f.getName().toLowerCase().endsWith(\".jpg\")) || (f.getName().toLowerCase().endsWith(\".jpeg\"))) || (f.isDirectory());\r\n}'),(1780,'File f','java.io.File',0,277,'net.sourceforge.ganttproject.filter.GanttPDFFileFilter',2475,'net.sourceforge.ganttproject.filter.GanttPDFFileFilter.accept(java.io.File)',0,'/* (non-Javadoc)\n\n@see javax.swing.filechooser.FileFilter#accept(java.io.File)\n */\r\npublic boolean accept(File f) {\r\n    return (f.getName().toLowerCase().endsWith(\".pdf\")) || (f.isDirectory());\r\n}'),(1781,'File f','java.io.File',0,278,'net.sourceforge.ganttproject.filter.GanttPNGFileFilter',2478,'net.sourceforge.ganttproject.filter.GanttPNGFileFilter.accept(java.io.File)',0,'/* (non-Javadoc)\n\n@see javax.swing.filechooser.FileFilter#accept(java.io.File)\n */\r\npublic boolean accept(File f) {\r\n    return (f.getName().toLowerCase().endsWith(\".png\")) || (f.isDirectory());\r\n}'),(1782,'File f','java.io.File',0,279,'net.sourceforge.ganttproject.filter.GanttTXTFileFilter',2481,'net.sourceforge.ganttproject.filter.GanttTXTFileFilter.accept(java.io.File)',0,'/* (non-Javadoc)\n\n@see javax.swing.filechooser.FileFilter#accept(java.io.File)\n */\r\npublic boolean accept(File f) {\r\n    if (f.isDirectory()) {\r\n        return true;\r\n    }\r\n    String extension = GanttTXTFileFilter.getExtension(f);\r\n    if ((extension != null) && (extension.equals(\"txt\")))\r\n        return true;\r\n\r\n    return false;\r\n}'),(1783,'File f','java.io.File',0,279,'net.sourceforge.ganttproject.filter.GanttTXTFileFilter',2483,'net.sourceforge.ganttproject.filter.GanttTXTFileFilter.getExtension(java.io.File)',0,'/**\r\n * Extention return\r\n */\r\npublic static String getExtension(File f) {\r\n    String ext = null;\r\n    String s = f.getName();\r\n    int i = s.lastIndexOf(.);\r\n    if ((i > 0) && (i < ((s.length()) - 1))) {\r\n        ext = s.substring((i + 1)).toLowerCase();\r\n    }\r\n    return ext;\r\n}'),(1784,'File f','java.io.File',0,280,'net.sourceforge.ganttproject.filter.GanttXFIGFileFilter',2485,'net.sourceforge.ganttproject.filter.GanttXFIGFileFilter.accept(java.io.File)',0,'/* (non-Javadoc)\n\n@see javax.swing.filechooser.FileFilter#accept(java.io.File)\n */\r\npublic boolean accept(File f) {\r\n    return ((f.getName().toLowerCase().endsWith(\".fig\")) || (f.getName().toLowerCase().endsWith(\".xfig\"))) || (f.isDirectory());\r\n}'),(1785,'File f','java.io.File',0,282,'net.sourceforge.ganttproject.filter.GanttXSLFileFilter',2489,'net.sourceforge.ganttproject.filter.GanttXSLFileFilter.accept(java.io.File)',0,'/* (non-Javadoc)\n\n@see javax.swing.filechooser.FileFilter#accept(java.io.File)\n */\r\npublic boolean accept(File f) {\r\n    return (f.getName().toLowerCase().endsWith(\".xsl\")) || (f.isDirectory());\r\n}'),(1786,'Date start','java.util.Date',0,284,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval',2498,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval.-init-(java.util.Date,java.util.Date)',0,'public DateInterval(Date start, Date end) {\r\n    this.start = start;\r\n    this.end = end;\r\n}'),(1787,'Date end','java.util.Date',0,284,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval',2498,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval.-init-(java.util.Date,java.util.Date)',0,'public DateInterval(Date start, Date end) {\r\n    this.start = start;\r\n    this.end = end;\r\n}'),(1788,'final DateIntervalListEditor.DateIntervalModel intervalsModel','net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateIntervalModel',285,288,'net.sourceforge.ganttproject.gui.DateIntervalListEditor',2494,'net.sourceforge.ganttproject.gui.DateIntervalListEditor.-init-(net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateIntervalModel)',0,'public DateIntervalListEditor(final DateIntervalListEditor.DateIntervalModel intervalsModel) {\r\n    super(new BorderLayout());\r\n    myIntervalsModel = intervalsModel;\r\n    myStart = new DefaultDateOption(\"generic.startDate\") {\r\n        public void setValue(Date value) {\r\n            super.setValue(value);\r\n            commit();\r\n            if ((intervalsModel.getMaxIntervalLength()) == 1) {\r\n                DateIntervalListEditor.this.myFinish.setValue(value);\r\n            }\r\n            DateIntervalListEditor.this.updateActions();\r\n            lock();\r\n        }\r\n    };\r\n    myFinish = new DefaultDateOption(\"generic.endDate\") {\r\n        public void setValue(Date value) {\r\n            super.setValue(value);\r\n            commit();\r\n            DateIntervalListEditor.this.updateActions();\r\n            lock();\r\n        }\r\n    };\r\n    myStart.lock();\r\n    myFinish.lock();\r\n    init();\r\n}'),(1789,'Object obj','java.lang.Object',0,284,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval',2499,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval.equals(java.lang.Object)',0,'public boolean equals(Object obj) {\r\n    if (false == (obj instanceof DateIntervalListEditor.DateInterval)) {\r\n        return false;\r\n    }\r\n    DateIntervalListEditor.DateInterval rvalue = ((DateIntervalListEditor.DateInterval) (obj));\r\n    return (this.start.equals(rvalue.start)) && (this.end.equals(rvalue.end));\r\n}'),(1790,'DateIntervalListEditor.DateInterval interval','net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval',284,285,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateIntervalModel',2504,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateIntervalModel.remove(net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval)',0,'void remove(DateIntervalListEditor.DateInterval interval);'),(1791,'DateIntervalListEditor.DateInterval interval','net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval',284,285,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateIntervalModel',2501,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateIntervalModel.add(net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval)',0,'void add(DateIntervalListEditor.DateInterval interval);'),(1792,'DateIntervalListEditor.DateInterval interval','net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval',284,286,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DefaultDateIntervalModel',2509,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DefaultDateIntervalModel.remove(net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval)',0,'public void remove(DateIntervalListEditor.DateInterval interval) {\r\n    myIntervals.remove(interval);\r\n}'),(1793,'DateIntervalListEditor.DateInterval interval','net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval',284,286,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DefaultDateIntervalModel',2506,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$DefaultDateIntervalModel.add(net.sourceforge.ganttproject.gui.DateIntervalListEditor$DateInterval)',0,'public void add(DateIntervalListEditor.DateInterval interval) {\r\n    myIntervals.add(interval);\r\n}'),(1794,'int index','int',0,287,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$MyListModel',2511,'net.sourceforge.ganttproject.gui.DateIntervalListEditor$MyListModel.getElementAt(int)',0,'public Object getElementAt(int index) {\r\n    DateIntervalListEditor.DateInterval interval = myIntervalsModel.getIntervals()[index];\r\n    StringBuffer result = new StringBuffer(GanttLanguage.getInstance().getDateFormat().format(interval.start));\r\n    if (!(interval.end.equals(interval.start))) {\r\n        result.append(\"...\");\r\n        result.append(GanttLanguage.getInstance().getDateFormat().format(interval.end));\r\n    }\r\n    return result.toString();\r\n}'),(1795,'JDialog dialog','javax.swing.JDialog',0,289,'net.sourceforge.ganttproject.gui.DialogAligner',2515,'net.sourceforge.ganttproject.gui.DialogAligner.center(javax.swing.JDialog,java.awt.Container)',0,'public static void center(JDialog dialog, Container parent) {\r\n    boolean alignToParent = false;\r\n    if (parent != null) {\r\n        alignToParent = parent.isVisible();\r\n    }\r\n    if (alignToParent) {\r\n        Point point = parent.getLocationOnScreen();\r\n        int x = ((int) (point.getX())) + ((parent.getWidth()) / 2);\r\n        int y = ((int) (point.getY())) + ((parent.getHeight()) / 2);\r\n        dialog.setLocation((x - ((dialog.getWidth()) / 2)), (y - ((dialog.getHeight()) / 2)));\r\n    } else {\r\n        DialogAligner.centerOnScreen(dialog);\r\n    }\r\n}'),(1796,'Container parent','java.awt.Container',0,289,'net.sourceforge.ganttproject.gui.DialogAligner',2515,'net.sourceforge.ganttproject.gui.DialogAligner.center(javax.swing.JDialog,java.awt.Container)',0,'public static void center(JDialog dialog, Container parent) {\r\n    boolean alignToParent = false;\r\n    if (parent != null) {\r\n        alignToParent = parent.isVisible();\r\n    }\r\n    if (alignToParent) {\r\n        Point point = parent.getLocationOnScreen();\r\n        int x = ((int) (point.getX())) + ((parent.getWidth()) / 2);\r\n        int y = ((int) (point.getY())) + ((parent.getHeight()) / 2);\r\n        dialog.setLocation((x - ((dialog.getWidth()) / 2)), (y - ((dialog.getHeight()) / 2)));\r\n    } else {\r\n        DialogAligner.centerOnScreen(dialog);\r\n    }\r\n}'),(1797,'JFrame frame','javax.swing.JFrame',0,289,'net.sourceforge.ganttproject.gui.DialogAligner',2516,'net.sourceforge.ganttproject.gui.DialogAligner.center(javax.swing.JFrame)',0,'public static void center(JFrame frame) {\r\n    DialogAligner.centerOnScreen(frame);\r\n}'),(1798,'Component component','java.awt.Component',0,289,'net.sourceforge.ganttproject.gui.DialogAligner',2517,'net.sourceforge.ganttproject.gui.DialogAligner.centerOnScreen(java.awt.Component)',0,'private static void centerOnScreen(Component component) {\r\n    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\r\n    component.setLocation((((screenSize.width) / 2) - ((component.getWidth()) / 2)), (((screenSize.height) / 2) - ((component.getHeight()) / 2)));\r\n}'),(1799,'boolean b','boolean',0,290,'net.sourceforge.ganttproject.gui.FileChooserPageBase',2526,'net.sourceforge.ganttproject.gui.FileChooserPageBase.setActive(boolean)',0,'public void setActive(boolean b) {\r\n    GPOptionGroup[] optionGroups = getOptionGroups();\r\n    if (b == false) {\r\n        for (int i = 0; i < (optionGroups.length); i++) {\r\n            optionGroups[i].commit();\r\n        }\r\n    } else {\r\n        for (int i = 0; i < (optionGroups.length); i++) {\r\n            optionGroups[i].lock();\r\n        }\r\n        if ((mySecondaryOptionsComponent) != null) {\r\n            mySecondaryOptionsComponent.removeAll();\r\n        }\r\n        // mySecondaryOptionsComponent= new JPanel(new BorderLayout());\r\n        mySecondaryOptionsComponent.add(myOptionsBuilder.buildPlanePage(optionGroups), BorderLayout.NORTH);\r\n        // myComponent.add(mySecondaryOptionsComponent, BorderLayout.CENTER);\r\n        mySecondaryOptionsComponent.invalidate();\r\n        myComponent.invalidate();\r\n        myChooser.setFileFilter(createFileFilter());\r\n    }\r\n}'),(1800,'File file','java.io.File',0,290,'net.sourceforge.ganttproject.gui.FileChooserPageBase',2529,'net.sourceforge.ganttproject.gui.FileChooserPageBase.setSelectedFile(java.io.File)',0,'protected void setSelectedFile(File file) {\r\n    myChooser.setFile(file);\r\n}'),(1801,'boolean enabled','boolean',0,290,'net.sourceforge.ganttproject.gui.FileChooserPageBase',2528,'net.sourceforge.ganttproject.gui.FileChooserPageBase.setOptionsEnabled(boolean)',0,'protected void setOptionsEnabled(boolean enabled) {\r\n    if ((mySecondaryOptionsComponent) != null) {\r\n        setEnabledTree(mySecondaryOptionsComponent, enabled);\r\n    }\r\n}'),(1802,'JComponent root','javax.swing.JComponent',0,290,'net.sourceforge.ganttproject.gui.FileChooserPageBase',2527,'net.sourceforge.ganttproject.gui.FileChooserPageBase.setEnabledTree(javax.swing.JComponent,boolean)',0,'private void setEnabledTree(JComponent root, boolean isEnabled) {\r\n    UIUtil.setEnabledTree(root, isEnabled);\r\n}'),(1803,'boolean isEnabled','boolean',0,290,'net.sourceforge.ganttproject.gui.FileChooserPageBase',2527,'net.sourceforge.ganttproject.gui.FileChooserPageBase.setEnabledTree(javax.swing.JComponent,boolean)',0,'private void setEnabledTree(JComponent root, boolean isEnabled) {\r\n    UIUtil.setEnabledTree(root, isEnabled);\r\n}'),(1804,'File file','java.io.File',0,290,'net.sourceforge.ganttproject.gui.FileChooserPageBase',2525,'net.sourceforge.ganttproject.gui.FileChooserPageBase.onFileChosen(java.io.File)',0,'protected abstract void onFileChosen(File file);'),(1805,'String validchars','java.lang.String',0,291,'net.sourceforge.ganttproject.gui.GPlainDocument',2530,'net.sourceforge.ganttproject.gui.GPlainDocument.-init-(java.lang.String)',0,'/**\r\n * Creates an instance of GPlainDocument with a valid character string.\r\n *\r\n * @param validchars\r\n * 		\r\n */\r\npublic GPlainDocument(String validchars) {\r\n    super();\r\n    this.valid_characters = validchars;\r\n}'),(1806,'int offs','int',0,291,'net.sourceforge.ganttproject.gui.GPlainDocument',2531,'net.sourceforge.ganttproject.gui.GPlainDocument.insertString(int,java.lang.String,javax.swing.text.AttributeSet)',0,'/**\r\n * Inserts the string <code>str</code> into the document if it matches\r\n * with the valid characters.\r\n *\r\n * @param offs\r\n * 		Offset for the insertion.\r\n * @param str\r\n * 		String to insert.\r\n * @param a\r\n * 		AttibutSet.\r\n * @throws BadLocationException\r\n * 		\r\n */\r\npublic void insertString(int offs, String str, AttributeSet a) throws BadLocationException {\r\n    if ((this.pattern) != null) {\r\n        String s = this.getText(0, this.getLength());\r\n        Matcher m = this.pattern.matcher((s + str));\r\n        if (m.matches())\r\n            super.insertString(offs, str, a);\r\n\r\n    } else {\r\n        // //\r\n        StringBuffer sb = new StringBuffer();\r\n        for (int i = 0; i < (str.length()); i++)\r\n            if (((this.valid_characters) == null) || ((this.valid_characters.indexOf(str.charAt(i))) != (-1)))\r\n                sb.append(str.charAt(i));\r\n            else\r\n                Toolkit.getDefaultToolkit().beep();\r\n\r\n\r\n        super.insertString(offs, sb.toString(), a);\r\n    }\r\n}'),(1807,'String str','java.lang.String',0,291,'net.sourceforge.ganttproject.gui.GPlainDocument',2531,'net.sourceforge.ganttproject.gui.GPlainDocument.insertString(int,java.lang.String,javax.swing.text.AttributeSet)',0,'/**\r\n * Inserts the string <code>str</code> into the document if it matches\r\n * with the valid characters.\r\n *\r\n * @param offs\r\n * 		Offset for the insertion.\r\n * @param str\r\n * 		String to insert.\r\n * @param a\r\n * 		AttibutSet.\r\n * @throws BadLocationException\r\n * 		\r\n */\r\npublic void insertString(int offs, String str, AttributeSet a) throws BadLocationException {\r\n    if ((this.pattern) != null) {\r\n        String s = this.getText(0, this.getLength());\r\n        Matcher m = this.pattern.matcher((s + str));\r\n        if (m.matches())\r\n            super.insertString(offs, str, a);\r\n\r\n    } else {\r\n        // //\r\n        StringBuffer sb = new StringBuffer();\r\n        for (int i = 0; i < (str.length()); i++)\r\n            if (((this.valid_characters) == null) || ((this.valid_characters.indexOf(str.charAt(i))) != (-1)))\r\n                sb.append(str.charAt(i));\r\n            else\r\n                Toolkit.getDefaultToolkit().beep();\r\n\r\n\r\n        super.insertString(offs, sb.toString(), a);\r\n    }\r\n}'),(1808,'AttributeSet a','javax.swing.text.AttributeSet',0,291,'net.sourceforge.ganttproject.gui.GPlainDocument',2531,'net.sourceforge.ganttproject.gui.GPlainDocument.insertString(int,java.lang.String,javax.swing.text.AttributeSet)',0,'/**\r\n * Inserts the string <code>str</code> into the document if it matches\r\n * with the valid characters.\r\n *\r\n * @param offs\r\n * 		Offset for the insertion.\r\n * @param str\r\n * 		String to insert.\r\n * @param a\r\n * 		AttibutSet.\r\n * @throws BadLocationException\r\n * 		\r\n */\r\npublic void insertString(int offs, String str, AttributeSet a) throws BadLocationException {\r\n    if ((this.pattern) != null) {\r\n        String s = this.getText(0, this.getLength());\r\n        Matcher m = this.pattern.matcher((s + str));\r\n        if (m.matches())\r\n            super.insertString(offs, str, a);\r\n\r\n    } else {\r\n        // //\r\n        StringBuffer sb = new StringBuffer();\r\n        for (int i = 0; i < (str.length()); i++)\r\n            if (((this.valid_characters) == null) || ((this.valid_characters.indexOf(str.charAt(i))) != (-1)))\r\n                sb.append(str.charAt(i));\r\n            else\r\n                Toolkit.getDefaultToolkit().beep();\r\n\r\n\r\n        super.insertString(offs, sb.toString(), a);\r\n    }\r\n}'),(1809,'String valid_chars','java.lang.String',0,291,'net.sourceforge.ganttproject.gui.GPlainDocument',2533,'net.sourceforge.ganttproject.gui.GPlainDocument.setValidCharacters(java.lang.String)',0,'/**\r\n * Sets the valid characters.\r\n *\r\n * @param valid_chars\r\n * 		The valid characters to set.\r\n */\r\nprotected void setValidCharacters(String valid_chars) {\r\n    this.valid_characters = valid_chars;\r\n}'),(1810,'String pattern','java.lang.String',0,291,'net.sourceforge.ganttproject.gui.GPlainDocument',2532,'net.sourceforge.ganttproject.gui.GPlainDocument.setPattern(java.lang.String)',0,'/**\r\n * Sets the regular expression pattern.\r\n *\r\n * @param pattern\r\n * 		The regular expression pattern to set.\r\n */\r\nprotected void setPattern(String pattern) {\r\n    this.pattern = Pattern.compile(pattern);\r\n}'),(1811,'JFormattedTextField.AbstractFormatter format','javax.swing.JFormattedTextField$AbstractFormatter',0,292,'net.sourceforge.ganttproject.gui.GTextField',2534,'net.sourceforge.ganttproject.gui.GTextField.-init-(javax.swing.JFormattedTextField$AbstractFormatter)',0,'/**\r\n * Creates an instance of GTextField with a default format.\r\n *\r\n * @param format\r\n * 		Textfields format.\r\n */\r\npublic GTextField(JFormattedTextField.AbstractFormatter format) {\r\n    super(format);\r\n    // this.setDocument(new CPlainDocument(null));\r\n    this.setHorizontalAlignment(SwingConstants.RIGHT);\r\n}'),(1812,'String text','java.lang.String',0,292,'net.sourceforge.ganttproject.gui.GTextField',2535,'net.sourceforge.ganttproject.gui.GTextField.-init-(java.lang.String)',0,'/**\r\n * Creates an instance of GTextField with a default text.\r\n *\r\n * @param text\r\n * 		Text to be put into the text field.\r\n */\r\npublic GTextField(String text) {\r\n    super();\r\n    this.setDocument(new GPlainDocument(null));\r\n    this.setText(text);\r\n    this.setHorizontalAlignment(SwingConstants.RIGHT);\r\n}'),(1813,'String valid_chars','java.lang.String',0,292,'net.sourceforge.ganttproject.gui.GTextField',2540,'net.sourceforge.ganttproject.gui.GTextField.setValidCharacters(java.lang.String)',0,'/**\r\n * Indicates the valid characters to accept in edition.\r\n *\r\n * @param valid_chars\r\n * 		String containing all the valid characters.\r\n */\r\npublic void setValidCharacters(String valid_chars) {\r\n    Document d = this.getDocument();\r\n    if (d instanceof GPlainDocument) {\r\n        ((GPlainDocument) (d)).setValidCharacters(valid_chars);\r\n    }\r\n}'),(1814,'String pattern','java.lang.String',0,292,'net.sourceforge.ganttproject.gui.GTextField',2539,'net.sourceforge.ganttproject.gui.GTextField.setPattern(java.lang.String)',0,'/**\r\n * Indicates the valid characters by giving an regular expression pattern.\r\n *\r\n * @param pattern\r\n * 		The regular expression with which the matching is done.\r\n */\r\npublic void setPattern(String pattern) {\r\n    Document d = this.getDocument();\r\n    if (d instanceof GPlainDocument) {\r\n        ((GPlainDocument) (d)).setPattern(pattern);\r\n    }\r\n}'),(1815,'String[] args','java.lang.String[]',0,292,'net.sourceforge.ganttproject.gui.GTextField',2537,'net.sourceforge.ganttproject.gui.GTextField.main(java.lang.String[])',0,'public static void main(String[] args) {\r\n    GTextField f = new GTextField();\r\n    f.setPattern(\"[0-9]*.?[0-9]*\");\r\n    JFrame jf = new JFrame();\r\n    jf.getContentPane().add(f);\r\n    jf.pack();\r\n    jf.show();\r\n    // f.setText(\"ere\");\r\n}'),(1816,'JList list','javax.swing.JList',0,293,'net.sourceforge.ganttproject.gui.GanttCellListRenderer',2542,'net.sourceforge.ganttproject.gui.GanttCellListRenderer.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\r\n    setText(String.valueOf(value));\r\n    setBackground((isSelected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((isSelected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1817,'Object value','java.lang.Object',0,293,'net.sourceforge.ganttproject.gui.GanttCellListRenderer',2542,'net.sourceforge.ganttproject.gui.GanttCellListRenderer.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\r\n    setText(String.valueOf(value));\r\n    setBackground((isSelected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((isSelected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1818,'int index','int',0,293,'net.sourceforge.ganttproject.gui.GanttCellListRenderer',2542,'net.sourceforge.ganttproject.gui.GanttCellListRenderer.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\r\n    setText(String.valueOf(value));\r\n    setBackground((isSelected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((isSelected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1819,'boolean isSelected','boolean',0,293,'net.sourceforge.ganttproject.gui.GanttCellListRenderer',2542,'net.sourceforge.ganttproject.gui.GanttCellListRenderer.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\r\n    setText(String.valueOf(value));\r\n    setBackground((isSelected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((isSelected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1820,'boolean cellHasFocus','boolean',0,293,'net.sourceforge.ganttproject.gui.GanttCellListRenderer',2542,'net.sourceforge.ganttproject.gui.GanttCellListRenderer.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\r\n    setText(String.valueOf(value));\r\n    setBackground((isSelected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((isSelected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1821,'JFrame parent','javax.swing.JFrame',0,294,'net.sourceforge.ganttproject.gui.GanttDialogCalendar',2543,'net.sourceforge.ganttproject.gui.GanttDialogCalendar.-init-(javax.swing.JFrame)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogCalendar(JFrame parent) {\r\n    super(parent, GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"editCalendars\")), true);\r\n    setResizable(false);\r\n    JToolBar top = new JToolBar();\r\n    top.setFloatable(false);\r\n    bNew = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/new_16.gif\")));\r\n    bDelete = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/delete_16.gif\")));\r\n    bImport = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/open_16.gif\")));\r\n    bSelectDays = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/calendar_16.gif\")));\r\n    top.add(bNew);\r\n    top.add(bDelete);\r\n    top.add(bImport);\r\n    top.addSeparator();\r\n    top.add(bSelectDays);\r\n    bNew.addActionListener(this);\r\n    bDelete.addActionListener(this);\r\n    bImport.addActionListener(this);\r\n    bSelectDays.addActionListener(this);\r\n    bNew.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"newCalendar\"))));\r\n    bDelete.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"deleteCalendar\"))));\r\n    bImport.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"importCalendar\"))));\r\n    bSelectDays.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"selectDays\"))));\r\n    String[] list = new String[20];\r\n    list[0] = \"Default\";\r\n    list[1] = \"Night Calendar\";\r\n    list[2] = \"Default\";\r\n    list[3] = \"Night Calendar\";\r\n    list[4] = \"Default\";\r\n    list[5] = \"Night Calendar\";\r\n    list[6] = \"Default\";\r\n    list[7] = \"Night Calendar\";\r\n    list[8] = \"Default\";\r\n    list[9] = \"Night Calendar\";\r\n    list[10] = \"Default\";\r\n    list[11] = \"Night Calendar\";\r\n    list[12] = \"Default\";\r\n    list[13] = \"Night Calendar\";\r\n    list[14] = \"Default\";\r\n    list[15] = \"Night Calendar\";\r\n    list[16] = \"Default\";\r\n    list[17] = \"Night Calendar\";\r\n    list[18] = \"Default\";\r\n    list[19] = \"Night Calendar\";\r\n    listCalendar = new JList(list);\r\n    panelDate = new GanttPanelDate(new GanttCalendar());\r\n    JPanel panel1 = new JPanel();\r\n    JPanel panel2 = new JPanel();\r\n    JPanel panel3 = new JPanel();\r\n    Box vb1 = Box.createVerticalBox();\r\n    /* bWork = new JRadioButton(\"Working Day\", new\n    ImageIcon(getClass().getResource(\"/icons/working_day_16.gif\")),\n    true); bNonWork = new JRadioButton(\"Working Day\", new\n    ImageIcon(getClass().getResource(\"/icons/non_working_day_16.gif\")),\n    false);\n     */\r\n    bWork = new JRadioButton(\"Working Day\", true);\r\n    bNonWork = new JRadioButton(\"Non-Working Day\", false);\r\n    /* panel3.add(bWork, BorderLayout.WEST); panel3.add(bNonWork,\n    BorderLayout.EAST);\n     */\r\n    vb1.add(panelDate);\r\n    vb1.add(bWork);\r\n    vb1.add(bNonWork);\r\n    // panel2.add(panelDate,BorderLayout.NORTH);\r\n    // panel2.add(panel3,BorderLayout.SOUTH);\r\n    panel1.add(new JScrollPane(listCalendar), BorderLayout.WEST);\r\n    panel1.add(vb1, BorderLayout.EAST);\r\n    JPanel p = new JPanel();\r\n    JButton ok = new JButton(language.getText(\"ok\"));\r\n    getRootPane().setDefaultButton(ok);\r\n    p.add(ok);\r\n    ok.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n        }\r\n    });\r\n    JButton cancel = new JButton(language.getText(\"cancel\"));\r\n    p.add(cancel);\r\n    cancel.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n        }\r\n    });\r\n    getContentPane().add(top, BorderLayout.NORTH);\r\n    getContentPane().add(panel1, \"Center\");\r\n    getContentPane().add(p, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1822,'ActionEvent e','java.awt.event.ActionEvent',0,294,'net.sourceforge.ganttproject.gui.GanttDialogCalendar',2545,'net.sourceforge.ganttproject.gui.GanttDialogCalendar.actionPerformed(java.awt.event.ActionEvent)',0,'/**\r\n * Action listener when click the button\r\n */\r\npublic void actionPerformed(ActionEvent e) {\r\n}'),(1823,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,295,'net.sourceforge.ganttproject.gui.GanttDialogCustomColumn',2548,'net.sourceforge.ganttproject.gui.GanttDialogCustomColumn.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.task.CustomColumn)',0,'public GanttDialogCustomColumn(UIFacade uiFacade, CustomColumn customCol) {\r\n    myUIFacade = uiFacade;\r\n    customColumn = customCol;\r\n    myOptionGroup.lock();\r\n    myDate.lock();\r\n    myDate.setValue(new Date());\r\n    myName.setValue(\"\");\r\n    myOptionGroup.setTitled(false);\r\n    myDefaultValueOptionGroup.setTitled(false);\r\n    myDefaultValueOptionGroup.lock();\r\n    isOk = false;\r\n}'),(1824,'CustomColumn customCol','net.sourceforge.ganttproject.task.CustomColumn',532,295,'net.sourceforge.ganttproject.gui.GanttDialogCustomColumn',2548,'net.sourceforge.ganttproject.gui.GanttDialogCustomColumn.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.task.CustomColumn)',0,'public GanttDialogCustomColumn(UIFacade uiFacade, CustomColumn customCol) {\r\n    myUIFacade = uiFacade;\r\n    customColumn = customCol;\r\n    myOptionGroup.lock();\r\n    myDate.lock();\r\n    myDate.setValue(new Date());\r\n    myName.setValue(\"\");\r\n    myOptionGroup.setTitled(false);\r\n    myDefaultValueOptionGroup.setTitled(false);\r\n    myDefaultValueOptionGroup.lock();\r\n    isOk = false;\r\n}'),(1825,'String typeName','java.lang.String',0,295,'net.sourceforge.ganttproject.gui.GanttDialogCustomColumn',2551,'net.sourceforge.ganttproject.gui.GanttDialogCustomColumn.getSelectedType(java.lang.String)',0,'private int getSelectedType(String typeName) {\r\n    for (int i = 0; i < (CustomColumnsStorage.availableTypes.size()); i++) {\r\n        if (CustomColumnsStorage.availableTypes.get(i).equals(typeName)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}'),(1826,'boolean enabled','boolean',0,295,'net.sourceforge.ganttproject.gui.GanttDialogCustomColumn',2555,'net.sourceforge.ganttproject.gui.GanttDialogCustomColumn.setDefaultValuePanelEnabled(boolean)',0,'protected void setDefaultValuePanelEnabled(boolean enabled) {\r\n    UIUtil.setEnabledTree(panelDefaultValue, enabled);\r\n}'),(1827,'boolean visible','boolean',0,295,'net.sourceforge.ganttproject.gui.GanttDialogCustomColumn',2556,'net.sourceforge.ganttproject.gui.GanttDialogCustomColumn.setVisible(boolean)',0,'public void setVisible(boolean visible) {\r\n    Component rootComponent = getComponent();\r\n    getUIFacade().showDialog(rootComponent, new Action[]{ new OkAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            myOptionGroup.commit();\r\n            myDate.commit();\r\n            GanttDialogCustomColumn.this.ok();\r\n        }\r\n    }, new CancelAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            myOptionGroup.rollback();\r\n            myDate.rollback();\r\n        }\r\n    } });\r\n}'),(1828,'JDialog parent','javax.swing.JDialog',0,296,'net.sourceforge.ganttproject.gui.GanttDialogDate',2557,'net.sourceforge.ganttproject.gui.GanttDialogDate.-init-(javax.swing.JDialog,net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogDate(JDialog parent, GanttCalendar date) {\r\n    this(parent, date, false);\r\n}'),(1829,'GanttCalendar date','net.sourceforge.ganttproject.GanttCalendar',24,296,'net.sourceforge.ganttproject.gui.GanttDialogDate',2557,'net.sourceforge.ganttproject.gui.GanttDialogDate.-init-(javax.swing.JDialog,net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogDate(JDialog parent, GanttCalendar date) {\r\n    this(parent, date, false);\r\n}'),(1830,'JDialog parent','javax.swing.JDialog',0,296,'net.sourceforge.ganttproject.gui.GanttDialogDate',2558,'net.sourceforge.ganttproject.gui.GanttDialogDate.-init-(javax.swing.JDialog,net.sourceforge.ganttproject.GanttCalendar,boolean)',0,'public GanttDialogDate(JDialog parent, GanttCalendar date, boolean showFixedDateCheckBox) {\r\n    super(parent, GanttLanguage.getInstance().getText(\"chooseDate\"), true);\r\n    myFixedDate = date.isFixed();\r\n    setResizable(false);\r\n    panel = new GanttPanelDate(date);\r\n    // Container contentPane = getContentPane();\r\n    JComponent contentPane = Box.createVerticalBox();\r\n    // contentPane.setLayout(new GridLayout(3,1, 5, 5));\r\n    JPanel p = new JPanel();\r\n    JButton ok = new JButton(language.getText(\"ok\"));\r\n    getRootPane().setDefaultButton(ok);\r\n    p.add(ok);\r\n    ok.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            value = GanttDialogDate.OK;\r\n        }\r\n    });\r\n    JButton cancel = new JButton(language.getText(\"cancel\"));\r\n    p.add(cancel);\r\n    cancel.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            panel.cancel();\r\n        }\r\n    });\r\n    contentPane.add(panel);\r\n    if (showFixedDateCheckBox) {\r\n        final JCheckBox fixedDate = new JCheckBox(language.getText(\"fixedDate\"));\r\n        fixedDate.setSelected(myFixedDate);\r\n        fixedDate.addChangeListener(new ChangeListener() {\r\n            public void stateChanged(ChangeEvent e) {\r\n                myFixedDate = fixedDate.isSelected();\r\n            }\r\n        });\r\n        contentPane.add(fixedDate);\r\n    }\r\n    contentPane.add(p);\r\n    getContentPane().add(contentPane);\r\n    addWindowListener(new WindowAdapter() {\r\n        public void windowClosing(WindowEvent arg0) {\r\n            panel.cancel();\r\n        }\r\n    });\r\n    pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1831,'GanttCalendar date','net.sourceforge.ganttproject.GanttCalendar',24,296,'net.sourceforge.ganttproject.gui.GanttDialogDate',2558,'net.sourceforge.ganttproject.gui.GanttDialogDate.-init-(javax.swing.JDialog,net.sourceforge.ganttproject.GanttCalendar,boolean)',0,'public GanttDialogDate(JDialog parent, GanttCalendar date, boolean showFixedDateCheckBox) {\r\n    super(parent, GanttLanguage.getInstance().getText(\"chooseDate\"), true);\r\n    myFixedDate = date.isFixed();\r\n    setResizable(false);\r\n    panel = new GanttPanelDate(date);\r\n    // Container contentPane = getContentPane();\r\n    JComponent contentPane = Box.createVerticalBox();\r\n    // contentPane.setLayout(new GridLayout(3,1, 5, 5));\r\n    JPanel p = new JPanel();\r\n    JButton ok = new JButton(language.getText(\"ok\"));\r\n    getRootPane().setDefaultButton(ok);\r\n    p.add(ok);\r\n    ok.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            value = GanttDialogDate.OK;\r\n        }\r\n    });\r\n    JButton cancel = new JButton(language.getText(\"cancel\"));\r\n    p.add(cancel);\r\n    cancel.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            panel.cancel();\r\n        }\r\n    });\r\n    contentPane.add(panel);\r\n    if (showFixedDateCheckBox) {\r\n        final JCheckBox fixedDate = new JCheckBox(language.getText(\"fixedDate\"));\r\n        fixedDate.setSelected(myFixedDate);\r\n        fixedDate.addChangeListener(new ChangeListener() {\r\n            public void stateChanged(ChangeEvent e) {\r\n                myFixedDate = fixedDate.isSelected();\r\n            }\r\n        });\r\n        contentPane.add(fixedDate);\r\n    }\r\n    contentPane.add(p);\r\n    getContentPane().add(contentPane);\r\n    addWindowListener(new WindowAdapter() {\r\n        public void windowClosing(WindowEvent arg0) {\r\n            panel.cancel();\r\n        }\r\n    });\r\n    pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1832,'boolean showFixedDateCheckBox','boolean',0,296,'net.sourceforge.ganttproject.gui.GanttDialogDate',2558,'net.sourceforge.ganttproject.gui.GanttDialogDate.-init-(javax.swing.JDialog,net.sourceforge.ganttproject.GanttCalendar,boolean)',0,'public GanttDialogDate(JDialog parent, GanttCalendar date, boolean showFixedDateCheckBox) {\r\n    super(parent, GanttLanguage.getInstance().getText(\"chooseDate\"), true);\r\n    myFixedDate = date.isFixed();\r\n    setResizable(false);\r\n    panel = new GanttPanelDate(date);\r\n    // Container contentPane = getContentPane();\r\n    JComponent contentPane = Box.createVerticalBox();\r\n    // contentPane.setLayout(new GridLayout(3,1, 5, 5));\r\n    JPanel p = new JPanel();\r\n    JButton ok = new JButton(language.getText(\"ok\"));\r\n    getRootPane().setDefaultButton(ok);\r\n    p.add(ok);\r\n    ok.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            value = GanttDialogDate.OK;\r\n        }\r\n    });\r\n    JButton cancel = new JButton(language.getText(\"cancel\"));\r\n    p.add(cancel);\r\n    cancel.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            panel.cancel();\r\n        }\r\n    });\r\n    contentPane.add(panel);\r\n    if (showFixedDateCheckBox) {\r\n        final JCheckBox fixedDate = new JCheckBox(language.getText(\"fixedDate\"));\r\n        fixedDate.setSelected(myFixedDate);\r\n        fixedDate.addChangeListener(new ChangeListener() {\r\n            public void stateChanged(ChangeEvent e) {\r\n                myFixedDate = fixedDate.isSelected();\r\n            }\r\n        });\r\n        contentPane.add(fixedDate);\r\n    }\r\n    contentPane.add(p);\r\n    getContentPane().add(contentPane);\r\n    addWindowListener(new WindowAdapter() {\r\n        public void windowClosing(WindowEvent arg0) {\r\n            panel.cancel();\r\n        }\r\n    });\r\n    pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1833,'Frame parent','java.awt.Frame',0,297,'net.sourceforge.ganttproject.gui.GanttDialogInfo',2562,'net.sourceforge.ganttproject.gui.GanttDialogInfo.-init-(java.awt.Frame,int,int,java.lang.String,java.lang.String)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogInfo(Frame parent, int msgtype, int button, String message, String title) {\r\n    super(parent, title, true);\r\n    GanttLanguage language = GanttLanguage.getInstance();\r\n    res = button;\r\n    Box b1 = Box.createVerticalBox();\r\n    if (msgtype == (GanttDialogInfo.ERROR))\r\n        b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/error.png\"))));\r\n    else\r\n        if (msgtype == (GanttDialogInfo.WARNING))\r\n            b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/warning.png\"))));\r\n        else\r\n            if (msgtype == (GanttDialogInfo.INFO))\r\n                b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/info.png\"))));\r\n            else\r\n                if (msgtype == (GanttDialogInfo.QUESTION))\r\n                    b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/question.png\"))));\r\n\r\n\r\n\r\n\r\n    getContentPane().add(b1, \"West\");\r\n    Box b2 = Box.createVerticalBox();\r\n    JTextArea textArea = new JTextArea(message);\r\n    textArea.setEditable(false);\r\n    textArea.setBackground(new JLabel().getBackground());\r\n    b2.add(textArea);\r\n    getContentPane().add(b2, \"Center\");\r\n    JPanel p = new JPanel();\r\n    // YES BUTTON\r\n    JButton yes = new JButton((button == 0 ? language.getText(\"ok\") : language.getText(\"yes\")));\r\n    getRootPane().setDefaultButton(yes);\r\n    p.add(yes);\r\n    yes.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n            res = GanttDialogInfo.YES;\r\n        }\r\n    });\r\n    if (button > 0) {\r\n        // NO BUTTON\r\n        JButton no = new JButton(language.getText(\"no\"));\r\n        p.add(no);\r\n        no.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent evt) {\r\n                setVisible(false);\r\n                dispose();\r\n                res = GanttDialogInfo.NO;\r\n            }\r\n        });\r\n        if (button > 1) {\r\n            // CANCEL BUTTON\r\n            JButton cancel = new JButton(language.getText(\"cancel\"));\r\n            p.add(cancel);\r\n            cancel.addActionListener(new ActionListener() {\r\n                public void actionPerformed(ActionEvent evt) {\r\n                    setVisible(false);\r\n                    dispose();\r\n                    res = GanttDialogInfo.CANCEL;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getContentPane().add(p, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1834,'int msgtype','int',0,297,'net.sourceforge.ganttproject.gui.GanttDialogInfo',2562,'net.sourceforge.ganttproject.gui.GanttDialogInfo.-init-(java.awt.Frame,int,int,java.lang.String,java.lang.String)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogInfo(Frame parent, int msgtype, int button, String message, String title) {\r\n    super(parent, title, true);\r\n    GanttLanguage language = GanttLanguage.getInstance();\r\n    res = button;\r\n    Box b1 = Box.createVerticalBox();\r\n    if (msgtype == (GanttDialogInfo.ERROR))\r\n        b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/error.png\"))));\r\n    else\r\n        if (msgtype == (GanttDialogInfo.WARNING))\r\n            b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/warning.png\"))));\r\n        else\r\n            if (msgtype == (GanttDialogInfo.INFO))\r\n                b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/info.png\"))));\r\n            else\r\n                if (msgtype == (GanttDialogInfo.QUESTION))\r\n                    b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/question.png\"))));\r\n\r\n\r\n\r\n\r\n    getContentPane().add(b1, \"West\");\r\n    Box b2 = Box.createVerticalBox();\r\n    JTextArea textArea = new JTextArea(message);\r\n    textArea.setEditable(false);\r\n    textArea.setBackground(new JLabel().getBackground());\r\n    b2.add(textArea);\r\n    getContentPane().add(b2, \"Center\");\r\n    JPanel p = new JPanel();\r\n    // YES BUTTON\r\n    JButton yes = new JButton((button == 0 ? language.getText(\"ok\") : language.getText(\"yes\")));\r\n    getRootPane().setDefaultButton(yes);\r\n    p.add(yes);\r\n    yes.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n            res = GanttDialogInfo.YES;\r\n        }\r\n    });\r\n    if (button > 0) {\r\n        // NO BUTTON\r\n        JButton no = new JButton(language.getText(\"no\"));\r\n        p.add(no);\r\n        no.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent evt) {\r\n                setVisible(false);\r\n                dispose();\r\n                res = GanttDialogInfo.NO;\r\n            }\r\n        });\r\n        if (button > 1) {\r\n            // CANCEL BUTTON\r\n            JButton cancel = new JButton(language.getText(\"cancel\"));\r\n            p.add(cancel);\r\n            cancel.addActionListener(new ActionListener() {\r\n                public void actionPerformed(ActionEvent evt) {\r\n                    setVisible(false);\r\n                    dispose();\r\n                    res = GanttDialogInfo.CANCEL;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getContentPane().add(p, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1835,'int button','int',0,297,'net.sourceforge.ganttproject.gui.GanttDialogInfo',2562,'net.sourceforge.ganttproject.gui.GanttDialogInfo.-init-(java.awt.Frame,int,int,java.lang.String,java.lang.String)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogInfo(Frame parent, int msgtype, int button, String message, String title) {\r\n    super(parent, title, true);\r\n    GanttLanguage language = GanttLanguage.getInstance();\r\n    res = button;\r\n    Box b1 = Box.createVerticalBox();\r\n    if (msgtype == (GanttDialogInfo.ERROR))\r\n        b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/error.png\"))));\r\n    else\r\n        if (msgtype == (GanttDialogInfo.WARNING))\r\n            b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/warning.png\"))));\r\n        else\r\n            if (msgtype == (GanttDialogInfo.INFO))\r\n                b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/info.png\"))));\r\n            else\r\n                if (msgtype == (GanttDialogInfo.QUESTION))\r\n                    b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/question.png\"))));\r\n\r\n\r\n\r\n\r\n    getContentPane().add(b1, \"West\");\r\n    Box b2 = Box.createVerticalBox();\r\n    JTextArea textArea = new JTextArea(message);\r\n    textArea.setEditable(false);\r\n    textArea.setBackground(new JLabel().getBackground());\r\n    b2.add(textArea);\r\n    getContentPane().add(b2, \"Center\");\r\n    JPanel p = new JPanel();\r\n    // YES BUTTON\r\n    JButton yes = new JButton((button == 0 ? language.getText(\"ok\") : language.getText(\"yes\")));\r\n    getRootPane().setDefaultButton(yes);\r\n    p.add(yes);\r\n    yes.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n            res = GanttDialogInfo.YES;\r\n        }\r\n    });\r\n    if (button > 0) {\r\n        // NO BUTTON\r\n        JButton no = new JButton(language.getText(\"no\"));\r\n        p.add(no);\r\n        no.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent evt) {\r\n                setVisible(false);\r\n                dispose();\r\n                res = GanttDialogInfo.NO;\r\n            }\r\n        });\r\n        if (button > 1) {\r\n            // CANCEL BUTTON\r\n            JButton cancel = new JButton(language.getText(\"cancel\"));\r\n            p.add(cancel);\r\n            cancel.addActionListener(new ActionListener() {\r\n                public void actionPerformed(ActionEvent evt) {\r\n                    setVisible(false);\r\n                    dispose();\r\n                    res = GanttDialogInfo.CANCEL;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getContentPane().add(p, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1836,'String message','java.lang.String',0,297,'net.sourceforge.ganttproject.gui.GanttDialogInfo',2562,'net.sourceforge.ganttproject.gui.GanttDialogInfo.-init-(java.awt.Frame,int,int,java.lang.String,java.lang.String)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogInfo(Frame parent, int msgtype, int button, String message, String title) {\r\n    super(parent, title, true);\r\n    GanttLanguage language = GanttLanguage.getInstance();\r\n    res = button;\r\n    Box b1 = Box.createVerticalBox();\r\n    if (msgtype == (GanttDialogInfo.ERROR))\r\n        b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/error.png\"))));\r\n    else\r\n        if (msgtype == (GanttDialogInfo.WARNING))\r\n            b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/warning.png\"))));\r\n        else\r\n            if (msgtype == (GanttDialogInfo.INFO))\r\n                b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/info.png\"))));\r\n            else\r\n                if (msgtype == (GanttDialogInfo.QUESTION))\r\n                    b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/question.png\"))));\r\n\r\n\r\n\r\n\r\n    getContentPane().add(b1, \"West\");\r\n    Box b2 = Box.createVerticalBox();\r\n    JTextArea textArea = new JTextArea(message);\r\n    textArea.setEditable(false);\r\n    textArea.setBackground(new JLabel().getBackground());\r\n    b2.add(textArea);\r\n    getContentPane().add(b2, \"Center\");\r\n    JPanel p = new JPanel();\r\n    // YES BUTTON\r\n    JButton yes = new JButton((button == 0 ? language.getText(\"ok\") : language.getText(\"yes\")));\r\n    getRootPane().setDefaultButton(yes);\r\n    p.add(yes);\r\n    yes.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n            res = GanttDialogInfo.YES;\r\n        }\r\n    });\r\n    if (button > 0) {\r\n        // NO BUTTON\r\n        JButton no = new JButton(language.getText(\"no\"));\r\n        p.add(no);\r\n        no.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent evt) {\r\n                setVisible(false);\r\n                dispose();\r\n                res = GanttDialogInfo.NO;\r\n            }\r\n        });\r\n        if (button > 1) {\r\n            // CANCEL BUTTON\r\n            JButton cancel = new JButton(language.getText(\"cancel\"));\r\n            p.add(cancel);\r\n            cancel.addActionListener(new ActionListener() {\r\n                public void actionPerformed(ActionEvent evt) {\r\n                    setVisible(false);\r\n                    dispose();\r\n                    res = GanttDialogInfo.CANCEL;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getContentPane().add(p, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1837,'String title','java.lang.String',0,297,'net.sourceforge.ganttproject.gui.GanttDialogInfo',2562,'net.sourceforge.ganttproject.gui.GanttDialogInfo.-init-(java.awt.Frame,int,int,java.lang.String,java.lang.String)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogInfo(Frame parent, int msgtype, int button, String message, String title) {\r\n    super(parent, title, true);\r\n    GanttLanguage language = GanttLanguage.getInstance();\r\n    res = button;\r\n    Box b1 = Box.createVerticalBox();\r\n    if (msgtype == (GanttDialogInfo.ERROR))\r\n        b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/error.png\"))));\r\n    else\r\n        if (msgtype == (GanttDialogInfo.WARNING))\r\n            b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/warning.png\"))));\r\n        else\r\n            if (msgtype == (GanttDialogInfo.INFO))\r\n                b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/info.png\"))));\r\n            else\r\n                if (msgtype == (GanttDialogInfo.QUESTION))\r\n                    b1.add(new JLabel(new ImageIcon(getClass().getResource(\"/icons/question.png\"))));\r\n\r\n\r\n\r\n\r\n    getContentPane().add(b1, \"West\");\r\n    Box b2 = Box.createVerticalBox();\r\n    JTextArea textArea = new JTextArea(message);\r\n    textArea.setEditable(false);\r\n    textArea.setBackground(new JLabel().getBackground());\r\n    b2.add(textArea);\r\n    getContentPane().add(b2, \"Center\");\r\n    JPanel p = new JPanel();\r\n    // YES BUTTON\r\n    JButton yes = new JButton((button == 0 ? language.getText(\"ok\") : language.getText(\"yes\")));\r\n    getRootPane().setDefaultButton(yes);\r\n    p.add(yes);\r\n    yes.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n            res = GanttDialogInfo.YES;\r\n        }\r\n    });\r\n    if (button > 0) {\r\n        // NO BUTTON\r\n        JButton no = new JButton(language.getText(\"no\"));\r\n        p.add(no);\r\n        no.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent evt) {\r\n                setVisible(false);\r\n                dispose();\r\n                res = GanttDialogInfo.NO;\r\n            }\r\n        });\r\n        if (button > 1) {\r\n            // CANCEL BUTTON\r\n            JButton cancel = new JButton(language.getText(\"cancel\"));\r\n            p.add(cancel);\r\n            cancel.addActionListener(new ActionListener() {\r\n                public void actionPerformed(ActionEvent evt) {\r\n                    setVisible(false);\r\n                    dispose();\r\n                    res = GanttDialogInfo.CANCEL;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getContentPane().add(p, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1838,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,298,'net.sourceforge.ganttproject.gui.GanttDialogPerson',2564,'net.sourceforge.ganttproject.gui.GanttDialogPerson.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.language.GanttLanguage,net.sourceforge.ganttproject.resource.HumanResource)',0,'/**\r\n * Creates new form GanttDialogPerson\r\n */\r\npublic GanttDialogPerson(UIFacade uiFacade, GanttLanguage language, HumanResource person) {\r\n    // super(parent, GanttProject.correctLabel(language.getText(\"human\")),\r\n    // true);\r\n    // \r\n    myUIFacade = uiFacade;\r\n    this.person = person;\r\n    Role[] enabledRoles = net.sourceforge.ganttproject.roles.RoleManager.Access.getInstance().getEnabledRoles();\r\n    String[] roleFieldValues = new String[enabledRoles.length];\r\n    for (int i = 0; i < (enabledRoles.length); i++) {\r\n        roleFieldValues[i] = enabledRoles[i].getName();\r\n    }\r\n    myRoleField = new DefaultEnumerationOption(\"colRole\", roleFieldValues);\r\n    myGroup = new GPOptionGroup(\"\", new GPOption[]{ myNameField, myPhoneField, myMailField, myRoleField });\r\n    myGroup.setTitled(false);\r\n}'),(1839,'GanttLanguage language','net.sourceforge.ganttproject.language.GanttLanguage',461,298,'net.sourceforge.ganttproject.gui.GanttDialogPerson',2564,'net.sourceforge.ganttproject.gui.GanttDialogPerson.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.language.GanttLanguage,net.sourceforge.ganttproject.resource.HumanResource)',0,'/**\r\n * Creates new form GanttDialogPerson\r\n */\r\npublic GanttDialogPerson(UIFacade uiFacade, GanttLanguage language, HumanResource person) {\r\n    // super(parent, GanttProject.correctLabel(language.getText(\"human\")),\r\n    // true);\r\n    // \r\n    myUIFacade = uiFacade;\r\n    this.person = person;\r\n    Role[] enabledRoles = net.sourceforge.ganttproject.roles.RoleManager.Access.getInstance().getEnabledRoles();\r\n    String[] roleFieldValues = new String[enabledRoles.length];\r\n    for (int i = 0; i < (enabledRoles.length); i++) {\r\n        roleFieldValues[i] = enabledRoles[i].getName();\r\n    }\r\n    myRoleField = new DefaultEnumerationOption(\"colRole\", roleFieldValues);\r\n    myGroup = new GPOptionGroup(\"\", new GPOption[]{ myNameField, myPhoneField, myMailField, myRoleField });\r\n    myGroup.setTitled(false);\r\n}'),(1840,'HumanResource person','net.sourceforge.ganttproject.resource.HumanResource',499,298,'net.sourceforge.ganttproject.gui.GanttDialogPerson',2564,'net.sourceforge.ganttproject.gui.GanttDialogPerson.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.language.GanttLanguage,net.sourceforge.ganttproject.resource.HumanResource)',0,'/**\r\n * Creates new form GanttDialogPerson\r\n */\r\npublic GanttDialogPerson(UIFacade uiFacade, GanttLanguage language, HumanResource person) {\r\n    // super(parent, GanttProject.correctLabel(language.getText(\"human\")),\r\n    // true);\r\n    // \r\n    myUIFacade = uiFacade;\r\n    this.person = person;\r\n    Role[] enabledRoles = net.sourceforge.ganttproject.roles.RoleManager.Access.getInstance().getEnabledRoles();\r\n    String[] roleFieldValues = new String[enabledRoles.length];\r\n    for (int i = 0; i < (enabledRoles.length); i++) {\r\n        roleFieldValues[i] = enabledRoles[i].getName();\r\n    }\r\n    myRoleField = new DefaultEnumerationOption(\"colRole\", roleFieldValues);\r\n    myGroup = new GPOptionGroup(\"\", new GPOption[]{ myNameField, myPhoneField, myMailField, myRoleField });\r\n    myGroup.setTitled(false);\r\n}'),(1841,'boolean isVisible','boolean',0,298,'net.sourceforge.ganttproject.gui.GanttDialogPerson',2573,'net.sourceforge.ganttproject.gui.GanttDialogPerson.setVisible(boolean)',0,'public void setVisible(boolean isVisible) {\r\n    if (isVisible) {\r\n        loadFields();\r\n        Component contentPane = getComponent();\r\n        OkAction okAction = new OkAction() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                myGroup.commit();\r\n                okButtonActionPerformed(e);\r\n            }\r\n        };\r\n        CancelAction cancelAction = new CancelAction() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                myGroup.rollback();\r\n                change = false;\r\n            }\r\n        };\r\n        myUIFacade.showDialog(contentPane, new Action[]{ okAction, cancelAction }, language.getText(\"human\"));\r\n    }\r\n}'),(1842,'ActionEvent evt','java.awt.event.ActionEvent',0,298,'net.sourceforge.ganttproject.gui.GanttDialogPerson',2571,'net.sourceforge.ganttproject.gui.GanttDialogPerson.okButtonActionPerformed(java.awt.event.ActionEvent)',0,'private void okButtonActionPerformed(ActionEvent evt) {\r\n    // GEN-FIRST:event_okButtonActionPerformed\r\n    if ((person.getId()) != (-1)) {\r\n        // person ID is -1 when it is new one\r\n        // i.e. before the Person dialog is\r\n        // closed\r\n        myUIFacade.getUndoManager().undoableEdit(\"Resource properties changed\", new Runnable() {\r\n            public void run() {\r\n                applyChanges();\r\n            }\r\n        });\r\n    } else {\r\n        applyChanges();\r\n    }\r\n    change = true;\r\n}'),(1843,'String roleName','java.lang.String',0,298,'net.sourceforge.ganttproject.gui.GanttDialogPerson',2568,'net.sourceforge.ganttproject.gui.GanttDialogPerson.findRole(java.lang.String)',0,'private Role findRole(String roleName) {\r\n    Role[] enabledRoles = net.sourceforge.ganttproject.roles.RoleManager.Access.getInstance().getEnabledRoles();\r\n    for (int i = 0; i < (enabledRoles.length); i++) {\r\n        if (enabledRoles[i].getName().equals(roleName)) {\r\n            return enabledRoles[i];\r\n        }\r\n    }\r\n    return null;\r\n}'),(1844,'net.sourceforge.ganttproject.roles.Role','net.sourceforge.ganttproject.roles.Role',512,298,'net.sourceforge.ganttproject.gui.GanttDialogPerson',2568,'net.sourceforge.ganttproject.gui.GanttDialogPerson.findRole(java.lang.String)',1,'private Role findRole(String roleName) {\r\n    Role[] enabledRoles = net.sourceforge.ganttproject.roles.RoleManager.Access.getInstance().getEnabledRoles();\r\n    for (int i = 0; i < (enabledRoles.length); i++) {\r\n        if (enabledRoles[i].getName().equals(roleName)) {\r\n            return enabledRoles[i];\r\n        }\r\n    }\r\n    return null;\r\n}'),(1845,'GanttTask[] tasks','net.sourceforge.ganttproject.GanttTask[]',0,299,'net.sourceforge.ganttproject.gui.GanttDialogProperties',2574,'net.sourceforge.ganttproject.gui.GanttDialogProperties.-init-(net.sourceforge.ganttproject.GanttTask[])',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogProperties(GanttTask[] tasks) {\r\n    myTasks = tasks;\r\n}'),(1846,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,299,'net.sourceforge.ganttproject.gui.GanttDialogProperties',2576,'net.sourceforge.ganttproject.gui.GanttDialogProperties.show(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public void show(IGanttProject project, final UIFacade uiFacade) {\r\n    // super(parent, GanttLanguage.getInstance().getText(\"propertiesFor\")\r\n    // + \" \" + tasksNames + \"\", true);\r\n    final GanttTaskPropertiesBean taskPropertiesBean = new GanttTaskPropertiesBean(myTasks, project, uiFacade);\r\n    final Action[] actions = new Action[]{ new OkAction() {\r\n        public void actionPerformed(ActionEvent arg0) {\r\n            uiFacade.getUndoManager().undoableEdit(\"Properties changed\", new Runnable() {\r\n                public void run() {\r\n                    Task[] returnTask = taskPropertiesBean.getReturnTask();\r\n                    // System.err.println(\"[GanttDialogProperties]\r\n                    // returnTask=\"+returnTask);\r\n                    // returnTask.setTaskID(this.task.getTaskID());\r\n                    // getTaskManager().setTask(returnTask);\r\n                    // DefaultMutableTreeNode father;\r\n                    // for (int i = 0; i < returnTask.length; i++) {\r\n                    // tree.getNode(myTasks[i].getTaskID())\r\n                    // .setUserObject(returnTask[i]);\r\n                    // // Refresh all father\r\n                    // father = tree.getFatherNode(tree\r\n                    // .getNode(myTasks[i].getTaskID()));\r\n                    // while (father != null) {\r\n                    // tree.forwardScheduling();\r\n                    // father = tree.getFatherNode(father);\r\n                    // }\r\n                    // }\r\n                }\r\n            });\r\n        }\r\n    }, new CancelAction() {\r\n        public void actionPerformed(ActionEvent arg0) {\r\n        }\r\n    } };\r\n    StringBuffer taskNames = new StringBuffer();\r\n    for (int i = 0; i < (myTasks.length); i++) {\r\n        if (i > 0) {\r\n            taskNames.append(,);\r\n        }\r\n        taskNames.append(myTasks[i].getName());\r\n    }\r\n    final String title = (((GanttLanguage.getInstance().getText(\"propertiesFor\")) + \" \") + taskNames) + \"\";\r\n    uiFacade.showDialog(taskPropertiesBean, actions, title);\r\n}'),(1847,'final UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,299,'net.sourceforge.ganttproject.gui.GanttDialogProperties',2576,'net.sourceforge.ganttproject.gui.GanttDialogProperties.show(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public void show(IGanttProject project, final UIFacade uiFacade) {\r\n    // super(parent, GanttLanguage.getInstance().getText(\"propertiesFor\")\r\n    // + \" \" + tasksNames + \"\", true);\r\n    final GanttTaskPropertiesBean taskPropertiesBean = new GanttTaskPropertiesBean(myTasks, project, uiFacade);\r\n    final Action[] actions = new Action[]{ new OkAction() {\r\n        public void actionPerformed(ActionEvent arg0) {\r\n            uiFacade.getUndoManager().undoableEdit(\"Properties changed\", new Runnable() {\r\n                public void run() {\r\n                    Task[] returnTask = taskPropertiesBean.getReturnTask();\r\n                    // System.err.println(\"[GanttDialogProperties]\r\n                    // returnTask=\"+returnTask);\r\n                    // returnTask.setTaskID(this.task.getTaskID());\r\n                    // getTaskManager().setTask(returnTask);\r\n                    // DefaultMutableTreeNode father;\r\n                    // for (int i = 0; i < returnTask.length; i++) {\r\n                    // tree.getNode(myTasks[i].getTaskID())\r\n                    // .setUserObject(returnTask[i]);\r\n                    // // Refresh all father\r\n                    // father = tree.getFatherNode(tree\r\n                    // .getNode(myTasks[i].getTaskID()));\r\n                    // while (father != null) {\r\n                    // tree.forwardScheduling();\r\n                    // father = tree.getFatherNode(father);\r\n                    // }\r\n                    // }\r\n                }\r\n            });\r\n        }\r\n    }, new CancelAction() {\r\n        public void actionPerformed(ActionEvent arg0) {\r\n        }\r\n    } };\r\n    StringBuffer taskNames = new StringBuffer();\r\n    for (int i = 0; i < (myTasks.length); i++) {\r\n        if (i > 0) {\r\n            taskNames.append(,);\r\n        }\r\n        taskNames.append(myTasks[i].getName());\r\n    }\r\n    final String title = (((GanttLanguage.getInstance().getText(\"propertiesFor\")) + \" \") + taskNames) + \"\";\r\n    uiFacade.showDialog(taskPropertiesBean, actions, title);\r\n}'),(1848,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,300,'net.sourceforge.ganttproject.gui.GanttDialogPublicHoliday',2577,'net.sourceforge.ganttproject.gui.GanttDialogPublicHoliday.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GanttDialogPublicHoliday(IGanttProject project, UIFacade uiFacade) {\r\n    publicHolidays = new DateIntervalListEditor.DefaultDateIntervalModel();\r\n    for (Iterator iter = project.getActiveCalendar().getPublicHolidays().iterator(); iter.hasNext();) {\r\n        Date d = ((Date) (iter.next()));\r\n        publicHolidays.add(new DateIntervalListEditor.DateInterval(d, d));\r\n    }\r\n    // publicHolidayBean = new GanttPublicHolidayBean(publicHolidays);\r\n    publicHolidayBean = new DateIntervalListEditor(publicHolidays);\r\n    myUIFacade = uiFacade;\r\n    // publicHolidayBean.addActionListener(this);\r\n}'),(1849,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,300,'net.sourceforge.ganttproject.gui.GanttDialogPublicHoliday',2577,'net.sourceforge.ganttproject.gui.GanttDialogPublicHoliday.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GanttDialogPublicHoliday(IGanttProject project, UIFacade uiFacade) {\r\n    publicHolidays = new DateIntervalListEditor.DefaultDateIntervalModel();\r\n    for (Iterator iter = project.getActiveCalendar().getPublicHolidays().iterator(); iter.hasNext();) {\r\n        Date d = ((Date) (iter.next()));\r\n        publicHolidays.add(new DateIntervalListEditor.DateInterval(d, d));\r\n    }\r\n    // publicHolidayBean = new GanttPublicHolidayBean(publicHolidays);\r\n    publicHolidayBean = new DateIntervalListEditor(publicHolidays);\r\n    myUIFacade = uiFacade;\r\n    // publicHolidayBean.addActionListener(this);\r\n}'),(1850,'String name','java.lang.String',0,301,'net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo',2580,'net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.-init-(java.lang.String,java.lang.String)',0,'public GanttLookAndFeelInfo(String name, String className) {\r\n    super(name, className);\r\n    toString = name;\r\n}'),(1851,'String className','java.lang.String',0,301,'net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo',2580,'net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.-init-(java.lang.String,java.lang.String)',0,'public GanttLookAndFeelInfo(String name, String className) {\r\n    super(name, className);\r\n    toString = name;\r\n}'),(1852,'UIManager.LookAndFeelInfo info','javax.swing.UIManager$LookAndFeelInfo',0,301,'net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo',2581,'net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.-init-(javax.swing.UIManager$LookAndFeelInfo)',0,'public GanttLookAndFeelInfo(UIManager.LookAndFeelInfo info) {\r\n    this(info.getName(), info.getClassName());\r\n}'),(1853,'GanttLookAndFeelInfo info','net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo',301,302,'net.sourceforge.ganttproject.gui.GanttLookAndFeels',2584,'net.sourceforge.ganttproject.gui.GanttLookAndFeels.addLookAndFeel(net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo)',0,'protected void addLookAndFeel(GanttLookAndFeelInfo info) {\r\n    if ((info.getName().startsWith(\"Kunststoff\")) && (System.getProperty(\"os.name\").startsWith(\"Mac\"))) {\r\n        System.err.println(\"LookAndFeel not added (Kunststoff is ignored on MacOS).\");\r\n    } else {\r\n        if (!(infoByClass.containsKey(info.getClassName()))) {\r\n            infoByClass.put(info.getClassName(), info);\r\n            infoByName.put(info.getName(), info);\r\n        } else {\r\n            System.err.println(((((\"LookAndFeel \" + info) + \"(\") + (info.getClassName())) + \") already installed.\"));\r\n        }\r\n    }\r\n}'),(1854,'String className','java.lang.String',0,302,'net.sourceforge.ganttproject.gui.GanttLookAndFeels',2587,'net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByClass(java.lang.String)',0,'public GanttLookAndFeelInfo getInfoByClass(String className) {\r\n    return ((GanttLookAndFeelInfo) (infoByClass.get(className)));\r\n}'),(1855,'net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo','net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo',301,302,'net.sourceforge.ganttproject.gui.GanttLookAndFeels',2587,'net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByClass(java.lang.String)',1,'public GanttLookAndFeelInfo getInfoByClass(String className) {\r\n    return ((GanttLookAndFeelInfo) (infoByClass.get(className)));\r\n}'),(1856,'String name','java.lang.String',0,302,'net.sourceforge.ganttproject.gui.GanttLookAndFeels',2588,'net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByName(java.lang.String)',0,'public GanttLookAndFeelInfo getInfoByName(String name) {\r\n    return ((GanttLookAndFeelInfo) (infoByName.get(name)));\r\n}'),(1857,'net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo','net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo',301,302,'net.sourceforge.ganttproject.gui.GanttLookAndFeels',2588,'net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByName(java.lang.String)',1,'public GanttLookAndFeelInfo getInfoByName(String name) {\r\n    return ((GanttLookAndFeelInfo) (infoByName.get(name)));\r\n}'),(1858,'UIConfiguration config','net.sourceforge.ganttproject.gui.UIConfiguration',335,303,'net.sourceforge.ganttproject.gui.GanttMetalTheme',2590,'net.sourceforge.ganttproject.gui.GanttMetalTheme.-init-(net.sourceforge.ganttproject.gui.UIConfiguration)',0,'public GanttMetalTheme(UIConfiguration config) {\r\n    super();\r\n    font = new FontUIResource(config.getMenuFont());\r\n}'),(1859,'GanttCalendar date','net.sourceforge.ganttproject.GanttCalendar',24,305,'net.sourceforge.ganttproject.gui.GanttPanelDate',2596,'net.sourceforge.ganttproject.gui.GanttPanelDate.-init-(net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttPanelDate(GanttCalendar date) {\r\n    // super(parent, GanttLanguage.getInstance().getText(\"chooseDate\"),\r\n    // true);\r\n    // setResizable(false);\r\n    this.save = date.Clone();\r\n    // month = date.getDayMonthLanguage();\r\n    Box vb1 = Box.createVerticalBox();\r\n    Box hb1 = Box.createHorizontalBox();\r\n    jbPrevYear = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/prevyear.gif\")));\r\n    jbPrevYear.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            rollDate(Calendar.YEAR, (-1));\r\n        }\r\n    });\r\n    jbPrevMonth = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/prevmonth.gif\")));\r\n    jbPrevMonth.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            rollDate(Calendar.MONTH, (-1));\r\n        }\r\n    });\r\n    jbNextMonth = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/nextmonth.gif\")));\r\n    jbNextMonth.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            rollDate(Calendar.MONTH, (+1));\r\n        }\r\n    });\r\n    jbNextYear = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/nextyear.gif\")));\r\n    jbNextYear.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            rollDate(Calendar.YEAR, (+1));\r\n        }\r\n    });\r\n    jbPrevYear.setToolTipText(GanttProject.getToolTip(language.getText(\"prevYear\")));\r\n    jbPrevMonth.setToolTipText(GanttProject.getToolTip(language.getText(\"prevMonth\")));\r\n    jbNextMonth.setToolTipText(GanttProject.getToolTip(language.getText(\"nextMonth\")));\r\n    jbNextYear.setToolTipText(GanttProject.getToolTip(language.getText(\"nextYear\")));\r\n    ddd = new GanttPanelDate.GanttDialogDateDay(date, language);\r\n    jtDate = new JFormattedTextField(new SimpleDateFormat(\"MMM yyyy\"));\r\n    jtDate.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            GregorianCalendar tmp = new GregorianCalendar();\r\n            tmp.setTime(((Date) (jtDate.getValue())));\r\n            changeDate(tmp);\r\n        }\r\n    });\r\n    jtDate.setValue(ddd.date.getTime());\r\n    jtDate.setEditable(false);\r\n    hb1.add(jbPrevYear);\r\n    hb1.add(jbPrevMonth);\r\n    hb1.add(jtDate);\r\n    hb1.add(jbNextMonth);\r\n    hb1.add(jbNextYear);\r\n    vb1.add(hb1);\r\n    vb1.add(ddd);\r\n    add(vb1, \"Center\");\r\n}'),(1860,'GanttCalendar date','net.sourceforge.ganttproject.GanttCalendar',24,304,'net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay',2603,'net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay.-init-(net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.language.GanttLanguage)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogDateDay(GanttCalendar date, GanttLanguage language) {\r\n    this.date = date;\r\n    this.language = language;\r\n    MouseListener ml = new MouseAdapter() {\r\n        public void mousePressed(MouseEvent e) {\r\n            clickFunction(e.getX(), e.getY());\r\n        }\r\n    };\r\n    this.addMouseListener(ml);\r\n}'),(1861,'GanttLanguage language','net.sourceforge.ganttproject.language.GanttLanguage',461,304,'net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay',2603,'net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay.-init-(net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.language.GanttLanguage)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttDialogDateDay(GanttCalendar date, GanttLanguage language) {\r\n    this.date = date;\r\n    this.language = language;\r\n    MouseListener ml = new MouseAdapter() {\r\n        public void mousePressed(MouseEvent e) {\r\n            clickFunction(e.getX(), e.getY());\r\n        }\r\n    };\r\n    this.addMouseListener(ml);\r\n}'),(1862,'GregorianCalendar newDate','net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',646,305,'net.sourceforge.ganttproject.gui.GanttPanelDate',2600,'net.sourceforge.ganttproject.gui.GanttPanelDate.changeDate(net.sourceforge.ganttproject.time.gregorian.GregorianCalendar)',0,'/**\r\n * Fill the content of the central label *\r\n */\r\nprivate void changeDate(GregorianCalendar newDate) {\r\n    boolean differentMonth = ((ddd.date.get(Calendar.MONTH)) != (newDate.get(Calendar.MONTH))) || ((ddd.date.get(Calendar.YEAR)) != (newDate.get(Calendar.YEAR)));\r\n    ddd.date.setTime(newDate.getTime());\r\n    if (differentMonth) {\r\n        jtDate.setValue(ddd.date.getTime());\r\n        ddd.repaint();\r\n    }\r\n}'),(1863,'int field','int',0,305,'net.sourceforge.ganttproject.gui.GanttPanelDate',2602,'net.sourceforge.ganttproject.gui.GanttPanelDate.rollDate(int,int)',0,'/**\r\n * This function rolls the date *\r\n */\r\nprivate void rollDate(int field, int amount) {\r\n    ddd.date.add(field, amount);\r\n    jtDate.setValue(ddd.date.getTime());\r\n    ddd.repaint();\r\n}'),(1864,'int amount','int',0,305,'net.sourceforge.ganttproject.gui.GanttPanelDate',2602,'net.sourceforge.ganttproject.gui.GanttPanelDate.rollDate(int,int)',0,'/**\r\n * This function rolls the date *\r\n */\r\nprivate void rollDate(int field, int amount) {\r\n    ddd.date.add(field, amount);\r\n    jtDate.setValue(ddd.date.getTime());\r\n    ddd.repaint();\r\n}'),(1865,'int x','int',0,304,'net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay',2605,'net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay.clickFunction(int,int)',0,'/**\r\n * When the user click on the widget\r\n */\r\npublic void clickFunction(int x, int y) {\r\n    // Has he click on the panel???\r\n    if (((x < (((getWidth()) / 7) * 7)) && (y > 15)) && (y < (7 * 15))) {\r\n        int X = x / ((getWidth()) / 7);\r\n        int Y = (y - 15) / 15;\r\n        // Recup the first monday\r\n        GanttCalendar tmpdate = date.Clone();\r\n        tmpdate.setDay(1);\r\n        String d = tmpdate.getdayWeek();\r\n        while (!(d.equals(language.getDay(1)))) {\r\n            tmpdate.go(Calendar.DATE, (-1));\r\n            d = tmpdate.getdayWeek();\r\n        } \r\n        // Search the exact day\r\n        for (int i = 0; i < ((Y * 7) + X); i++)\r\n            tmpdate.go(Calendar.DATE, 1);\r\n\r\n        // Check the validity of the month\r\n        // if(tmpdate.getMonth() == date.getMonth())\r\n        // date = tmpdate;\r\n        changeDate(tmpdate);\r\n    }\r\n    repaint();\r\n}'),(1866,'int y','int',0,304,'net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay',2605,'net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay.clickFunction(int,int)',0,'/**\r\n * When the user click on the widget\r\n */\r\npublic void clickFunction(int x, int y) {\r\n    // Has he click on the panel???\r\n    if (((x < (((getWidth()) / 7) * 7)) && (y > 15)) && (y < (7 * 15))) {\r\n        int X = x / ((getWidth()) / 7);\r\n        int Y = (y - 15) / 15;\r\n        // Recup the first monday\r\n        GanttCalendar tmpdate = date.Clone();\r\n        tmpdate.setDay(1);\r\n        String d = tmpdate.getdayWeek();\r\n        while (!(d.equals(language.getDay(1)))) {\r\n            tmpdate.go(Calendar.DATE, (-1));\r\n            d = tmpdate.getdayWeek();\r\n        } \r\n        // Search the exact day\r\n        for (int i = 0; i < ((Y * 7) + X); i++)\r\n            tmpdate.go(Calendar.DATE, 1);\r\n\r\n        // Check the validity of the month\r\n        // if(tmpdate.getMonth() == date.getMonth())\r\n        // date = tmpdate;\r\n        changeDate(tmpdate);\r\n    }\r\n    repaint();\r\n}'),(1867,'Graphics g','java.awt.Graphics',0,304,'net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay',2607,'net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay.paintComponent(java.awt.Graphics)',0,'/**\r\n * draw the panel\r\n */\r\npublic void paintComponent(Graphics g) {\r\n    super.paintComponent(g);\r\n    int sizex = getWidth();\r\n    int sizey = getHeight();\r\n    // Display the legend at top\r\n    g.setColor(Color.white);\r\n    g.fillRect(0, 0, sizex, sizey);\r\n    // two colors uses\r\n    Color gris = new Color(((float) (0.827)), ((float) (0.827)), ((float) (0.827)));\r\n    Color bleu = new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643)));\r\n    g.setColor(bleu);\r\n    g.fillRect(0, 0, sizex, 15);\r\n    String[] dayWeek = date.getDayWeekLanguage();\r\n    g.setColor(Color.white);\r\n    for (int i = 0; i < (dayWeek.length); i++) {\r\n        String dw = dayWeek[((i + 1) % 7)];\r\n        g.drawString(dw.substring(0, ((dw.length()) < 3 ? dw.length() : 3)), (((i * sizex) / 7) + 3), 12);\r\n    }\r\n    GanttCalendar tmpdate = date.Clone();\r\n    TimeZone timeZone = tmpdate.getTimeZone();\r\n    tmpdate.setDay(1);\r\n    String d = tmpdate.getdayWeek();\r\n    while (!(d.equals(language.getDay(1)))) {\r\n        tmpdate.go(Calendar.DATE, (-1));\r\n        d = tmpdate.getdayWeek();\r\n    } \r\n    for (int i = 0; i < 6; i++) {\r\n        for (int j = 0; j < 7; j++) {\r\n            if ((tmpdate.getMonth()) != (date.getMonth()))\r\n                g.setColor(gris);\r\n            else {\r\n                if ((tmpdate.getDay()) == (date.getDay())) {\r\n                    g.setColor(bleu);\r\n                    g.fillRect((((j * sizex) / 7) - 1), (15 + (i * 15)), (sizex / 7), 15);\r\n                    g.setColor(Color.white);\r\n                } else\r\n                    g.setColor(Color.black);\r\n\r\n            }\r\n            g.drawString((\"\" + (tmpdate.getDate())), (((j * sizex) / 7) + 4), ((30 + (i * 15)) - 3));\r\n            tmpdate.go(Calendar.DATE, 1);\r\n            if ((timeZone != null) && (timeZone.inDaylightTime(tmpdate.getTime()))) {\r\n                tmpdate.add(Calendar.MILLISECOND, timeZone.getDSTSavings());\r\n                timeZone = null;\r\n            }\r\n        }\r\n    }\r\n}'),(1868,'JFrame mainFrame','javax.swing.JFrame',0,310,'net.sourceforge.ganttproject.gui.GanttStatusBar',2608,'net.sourceforge.ganttproject.gui.GanttStatusBar.-init-(javax.swing.JFrame)',0,'/**\r\n * Default constructor.\r\n */\r\npublic GanttStatusBar(JFrame mainFrame) {\r\n    super(new BorderLayout());\r\n    myMainFrame = mainFrame;\r\n    // pbp = new ProgressBarPanel();\r\n    message0 = new GanttStatusBar.MessagePanel(215, false);\r\n    message1 = new GanttStatusBar.MessagePanel(400, true);\r\n    message2 = new GanttStatusBar.MessagePanel(250, true);\r\n    myErrorNotificationPanel = new GanttStatusBar.ErrorNotificationPanel();\r\n    // myMainFrame.setGlassPane(pbp);\r\n    // pbp.setPreferredSize(new Dimension(160, 16));\r\n    // message1.setPreferredSize(new Dimension(360,25));\r\n    // message2.setPreferredSize(new Dimension(210,25));\r\n    // add(pbp, BorderLayout.WEST);\r\n    // add(message0, BorderLayout.WEST);\r\n    add(myErrorNotificationPanel, BorderLayout.WEST);\r\n    add(message1, BorderLayout.CENTER);\r\n    add(message2, BorderLayout.EAST);\r\n    message0.setText(((\"GanttProject.biz (\" + (GanttProject.version)) + \")\"));\r\n    // pbp.setValue(0);\r\n    setFirstText(GanttLanguage.getInstance().getText(\"welcome\"), 500);\r\n}'),(1869,'int size','int',0,307,'net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel',2625,'net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel.-init-(int,boolean)',0,'/**\r\n * Constructor.\r\n */\r\npublic MessagePanel(int size, boolean separator) {\r\n    super(new FlowLayout());\r\n    message = new JLabel() {\r\n        public void paint(Graphics g) {\r\n            Graphics2D g2 = ((Graphics2D) (g));\r\n            g2.setColor(textColor);\r\n            g2.drawString(getText(), 0, 12);\r\n        }\r\n    };\r\n    if (size != (-1)) {\r\n        message.setPreferredSize(new Dimension(size, 16));\r\n        message.setMaximumSize(new Dimension(size, 16));\r\n        message.setMaximumSize(new Dimension(size, 16));\r\n    }\r\n    if (separator)\r\n        add(new JLabel(\"|\"));\r\n\r\n    add(message);\r\n}'),(1870,'boolean separator','boolean',0,307,'net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel',2625,'net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel.-init-(int,boolean)',0,'/**\r\n * Constructor.\r\n */\r\npublic MessagePanel(int size, boolean separator) {\r\n    super(new FlowLayout());\r\n    message = new JLabel() {\r\n        public void paint(Graphics g) {\r\n            Graphics2D g2 = ((Graphics2D) (g));\r\n            g2.setColor(textColor);\r\n            g2.drawString(getText(), 0, 12);\r\n        }\r\n    };\r\n    if (size != (-1)) {\r\n        message.setPreferredSize(new Dimension(size, 16));\r\n        message.setMaximumSize(new Dimension(size, 16));\r\n        message.setMaximumSize(new Dimension(size, 16));\r\n    }\r\n    if (separator)\r\n        add(new JLabel(\"|\"));\r\n\r\n    add(message);\r\n}'),(1871,'IProgressMonitor progressMonitor','org.eclipse.core.runtime.IProgressMonitor',0,308,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarDialog',2632,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarDialog.-init-(org.eclipse.core.runtime.IProgressMonitor)',0,'private ProgressBarDialog(IProgressMonitor progressMonitor) {\r\n    super(myMainFrame, true);\r\n    myProgressMonitor = progressMonitor;\r\n}'),(1872,'String text','java.lang.String',0,310,'net.sourceforge.ganttproject.gui.GanttStatusBar',2618,'net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(java.lang.String)',0,'public void setFirstText(String text) {\r\n    message1.setText(text);\r\n}'),(1873,'String text','java.lang.String',0,310,'net.sourceforge.ganttproject.gui.GanttStatusBar',2620,'net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(java.lang.String)',0,'public void setSecondText(String text) {\r\n    message2.setText(text);\r\n}'),(1874,'String text','java.lang.String',0,310,'net.sourceforge.ganttproject.gui.GanttStatusBar',2619,'net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(java.lang.String,int)',0,'public void setFirstText(String text, int mlTimer) {\r\n    if (!(isVisible()))\r\n        return;\r\n\r\n    message1.setText(text, mlTimer);\r\n    mode = GanttStatusBar.MESSAGE_1;\r\n    if (!(bRunning)) {\r\n        bRunning = true;\r\n        new Thread(this).start();\r\n    }\r\n}'),(1875,'int mlTimer','int',0,310,'net.sourceforge.ganttproject.gui.GanttStatusBar',2619,'net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(java.lang.String,int)',0,'public void setFirstText(String text, int mlTimer) {\r\n    if (!(isVisible()))\r\n        return;\r\n\r\n    message1.setText(text, mlTimer);\r\n    mode = GanttStatusBar.MESSAGE_1;\r\n    if (!(bRunning)) {\r\n        bRunning = true;\r\n        new Thread(this).start();\r\n    }\r\n}'),(1876,'String text','java.lang.String',0,310,'net.sourceforge.ganttproject.gui.GanttStatusBar',2621,'net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(java.lang.String,int)',0,'public void setSecondText(String text, int mlTimer) {\r\n    if (!(isVisible()))\r\n        return;\r\n\r\n    message2.setText(text, mlTimer);\r\n    mode = GanttStatusBar.MESSAGE_2;\r\n    if (!(bRunning)) {\r\n        bRunning = true;\r\n        new Thread(this).start();\r\n    }\r\n}'),(1877,'int mlTimer','int',0,310,'net.sourceforge.ganttproject.gui.GanttStatusBar',2621,'net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(java.lang.String,int)',0,'public void setSecondText(String text, int mlTimer) {\r\n    if (!(isVisible()))\r\n        return;\r\n\r\n    message2.setText(text, mlTimer);\r\n    mode = GanttStatusBar.MESSAGE_2;\r\n    if (!(bRunning)) {\r\n        bRunning = true;\r\n        new Thread(this).start();\r\n    }\r\n}'),(1878,'String text','java.lang.String',0,307,'net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel',2630,'net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel.setText(java.lang.String)',0,'/**\r\n * set a new text to the message.\r\n */\r\npublic void setText(String text) {\r\n    message.setText(text);\r\n    timer = 0;\r\n}'),(1879,'String text','java.lang.String',0,307,'net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel',2631,'net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel.setText(java.lang.String,int)',0,'/**\r\n * set a new text to the message.\r\n */\r\npublic void setText(String text, int mltimer) {\r\n    message.setText(text);\r\n    timer = mltimer;\r\n}'),(1880,'int mltimer','int',0,307,'net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel',2631,'net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel.setText(java.lang.String,int)',0,'/**\r\n * set a new text to the message.\r\n */\r\npublic void setText(String text, int mltimer) {\r\n    message.setText(text);\r\n    timer = mltimer;\r\n}'),(1881,'final Runnable notifier','java.lang.Runnable',0,306,'net.sourceforge.ganttproject.gui.GanttStatusBar$ErrorNotificationPanel',2624,'net.sourceforge.ganttproject.gui.GanttStatusBar$ErrorNotificationPanel.enableNotifier(java.lang.Runnable)',0,'void enableNotifier(final Runnable notifier) {\r\n    myLabel = new JLabel(\"<html><body><b>Errors happened. Click here to see the details</b></body></html>\");\r\n    myLabel.addMouseListener(new MouseAdapter() {\r\n        public void mouseClicked(MouseEvent e) {\r\n            notifier.run();\r\n        }\r\n    });\r\n    add(myLabel);\r\n    revalidate();\r\n}'),(1882,'String task','java.lang.String',0,308,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarDialog',2638,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarDialog.start(java.lang.String,int)',0,'void start(String task, int totalWork) {\r\n    myProgressBar.setMaximum(totalWork);\r\n    myProgressBar.setMinimum(0);\r\n    myTask = task;\r\n    myLabel.setText(getLabelText());\r\n    pack();\r\n    setSize(400, 60);\r\n    DialogAligner.center(this, myMainFrame);\r\n    setVisible(true);\r\n}'),(1883,'int totalWork','int',0,308,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarDialog',2638,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarDialog.start(java.lang.String,int)',0,'void start(String task, int totalWork) {\r\n    myProgressBar.setMaximum(totalWork);\r\n    myProgressBar.setMinimum(0);\r\n    myTask = task;\r\n    myLabel.setText(getLabelText());\r\n    pack();\r\n    setSize(400, 60);\r\n    DialogAligner.center(this, myMainFrame);\r\n    setVisible(true);\r\n}'),(1884,'int work','int',0,308,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarDialog',2637,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarDialog.setProgress(int)',0,'void setProgress(int work) {\r\n    myProgressBar.setValue(work);\r\n    myLabel.setText(getLabelText());\r\n}'),(1885,'final String name','java.lang.String',0,309,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl',2640,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl.beginTask(java.lang.String,int)',0,'public void beginTask(final String name, final int totalWork) {\r\n    /* catch (InterruptedException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n    } catch (InvocationTargetException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n    }\n     */\r\n    try {\r\n        SwingUtilities.invokeLater(new Runnable() {\r\n            public void run() {\r\n                // pbp.reset(name, totalWork);\r\n                // pbp.setVisible(true);\r\n                myTaskName = name;\r\n                myTotalWork = totalWork;\r\n                // myMainFrame.setGlassPane(myProgressPanel);\r\n                // myProgressPanel.setVisible(true);\r\n                // myMainFrame.getRootPane().revalidate();\r\n                // myProgressPanel.start();\r\n                myProgressDialog.start(name, totalWork);\r\n                GPLogger.log((\"[ProgressMonitorImpl] beginTask: name=\" + name));\r\n            }\r\n        });\r\n    } finally {\r\n    }\r\n}'),(1886,'final int totalWork','int',0,309,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl',2640,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl.beginTask(java.lang.String,int)',0,'public void beginTask(final String name, final int totalWork) {\r\n    /* catch (InterruptedException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n    } catch (InvocationTargetException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n    }\n     */\r\n    try {\r\n        SwingUtilities.invokeLater(new Runnable() {\r\n            public void run() {\r\n                // pbp.reset(name, totalWork);\r\n                // pbp.setVisible(true);\r\n                myTaskName = name;\r\n                myTotalWork = totalWork;\r\n                // myMainFrame.setGlassPane(myProgressPanel);\r\n                // myProgressPanel.setVisible(true);\r\n                // myMainFrame.getRootPane().revalidate();\r\n                // myProgressPanel.start();\r\n                myProgressDialog.start(name, totalWork);\r\n                GPLogger.log((\"[ProgressMonitorImpl] beginTask: name=\" + name));\r\n            }\r\n        });\r\n    } finally {\r\n    }\r\n}'),(1887,'double work','double',0,309,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl',2642,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl.internalWorked(double)',0,'public void internalWorked(double work) {\r\n}'),(1888,'boolean value','boolean',0,309,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl',2644,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl.setCanceled(boolean)',0,'public void setCanceled(boolean value) {\r\n    myProgressDialog.done();\r\n    isCanceled = value;\r\n}'),(1889,'String name','java.lang.String',0,309,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl',2645,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl.setTaskName(java.lang.String)',0,'public void setTaskName(String name) {\r\n}'),(1890,'String name','java.lang.String',0,309,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl',2646,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl.subTask(java.lang.String)',0,'public void subTask(String name) {\r\n    throw new UnsupportedOperationException();\r\n}'),(1891,'final int work','int',0,309,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl',2647,'net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressMonitorImpl.worked(int)',0,'public void worked(final int work) {\r\n    /* catch (InterruptedException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n    } catch (InvocationTargetException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n    }\n     */\r\n    try {\r\n        SwingUtilities.invokeLater(new Runnable() {\r\n            public void run() {\r\n                myWorked += work;\r\n                myProgressDialog.setProgress(myWorked);\r\n            }\r\n        });\r\n    } finally {\r\n    }\r\n}'),(1892,'Runnable notifier','java.lang.Runnable',0,310,'net.sourceforge.ganttproject.gui.GanttStatusBar',2617,'net.sourceforge.ganttproject.gui.GanttStatusBar.setErrorNotifier(java.lang.Runnable)',0,'public void setErrorNotifier(Runnable notifier) {\r\n    if ((notifier == null) && ((myErrorNotifier) != null)) {\r\n        clearErrorNotification();\r\n        return;\r\n    }\r\n    if ((myErrorNotifier) == null) {\r\n        createErrorNotification(notifier);\r\n    }\r\n    myErrorNotifier = notifier;\r\n}'),(1893,'Runnable notifier','java.lang.Runnable',0,310,'net.sourceforge.ganttproject.gui.GanttStatusBar',2613,'net.sourceforge.ganttproject.gui.GanttStatusBar.createErrorNotification(java.lang.Runnable)',0,'private void createErrorNotification(Runnable notifier) {\r\n    myErrorNotificationPanel.enableNotifier(notifier);\r\n}'),(1894,'int tabPlacement','int',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2649,'net.sourceforge.ganttproject.gui.GanttTabbedPane.-init-(int)',0,'public GanttTabbedPane(int tabPlacement) {\r\n    super(tabPlacement);\r\n}'),(1895,'int tabPlacement','int',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2650,'net.sourceforge.ganttproject.gui.GanttTabbedPane.-init-(int,int)',0,'public GanttTabbedPane(int tabPlacement, int tabLayoutPolicy) {\r\n    super(tabPlacement, tabLayoutPolicy);\r\n}'),(1896,'int tabLayoutPolicy','int',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2650,'net.sourceforge.ganttproject.gui.GanttTabbedPane.-init-(int,int)',0,'public GanttTabbedPane(int tabPlacement, int tabLayoutPolicy) {\r\n    super(tabPlacement, tabLayoutPolicy);\r\n}'),(1897,'String title','java.lang.String',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2651,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,java.awt.Component,java.lang.Object)',0,'public void addTab(String title, Component component, Object userObject) {\r\n    super.addTab(title, component);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1898,'Component component','java.awt.Component',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2651,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,java.awt.Component,java.lang.Object)',0,'public void addTab(String title, Component component, Object userObject) {\r\n    super.addTab(title, component);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1899,'Object userObject','java.lang.Object',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2651,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,java.awt.Component,java.lang.Object)',0,'public void addTab(String title, Component component, Object userObject) {\r\n    super.addTab(title, component);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1900,'String title','java.lang.String',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2652,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.Object)',0,'public void addTab(String title, Icon icon, Component component, Object userObject) {\r\n    super.addTab(title, icon, component);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1901,'Icon icon','javax.swing.Icon',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2652,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.Object)',0,'public void addTab(String title, Icon icon, Component component, Object userObject) {\r\n    super.addTab(title, icon, component);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1902,'Component component','java.awt.Component',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2652,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.Object)',0,'public void addTab(String title, Icon icon, Component component, Object userObject) {\r\n    super.addTab(title, icon, component);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1903,'Object userObject','java.lang.Object',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2652,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.Object)',0,'public void addTab(String title, Icon icon, Component component, Object userObject) {\r\n    super.addTab(title, icon, component);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1904,'String title','java.lang.String',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2653,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,java.lang.Object)',0,'public void addTab(String title, Icon icon, Component component, String tip, Object userObject) {\r\n    super.addTab(title, icon, component, tip);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1905,'Icon icon','javax.swing.Icon',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2653,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,java.lang.Object)',0,'public void addTab(String title, Icon icon, Component component, String tip, Object userObject) {\r\n    super.addTab(title, icon, component, tip);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1906,'Component component','java.awt.Component',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2653,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,java.lang.Object)',0,'public void addTab(String title, Icon icon, Component component, String tip, Object userObject) {\r\n    super.addTab(title, icon, component, tip);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1907,'String tip','java.lang.String',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2653,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,java.lang.Object)',0,'public void addTab(String title, Icon icon, Component component, String tip, Object userObject) {\r\n    super.addTab(title, icon, component, tip);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1908,'Object userObject','java.lang.Object',0,311,'net.sourceforge.ganttproject.gui.GanttTabbedPane',2653,'net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,java.lang.Object)',0,'public void addTab(String title, Icon icon, Component component, String tip, Object userObject) {\r\n    super.addTab(title, icon, component, tip);\r\n    myUserObjectsMap.put(component, userObject);\r\n}'),(1909,'GanttTask[] selectedTasks','net.sourceforge.ganttproject.GanttTask[]',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2656,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.-init-(net.sourceforge.ganttproject.GanttTask[],net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttTaskPropertiesBean(GanttTask[] selectedTasks, IGanttProject project, UIFacade uifacade) {\r\n    this.onlyOneTask = false;\r\n    if ((selectedTasks.length) == 1)\r\n        this.onlyOneTask = true;\r\n\r\n    this.selectedTasks = selectedTasks;\r\n    setInitialValues(selectedTasks[0]);\r\n    myHumanResourceManager = ((HumanResourceManager) (project.getHumanResourceManager()));\r\n    myRoleManager = project.getRoleManager();\r\n    myTaskManager = project.getTaskManager();\r\n    myProject = project;\r\n    myUIfacade = uifacade;\r\n    // setTree(tree);\r\n    init();\r\n    // this.managerHash = managerHash;\r\n    setSelectedTask();\r\n}'),(1910,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2656,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.-init-(net.sourceforge.ganttproject.GanttTask[],net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttTaskPropertiesBean(GanttTask[] selectedTasks, IGanttProject project, UIFacade uifacade) {\r\n    this.onlyOneTask = false;\r\n    if ((selectedTasks.length) == 1)\r\n        this.onlyOneTask = true;\r\n\r\n    this.selectedTasks = selectedTasks;\r\n    setInitialValues(selectedTasks[0]);\r\n    myHumanResourceManager = ((HumanResourceManager) (project.getHumanResourceManager()));\r\n    myRoleManager = project.getRoleManager();\r\n    myTaskManager = project.getTaskManager();\r\n    myProject = project;\r\n    myUIfacade = uifacade;\r\n    // setTree(tree);\r\n    init();\r\n    // this.managerHash = managerHash;\r\n    setSelectedTask();\r\n}'),(1911,'UIFacade uifacade','net.sourceforge.ganttproject.gui.UIFacade',337,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2656,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.-init-(net.sourceforge.ganttproject.GanttTask[],net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * Constructor\r\n */\r\npublic GanttTaskPropertiesBean(GanttTask[] selectedTasks, IGanttProject project, UIFacade uifacade) {\r\n    this.onlyOneTask = false;\r\n    if ((selectedTasks.length) == 1)\r\n        this.onlyOneTask = true;\r\n\r\n    this.selectedTasks = selectedTasks;\r\n    setInitialValues(selectedTasks[0]);\r\n    myHumanResourceManager = ((HumanResourceManager) (project.getHumanResourceManager()));\r\n    myRoleManager = project.getRoleManager();\r\n    myTaskManager = project.getTaskManager();\r\n    myProject = project;\r\n    myUIfacade = uifacade;\r\n    // setTree(tree);\r\n    init();\r\n    // this.managerHash = managerHash;\r\n    setSelectedTask();\r\n}'),(1912,'Container container','java.awt.Container',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2659,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(1913,'Component component','java.awt.Component',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2659,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(1914,'GridBagConstraints gbc','java.awt.GridBagConstraints',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2659,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(1915,'int x','int',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2659,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(1916,'int y','int',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2659,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(1917,'int w','int',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2659,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(1918,'int h','int',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2659,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(1919,'Container container','java.awt.Container',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2690,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprivate void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(1920,'GridBagConstraints gbc','java.awt.GridBagConstraints',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2690,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprivate void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(1921,'JLabel nameLabel','javax.swing.JLabel',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2690,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprivate void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(1922,'JTextField nameField','javax.swing.JTextField',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2690,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprivate void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(1923,'JLabel durationLabel','javax.swing.JLabel',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2690,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprivate void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(1924,'JTextField durationField','javax.swing.JTextField',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2690,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprivate void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(1925,'ActionListener l','java.awt.event.ActionListener',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2658,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addActionListener(java.awt.event.ActionListener)',0,'/**\r\n * Add the differents action listener on the differents widgets\r\n */\r\npublic void addActionListener(ActionListener l) {\r\n    nameField1.addActionListener(l);\r\n    startDateButton1.addActionListener(l);\r\n    finishDateButton1.addActionListener(l);\r\n    thirdDateButton1.addActionListener(l);\r\n    thirdDateComboBox.addActionListener(l);\r\n    durationField1.addActionListener(l);\r\n}'),(1926,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2665,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructCustomColumnPanel(net.sourceforge.ganttproject.IGanttProject)',0,'private void constructCustomColumnPanel(IGanttProject project) {\r\n    myCustomColumnPanel = new CustomColumnsPanel(project.getTaskCustomColumnManager(), project.getCustomColumnsStorage(), myUIfacade);\r\n}'),(1927,'ActionListener listener','java.awt.event.ActionListener',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2671,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.createDatePicker(java.awt.event.ActionListener)',0,'private JXDatePicker createDatePicker(ActionListener listener) {\r\n    ImageIcon calendarImage = new ImageIcon(getClass().getResource(\"/icons/calendar_16.gif\"));\r\n    Icon nextMonth = new ImageIcon(getClass().getResource(\"/icons/nextmonth.gif\"));\r\n    Icon prevMonth = new ImageIcon(getClass().getResource(\"/icons/prevmonth.gif\"));\r\n    UIManager.put(\"JXDatePicker.arrowDown.image\", calendarImage);\r\n    UIManager.put(\"JXMonthView.monthUp.image\", prevMonth);\r\n    UIManager.put(\"JXMonthView.monthDown.image\", nextMonth);\r\n    UIManager.put(\"JXMonthView.monthCurrent.image\", calendarImage);\r\n    JXDatePicker result = new JXDatePicker();\r\n    result.addActionListener(listener);\r\n    return result;\r\n}'),(1928,'boolean enable','boolean',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2672,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.enableMilestoneFriendlyControls(boolean)',0,'void enableMilestoneFriendlyControls(boolean enable) {\r\n    finishDateField1.setEnabled(enable);\r\n    myEndDatePicker.setEnabled(enable);\r\n    durationField1.setEnabled(enable);\r\n}'),(1929,'int _length','int',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2662,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.changeLength(int)',0,'/**\r\n * Set the duration of the task\r\n */\r\npublic void changeLength(int _length) {\r\n    if (_length <= 0) {\r\n        _length = 1;\r\n    }\r\n    durationField1.setText((_length + \"\"));\r\n    if (onlyOneTask)\r\n        myDependenciesPanel.durationChanged(_length);\r\n\r\n    myAllocationsPanel[0].durationChanged(_length);\r\n    durationFieldNotes.setText((_length + \"\"));\r\n    length = _length;\r\n    // change the end date\r\n    GanttCalendar _end = start.newAdd(length);\r\n    this.end = _end;\r\n    finishDateField1.setText(_end.toString());\r\n}'),(1930,'GanttCalendar dstart','net.sourceforge.ganttproject.GanttCalendar',24,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2693,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setStart(net.sourceforge.ganttproject.GanttCalendar,boolean)',0,'/**\r\n * Change the start date of the task\r\n */\r\npublic void setStart(GanttCalendar dstart, boolean test) {\r\n    myStartDatePicker.setDate(dstart.getTime());\r\n    this.start = dstart;\r\n    if (test == true) {\r\n        return;\r\n    }\r\n    // this.setStartFixed(dstart.isFixed());\r\n    if ((this.start.compareTo(this.end)) < 0) {\r\n        adjustLength();\r\n    } else {\r\n        GanttCalendar _end = start.newAdd(this.taskLength);\r\n        this.end = _end;\r\n        // finishDateField1.setText(_end.toString());\r\n        this.myEndDatePicker.setDate(this.end.getTime());\r\n    }\r\n}'),(1931,'boolean test','boolean',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2693,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setStart(net.sourceforge.ganttproject.GanttCalendar,boolean)',0,'/**\r\n * Change the start date of the task\r\n */\r\npublic void setStart(GanttCalendar dstart, boolean test) {\r\n    myStartDatePicker.setDate(dstart.getTime());\r\n    this.start = dstart;\r\n    if (test == true) {\r\n        return;\r\n    }\r\n    // this.setStartFixed(dstart.isFixed());\r\n    if ((this.start.compareTo(this.end)) < 0) {\r\n        adjustLength();\r\n    } else {\r\n        GanttCalendar _end = start.newAdd(this.taskLength);\r\n        this.end = _end;\r\n        // finishDateField1.setText(_end.toString());\r\n        this.myEndDatePicker.setDate(this.end.getTime());\r\n    }\r\n}'),(1932,'GanttCalendar dend','net.sourceforge.ganttproject.GanttCalendar',24,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2689,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setEnd(net.sourceforge.ganttproject.GanttCalendar,boolean)',0,'/**\r\n * Change the end date of the task\r\n */\r\npublic void setEnd(GanttCalendar dend, boolean test) {\r\n    myEndDatePicker.setDate(dend.getTime());\r\n    this.end = dend;\r\n    if (test == true) {\r\n        return;\r\n    }\r\n    // this.setFinishFixed(dend.isFixed());\r\n    if ((this.start.compareTo(this.end)) < 0) {\r\n        adjustLength();\r\n    } else {\r\n        GanttCalendar _start = this.end.newAdd((-(length)));\r\n        this.start = _start;\r\n        startDateField1.setText(_start.toString());\r\n    }\r\n}'),(1933,'boolean test','boolean',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2689,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setEnd(net.sourceforge.ganttproject.GanttCalendar,boolean)',0,'/**\r\n * Change the end date of the task\r\n */\r\npublic void setEnd(GanttCalendar dend, boolean test) {\r\n    myEndDatePicker.setDate(dend.getTime());\r\n    this.end = dend;\r\n    if (test == true) {\r\n        return;\r\n    }\r\n    // this.setFinishFixed(dend.isFixed());\r\n    if ((this.start.compareTo(this.end)) < 0) {\r\n        adjustLength();\r\n    } else {\r\n        GanttCalendar _start = this.end.newAdd((-(length)));\r\n        this.start = _start;\r\n        startDateField1.setText(_start.toString());\r\n    }\r\n}'),(1934,'GanttCalendar dthird','net.sourceforge.ganttproject.GanttCalendar',24,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2694,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setThird(net.sourceforge.ganttproject.GanttCalendar,boolean)',0,'/**\r\n * Change the third date of the task\r\n */\r\npublic void setThird(GanttCalendar dthird, boolean test) {\r\n    myThirdDatePicker.setDate(dthird.getTime());\r\n    this.third = dthird;\r\n    if (test) {\r\n        return;\r\n    }\r\n    switch (thirdDateComboBox.getSelectedIndex()) {\r\n        case TaskImpl.EARLIESTBEGIN :\r\n            thirdDateButton1.setEnabled(true);\r\n            break;\r\n        case TaskImpl.NONE :\r\n            thirdDateButton1.setEnabled(false);\r\n            break;\r\n    }\r\n}'),(1935,'boolean test','boolean',0,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2694,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setThird(net.sourceforge.ganttproject.GanttCalendar,boolean)',0,'/**\r\n * Change the third date of the task\r\n */\r\npublic void setThird(GanttCalendar dthird, boolean test) {\r\n    myThirdDatePicker.setDate(dthird.getTime());\r\n    this.third = dthird;\r\n    if (test) {\r\n        return;\r\n    }\r\n    switch (thirdDateComboBox.getSelectedIndex()) {\r\n        case TaskImpl.EARLIESTBEGIN :\r\n            thirdDateButton1.setEnabled(true);\r\n            break;\r\n        case TaskImpl.NONE :\r\n            thirdDateButton1.setEnabled(false);\r\n            break;\r\n    }\r\n}'),(1936,'GanttTask task','net.sourceforge.ganttproject.GanttTask',63,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2691,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setInitialValues(net.sourceforge.ganttproject.GanttTask)',0,'private void setInitialValues(GanttTask task) {\r\n    this.taskWebLink = task.getWebLink();\r\n    this.taskIsMilestone = task.isMilestone();\r\n    this.taskStartDate = task.getStart();\r\n    this.taskLength = task.getLength();\r\n    this.taskNotes = task.getNotes();\r\n    this.taskCompletionPercentage = task.getCompletionPercentage();\r\n    this.taskPriority = task.getPriority();\r\n    // this.taskIsStartFixed = task.isStartFixed();\r\n    // this.taskIsFinishFixed = task.isFinishFixed();\r\n    this.taskShape = task.getShape();\r\n    this.taskThirdDate = task.getThird();\r\n    this.taskThirdDateConstraint = task.getThirdDateConstraint();\r\n    this.taskIsProjectTask = task.isProjectTask();\r\n}'),(1937,'ResourcesTableModel original','net.sourceforge.ganttproject.gui.ResourcesTableModel',321,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2670,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.copyValues(net.sourceforge.ganttproject.gui.ResourcesTableModel,net.sourceforge.ganttproject.gui.ResourcesTableModel)',0,'private void copyValues(ResourcesTableModel original, ResourcesTableModel clone) {\r\n    for (int i = 0; i < (clone.getRowCount()); i++)\r\n        clone.setValueAt(null, i, 1);\r\n\r\n    for (int j = 0; j < (original.getRowCount()); j++)\r\n        for (int k = 0; k < (original.getColumnCount()); k++)\r\n            clone.setValueAt(original.getValueAt(j, k), j, k);\r\n\r\n\r\n}'),(1938,'ResourcesTableModel clone','net.sourceforge.ganttproject.gui.ResourcesTableModel',321,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2670,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.copyValues(net.sourceforge.ganttproject.gui.ResourcesTableModel,net.sourceforge.ganttproject.gui.ResourcesTableModel)',0,'private void copyValues(ResourcesTableModel original, ResourcesTableModel clone) {\r\n    for (int i = 0; i < (clone.getRowCount()); i++)\r\n        clone.setValueAt(null, i, 1);\r\n\r\n    for (int j = 0; j < (original.getRowCount()); j++)\r\n        for (int k = 0; k < (original.getColumnCount()); k++)\r\n            clone.setValueAt(original.getValueAt(j, k), j, k);\r\n\r\n\r\n}'),(1939,'Task testedTask','net.sourceforge.ganttproject.task.Task',548,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2661,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.canBeProjectTask(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'private boolean canBeProjectTask(Task testedTask, TaskContainmentHierarchyFacade taskHierarchy) {\r\n    Task[] nestedTasks = taskHierarchy.getNestedTasks(testedTask);\r\n    if ((nestedTasks.length) == 0) {\r\n        return false;\r\n    }\r\n    for (Task parent = taskHierarchy.getContainer(testedTask); parent != null; parent = taskHierarchy.getContainer(parent)) {\r\n        if (parent.isProjectTask()) {\r\n            return false;\r\n        }\r\n    }\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        if (isProjectTaskOrContainsProjectTask(nestedTasks[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}'),(1940,'TaskContainmentHierarchyFacade taskHierarchy','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2661,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.canBeProjectTask(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'private boolean canBeProjectTask(Task testedTask, TaskContainmentHierarchyFacade taskHierarchy) {\r\n    Task[] nestedTasks = taskHierarchy.getNestedTasks(testedTask);\r\n    if ((nestedTasks.length) == 0) {\r\n        return false;\r\n    }\r\n    for (Task parent = taskHierarchy.getContainer(testedTask); parent != null; parent = taskHierarchy.getContainer(parent)) {\r\n        if (parent.isProjectTask()) {\r\n            return false;\r\n        }\r\n    }\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        if (isProjectTaskOrContainsProjectTask(nestedTasks[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}'),(1941,'Task task','net.sourceforge.ganttproject.task.Task',548,312,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean',2688,'net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isProjectTaskOrContainsProjectTask(net.sourceforge.ganttproject.task.Task)',0,'private boolean isProjectTaskOrContainsProjectTask(Task task) {\r\n    if (task.isProjectTask()) {\r\n        return true;\r\n    }\r\n    boolean result = false;\r\n    Task[] nestedTasks = task.getNestedTasks();\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        if (isProjectTaskOrContainsProjectTask(nestedTasks[i])) {\r\n            result = true;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(1942,'Frame parent','java.awt.Frame',0,313,'net.sourceforge.ganttproject.gui.GanttURLChooser',2695,'net.sourceforge.ganttproject.gui.GanttURLChooser.-init-(java.awt.Frame,boolean,java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * The constructor\r\n */\r\npublic GanttURLChooser(Frame parent, boolean opening, String currentURL, String currentUser, String currentPass) {\r\n    super(parent, (opening ? GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"openFromServer\")) : GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"saveToServer\"))), true);\r\n    JPanel inputPanel = new JPanel(new BorderLayout());\r\n    Box serverBox = Box.createVerticalBox();\r\n    serverBox.add(new JLabel(language.getText(\"fileFromServer\")));\r\n    String sDefaultURL = \"http://ganttproject.sourceforge.net/tmp/testGantt.xml\";\r\n    urlField = new JTextField((null != currentURL ? currentURL : sDefaultURL));\r\n    serverBox.add(urlField);\r\n    inputPanel.add(serverBox, BorderLayout.NORTH);\r\n    Box hb = Box.createHorizontalBox();// horizontal box\r\n\r\n    Box ivbw = Box.createVerticalBox();// inner vertical box west\r\n\r\n    Box ivbe = Box.createVerticalBox();// inner vertical box east\r\n\r\n    ivbw.add(new JLabel(language.getText(\"userName\")));\r\n    userNameField = new JTextField(currentUser);\r\n    ivbw.add(userNameField);\r\n    ivbe.add(new JLabel(language.getText(\"password\")));\r\n    passwordField = new JPasswordField(currentPass);\r\n    ivbe.add(passwordField);\r\n    hb.add(ivbw);\r\n    hb.add(ivbe);\r\n    inputPanel.add(hb, BorderLayout.SOUTH);\r\n    JPanel centerPanel = new JPanel(new FlowLayout());\r\n    centerPanel.add(inputPanel, BorderLayout.CENTER);\r\n    getContentPane().add(centerPanel, BorderLayout.CENTER);\r\n    JPanel southPanel = new JPanel();\r\n    JButton ok = new JButton(language.getText(\"ok\"));\r\n    getRootPane().setDefaultButton(ok);\r\n    southPanel.add(ok);\r\n    // Listener sur le bouton ok\r\n    ok.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n            fileurl = urlField.getText();\r\n            userName = userNameField.getText();\r\n            password = new String(passwordField.getPassword());\r\n            change = true;\r\n        }\r\n    });\r\n    // bouton cancel\r\n    JButton cancel = new JButton(language.getText(\"cancel\"));\r\n    southPanel.add(cancel);\r\n    cancel.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n        }\r\n    });\r\n    getContentPane().add(southPanel, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(true);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1943,'boolean opening','boolean',0,313,'net.sourceforge.ganttproject.gui.GanttURLChooser',2695,'net.sourceforge.ganttproject.gui.GanttURLChooser.-init-(java.awt.Frame,boolean,java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * The constructor\r\n */\r\npublic GanttURLChooser(Frame parent, boolean opening, String currentURL, String currentUser, String currentPass) {\r\n    super(parent, (opening ? GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"openFromServer\")) : GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"saveToServer\"))), true);\r\n    JPanel inputPanel = new JPanel(new BorderLayout());\r\n    Box serverBox = Box.createVerticalBox();\r\n    serverBox.add(new JLabel(language.getText(\"fileFromServer\")));\r\n    String sDefaultURL = \"http://ganttproject.sourceforge.net/tmp/testGantt.xml\";\r\n    urlField = new JTextField((null != currentURL ? currentURL : sDefaultURL));\r\n    serverBox.add(urlField);\r\n    inputPanel.add(serverBox, BorderLayout.NORTH);\r\n    Box hb = Box.createHorizontalBox();// horizontal box\r\n\r\n    Box ivbw = Box.createVerticalBox();// inner vertical box west\r\n\r\n    Box ivbe = Box.createVerticalBox();// inner vertical box east\r\n\r\n    ivbw.add(new JLabel(language.getText(\"userName\")));\r\n    userNameField = new JTextField(currentUser);\r\n    ivbw.add(userNameField);\r\n    ivbe.add(new JLabel(language.getText(\"password\")));\r\n    passwordField = new JPasswordField(currentPass);\r\n    ivbe.add(passwordField);\r\n    hb.add(ivbw);\r\n    hb.add(ivbe);\r\n    inputPanel.add(hb, BorderLayout.SOUTH);\r\n    JPanel centerPanel = new JPanel(new FlowLayout());\r\n    centerPanel.add(inputPanel, BorderLayout.CENTER);\r\n    getContentPane().add(centerPanel, BorderLayout.CENTER);\r\n    JPanel southPanel = new JPanel();\r\n    JButton ok = new JButton(language.getText(\"ok\"));\r\n    getRootPane().setDefaultButton(ok);\r\n    southPanel.add(ok);\r\n    // Listener sur le bouton ok\r\n    ok.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n            fileurl = urlField.getText();\r\n            userName = userNameField.getText();\r\n            password = new String(passwordField.getPassword());\r\n            change = true;\r\n        }\r\n    });\r\n    // bouton cancel\r\n    JButton cancel = new JButton(language.getText(\"cancel\"));\r\n    southPanel.add(cancel);\r\n    cancel.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n        }\r\n    });\r\n    getContentPane().add(southPanel, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(true);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1944,'String currentURL','java.lang.String',0,313,'net.sourceforge.ganttproject.gui.GanttURLChooser',2695,'net.sourceforge.ganttproject.gui.GanttURLChooser.-init-(java.awt.Frame,boolean,java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * The constructor\r\n */\r\npublic GanttURLChooser(Frame parent, boolean opening, String currentURL, String currentUser, String currentPass) {\r\n    super(parent, (opening ? GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"openFromServer\")) : GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"saveToServer\"))), true);\r\n    JPanel inputPanel = new JPanel(new BorderLayout());\r\n    Box serverBox = Box.createVerticalBox();\r\n    serverBox.add(new JLabel(language.getText(\"fileFromServer\")));\r\n    String sDefaultURL = \"http://ganttproject.sourceforge.net/tmp/testGantt.xml\";\r\n    urlField = new JTextField((null != currentURL ? currentURL : sDefaultURL));\r\n    serverBox.add(urlField);\r\n    inputPanel.add(serverBox, BorderLayout.NORTH);\r\n    Box hb = Box.createHorizontalBox();// horizontal box\r\n\r\n    Box ivbw = Box.createVerticalBox();// inner vertical box west\r\n\r\n    Box ivbe = Box.createVerticalBox();// inner vertical box east\r\n\r\n    ivbw.add(new JLabel(language.getText(\"userName\")));\r\n    userNameField = new JTextField(currentUser);\r\n    ivbw.add(userNameField);\r\n    ivbe.add(new JLabel(language.getText(\"password\")));\r\n    passwordField = new JPasswordField(currentPass);\r\n    ivbe.add(passwordField);\r\n    hb.add(ivbw);\r\n    hb.add(ivbe);\r\n    inputPanel.add(hb, BorderLayout.SOUTH);\r\n    JPanel centerPanel = new JPanel(new FlowLayout());\r\n    centerPanel.add(inputPanel, BorderLayout.CENTER);\r\n    getContentPane().add(centerPanel, BorderLayout.CENTER);\r\n    JPanel southPanel = new JPanel();\r\n    JButton ok = new JButton(language.getText(\"ok\"));\r\n    getRootPane().setDefaultButton(ok);\r\n    southPanel.add(ok);\r\n    // Listener sur le bouton ok\r\n    ok.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n            fileurl = urlField.getText();\r\n            userName = userNameField.getText();\r\n            password = new String(passwordField.getPassword());\r\n            change = true;\r\n        }\r\n    });\r\n    // bouton cancel\r\n    JButton cancel = new JButton(language.getText(\"cancel\"));\r\n    southPanel.add(cancel);\r\n    cancel.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n        }\r\n    });\r\n    getContentPane().add(southPanel, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(true);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1945,'String currentUser','java.lang.String',0,313,'net.sourceforge.ganttproject.gui.GanttURLChooser',2695,'net.sourceforge.ganttproject.gui.GanttURLChooser.-init-(java.awt.Frame,boolean,java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * The constructor\r\n */\r\npublic GanttURLChooser(Frame parent, boolean opening, String currentURL, String currentUser, String currentPass) {\r\n    super(parent, (opening ? GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"openFromServer\")) : GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"saveToServer\"))), true);\r\n    JPanel inputPanel = new JPanel(new BorderLayout());\r\n    Box serverBox = Box.createVerticalBox();\r\n    serverBox.add(new JLabel(language.getText(\"fileFromServer\")));\r\n    String sDefaultURL = \"http://ganttproject.sourceforge.net/tmp/testGantt.xml\";\r\n    urlField = new JTextField((null != currentURL ? currentURL : sDefaultURL));\r\n    serverBox.add(urlField);\r\n    inputPanel.add(serverBox, BorderLayout.NORTH);\r\n    Box hb = Box.createHorizontalBox();// horizontal box\r\n\r\n    Box ivbw = Box.createVerticalBox();// inner vertical box west\r\n\r\n    Box ivbe = Box.createVerticalBox();// inner vertical box east\r\n\r\n    ivbw.add(new JLabel(language.getText(\"userName\")));\r\n    userNameField = new JTextField(currentUser);\r\n    ivbw.add(userNameField);\r\n    ivbe.add(new JLabel(language.getText(\"password\")));\r\n    passwordField = new JPasswordField(currentPass);\r\n    ivbe.add(passwordField);\r\n    hb.add(ivbw);\r\n    hb.add(ivbe);\r\n    inputPanel.add(hb, BorderLayout.SOUTH);\r\n    JPanel centerPanel = new JPanel(new FlowLayout());\r\n    centerPanel.add(inputPanel, BorderLayout.CENTER);\r\n    getContentPane().add(centerPanel, BorderLayout.CENTER);\r\n    JPanel southPanel = new JPanel();\r\n    JButton ok = new JButton(language.getText(\"ok\"));\r\n    getRootPane().setDefaultButton(ok);\r\n    southPanel.add(ok);\r\n    // Listener sur le bouton ok\r\n    ok.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n            fileurl = urlField.getText();\r\n            userName = userNameField.getText();\r\n            password = new String(passwordField.getPassword());\r\n            change = true;\r\n        }\r\n    });\r\n    // bouton cancel\r\n    JButton cancel = new JButton(language.getText(\"cancel\"));\r\n    southPanel.add(cancel);\r\n    cancel.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n        }\r\n    });\r\n    getContentPane().add(southPanel, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(true);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1946,'String currentPass','java.lang.String',0,313,'net.sourceforge.ganttproject.gui.GanttURLChooser',2695,'net.sourceforge.ganttproject.gui.GanttURLChooser.-init-(java.awt.Frame,boolean,java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * The constructor\r\n */\r\npublic GanttURLChooser(Frame parent, boolean opening, String currentURL, String currentUser, String currentPass) {\r\n    super(parent, (opening ? GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"openFromServer\")) : GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"saveToServer\"))), true);\r\n    JPanel inputPanel = new JPanel(new BorderLayout());\r\n    Box serverBox = Box.createVerticalBox();\r\n    serverBox.add(new JLabel(language.getText(\"fileFromServer\")));\r\n    String sDefaultURL = \"http://ganttproject.sourceforge.net/tmp/testGantt.xml\";\r\n    urlField = new JTextField((null != currentURL ? currentURL : sDefaultURL));\r\n    serverBox.add(urlField);\r\n    inputPanel.add(serverBox, BorderLayout.NORTH);\r\n    Box hb = Box.createHorizontalBox();// horizontal box\r\n\r\n    Box ivbw = Box.createVerticalBox();// inner vertical box west\r\n\r\n    Box ivbe = Box.createVerticalBox();// inner vertical box east\r\n\r\n    ivbw.add(new JLabel(language.getText(\"userName\")));\r\n    userNameField = new JTextField(currentUser);\r\n    ivbw.add(userNameField);\r\n    ivbe.add(new JLabel(language.getText(\"password\")));\r\n    passwordField = new JPasswordField(currentPass);\r\n    ivbe.add(passwordField);\r\n    hb.add(ivbw);\r\n    hb.add(ivbe);\r\n    inputPanel.add(hb, BorderLayout.SOUTH);\r\n    JPanel centerPanel = new JPanel(new FlowLayout());\r\n    centerPanel.add(inputPanel, BorderLayout.CENTER);\r\n    getContentPane().add(centerPanel, BorderLayout.CENTER);\r\n    JPanel southPanel = new JPanel();\r\n    JButton ok = new JButton(language.getText(\"ok\"));\r\n    getRootPane().setDefaultButton(ok);\r\n    southPanel.add(ok);\r\n    // Listener sur le bouton ok\r\n    ok.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n            fileurl = urlField.getText();\r\n            userName = userNameField.getText();\r\n            password = new String(passwordField.getPassword());\r\n            change = true;\r\n        }\r\n    });\r\n    // bouton cancel\r\n    JButton cancel = new JButton(language.getText(\"cancel\"));\r\n    southPanel.add(cancel);\r\n    cancel.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            setVisible(false);\r\n            dispose();\r\n        }\r\n    });\r\n    getContentPane().add(southPanel, BorderLayout.SOUTH);\r\n    pack();\r\n    setResizable(true);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1947,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,315,'net.sourceforge.ganttproject.gui.GeneralDialog',2697,'net.sourceforge.ganttproject.gui.GeneralDialog.-init-(net.sourceforge.ganttproject.GanttProject,java.lang.String,boolean,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel)',0,'/**\r\n * Constructor.\r\n */\r\npublic GeneralDialog(GanttProject parent, String title, boolean modal, GeneralOptionPanel firstPanel) {\r\n    super(parent, GanttProject.correctLabel(title), modal);\r\n    appli = parent;\r\n    // tree section.\r\n    rootNode = new DefaultMutableTreeNode(\"Options\");\r\n    treeModel = new DefaultTreeModel(rootNode);\r\n    treeSections = new JTree(treeModel);\r\n    treeSections.setEditable(false);\r\n    treeSections.setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    treeSections.setShowsRootHandles(true);\r\n    treeSections.setRowHeight(20);\r\n    treeSections.setRootVisible(false);\r\n    treeSections.setCellRenderer(new GeneralDialog.SettinsDefaultTreeCellRenderer());\r\n    treeSections.addTreeSelectionListener(this);\r\n    JScrollPane scrollpane = new JScrollPane(treeSections);\r\n    JPanel treePanel = new JPanel();\r\n    treePanel.add(scrollpane);\r\n    JPanel mainPanel = new JPanel(new BorderLayout());\r\n    if ((language.getComponentOrientation()) == (ComponentOrientation.LEFT_TO_RIGHT))\r\n        mainPanel.add(treePanel, BorderLayout.WEST);\r\n    else\r\n        mainPanel.add(scrollpane, BorderLayout.EAST);\r\n\r\n    scrollpane.setPreferredSize(new Dimension(150, 450));\r\n    // construct the south panel\r\n    southPanel = new JPanel(new FlowLayout(FlowLayout.TRAILING, 50, 10));\r\n    okButton = new JButton(language.getText(\"ok\"));\r\n    okButton.addActionListener(this);\r\n    southPanel.add(okButton);\r\n    applyButton = new JButton(language.getText(\"apply\"));\r\n    applyButton.addActionListener(this);\r\n    // southPanel.add(applyButton); //dont use the apply button\r\n    cancelButton = new JButton(language.getText(\"cancel\"));\r\n    cancelButton.addActionListener(this);\r\n    southPanel.add(cancelButton);\r\n    southPanel.setPreferredSize(new Dimension(600, 50));\r\n    Box southBox = Box.createVerticalBox();\r\n    southBox.add(new JSeparator());\r\n    southBox.add(southPanel);\r\n    mainPanel.add(southBox, BorderLayout.SOUTH);\r\n    // set the ok button as default action for enter\r\n    if ((getRootPane()) != null)\r\n        getRootPane().setDefaultButton(okButton);\r\n\r\n    // add the main panel into the dialog\r\n    JPanel tmpPanel = new JPanel(new BorderLayout());\r\n    tmpPanel.add(mainPanel, BorderLayout.CENTER);\r\n    getContentPane().add(tmpPanel);\r\n    // construct the sections\r\n    constructSections();\r\n    settingPanel = firstPanel;\r\n    Box vb = Box.createVerticalBox();\r\n    vb.add(new TopPanel((\"  \" + (settingPanel.getTitle())), settingPanel.getComment()));\r\n    vb.add(settingPanel);\r\n    settingPanel.initialize();\r\n    // - add the settingPanel into the main Panel\r\n    mainPanel2.add(vb, 0);\r\n    mainPanel.add(mainPanel2);\r\n    // position the window\r\n    this.pack();\r\n    // setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1948,'String title','java.lang.String',0,315,'net.sourceforge.ganttproject.gui.GeneralDialog',2697,'net.sourceforge.ganttproject.gui.GeneralDialog.-init-(net.sourceforge.ganttproject.GanttProject,java.lang.String,boolean,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel)',0,'/**\r\n * Constructor.\r\n */\r\npublic GeneralDialog(GanttProject parent, String title, boolean modal, GeneralOptionPanel firstPanel) {\r\n    super(parent, GanttProject.correctLabel(title), modal);\r\n    appli = parent;\r\n    // tree section.\r\n    rootNode = new DefaultMutableTreeNode(\"Options\");\r\n    treeModel = new DefaultTreeModel(rootNode);\r\n    treeSections = new JTree(treeModel);\r\n    treeSections.setEditable(false);\r\n    treeSections.setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    treeSections.setShowsRootHandles(true);\r\n    treeSections.setRowHeight(20);\r\n    treeSections.setRootVisible(false);\r\n    treeSections.setCellRenderer(new GeneralDialog.SettinsDefaultTreeCellRenderer());\r\n    treeSections.addTreeSelectionListener(this);\r\n    JScrollPane scrollpane = new JScrollPane(treeSections);\r\n    JPanel treePanel = new JPanel();\r\n    treePanel.add(scrollpane);\r\n    JPanel mainPanel = new JPanel(new BorderLayout());\r\n    if ((language.getComponentOrientation()) == (ComponentOrientation.LEFT_TO_RIGHT))\r\n        mainPanel.add(treePanel, BorderLayout.WEST);\r\n    else\r\n        mainPanel.add(scrollpane, BorderLayout.EAST);\r\n\r\n    scrollpane.setPreferredSize(new Dimension(150, 450));\r\n    // construct the south panel\r\n    southPanel = new JPanel(new FlowLayout(FlowLayout.TRAILING, 50, 10));\r\n    okButton = new JButton(language.getText(\"ok\"));\r\n    okButton.addActionListener(this);\r\n    southPanel.add(okButton);\r\n    applyButton = new JButton(language.getText(\"apply\"));\r\n    applyButton.addActionListener(this);\r\n    // southPanel.add(applyButton); //dont use the apply button\r\n    cancelButton = new JButton(language.getText(\"cancel\"));\r\n    cancelButton.addActionListener(this);\r\n    southPanel.add(cancelButton);\r\n    southPanel.setPreferredSize(new Dimension(600, 50));\r\n    Box southBox = Box.createVerticalBox();\r\n    southBox.add(new JSeparator());\r\n    southBox.add(southPanel);\r\n    mainPanel.add(southBox, BorderLayout.SOUTH);\r\n    // set the ok button as default action for enter\r\n    if ((getRootPane()) != null)\r\n        getRootPane().setDefaultButton(okButton);\r\n\r\n    // add the main panel into the dialog\r\n    JPanel tmpPanel = new JPanel(new BorderLayout());\r\n    tmpPanel.add(mainPanel, BorderLayout.CENTER);\r\n    getContentPane().add(tmpPanel);\r\n    // construct the sections\r\n    constructSections();\r\n    settingPanel = firstPanel;\r\n    Box vb = Box.createVerticalBox();\r\n    vb.add(new TopPanel((\"  \" + (settingPanel.getTitle())), settingPanel.getComment()));\r\n    vb.add(settingPanel);\r\n    settingPanel.initialize();\r\n    // - add the settingPanel into the main Panel\r\n    mainPanel2.add(vb, 0);\r\n    mainPanel.add(mainPanel2);\r\n    // position the window\r\n    this.pack();\r\n    // setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1949,'boolean modal','boolean',0,315,'net.sourceforge.ganttproject.gui.GeneralDialog',2697,'net.sourceforge.ganttproject.gui.GeneralDialog.-init-(net.sourceforge.ganttproject.GanttProject,java.lang.String,boolean,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel)',0,'/**\r\n * Constructor.\r\n */\r\npublic GeneralDialog(GanttProject parent, String title, boolean modal, GeneralOptionPanel firstPanel) {\r\n    super(parent, GanttProject.correctLabel(title), modal);\r\n    appli = parent;\r\n    // tree section.\r\n    rootNode = new DefaultMutableTreeNode(\"Options\");\r\n    treeModel = new DefaultTreeModel(rootNode);\r\n    treeSections = new JTree(treeModel);\r\n    treeSections.setEditable(false);\r\n    treeSections.setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    treeSections.setShowsRootHandles(true);\r\n    treeSections.setRowHeight(20);\r\n    treeSections.setRootVisible(false);\r\n    treeSections.setCellRenderer(new GeneralDialog.SettinsDefaultTreeCellRenderer());\r\n    treeSections.addTreeSelectionListener(this);\r\n    JScrollPane scrollpane = new JScrollPane(treeSections);\r\n    JPanel treePanel = new JPanel();\r\n    treePanel.add(scrollpane);\r\n    JPanel mainPanel = new JPanel(new BorderLayout());\r\n    if ((language.getComponentOrientation()) == (ComponentOrientation.LEFT_TO_RIGHT))\r\n        mainPanel.add(treePanel, BorderLayout.WEST);\r\n    else\r\n        mainPanel.add(scrollpane, BorderLayout.EAST);\r\n\r\n    scrollpane.setPreferredSize(new Dimension(150, 450));\r\n    // construct the south panel\r\n    southPanel = new JPanel(new FlowLayout(FlowLayout.TRAILING, 50, 10));\r\n    okButton = new JButton(language.getText(\"ok\"));\r\n    okButton.addActionListener(this);\r\n    southPanel.add(okButton);\r\n    applyButton = new JButton(language.getText(\"apply\"));\r\n    applyButton.addActionListener(this);\r\n    // southPanel.add(applyButton); //dont use the apply button\r\n    cancelButton = new JButton(language.getText(\"cancel\"));\r\n    cancelButton.addActionListener(this);\r\n    southPanel.add(cancelButton);\r\n    southPanel.setPreferredSize(new Dimension(600, 50));\r\n    Box southBox = Box.createVerticalBox();\r\n    southBox.add(new JSeparator());\r\n    southBox.add(southPanel);\r\n    mainPanel.add(southBox, BorderLayout.SOUTH);\r\n    // set the ok button as default action for enter\r\n    if ((getRootPane()) != null)\r\n        getRootPane().setDefaultButton(okButton);\r\n\r\n    // add the main panel into the dialog\r\n    JPanel tmpPanel = new JPanel(new BorderLayout());\r\n    tmpPanel.add(mainPanel, BorderLayout.CENTER);\r\n    getContentPane().add(tmpPanel);\r\n    // construct the sections\r\n    constructSections();\r\n    settingPanel = firstPanel;\r\n    Box vb = Box.createVerticalBox();\r\n    vb.add(new TopPanel((\"  \" + (settingPanel.getTitle())), settingPanel.getComment()));\r\n    vb.add(settingPanel);\r\n    settingPanel.initialize();\r\n    // - add the settingPanel into the main Panel\r\n    mainPanel2.add(vb, 0);\r\n    mainPanel.add(mainPanel2);\r\n    // position the window\r\n    this.pack();\r\n    // setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1950,'GeneralOptionPanel firstPanel','net.sourceforge.ganttproject.gui.options.GeneralOptionPanel',358,315,'net.sourceforge.ganttproject.gui.GeneralDialog',2697,'net.sourceforge.ganttproject.gui.GeneralDialog.-init-(net.sourceforge.ganttproject.GanttProject,java.lang.String,boolean,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel)',0,'/**\r\n * Constructor.\r\n */\r\npublic GeneralDialog(GanttProject parent, String title, boolean modal, GeneralOptionPanel firstPanel) {\r\n    super(parent, GanttProject.correctLabel(title), modal);\r\n    appli = parent;\r\n    // tree section.\r\n    rootNode = new DefaultMutableTreeNode(\"Options\");\r\n    treeModel = new DefaultTreeModel(rootNode);\r\n    treeSections = new JTree(treeModel);\r\n    treeSections.setEditable(false);\r\n    treeSections.setBackground(new Color(1.0F, 1.0F, 1.0F));\r\n    treeSections.setShowsRootHandles(true);\r\n    treeSections.setRowHeight(20);\r\n    treeSections.setRootVisible(false);\r\n    treeSections.setCellRenderer(new GeneralDialog.SettinsDefaultTreeCellRenderer());\r\n    treeSections.addTreeSelectionListener(this);\r\n    JScrollPane scrollpane = new JScrollPane(treeSections);\r\n    JPanel treePanel = new JPanel();\r\n    treePanel.add(scrollpane);\r\n    JPanel mainPanel = new JPanel(new BorderLayout());\r\n    if ((language.getComponentOrientation()) == (ComponentOrientation.LEFT_TO_RIGHT))\r\n        mainPanel.add(treePanel, BorderLayout.WEST);\r\n    else\r\n        mainPanel.add(scrollpane, BorderLayout.EAST);\r\n\r\n    scrollpane.setPreferredSize(new Dimension(150, 450));\r\n    // construct the south panel\r\n    southPanel = new JPanel(new FlowLayout(FlowLayout.TRAILING, 50, 10));\r\n    okButton = new JButton(language.getText(\"ok\"));\r\n    okButton.addActionListener(this);\r\n    southPanel.add(okButton);\r\n    applyButton = new JButton(language.getText(\"apply\"));\r\n    applyButton.addActionListener(this);\r\n    // southPanel.add(applyButton); //dont use the apply button\r\n    cancelButton = new JButton(language.getText(\"cancel\"));\r\n    cancelButton.addActionListener(this);\r\n    southPanel.add(cancelButton);\r\n    southPanel.setPreferredSize(new Dimension(600, 50));\r\n    Box southBox = Box.createVerticalBox();\r\n    southBox.add(new JSeparator());\r\n    southBox.add(southPanel);\r\n    mainPanel.add(southBox, BorderLayout.SOUTH);\r\n    // set the ok button as default action for enter\r\n    if ((getRootPane()) != null)\r\n        getRootPane().setDefaultButton(okButton);\r\n\r\n    // add the main panel into the dialog\r\n    JPanel tmpPanel = new JPanel(new BorderLayout());\r\n    tmpPanel.add(mainPanel, BorderLayout.CENTER);\r\n    getContentPane().add(tmpPanel);\r\n    // construct the sections\r\n    constructSections();\r\n    settingPanel = firstPanel;\r\n    Box vb = Box.createVerticalBox();\r\n    vb.add(new TopPanel((\"  \" + (settingPanel.getTitle())), settingPanel.getComment()));\r\n    vb.add(settingPanel);\r\n    settingPanel.initialize();\r\n    // - add the settingPanel into the main Panel\r\n    mainPanel2.add(vb, 0);\r\n    mainPanel.add(mainPanel2);\r\n    // position the window\r\n    this.pack();\r\n    // setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(1951,'Object child','java.lang.Object',0,315,'net.sourceforge.ganttproject.gui.GeneralDialog',2700,'net.sourceforge.ganttproject.gui.GeneralDialog.addObject(java.lang.Object,javax.swing.tree.DefaultMutableTreeNode)',0,'/**\r\n * Add a sub section.\r\n */\r\npublic DefaultMutableTreeNode addObject(Object child, DefaultMutableTreeNode parent) {\r\n    DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(child);\r\n    if (parent == null)\r\n        parent = rootNode;\r\n\r\n    treeModel.insertNodeInto(childNode, parent, parent.getChildCount());\r\n    treeSections.scrollPathToVisible(new TreePath(childNode.getPath()));\r\n    return childNode;\r\n}'),(1952,'DefaultMutableTreeNode parent','javax.swing.tree.DefaultMutableTreeNode',0,315,'net.sourceforge.ganttproject.gui.GeneralDialog',2700,'net.sourceforge.ganttproject.gui.GeneralDialog.addObject(java.lang.Object,javax.swing.tree.DefaultMutableTreeNode)',0,'/**\r\n * Add a sub section.\r\n */\r\npublic DefaultMutableTreeNode addObject(Object child, DefaultMutableTreeNode parent) {\r\n    DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(child);\r\n    if (parent == null)\r\n        parent = rootNode;\r\n\r\n    treeModel.insertNodeInto(childNode, parent, parent.getChildCount());\r\n    treeSections.scrollPathToVisible(new TreePath(childNode.getPath()));\r\n    return childNode;\r\n}'),(1953,'ActionEvent event','java.awt.event.ActionEvent',0,315,'net.sourceforge.ganttproject.gui.GeneralDialog',2699,'net.sourceforge.ganttproject.gui.GeneralDialog.actionPerformed(java.awt.event.ActionEvent)',0,'/**\r\n * action performed for listeners.\r\n */\r\npublic void actionPerformed(ActionEvent event) {\r\n    // click the okButton\r\n    if ((event.getSource()) == (okButton)) {\r\n        settingPanel.applyChanges(false);// ask if the panel has\r\n\r\n        // modifications\r\n        this.setVisible(false);\r\n        dispose();\r\n    } else// click the cancel button\r\n\r\n        if ((event.getSource()) == (cancelButton)) {\r\n            settingPanel.rollback();\r\n            this.setVisible(false);\r\n            dispose();\r\n        }\r\n\r\n    // click the okButton\r\n    if ((event.getSource()) == (applyButton)) {\r\n        settingPanel.applyChanges(false);// ask if the panel has\r\n\r\n        // modifications\r\n    }\r\n}'),(1954,'JTree tree','javax.swing.JTree',0,314,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer',2705,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    String text = String.valueOf(((DefaultMutableTreeNode) (value)).getUserObject());\r\n    setFont(Fonts.GENERAL_DIALOG_FONT);\r\n    setIcon(new ImageIcon(getClass().getResource(\"/icons/blank.gif\")));\r\n    setText(text);\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1955,'Object value','java.lang.Object',0,314,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer',2705,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    String text = String.valueOf(((DefaultMutableTreeNode) (value)).getUserObject());\r\n    setFont(Fonts.GENERAL_DIALOG_FONT);\r\n    setIcon(new ImageIcon(getClass().getResource(\"/icons/blank.gif\")));\r\n    setText(text);\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1956,'boolean selected','boolean',0,314,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer',2705,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    String text = String.valueOf(((DefaultMutableTreeNode) (value)).getUserObject());\r\n    setFont(Fonts.GENERAL_DIALOG_FONT);\r\n    setIcon(new ImageIcon(getClass().getResource(\"/icons/blank.gif\")));\r\n    setText(text);\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1957,'boolean expanded','boolean',0,314,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer',2705,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    String text = String.valueOf(((DefaultMutableTreeNode) (value)).getUserObject());\r\n    setFont(Fonts.GENERAL_DIALOG_FONT);\r\n    setIcon(new ImageIcon(getClass().getResource(\"/icons/blank.gif\")));\r\n    setText(text);\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1958,'boolean leaf','boolean',0,314,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer',2705,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    String text = String.valueOf(((DefaultMutableTreeNode) (value)).getUserObject());\r\n    setFont(Fonts.GENERAL_DIALOG_FONT);\r\n    setIcon(new ImageIcon(getClass().getResource(\"/icons/blank.gif\")));\r\n    setText(text);\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1959,'int row','int',0,314,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer',2705,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    String text = String.valueOf(((DefaultMutableTreeNode) (value)).getUserObject());\r\n    setFont(Fonts.GENERAL_DIALOG_FONT);\r\n    setIcon(new ImageIcon(getClass().getResource(\"/icons/blank.gif\")));\r\n    setText(text);\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1960,'boolean hasFocus','boolean',0,314,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer',2705,'net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)',0,'public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\r\n    String text = String.valueOf(((DefaultMutableTreeNode) (value)).getUserObject());\r\n    setFont(Fonts.GENERAL_DIALOG_FONT);\r\n    setIcon(new ImageIcon(getClass().getResource(\"/icons/blank.gif\")));\r\n    setText(text);\r\n    setBackground((selected ? new Color(((float) (0.29)), ((float) (0.349)), ((float) (0.643))) : Color.white));\r\n    setForeground((selected ? Color.white : Color.black));\r\n    return this;\r\n}'),(1961,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,316,'net.sourceforge.ganttproject.gui.OpenFileDialog',2706,'net.sourceforge.ganttproject.gui.OpenFileDialog.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Construtor\r\n */\r\npublic OpenFileDialog(GanttProject project) {\r\n    myStartDirectory = new File(System.getProperty(\"user.home\"));\r\n    myproject = project;\r\n}'),(1962,'String startDirectory','java.lang.String',0,316,'net.sourceforge.ganttproject.gui.OpenFileDialog',2707,'net.sourceforge.ganttproject.gui.OpenFileDialog.-init-(java.lang.String)',0,'/**\r\n * Open the file chooser\r\n */\r\npublic OpenFileDialog(String startDirectory) {\r\n    myStartDirectory = new File(startDirectory);\r\n    if (!(myStartDirectory.isDirectory())) {\r\n        myStartDirectory = myStartDirectory.getParentFile();\r\n    }\r\n}'),(1963,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,317,'net.sourceforge.ganttproject.gui.ProjectUIFacade',2714,'net.sourceforge.ganttproject.gui.ProjectUIFacade.saveProject(net.sourceforge.ganttproject.IGanttProject)',0,'void saveProject(IGanttProject project);'),(1964,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,317,'net.sourceforge.ganttproject.gui.ProjectUIFacade',2715,'net.sourceforge.ganttproject.gui.ProjectUIFacade.saveProjectAs(net.sourceforge.ganttproject.IGanttProject)',0,'void saveProjectAs(IGanttProject project);'),(1965,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,317,'net.sourceforge.ganttproject.gui.ProjectUIFacade',2716,'net.sourceforge.ganttproject.gui.ProjectUIFacade.saveProjectRemotely(net.sourceforge.ganttproject.IGanttProject)',0,'public void saveProjectRemotely(IGanttProject project);'),(1966,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,317,'net.sourceforge.ganttproject.gui.ProjectUIFacade',2711,'net.sourceforge.ganttproject.gui.ProjectUIFacade.openProject(net.sourceforge.ganttproject.IGanttProject)',0,'void openProject(IGanttProject project) throws IOException;'),(1967,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,317,'net.sourceforge.ganttproject.gui.ProjectUIFacade',2713,'net.sourceforge.ganttproject.gui.ProjectUIFacade.openRemoteProject(net.sourceforge.ganttproject.IGanttProject)',0,'void openRemoteProject(IGanttProject project) throws IOException;'),(1968,'Document document','net.sourceforge.ganttproject.document.Document',233,317,'net.sourceforge.ganttproject.gui.ProjectUIFacade',2712,'net.sourceforge.ganttproject.gui.ProjectUIFacade.openProject(net.sourceforge.ganttproject.document.Document,net.sourceforge.ganttproject.IGanttProject)',0,'void openProject(Document document, IGanttProject project) throws IOException;'),(1969,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,317,'net.sourceforge.ganttproject.gui.ProjectUIFacade',2712,'net.sourceforge.ganttproject.gui.ProjectUIFacade.openProject(net.sourceforge.ganttproject.document.Document,net.sourceforge.ganttproject.IGanttProject)',0,'void openProject(Document document, IGanttProject project) throws IOException;'),(1970,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,317,'net.sourceforge.ganttproject.gui.ProjectUIFacade',2709,'net.sourceforge.ganttproject.gui.ProjectUIFacade.createProject(net.sourceforge.ganttproject.IGanttProject)',0,'void createProject(IGanttProject project);'),(1971,'UIFacade workbenchFacade','net.sourceforge.ganttproject.gui.UIFacade',337,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2717,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.document.DocumentManager,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'public ProjectUIFacadeImpl(UIFacade workbenchFacade, DocumentManager documentManager, GPUndoManager undoManager) {\r\n    myWorkbenchFacade = workbenchFacade;\r\n    myDocumentManager = documentManager;\r\n    myUndoManager = undoManager;\r\n}'),(1972,'DocumentManager documentManager','net.sourceforge.ganttproject.document.DocumentManager',237,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2717,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.document.DocumentManager,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'public ProjectUIFacadeImpl(UIFacade workbenchFacade, DocumentManager documentManager, GPUndoManager undoManager) {\r\n    myWorkbenchFacade = workbenchFacade;\r\n    myDocumentManager = documentManager;\r\n    myUndoManager = undoManager;\r\n}'),(1973,'GPUndoManager undoManager','net.sourceforge.ganttproject.undo.GPUndoManager',657,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2717,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.document.DocumentManager,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'public ProjectUIFacadeImpl(UIFacade workbenchFacade, DocumentManager documentManager, GPUndoManager undoManager) {\r\n    myWorkbenchFacade = workbenchFacade;\r\n    myDocumentManager = documentManager;\r\n    myUndoManager = undoManager;\r\n}'),(1974,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2729,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProject(net.sourceforge.ganttproject.IGanttProject)',0,'public void saveProject(IGanttProject project) {\r\n    if ((project.getDocument()) == null) {\r\n        saveProjectAs(project);\r\n        return;\r\n    }\r\n    Document document = project.getDocument();\r\n    if (!(document.canWrite())) {\r\n        myWorkbenchFacade.showErrorDialog(i18n.getText(\"msg10\"));\r\n        saveProjectAs(project);\r\n        return;\r\n    }\r\n    if (!(document.acquireLock())) {\r\n        myWorkbenchFacade.showErrorDialog(i18n.getText(\"msg14\"));\r\n        saveProjectAs(project);\r\n        return;\r\n    }\r\n    try {\r\n        saveProject(project.getDocument());\r\n        afterSaveProject(project);\r\n    } catch (Throwable e) {\r\n        myWorkbenchFacade.showErrorDialog(e);\r\n    }\r\n}'),(1975,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2719,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.afterSaveProject(net.sourceforge.ganttproject.IGanttProject)',0,'private void afterSaveProject(IGanttProject project) {\r\n    Document document = project.getDocument();\r\n    myDocumentManager.addToRecentDocuments(document);\r\n    String title = (((i18n.getText(\"appliTitle\")) + \" [\") + (document.getDescription())) + \"]\";\r\n    myWorkbenchFacade.setWorkbenchTitle(title);\r\n    if (document.isLocal()) {\r\n        URI url = document.getURI();\r\n        if (url != null) {\r\n            File file = new File(url);\r\n            if (file != null) {\r\n                myDocumentManager.changeWorkingDirectory(file.getParentFile());\r\n            }\r\n        }\r\n    }\r\n    project.setModified(false);\r\n}'),(1976,'Document document','net.sourceforge.ganttproject.document.Document',233,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2730,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProject(net.sourceforge.ganttproject.document.Document)',0,'private void saveProject(Document document) throws IOException {\r\n    // assert document!=null;\r\n    myWorkbenchFacade.setStatusText((((GanttLanguage.getInstance().getText(\"saving\")) + \" \") + (document.getPath())));\r\n    document.write();\r\n}'),(1977,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2731,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectAs(net.sourceforge.ganttproject.IGanttProject)',0,'public void saveProjectAs(IGanttProject project) {\r\n    /* if (project.getDocument() instanceof AbstractURLDocument) {\n    saveProjectRemotely(project);\n    return;\n    }\n     */\r\n    JFileChooser fc = new JFileChooser(myDocumentManager.getWorkingDirectory());\r\n    FileFilter ganttFilter = new GanttXMLFileFilter();\r\n    fc.addChoosableFileFilter(ganttFilter);\r\n    // Remove the possibility to use a file filter for all files\r\n    FileFilter[] filefilters = fc.getChoosableFileFilters();\r\n    for (int i = 0; i < (filefilters.length); i++) {\r\n        if ((filefilters[i]) != ganttFilter) {\r\n            fc.removeChoosableFileFilter(filefilters[i]);\r\n        }\r\n    }\r\n    try {\r\n        for (; ;) {\r\n            int userChoice = fc.showSaveDialog(myWorkbenchFacade.getMainFrame());\r\n            if (userChoice != (JFileChooser.APPROVE_OPTION)) {\r\n                break;\r\n            }\r\n            File projectfile = fc.getSelectedFile();\r\n            String extension = FileUtil.getExtension(projectfile).toLowerCase();\r\n            if ((!(\"gan\".equals(extension))) && (!(\"xml\".equals(extension)))) {\r\n                projectfile = FileUtil.replaceExtension(projectfile, \"gan\");\r\n            }\r\n            if (projectfile.exists()) {\r\n                UIFacade.Choice overwritingChoice = myWorkbenchFacade.showConfirmationDialog(((projectfile + \"\n\") + (i18n.getText(\"msg18\"))), i18n.getText(\"warning\"));\r\n                if (overwritingChoice != (UIFacade.Choice.YES)) {\r\n                    continue;\r\n                }\r\n            }\r\n            Document document = myDocumentManager.getDocument(projectfile.getAbsolutePath());\r\n            saveProject(document);\r\n            project.setDocument(document);\r\n            afterSaveProject(project);\r\n            break;\r\n        }\r\n    } catch (Throwable e) {\r\n        myWorkbenchFacade.showErrorDialog(e);\r\n    }\r\n}'),(1978,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2732,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectRemotely(net.sourceforge.ganttproject.IGanttProject)',0,'public void saveProjectRemotely(IGanttProject project) {\r\n    Document document = showURLDialog(project);\r\n    if (document != null) {\r\n        project.setDocument(document);\r\n        saveProject(project);\r\n    }\r\n}'),(1979,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2722,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.ensureProjectSaved(net.sourceforge.ganttproject.IGanttProject)',0,'private boolean ensureProjectSaved(IGanttProject project) {\r\n    if (project.isModified()) {\r\n        UIFacade.Choice saveChoice = myWorkbenchFacade.showConfirmationDialog(i18n.getText(\"msg1\"), i18n.getText(\"warning\"));\r\n        if ((UIFacade.Choice.CANCEL) == saveChoice) {\r\n            return false;\r\n        }\r\n        if ((UIFacade.Choice.YES) == saveChoice) {\r\n            try {\r\n                saveProject(project);\r\n            } catch (Exception e) {\r\n                System.err.println(e);\r\n                myWorkbenchFacade.showErrorDialog(e);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}'),(1980,'final IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2726,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(net.sourceforge.ganttproject.IGanttProject)',0,'public void openProject(final IGanttProject project) throws IOException {\r\n    if (false == (ensureProjectSaved(project))) {\r\n        return;\r\n    }\r\n    JFileChooser fc = new JFileChooser(myDocumentManager.getWorkingDirectory());\r\n    FileFilter ganttFilter = new GanttXMLFileFilter();\r\n    // Remove the possibility to use a file filter for all files\r\n    FileFilter[] filefilters = fc.getChoosableFileFilters();\r\n    for (int i = 0; i < (filefilters.length); i++) {\r\n        fc.removeChoosableFileFilter(filefilters[i]);\r\n    }\r\n    fc.addChoosableFileFilter(ganttFilter);\r\n    int returnVal = fc.showOpenDialog(myWorkbenchFacade.getMainFrame());\r\n    if (returnVal == (JFileChooser.APPROVE_OPTION)) {\r\n        final JFileChooser jfc = fc;\r\n        Document document = getDocumentManager().getDocument(jfc.getSelectedFile().getAbsolutePath());\r\n        openProject(document, project);\r\n    }\r\n}'),(1981,'final IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2728,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openRemoteProject(net.sourceforge.ganttproject.IGanttProject)',0,'public void openRemoteProject(final IGanttProject project) throws IOException {\r\n    final Document document = showURLDialog(project);\r\n    if (document != null) {\r\n        openProject(document, project);\r\n    }\r\n}'),(1982,'final Document document','net.sourceforge.ganttproject.document.Document',233,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2727,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(net.sourceforge.ganttproject.document.Document,net.sourceforge.ganttproject.IGanttProject)',0,'public void openProject(final Document document, final IGanttProject project) throws IOException {\r\n    beforeClose();\r\n    project.close();\r\n    project.open(document);\r\n}'),(1983,'final IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2727,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(net.sourceforge.ganttproject.document.Document,net.sourceforge.ganttproject.IGanttProject)',0,'public void openProject(final Document document, final IGanttProject project) throws IOException {\r\n    beforeClose();\r\n    project.close();\r\n    project.open(document);\r\n}'),(1984,'final IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2721,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.createProject(net.sourceforge.ganttproject.IGanttProject)',0,'public void createProject(final IGanttProject project) {\r\n    if (false == (ensureProjectSaved(project))) {\r\n        return;\r\n    }\r\n    getUndoManager().undoableEdit(\"Init new Project\", new Runnable() {\r\n        public void run() {\r\n            beforeClose();\r\n            project.close();\r\n            myWorkbenchFacade.setStatusText(i18n.getText(\"newProject2\"));\r\n            showNewProjectWizard(project);\r\n        }\r\n    });\r\n}'),(1985,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2733,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.showNewProjectWizard(net.sourceforge.ganttproject.IGanttProject)',0,'private void showNewProjectWizard(IGanttProject project) {\r\n    NewProjectWizard wizard = new NewProjectWizard();\r\n    wizard.createNewProject(project, myWorkbenchFacade);\r\n}'),(1986,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2734,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.showURLDialog(net.sourceforge.ganttproject.IGanttProject)',0,'private Document showURLDialog(IGanttProject project) {\r\n    Document document = project.getDocument();\r\n    GanttURLChooser uc = new GanttURLChooser(myWorkbenchFacade.getMainFrame(), false, (null != document ? document.getURLPath() : myDocumentManager.getLastWebDAVDocumentOption().getValue()), (null != document ? document.getUsername() : null), (null != document ? document.getPassword() : null));\r\n    uc.show();\r\n    if (uc.change) {\r\n        document = myDocumentManager.getDocument(uc.fileurl, uc.userName, uc.password);\r\n        myDocumentManager.getLastWebDAVDocumentOption().lock();\r\n        myDocumentManager.getLastWebDAVDocumentOption().setValue(uc.fileurl);\r\n        myDocumentManager.getLastWebDAVDocumentOption().commit();\r\n    } else {\r\n        document = null;\r\n    }\r\n    return document;\r\n}'),(1987,'net.sourceforge.ganttproject.document.Document','net.sourceforge.ganttproject.document.Document',233,318,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl',2734,'net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.showURLDialog(net.sourceforge.ganttproject.IGanttProject)',1,'private Document showURLDialog(IGanttProject project) {\r\n    Document document = project.getDocument();\r\n    GanttURLChooser uc = new GanttURLChooser(myWorkbenchFacade.getMainFrame(), false, (null != document ? document.getURLPath() : myDocumentManager.getLastWebDAVDocumentOption().getValue()), (null != document ? document.getUsername() : null), (null != document ? document.getPassword() : null));\r\n    uc.show();\r\n    if (uc.change) {\r\n        document = myDocumentManager.getDocument(uc.fileurl, uc.userName, uc.password);\r\n        myDocumentManager.getLastWebDAVDocumentOption().lock();\r\n        myDocumentManager.getLastWebDAVDocumentOption().setValue(uc.fileurl);\r\n        myDocumentManager.getLastWebDAVDocumentOption().commit();\r\n    } else {\r\n        document = null;\r\n    }\r\n    return document;\r\n}'),(1988,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,319,'net.sourceforge.ganttproject.gui.ResourceDialogCustomColumn',2737,'net.sourceforge.ganttproject.gui.ResourceDialogCustomColumn.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.resource.ResourceColumn)',0,'public ResourceDialogCustomColumn(UIFacade uiFacade, ResourceColumn col) {\r\n    myUIFacade = uiFacade;\r\n    resourceColumn = col;\r\n    myOptionGroup.lock();\r\n    myDate.lock();\r\n    myOptionGroup.setTitled(false);\r\n}'),(1989,'ResourceColumn col','net.sourceforge.ganttproject.resource.ResourceColumn',506,319,'net.sourceforge.ganttproject.gui.ResourceDialogCustomColumn',2737,'net.sourceforge.ganttproject.gui.ResourceDialogCustomColumn.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.resource.ResourceColumn)',0,'public ResourceDialogCustomColumn(UIFacade uiFacade, ResourceColumn col) {\r\n    myUIFacade = uiFacade;\r\n    resourceColumn = col;\r\n    myOptionGroup.lock();\r\n    myDate.lock();\r\n    myOptionGroup.setTitled(false);\r\n}'),(1990,'String typeName','java.lang.String',0,319,'net.sourceforge.ganttproject.gui.ResourceDialogCustomColumn',2741,'net.sourceforge.ganttproject.gui.ResourceDialogCustomColumn.getSelectedType(java.lang.String)',0,'private int getSelectedType(String typeName) {\r\n    for (int i = 0; i < (ResourceDialogCustomColumn.availableTypes.length); i++) {\r\n        if (ResourceDialogCustomColumn.availableTypes[i].equals(typeName)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}'),(1991,'boolean visible','boolean',0,319,'net.sourceforge.ganttproject.gui.ResourceDialogCustomColumn',2745,'net.sourceforge.ganttproject.gui.ResourceDialogCustomColumn.setVisible(boolean)',0,'public void setVisible(boolean visible) {\r\n    Component rootComponent = getComponent();\r\n    getUIFacade().showDialog(rootComponent, new Action[]{ new OkAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            myOptionGroup.commit();\r\n            myDate.commit();\r\n            ResourceDialogCustomColumn.this.ok();\r\n        }\r\n    }, new CancelAction() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            myOptionGroup.rollback();\r\n            myDate.rollback();\r\n        }\r\n    } });\r\n}'),(1992,'ResourceAssignmentCollection assignmentCollection','net.sourceforge.ganttproject.task.ResourceAssignmentCollection',541,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2750,'net.sourceforge.ganttproject.gui.ResourcesTableModel.-init-(net.sourceforge.ganttproject.task.ResourceAssignmentCollection)',0,'public ResourcesTableModel(ResourceAssignmentCollection assignmentCollection) {\r\n    myAssignmentCollection = assignmentCollection;\r\n    myAssignments = new ArrayList(Arrays.asList(assignmentCollection.getAssignments()));\r\n    myMutator = assignmentCollection.createMutator();\r\n}'),(1993,'int col','int',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2755,'net.sourceforge.ganttproject.gui.ResourcesTableModel.getColumnName(int)',0,'/**\r\n * Return the name of the column at col index\r\n */\r\npublic String getColumnName(int col) {\r\n    return columnNames[col];\r\n}'),(1994,'int row','int',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2758,'net.sourceforge.ganttproject.gui.ResourcesTableModel.getValueAt(int,int)',0,'/**\r\n * Return the object a specify cell\r\n */\r\npublic Object getValueAt(int row, int col) {\r\n    Object result;\r\n    if (row >= 0) {\r\n        if (row < (myAssignments.size())) {\r\n            ResourceAssignment assignment = ((ResourceAssignment) (myAssignments.get(row)));\r\n            switch (col) {\r\n                case 0 :\r\n                    result = String.valueOf(assignment.getResource().getId());\r\n                    break;\r\n                case 1 :\r\n                    result = assignment.getResource();\r\n                    break;\r\n                case 2 :\r\n                    result = String.valueOf(assignment.getLoad());\r\n                    break;\r\n                case 3 :\r\n                    result = new Boolean(assignment.isCoordinator());\r\n                    break;\r\n                case 4 :\r\n                    result = assignment.getRoleForAssignment();\r\n                    break;\r\n                default :\r\n                    result = \"\";\r\n            }\r\n        } else {\r\n            result = \"\";\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException((\"I cant return data in row=\" + row));\r\n    }\r\n    return result;\r\n}'),(1995,'int col','int',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2758,'net.sourceforge.ganttproject.gui.ResourcesTableModel.getValueAt(int,int)',0,'/**\r\n * Return the object a specify cell\r\n */\r\npublic Object getValueAt(int row, int col) {\r\n    Object result;\r\n    if (row >= 0) {\r\n        if (row < (myAssignments.size())) {\r\n            ResourceAssignment assignment = ((ResourceAssignment) (myAssignments.get(row)));\r\n            switch (col) {\r\n                case 0 :\r\n                    result = String.valueOf(assignment.getResource().getId());\r\n                    break;\r\n                case 1 :\r\n                    result = assignment.getResource();\r\n                    break;\r\n                case 2 :\r\n                    result = String.valueOf(assignment.getLoad());\r\n                    break;\r\n                case 3 :\r\n                    result = new Boolean(assignment.isCoordinator());\r\n                    break;\r\n                case 4 :\r\n                    result = assignment.getRoleForAssignment();\r\n                    break;\r\n                default :\r\n                    result = \"\";\r\n            }\r\n        } else {\r\n            result = \"\";\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException((\"I cant return data in row=\" + row));\r\n    }\r\n    return result;\r\n}'),(1996,'int c','int',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2753,'net.sourceforge.ganttproject.gui.ResourcesTableModel.getColumnClass(int)',0,'/* JTable uses this method to determine the default renderer/ editor for\neach cell. If we didnt implement this method, then the last column would\ncontain text (\"true\"/\"false\"), rather than a check box.\n */\r\npublic Class getColumnClass(int c) {\r\n    // if (c == 0 || c == 2) {\r\n    // return String.class;\r\n    // } else {\r\n    // return HumanResource.class;\r\n    // }\r\n    switch (c) {\r\n        case 0 :\r\n        case 2 :\r\n            return String.class;\r\n        case 1 :\r\n            return HumanResource.class;\r\n        case 3 :\r\n            return Boolean.class;\r\n        case 4 :\r\n            return Role.class;\r\n        default :\r\n            return String.class;\r\n    }\r\n}'),(1997,'int row','int',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2759,'net.sourceforge.ganttproject.gui.ResourcesTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    boolean result = col > 0;\r\n    if (result) {\r\n        result = ((col == 2 ? row < (myAssignments.size()) : row <= (myAssignments.size())) || (col == 3)) || (col == 4);\r\n    }\r\n    return result;\r\n}'),(1998,'int col','int',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2759,'net.sourceforge.ganttproject.gui.ResourcesTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    boolean result = col > 0;\r\n    if (result) {\r\n        result = ((col == 2 ? row < (myAssignments.size()) : row <= (myAssignments.size())) || (col == 3)) || (col == 4);\r\n    }\r\n    return result;\r\n}'),(1999,'Object value','java.lang.Object',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2761,'net.sourceforge.ganttproject.gui.ResourcesTableModel.setValueAt(java.lang.Object,int,int)',0,'/* Dont need to implement this method unless your tables data can change. */\r\npublic void setValueAt(Object value, int row, int col) {\r\n    if (row >= 0) {\r\n        if (row >= (myAssignments.size())) {\r\n            createAssignment(value);\r\n        } else {\r\n            updateAssignment(value, row, col);\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException((\"I cant set data in row=\" + row));\r\n    }\r\n    isChanged = true;\r\n    // fireTableCellUpdated(row, col);\r\n}'),(2000,'int row','int',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2761,'net.sourceforge.ganttproject.gui.ResourcesTableModel.setValueAt(java.lang.Object,int,int)',0,'/* Dont need to implement this method unless your tables data can change. */\r\npublic void setValueAt(Object value, int row, int col) {\r\n    if (row >= 0) {\r\n        if (row >= (myAssignments.size())) {\r\n            createAssignment(value);\r\n        } else {\r\n            updateAssignment(value, row, col);\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException((\"I cant set data in row=\" + row));\r\n    }\r\n    isChanged = true;\r\n    // fireTableCellUpdated(row, col);\r\n}'),(2001,'int col','int',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2761,'net.sourceforge.ganttproject.gui.ResourcesTableModel.setValueAt(java.lang.Object,int,int)',0,'/* Dont need to implement this method unless your tables data can change. */\r\npublic void setValueAt(Object value, int row, int col) {\r\n    if (row >= 0) {\r\n        if (row >= (myAssignments.size())) {\r\n            createAssignment(value);\r\n        } else {\r\n            updateAssignment(value, row, col);\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException((\"I cant set data in row=\" + row));\r\n    }\r\n    isChanged = true;\r\n    // fireTableCellUpdated(row, col);\r\n}'),(2002,'Object value','java.lang.Object',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2762,'net.sourceforge.ganttproject.gui.ResourcesTableModel.updateAssignment(java.lang.Object,int,int)',0,'private void updateAssignment(Object value, int row, int col) {\r\n    ResourceAssignment updateTarget = ((ResourceAssignment) (myAssignments.get(row)));\r\n    switch (col) {\r\n        case 4 :\r\n            {\r\n                updateTarget.setRoleForAssignment(((Role) (value)));\r\n                break;\r\n            }\r\n        case 3 :\r\n            {\r\n                updateTarget.setCoordinator(((Boolean) (value)).booleanValue());\r\n                break;\r\n            }\r\n        case 2 :\r\n            {\r\n                float loadAsFloat = Float.parseFloat(String.valueOf(value));\r\n                updateTarget.setLoad(loadAsFloat);\r\n                break;\r\n            }\r\n        case 1 :\r\n            {\r\n                if (value == null) {\r\n                    updateTarget.delete();\r\n                    myAssignments.remove(row);\r\n                    fireTableRowsDeleted(row, row);\r\n                } else\r\n                    if (value instanceof ProjectResource) {\r\n                        float load = updateTarget.getLoad();\r\n                        boolean coord = updateTarget.isCoordinator();\r\n                        updateTarget.delete();\r\n                        ResourceAssignment newAssignment = myMutator.addAssignment(((ProjectResource) (value)));\r\n                        newAssignment.setLoad(load);\r\n                        newAssignment.setCoordinator(coord);\r\n                        myAssignments.set(row, newAssignment);\r\n                    }\r\n\r\n                break;\r\n            }\r\n        default :\r\n            break;\r\n    }\r\n}'),(2003,'int row','int',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2762,'net.sourceforge.ganttproject.gui.ResourcesTableModel.updateAssignment(java.lang.Object,int,int)',0,'private void updateAssignment(Object value, int row, int col) {\r\n    ResourceAssignment updateTarget = ((ResourceAssignment) (myAssignments.get(row)));\r\n    switch (col) {\r\n        case 4 :\r\n            {\r\n                updateTarget.setRoleForAssignment(((Role) (value)));\r\n                break;\r\n            }\r\n        case 3 :\r\n            {\r\n                updateTarget.setCoordinator(((Boolean) (value)).booleanValue());\r\n                break;\r\n            }\r\n        case 2 :\r\n            {\r\n                float loadAsFloat = Float.parseFloat(String.valueOf(value));\r\n                updateTarget.setLoad(loadAsFloat);\r\n                break;\r\n            }\r\n        case 1 :\r\n            {\r\n                if (value == null) {\r\n                    updateTarget.delete();\r\n                    myAssignments.remove(row);\r\n                    fireTableRowsDeleted(row, row);\r\n                } else\r\n                    if (value instanceof ProjectResource) {\r\n                        float load = updateTarget.getLoad();\r\n                        boolean coord = updateTarget.isCoordinator();\r\n                        updateTarget.delete();\r\n                        ResourceAssignment newAssignment = myMutator.addAssignment(((ProjectResource) (value)));\r\n                        newAssignment.setLoad(load);\r\n                        newAssignment.setCoordinator(coord);\r\n                        myAssignments.set(row, newAssignment);\r\n                    }\r\n\r\n                break;\r\n            }\r\n        default :\r\n            break;\r\n    }\r\n}'),(2004,'int col','int',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2762,'net.sourceforge.ganttproject.gui.ResourcesTableModel.updateAssignment(java.lang.Object,int,int)',0,'private void updateAssignment(Object value, int row, int col) {\r\n    ResourceAssignment updateTarget = ((ResourceAssignment) (myAssignments.get(row)));\r\n    switch (col) {\r\n        case 4 :\r\n            {\r\n                updateTarget.setRoleForAssignment(((Role) (value)));\r\n                break;\r\n            }\r\n        case 3 :\r\n            {\r\n                updateTarget.setCoordinator(((Boolean) (value)).booleanValue());\r\n                break;\r\n            }\r\n        case 2 :\r\n            {\r\n                float loadAsFloat = Float.parseFloat(String.valueOf(value));\r\n                updateTarget.setLoad(loadAsFloat);\r\n                break;\r\n            }\r\n        case 1 :\r\n            {\r\n                if (value == null) {\r\n                    updateTarget.delete();\r\n                    myAssignments.remove(row);\r\n                    fireTableRowsDeleted(row, row);\r\n                } else\r\n                    if (value instanceof ProjectResource) {\r\n                        float load = updateTarget.getLoad();\r\n                        boolean coord = updateTarget.isCoordinator();\r\n                        updateTarget.delete();\r\n                        ResourceAssignment newAssignment = myMutator.addAssignment(((ProjectResource) (value)));\r\n                        newAssignment.setLoad(load);\r\n                        newAssignment.setCoordinator(coord);\r\n                        myAssignments.set(row, newAssignment);\r\n                    }\r\n\r\n                break;\r\n            }\r\n        default :\r\n            break;\r\n    }\r\n}'),(2005,'Object value','java.lang.Object',0,321,'net.sourceforge.ganttproject.gui.ResourcesTableModel',2752,'net.sourceforge.ganttproject.gui.ResourcesTableModel.createAssignment(java.lang.Object)',0,'private void createAssignment(Object value) {\r\n    if (value instanceof ProjectResource) {\r\n        ResourceAssignment newAssignment = myMutator.addAssignment(((ProjectResource) (value)));\r\n        newAssignment.setLoad(100);\r\n        boolean coord = false;\r\n        if (myAssignments.isEmpty())\r\n            coord = true;\r\n\r\n        newAssignment.setCoordinator(coord);\r\n        if ((newAssignment.getResource()) instanceof HumanResource)\r\n            newAssignment.setRoleForAssignment(((HumanResource) (newAssignment.getResource())).getRole());\r\n\r\n        myAssignments.add(newAssignment);\r\n        fireTableRowsInserted(myAssignments.size(), myAssignments.size());\r\n    }\r\n}'),(2006,'int col','int',0,322,'net.sourceforge.ganttproject.gui.RolesTableModel',2766,'net.sourceforge.ganttproject.gui.RolesTableModel.getColumnName(int)',0,'/**\r\n * Return the name of the column at col index\r\n */\r\npublic String getColumnName(int col) {\r\n    return columnNames[col];\r\n}'),(2007,'int row','int',0,322,'net.sourceforge.ganttproject.gui.RolesTableModel',2769,'net.sourceforge.ganttproject.gui.RolesTableModel.getValueAt(int,int)',0,'/**\r\n * Return the object a specify cell\r\n */\r\npublic Object getValueAt(int row, int col) {\r\n    return data[row][col];\r\n}'),(2008,'int col','int',0,322,'net.sourceforge.ganttproject.gui.RolesTableModel',2769,'net.sourceforge.ganttproject.gui.RolesTableModel.getValueAt(int,int)',0,'/**\r\n * Return the object a specify cell\r\n */\r\npublic Object getValueAt(int row, int col) {\r\n    return data[row][col];\r\n}'),(2009,'int row','int',0,322,'net.sourceforge.ganttproject.gui.RolesTableModel',2771,'net.sourceforge.ganttproject.gui.RolesTableModel.isCellEditable(int,int)',0,'/* JTable uses this method to determine the default renderer/ editor for\neach cell. If we didnt implement this method, then the last column would\ncontain text (\"true\"/\"false\"), rather than a check box.\n */\r\n/* public Class getColumnClass(int c) { if (c == 0 || c == 2) { return new\nString().getClass(); } else { return new HumanResource().getClass(); } //\nreturn getValueAt(0, c).getClass(); }\n */\r\npublic boolean isCellEditable(int row, int col) {\r\n    return col == 1;\r\n}'),(2010,'int col','int',0,322,'net.sourceforge.ganttproject.gui.RolesTableModel',2771,'net.sourceforge.ganttproject.gui.RolesTableModel.isCellEditable(int,int)',0,'/* JTable uses this method to determine the default renderer/ editor for\neach cell. If we didnt implement this method, then the last column would\ncontain text (\"true\"/\"false\"), rather than a check box.\n */\r\n/* public Class getColumnClass(int c) { if (c == 0 || c == 2) { return new\nString().getClass(); } else { return new HumanResource().getClass(); } //\nreturn getValueAt(0, c).getClass(); }\n */\r\npublic boolean isCellEditable(int row, int col) {\r\n    return col == 1;\r\n}'),(2011,'Object value','java.lang.Object',0,322,'net.sourceforge.ganttproject.gui.RolesTableModel',2772,'net.sourceforge.ganttproject.gui.RolesTableModel.setValueAt(java.lang.Object,int,int)',0,'/* Dont need to implement this method unless your tables data can change. */\r\npublic void setValueAt(Object value, int row, int col) {\r\n    data[row][col] = value;\r\n    fireTableCellUpdated(row, col);\r\n}'),(2012,'int row','int',0,322,'net.sourceforge.ganttproject.gui.RolesTableModel',2772,'net.sourceforge.ganttproject.gui.RolesTableModel.setValueAt(java.lang.Object,int,int)',0,'/* Dont need to implement this method unless your tables data can change. */\r\npublic void setValueAt(Object value, int row, int col) {\r\n    data[row][col] = value;\r\n    fireTableCellUpdated(row, col);\r\n}'),(2013,'int col','int',0,322,'net.sourceforge.ganttproject.gui.RolesTableModel',2772,'net.sourceforge.ganttproject.gui.RolesTableModel.setValueAt(java.lang.Object,int,int)',0,'/* Dont need to implement this method unless your tables data can change. */\r\npublic void setValueAt(Object value, int row, int col) {\r\n    data[row][col] = value;\r\n    fireTableCellUpdated(row, col);\r\n}'),(2014,'int index','int',0,324,'net.sourceforge.ganttproject.gui.TableHeaderUIFacade',2775,'net.sourceforge.ganttproject.gui.TableHeaderUIFacade.getField(int)',0,'TableHeaderUIFacade.Column getField(int index);'),(2015,'String name','java.lang.String',0,324,'net.sourceforge.ganttproject.gui.TableHeaderUIFacade',2773,'net.sourceforge.ganttproject.gui.TableHeaderUIFacade.add(java.lang.String,int,int)',0,'void add(String name, int order, int width);'),(2016,'int order','int',0,324,'net.sourceforge.ganttproject.gui.TableHeaderUIFacade',2773,'net.sourceforge.ganttproject.gui.TableHeaderUIFacade.add(java.lang.String,int,int)',0,'void add(String name, int order, int width);'),(2017,'int width','int',0,324,'net.sourceforge.ganttproject.gui.TableHeaderUIFacade',2773,'net.sourceforge.ganttproject.gui.TableHeaderUIFacade.add(java.lang.String,int,int)',0,'void add(String name, int order, int width);'),(2018,'TableHeaderUIFacade source','net.sourceforge.ganttproject.gui.TableHeaderUIFacade',324,324,'net.sourceforge.ganttproject.gui.TableHeaderUIFacade',2777,'net.sourceforge.ganttproject.gui.TableHeaderUIFacade.importData(net.sourceforge.ganttproject.gui.TableHeaderUIFacade)',0,'void importData(TableHeaderUIFacade source);'),(2019,'Action action','javax.swing.Action',0,326,'net.sourceforge.ganttproject.gui.TaskTreeUIFacade',2790,'net.sourceforge.ganttproject.gui.TaskTreeUIFacade.setLinkTasksAction(javax.swing.Action)',0,'void setLinkTasksAction(Action action);'),(2020,'Action unlinkAction','javax.swing.Action',0,326,'net.sourceforge.ganttproject.gui.TaskTreeUIFacade',2791,'net.sourceforge.ganttproject.gui.TaskTreeUIFacade.setUnlinkTasksAction(javax.swing.Action)',0,'void setUnlinkTasksAction(Action unlinkAction);'),(2021,'Action action','javax.swing.Action',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2792,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.-init-(javax.swing.Action)',0,'public TestGanttRolloverButton(Action action) {\r\n    this();\r\n    setAction(action);\r\n    Icon smallIcon = ((Icon) (action.getValue(Action.SMALL_ICON)));\r\n    if (smallIcon != null) {\r\n        setIcon(smallIcon);\r\n        _iconOff = smallIcon;\r\n        myIcon = smallIcon;\r\n    }\r\n    if (action instanceof RolloverAction) {\r\n        _iconOn = ((RolloverAction) (action)).getIconOnMouseOver();\r\n    }\r\n}'),(2022,'Icon icon','javax.swing.Icon',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2794,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.-init-(javax.swing.Icon)',0,'/**\r\n * Setup the border (invisible initially)\r\n */\r\npublic TestGanttRolloverButton(Icon icon) {\r\n    this();\r\n    setIcon(icon);\r\n    _iconOn = icon;\r\n    myIcon = icon;\r\n}'),(2023,'Icon iconOn','javax.swing.Icon',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2795,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.-init-(javax.swing.Icon,javax.swing.Icon)',0,'/**\r\n * Setup the border (invisible initially)\r\n */\r\nprivate TestGanttRolloverButton(Icon iconOn, Icon iconOff) {\r\n    this();\r\n    setIcon(iconOff);\r\n    _iconOn = iconOn;\r\n    _iconOff = iconOff;\r\n}'),(2024,'Icon iconOff','javax.swing.Icon',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2795,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.-init-(javax.swing.Icon,javax.swing.Icon)',0,'/**\r\n * Setup the border (invisible initially)\r\n */\r\nprivate TestGanttRolloverButton(Icon iconOn, Icon iconOff) {\r\n    this();\r\n    setIcon(iconOff);\r\n    _iconOn = iconOn;\r\n    _iconOff = iconOff;\r\n}'),(2025,'Icon icon','javax.swing.Icon',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2796,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.-init-(javax.swing.Icon,java.lang.String)',0,'/**\r\n * Setup the border (invisible initially)\r\n */\r\npublic TestGanttRolloverButton(Icon icon, String text) {\r\n    this();\r\n    setIcon(icon);\r\n    _iconOn = icon;\r\n    setText(text);\r\n}'),(2026,'String text','java.lang.String',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2796,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.-init-(javax.swing.Icon,java.lang.String)',0,'/**\r\n * Setup the border (invisible initially)\r\n */\r\npublic TestGanttRolloverButton(Icon icon, String text) {\r\n    this();\r\n    setIcon(icon);\r\n    _iconOn = icon;\r\n    setText(text);\r\n}'),(2027,'MouseEvent e','java.awt.event.MouseEvent',0,329,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton$Worker',2813,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton$Worker.-init-(java.awt.event.MouseEvent)',0,'Worker(MouseEvent e) {\r\n    myEvent = new ActionEvent(this, ActionEvent.ACTION_PERFORMED, getActionCommand(), EventQueue.getMostRecentEventTime(), e.getModifiers());\r\n}'),(2028,'int milliseconds','int',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2800,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setAutoRepeatMousePressedEvent(int)',0,'public void setAutoRepeatMousePressedEvent(int milliseconds) {\r\n    myAutoRepeatMilliseconds = milliseconds;\r\n}'),(2029,'boolean isHidden','boolean',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2805,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setIconHidden(boolean)',0,'public void setIconHidden(boolean isHidden) {\r\n    if (isHidden) {\r\n        setDefaultIcon(null);\r\n    } else {\r\n        setDefaultIcon(myIcon);\r\n    }\r\n}'),(2030,'boolean isHidden','boolean',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2806,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setTextHidden(boolean)',0,'public void setTextHidden(boolean isHidden) {\r\n    if (isHidden) {\r\n        setText(\"\");\r\n    } else {\r\n        Action action = getAction();\r\n        if (action != null) {\r\n            setText(String.valueOf(action.getValue(Action.NAME)));\r\n        }\r\n    }\r\n}'),(2031,'Icon icon','javax.swing.Icon',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2803,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setIcon(javax.swing.Icon)',0,'public void setIcon(Icon icon) {\r\n    Action a = getAction();\r\n    if (a != null) {\r\n        // a.putValue(Action.SMALL_ICON,icon);\r\n        _iconOn = icon;\r\n    }\r\n    super.setIcon(icon);\r\n}'),(2032,'Icon iconOn','javax.swing.Icon',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2804,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setIcon(javax.swing.Icon,javax.swing.Icon)',0,'public void setIcon(Icon iconOn, Icon iconOff) {\r\n    setIcon(iconOff);\r\n    _iconOn = iconOn;\r\n    _iconOff = iconOff;\r\n}'),(2033,'Icon iconOff','javax.swing.Icon',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2804,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setIcon(javax.swing.Icon,javax.swing.Icon)',0,'public void setIcon(Icon iconOn, Icon iconOff) {\r\n    setIcon(iconOff);\r\n    _iconOn = iconOn;\r\n    _iconOff = iconOff;\r\n}'),(2034,'Icon iconOn','javax.swing.Icon',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2801,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setDefaultIcon(javax.swing.Icon)',0,'public void setDefaultIcon(Icon iconOn) {\r\n    setIcon(iconOn);\r\n    _iconOn = iconOn;\r\n}'),(2035,'boolean b','boolean',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2802,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setEnabled(boolean)',0,'public void setEnabled(boolean b) {\r\n    super.setEnabled(b);\r\n    setBorderPainted(false);\r\n    repaint();\r\n}'),(2036,'Graphics g','java.awt.Graphics',0,330,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton',2799,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton.paint(java.awt.Graphics)',0,'public void paint(Graphics g) {\r\n    if (isEnabled()) {\r\n        super.paint(g);\r\n    } else {\r\n        Graphics2D g2 = ((Graphics2D) (g));\r\n        g2.setComposite(TestGanttRolloverButton.c);\r\n        super.paint(g2);\r\n    }\r\n}'),(2037,'MouseEvent e','java.awt.event.MouseEvent',0,328,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler',2811,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler.mouseEntered(java.awt.event.MouseEvent)',0,'public void mouseEntered(MouseEvent e) {\r\n    if (isEnabled()) {\r\n        setBorderPainted(true);\r\n        setIcon(_iconOn);\r\n    }\r\n}'),(2038,'MouseEvent e','java.awt.event.MouseEvent',0,328,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler',2812,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler.mouseExited(java.awt.event.MouseEvent)',0,'public void mouseExited(MouseEvent e) {\r\n    setBorderPainted(false);\r\n    if ((getAction()) instanceof RolloverAction)\r\n        setIcon(((RolloverAction) (getAction())).getIconOnMouseOver());\r\n    else\r\n        if ((_iconOff) != null)\r\n            setIcon(_iconOff);\r\n\r\n\r\n}'),(2039,'MouseEvent e','java.awt.event.MouseEvent',0,327,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton$AutoRepeatHandler',2808,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton$AutoRepeatHandler.mousePressed(java.awt.event.MouseEvent)',0,'public void mousePressed(MouseEvent e) {\r\n    if ((myAutoRepeatMilliseconds) > 0) {\r\n        myWorker = new TestGanttRolloverButton.Worker(e);\r\n        myWorker.start();\r\n    }\r\n}'),(2040,'MouseEvent e','java.awt.event.MouseEvent',0,327,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton$AutoRepeatHandler',2809,'net.sourceforge.ganttproject.gui.TestGanttRolloverButton$AutoRepeatHandler.mouseReleased(java.awt.event.MouseEvent)',0,'public void mouseReleased(MouseEvent e) {\r\n    if ((myWorker) != null) {\r\n        myWorker.interrupt();\r\n        myWorker = null;\r\n    }\r\n}'),(2041,'final Component parentComponent','java.awt.Component',0,331,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent',2815,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.-init-(java.awt.Component,java.lang.String)',0,'public TextFieldAndFileChooserComponent(final Component parentComponent, String dialogCaption) {\r\n    myDialogCaption = dialogCaption;\r\n    myParentComponent = parentComponent;\r\n    initComponents();\r\n}'),(2042,'String dialogCaption','java.lang.String',0,331,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent',2815,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.-init-(java.awt.Component,java.lang.String)',0,'public TextFieldAndFileChooserComponent(final Component parentComponent, String dialogCaption) {\r\n    myDialogCaption = dialogCaption;\r\n    myParentComponent = parentComponent;\r\n    initComponents();\r\n}'),(2043,'String label','java.lang.String',0,331,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent',2816,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.-init-(java.lang.String,java.lang.String)',0,'public TextFieldAndFileChooserComponent(String label, String dialogCaption) {\r\n    Box innerBox = Box.createHorizontalBox();\r\n    innerBox.add(new JLabel(label));\r\n    innerBox.add(Box.createHorizontalStrut(2));\r\n    myParentComponent = innerBox;\r\n    myDialogCaption = dialogCaption;\r\n    initComponents();\r\n    innerBox.add(myComponent);\r\n    myComponent = innerBox;\r\n}'),(2044,'String dialogCaption','java.lang.String',0,331,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent',2816,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.-init-(java.lang.String,java.lang.String)',0,'public TextFieldAndFileChooserComponent(String label, String dialogCaption) {\r\n    Box innerBox = Box.createHorizontalBox();\r\n    innerBox.add(new JLabel(label));\r\n    innerBox.add(Box.createHorizontalStrut(2));\r\n    myParentComponent = innerBox;\r\n    myDialogCaption = dialogCaption;\r\n    initComponents();\r\n    innerBox.add(myComponent);\r\n    myComponent = innerBox;\r\n}'),(2045,'File file','java.io.File',0,331,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent',2822,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFile(java.io.File)',0,'public void setFile(File file) {\r\n    myFile = file;\r\n    myTextField.setText((file == null ? \"\" : file.getAbsolutePath()));\r\n}'),(2046,'FileFilter filter','javax.swing.filechooser.FileFilter',0,331,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent',2823,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFileFilter(javax.swing.filechooser.FileFilter)',0,'public void setFileFilter(FileFilter filter) {\r\n    myFileFilter = filter;\r\n}'),(2047,'File file','java.io.File',0,331,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent',2821,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.onFileChosen(java.io.File)',0,'protected void onFileChosen(File file) {\r\n    myFile = file;\r\n    myTextField.setText(myFile.getAbsolutePath());\r\n}'),(2048,'int mode','int',0,331,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent',2824,'net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFileSelectionMode(int)',0,'public void setFileSelectionMode(int mode) {\r\n    myFileSelectionMode = mode;\r\n}'),(2049,'JFrame parent','javax.swing.JFrame',0,332,'net.sourceforge.ganttproject.gui.TipsDialog',2826,'net.sourceforge.ganttproject.gui.TipsDialog.-init-(javax.swing.JFrame,boolean)',0,'/**\r\n * Constructor\r\n */\r\npublic TipsDialog(JFrame parent, boolean tips) {\r\n    super(parent, GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"tipsOfTheDay\")), false);\r\n    appli = ((GanttProject) (parent));\r\n    GanttLanguage lang = GanttLanguage.getInstance();\r\n    Vector vTips = new Vector();\r\n    String prefix = \"tips\";\r\n    int ind = 1;\r\n    boolean moreTips = !(lang.getText((prefix + ind)).startsWith(GanttLanguage.MISSING_RESOURCE));\r\n    while (moreTips) {\r\n        vTips.add(lang.getText((prefix + (ind++))));\r\n        moreTips = !(lang.getText((prefix + ind)).startsWith(GanttLanguage.MISSING_RESOURCE));\r\n    } \r\n    tipsText = new String[vTips.size()];\r\n    vTips.toArray(tipsText);\r\n    // tipsText = new String []{\r\n    // lang.getText(\"tips1\"), lang.getText(\"tips2\"), lang.getText(\"tips3\"),\r\n    // lang.getText(\"tips4\"),\r\n    // lang.getText(\"tips5\"), lang.getText(\"tips6\"), lang.getText(\"tips7\"),\r\n    // lang.getText(\"tips8\"),\r\n    // lang.getText(\"tips9\"), lang.getText(\"tips10\"),\r\n    // lang.getText(\"tips11\"),lang.getText(\"tips12\") ,\r\n    // lang.getText(\"tips13\"),lang.getText(\"tips14\"),\r\n    // lang.getText(\"tips15\"), lang.getText(\"tips16\")\r\n    // };\r\n    index = ((int) ((Math.random()) * (tipsText.length)));\r\n    pnPanel0 = new JPanel();\r\n    GridBagLayout gbPanel0 = new GridBagLayout();\r\n    GridBagConstraints gbcPanel0 = new GridBagConstraints();\r\n    pnPanel0.setLayout(gbPanel0);\r\n    // Light image\r\n    lbImg = new JLabel(new ImageIcon(getClass().getResource(\"/icons/info.png\")));\r\n    gbcPanel0.gridx = 0;\r\n    gbcPanel0.gridy = 0;\r\n    gbcPanel0.gridwidth = 1;\r\n    gbcPanel0.gridheight = 18;\r\n    gbcPanel0.fill = GridBagConstraints.VERTICAL;\r\n    gbcPanel0.weightx = 0;\r\n    gbcPanel0.weighty = 1;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    gbPanel0.setConstraints(lbImg, gbcPanel0);\r\n    pnPanel0.add(lbImg);\r\n    // The panel\r\n    taArea0 = new JTextPane();\r\n    taArea0.setPreferredSize(new Dimension(200, 150));\r\n    taArea0.setEditable(false);\r\n    // Set a random text !!\r\n    changeText(tipsText[index]);\r\n    gbcPanel0.gridx = 1;\r\n    gbcPanel0.gridy = 0;\r\n    gbcPanel0.gridwidth = 19;\r\n    gbcPanel0.gridheight = 18;\r\n    gbcPanel0.fill = GridBagConstraints.BOTH;\r\n    gbcPanel0.weightx = 1;\r\n    gbcPanel0.weighty = 1;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    JScrollPane scrollPane = new JScrollPane(taArea0);\r\n    gbPanel0.setConstraints(scrollPane, gbcPanel0);\r\n    pnPanel0.add(scrollPane);\r\n    // Close button,\r\n    btBut0 = new JButton(lang.getText(\"close\"));\r\n    gbcPanel0.gridx = 15;\r\n    gbcPanel0.gridy = 18;\r\n    gbcPanel0.gridwidth = 5;\r\n    gbcPanel0.gridheight = 2;\r\n    gbcPanel0.fill = GridBagConstraints.HORIZONTAL;\r\n    gbcPanel0.weightx = 1;\r\n    gbcPanel0.weighty = 0;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    gbPanel0.setConstraints(btBut0, gbcPanel0);\r\n    pnPanel0.add(btBut0);\r\n    // Next button\r\n    btBut1 = new JButton(lang.getText(\"next\"));\r\n    gbcPanel0.gridx = 10;\r\n    gbcPanel0.gridy = 18;\r\n    gbcPanel0.gridwidth = 5;\r\n    gbcPanel0.gridheight = 2;\r\n    gbcPanel0.fill = GridBagConstraints.HORIZONTAL;\r\n    gbcPanel0.weightx = 1;\r\n    gbcPanel0.weighty = 0;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    gbPanel0.setConstraints(btBut1, gbcPanel0);\r\n    pnPanel0.add(btBut1);\r\n    // Back button\r\n    btBut2 = new JButton(lang.getText(\"back\"));\r\n    gbcPanel0.gridx = 5;\r\n    gbcPanel0.gridy = 18;\r\n    gbcPanel0.gridwidth = 5;\r\n    gbcPanel0.gridheight = 2;\r\n    gbcPanel0.fill = GridBagConstraints.HORIZONTAL;\r\n    gbcPanel0.weightx = 1;\r\n    gbcPanel0.weighty = 0;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    gbPanel0.setConstraints(btBut2, gbcPanel0);\r\n    pnPanel0.add(btBut2);\r\n    // Checkbox for open in the futur on startup ??\r\n    cbBox0 = new JCheckBox(lang.getText(\"showTipsOnStartup\"), tips);\r\n    gbcPanel0.gridx = 0;\r\n    gbcPanel0.gridy = 18;\r\n    gbcPanel0.gridwidth = 5;\r\n    gbcPanel0.gridheight = 1;\r\n    gbcPanel0.fill = GridBagConstraints.HORIZONTAL;\r\n    gbcPanel0.weightx = 1;\r\n    gbcPanel0.weighty = 0;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    gbPanel0.setConstraints(cbBox0, gbcPanel0);\r\n    pnPanel0.add(cbBox0);\r\n    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\r\n    JPanel mainPanel = new JPanel(new FlowLayout());\r\n    mainPanel.add(pnPanel0);\r\n    setContentPane(mainPanel);\r\n    // Listener for close event\r\n    btBut0.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            setVisible(false);\r\n            dispose();\r\n            appli.getOptions().setOpenTips(cbBox0.isSelected());\r\n        }\r\n    });\r\n    btBut1.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            index = ((index) + 1) % (tipsText.length);\r\n            changeText(tipsText[index]);\r\n        }\r\n    });\r\n    btBut2.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            (index)--;\r\n            if ((index) == (-1))\r\n                index = (tipsText.length) - 1;\r\n\r\n            changeText(tipsText[index]);\r\n        }\r\n    });\r\n    this.pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(lang.getComponentOrientation());\r\n}'),(2050,'boolean tips','boolean',0,332,'net.sourceforge.ganttproject.gui.TipsDialog',2826,'net.sourceforge.ganttproject.gui.TipsDialog.-init-(javax.swing.JFrame,boolean)',0,'/**\r\n * Constructor\r\n */\r\npublic TipsDialog(JFrame parent, boolean tips) {\r\n    super(parent, GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"tipsOfTheDay\")), false);\r\n    appli = ((GanttProject) (parent));\r\n    GanttLanguage lang = GanttLanguage.getInstance();\r\n    Vector vTips = new Vector();\r\n    String prefix = \"tips\";\r\n    int ind = 1;\r\n    boolean moreTips = !(lang.getText((prefix + ind)).startsWith(GanttLanguage.MISSING_RESOURCE));\r\n    while (moreTips) {\r\n        vTips.add(lang.getText((prefix + (ind++))));\r\n        moreTips = !(lang.getText((prefix + ind)).startsWith(GanttLanguage.MISSING_RESOURCE));\r\n    } \r\n    tipsText = new String[vTips.size()];\r\n    vTips.toArray(tipsText);\r\n    // tipsText = new String []{\r\n    // lang.getText(\"tips1\"), lang.getText(\"tips2\"), lang.getText(\"tips3\"),\r\n    // lang.getText(\"tips4\"),\r\n    // lang.getText(\"tips5\"), lang.getText(\"tips6\"), lang.getText(\"tips7\"),\r\n    // lang.getText(\"tips8\"),\r\n    // lang.getText(\"tips9\"), lang.getText(\"tips10\"),\r\n    // lang.getText(\"tips11\"),lang.getText(\"tips12\") ,\r\n    // lang.getText(\"tips13\"),lang.getText(\"tips14\"),\r\n    // lang.getText(\"tips15\"), lang.getText(\"tips16\")\r\n    // };\r\n    index = ((int) ((Math.random()) * (tipsText.length)));\r\n    pnPanel0 = new JPanel();\r\n    GridBagLayout gbPanel0 = new GridBagLayout();\r\n    GridBagConstraints gbcPanel0 = new GridBagConstraints();\r\n    pnPanel0.setLayout(gbPanel0);\r\n    // Light image\r\n    lbImg = new JLabel(new ImageIcon(getClass().getResource(\"/icons/info.png\")));\r\n    gbcPanel0.gridx = 0;\r\n    gbcPanel0.gridy = 0;\r\n    gbcPanel0.gridwidth = 1;\r\n    gbcPanel0.gridheight = 18;\r\n    gbcPanel0.fill = GridBagConstraints.VERTICAL;\r\n    gbcPanel0.weightx = 0;\r\n    gbcPanel0.weighty = 1;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    gbPanel0.setConstraints(lbImg, gbcPanel0);\r\n    pnPanel0.add(lbImg);\r\n    // The panel\r\n    taArea0 = new JTextPane();\r\n    taArea0.setPreferredSize(new Dimension(200, 150));\r\n    taArea0.setEditable(false);\r\n    // Set a random text !!\r\n    changeText(tipsText[index]);\r\n    gbcPanel0.gridx = 1;\r\n    gbcPanel0.gridy = 0;\r\n    gbcPanel0.gridwidth = 19;\r\n    gbcPanel0.gridheight = 18;\r\n    gbcPanel0.fill = GridBagConstraints.BOTH;\r\n    gbcPanel0.weightx = 1;\r\n    gbcPanel0.weighty = 1;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    JScrollPane scrollPane = new JScrollPane(taArea0);\r\n    gbPanel0.setConstraints(scrollPane, gbcPanel0);\r\n    pnPanel0.add(scrollPane);\r\n    // Close button,\r\n    btBut0 = new JButton(lang.getText(\"close\"));\r\n    gbcPanel0.gridx = 15;\r\n    gbcPanel0.gridy = 18;\r\n    gbcPanel0.gridwidth = 5;\r\n    gbcPanel0.gridheight = 2;\r\n    gbcPanel0.fill = GridBagConstraints.HORIZONTAL;\r\n    gbcPanel0.weightx = 1;\r\n    gbcPanel0.weighty = 0;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    gbPanel0.setConstraints(btBut0, gbcPanel0);\r\n    pnPanel0.add(btBut0);\r\n    // Next button\r\n    btBut1 = new JButton(lang.getText(\"next\"));\r\n    gbcPanel0.gridx = 10;\r\n    gbcPanel0.gridy = 18;\r\n    gbcPanel0.gridwidth = 5;\r\n    gbcPanel0.gridheight = 2;\r\n    gbcPanel0.fill = GridBagConstraints.HORIZONTAL;\r\n    gbcPanel0.weightx = 1;\r\n    gbcPanel0.weighty = 0;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    gbPanel0.setConstraints(btBut1, gbcPanel0);\r\n    pnPanel0.add(btBut1);\r\n    // Back button\r\n    btBut2 = new JButton(lang.getText(\"back\"));\r\n    gbcPanel0.gridx = 5;\r\n    gbcPanel0.gridy = 18;\r\n    gbcPanel0.gridwidth = 5;\r\n    gbcPanel0.gridheight = 2;\r\n    gbcPanel0.fill = GridBagConstraints.HORIZONTAL;\r\n    gbcPanel0.weightx = 1;\r\n    gbcPanel0.weighty = 0;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    gbPanel0.setConstraints(btBut2, gbcPanel0);\r\n    pnPanel0.add(btBut2);\r\n    // Checkbox for open in the futur on startup ??\r\n    cbBox0 = new JCheckBox(lang.getText(\"showTipsOnStartup\"), tips);\r\n    gbcPanel0.gridx = 0;\r\n    gbcPanel0.gridy = 18;\r\n    gbcPanel0.gridwidth = 5;\r\n    gbcPanel0.gridheight = 1;\r\n    gbcPanel0.fill = GridBagConstraints.HORIZONTAL;\r\n    gbcPanel0.weightx = 1;\r\n    gbcPanel0.weighty = 0;\r\n    gbcPanel0.anchor = GridBagConstraints.NORTH;\r\n    gbPanel0.setConstraints(cbBox0, gbcPanel0);\r\n    pnPanel0.add(cbBox0);\r\n    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\r\n    JPanel mainPanel = new JPanel(new FlowLayout());\r\n    mainPanel.add(pnPanel0);\r\n    setContentPane(mainPanel);\r\n    // Listener for close event\r\n    btBut0.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            setVisible(false);\r\n            dispose();\r\n            appli.getOptions().setOpenTips(cbBox0.isSelected());\r\n        }\r\n    });\r\n    btBut1.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            index = ((index) + 1) % (tipsText.length);\r\n            changeText(tipsText[index]);\r\n        }\r\n    });\r\n    btBut2.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            (index)--;\r\n            if ((index) == (-1))\r\n                index = (tipsText.length) - 1;\r\n\r\n            changeText(tipsText[index]);\r\n        }\r\n    });\r\n    this.pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(lang.getComponentOrientation());\r\n}'),(2051,'String text','java.lang.String',0,332,'net.sourceforge.ganttproject.gui.TipsDialog',2828,'net.sourceforge.ganttproject.gui.TipsDialog.changeText(java.lang.String)',0,'/**\r\n * Change the text on the Editor Pane\r\n */\r\npublic void changeText(String text) {\r\n    Style def = StyleContext.getDefaultStyleContext().getStyle(StyleContext.DEFAULT_STYLE);\r\n    // Default style for text\r\n    Style regular = taArea0.addStyle(\"regular\", def);\r\n    StyleConstants.setFontSize(regular, 14);\r\n    StyleConstants.setFontFamily(def, \"SansSerif\");\r\n    // Bold style for \"Did you know ???\"\r\n    Style s = taArea0.addStyle(\"bold\", regular);\r\n    StyleConstants.setFontSize(s, 18);\r\n    StyleConstants.setItalic(s, true);\r\n    String[] initString = new String[]{ (GanttLanguage.getInstance().getText(\"didYouKnow\")) + \"\n\n\"// bold\r\n    , // \"Did\r\n    // you\r\n    // know??\"\r\n    text// regular \"the tips text\"\r\n     };\r\n    String[] initStyles = new String[]{ \"bold\", \"regular\" };\r\n    Document doc = new DefaultStyledDocument();\r\n    taArea0.cut();\r\n    // Insert text on the panel\r\n    try {\r\n        for (int i = 0; i < (initString.length); i++) {\r\n            doc.insertString(doc.getLength(), initString[i], taArea0.getStyle(initStyles[i]));\r\n        }\r\n        taArea0.setDocument(doc);\r\n    } catch (BadLocationException ble) {\r\n        System.err.println(\"Couldnt insert initial text.\");\r\n    }\r\n}'),(2052,'Font menuFont','java.awt.Font',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2829,'net.sourceforge.ganttproject.gui.UIConfiguration.-init-(java.awt.Font,java.awt.Font,java.awt.Color,boolean)',0,'public UIConfiguration(Font menuFont, Font chartMainFont, Color taskColor, boolean isRedlineOn) {\r\n    myMenuFont = (menuFont == null) ? Fonts.DEFAULT_MENU_FONT : menuFont;\r\n    myChartMainFont = (chartMainFont == null) ? Fonts.DEFAULT_CHART_FONT : chartMainFont;\r\n    this.isRedlineOn = isRedlineOn;\r\n    setTaskColor(taskColor);\r\n    myResColor = new Color(140, 182, 206);\r\n    myResOverColor = new Color(229, 50, 50);\r\n    myResUnderColor = new Color(50, 229, 50);\r\n    myEarlierPreviousTaskColor = new Color(50, 229, 50);\r\n    myLaterPreviousTaskColor = new Color(229, 50, 50);\r\n    myPreviousTaskColor = Color.LIGHT_GRAY;\r\n    myWeekEndColor = Color.GRAY;\r\n    myDayOffColor = new Color(0.9F, 1.0F, 0.17F);\r\n    myWeekendAlphaRenderingOption = new UIConfiguration.AlphaRenderingOption(this);\r\n}'),(2053,'Font chartMainFont','java.awt.Font',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2829,'net.sourceforge.ganttproject.gui.UIConfiguration.-init-(java.awt.Font,java.awt.Font,java.awt.Color,boolean)',0,'public UIConfiguration(Font menuFont, Font chartMainFont, Color taskColor, boolean isRedlineOn) {\r\n    myMenuFont = (menuFont == null) ? Fonts.DEFAULT_MENU_FONT : menuFont;\r\n    myChartMainFont = (chartMainFont == null) ? Fonts.DEFAULT_CHART_FONT : chartMainFont;\r\n    this.isRedlineOn = isRedlineOn;\r\n    setTaskColor(taskColor);\r\n    myResColor = new Color(140, 182, 206);\r\n    myResOverColor = new Color(229, 50, 50);\r\n    myResUnderColor = new Color(50, 229, 50);\r\n    myEarlierPreviousTaskColor = new Color(50, 229, 50);\r\n    myLaterPreviousTaskColor = new Color(229, 50, 50);\r\n    myPreviousTaskColor = Color.LIGHT_GRAY;\r\n    myWeekEndColor = Color.GRAY;\r\n    myDayOffColor = new Color(0.9F, 1.0F, 0.17F);\r\n    myWeekendAlphaRenderingOption = new UIConfiguration.AlphaRenderingOption(this);\r\n}'),(2054,'Color taskColor','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2829,'net.sourceforge.ganttproject.gui.UIConfiguration.-init-(java.awt.Font,java.awt.Font,java.awt.Color,boolean)',0,'public UIConfiguration(Font menuFont, Font chartMainFont, Color taskColor, boolean isRedlineOn) {\r\n    myMenuFont = (menuFont == null) ? Fonts.DEFAULT_MENU_FONT : menuFont;\r\n    myChartMainFont = (chartMainFont == null) ? Fonts.DEFAULT_CHART_FONT : chartMainFont;\r\n    this.isRedlineOn = isRedlineOn;\r\n    setTaskColor(taskColor);\r\n    myResColor = new Color(140, 182, 206);\r\n    myResOverColor = new Color(229, 50, 50);\r\n    myResUnderColor = new Color(50, 229, 50);\r\n    myEarlierPreviousTaskColor = new Color(50, 229, 50);\r\n    myLaterPreviousTaskColor = new Color(229, 50, 50);\r\n    myPreviousTaskColor = Color.LIGHT_GRAY;\r\n    myWeekEndColor = Color.GRAY;\r\n    myDayOffColor = new Color(0.9F, 1.0F, 0.17F);\r\n    myWeekendAlphaRenderingOption = new UIConfiguration.AlphaRenderingOption(this);\r\n}'),(2055,'boolean isRedlineOn','boolean',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2829,'net.sourceforge.ganttproject.gui.UIConfiguration.-init-(java.awt.Font,java.awt.Font,java.awt.Color,boolean)',0,'public UIConfiguration(Font menuFont, Font chartMainFont, Color taskColor, boolean isRedlineOn) {\r\n    myMenuFont = (menuFont == null) ? Fonts.DEFAULT_MENU_FONT : menuFont;\r\n    myChartMainFont = (chartMainFont == null) ? Fonts.DEFAULT_CHART_FONT : chartMainFont;\r\n    this.isRedlineOn = isRedlineOn;\r\n    setTaskColor(taskColor);\r\n    myResColor = new Color(140, 182, 206);\r\n    myResOverColor = new Color(229, 50, 50);\r\n    myResUnderColor = new Color(50, 229, 50);\r\n    myEarlierPreviousTaskColor = new Color(50, 229, 50);\r\n    myLaterPreviousTaskColor = new Color(229, 50, 50);\r\n    myPreviousTaskColor = Color.LIGHT_GRAY;\r\n    myWeekEndColor = Color.GRAY;\r\n    myDayOffColor = new Color(0.9F, 1.0F, 0.17F);\r\n    myWeekendAlphaRenderingOption = new UIConfiguration.AlphaRenderingOption(this);\r\n}'),(2056,'UIConfiguration config','net.sourceforge.ganttproject.gui.UIConfiguration',335,333,'net.sourceforge.ganttproject.gui.UIConfiguration$AlphaRenderingOption',2860,'net.sourceforge.ganttproject.gui.UIConfiguration$AlphaRenderingOption.-init-(net.sourceforge.ganttproject.gui.UIConfiguration)',0,'AlphaRenderingOption(UIConfiguration config) {\r\n    super(\"chart.weekend_alpha_rendering\", UIConfiguration.AlphaRenderingOption.VALUES);\r\n    // for (int i=0; i<VALUES.length; i++) {\r\n    // if (FLOATS[i]==config.getWeekendAlphaValue()) {\r\n    // myIndex = i;\r\n    // break;\r\n    // }\r\n    // }\r\n}'),(2057,'Color myTaskColor','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2858,'net.sourceforge.ganttproject.gui.UIConfiguration.setTaskColor(java.awt.Color)',0,'public void setTaskColor(Color myTaskColor) {\r\n    this.myTaskColor = myTaskColor;\r\n}'),(2058,'Color color','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2853,'net.sourceforge.ganttproject.gui.UIConfiguration.setProjectLevelTaskColor(java.awt.Color)',0,'public void setProjectLevelTaskColor(Color color) {\r\n    myProjectLevelTaskColor = color;\r\n}'),(2059,'Color myResColor','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2855,'net.sourceforge.ganttproject.gui.UIConfiguration.setResourceColor(java.awt.Color)',0,'public void setResourceColor(Color myResColor) {\r\n    this.myResColor = myResColor;\r\n}'),(2060,'Color myResOverColor','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2856,'net.sourceforge.ganttproject.gui.UIConfiguration.setResourceOverloadColor(java.awt.Color)',0,'public void setResourceOverloadColor(Color myResOverColor) {\r\n    this.myResOverColor = myResOverColor;\r\n}'),(2061,'Color myResUnderColor','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2857,'net.sourceforge.ganttproject.gui.UIConfiguration.setResourceUnderloadColor(java.awt.Color)',0,'public void setResourceUnderloadColor(Color myResUnderColor) {\r\n    this.myResUnderColor = myResUnderColor;\r\n}'),(2062,'Color earlierTaskColor','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2850,'net.sourceforge.ganttproject.gui.UIConfiguration.setEarlierPreviousTaskColor(java.awt.Color)',0,'public void setEarlierPreviousTaskColor(Color earlierTaskColor) {\r\n    this.myEarlierPreviousTaskColor = earlierTaskColor;\r\n}'),(2063,'Color laterTaskColor','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2851,'net.sourceforge.ganttproject.gui.UIConfiguration.setLaterPreviousTaskColor(java.awt.Color)',0,'public void setLaterPreviousTaskColor(Color laterTaskColor) {\r\n    this.myLaterPreviousTaskColor = laterTaskColor;\r\n}'),(2064,'Color previousTaskColor','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2852,'net.sourceforge.ganttproject.gui.UIConfiguration.setPreviousTaskColor(java.awt.Color)',0,'public void setPreviousTaskColor(Color previousTaskColor) {\r\n    this.myPreviousTaskColor = previousTaskColor;\r\n}'),(2065,'Color myWeekEndColor','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2859,'net.sourceforge.ganttproject.gui.UIConfiguration.setWeekEndColor(java.awt.Color)',0,'public void setWeekEndColor(Color myWeekEndColor) {\r\n    this.myWeekEndColor = myWeekEndColor;\r\n}'),(2066,'Color dayOffColor','java.awt.Color',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2849,'net.sourceforge.ganttproject.gui.UIConfiguration.setDayOffColor(java.awt.Color)',0,'public void setDayOffColor(Color dayOffColor) {\r\n    this.myDayOffColor = dayOffColor;\r\n}'),(2067,'boolean redlineOn','boolean',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2854,'net.sourceforge.ganttproject.gui.UIConfiguration.setRedlineOn(boolean)',0,'public void setRedlineOn(boolean redlineOn) {\r\n    isRedlineOn = redlineOn;\r\n}'),(2068,'boolean isOn','boolean',0,335,'net.sourceforge.ganttproject.gui.UIConfiguration',2848,'net.sourceforge.ganttproject.gui.UIConfiguration.setCriticalPathOn(boolean)',0,'public void setCriticalPathOn(boolean isOn) {\r\n    this.isCriticalPathOn = isOn;\r\n}'),(2069,'String legacyValue','java.lang.String',0,334,'net.sourceforge.ganttproject.gui.UIConfiguration$RedlineOption',2867,'net.sourceforge.ganttproject.gui.UIConfiguration$RedlineOption.loadValue(java.lang.String)',0,'public void loadValue(String legacyValue) {\r\n    lock();\r\n    loadPersistentValue(legacyValue);\r\n    commit();\r\n}'),(2070,'String message','java.lang.String',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2889,'net.sourceforge.ganttproject.gui.UIFacade.showConfirmationDialog(java.lang.String,java.lang.String)',0,'UIFacade.Choice showConfirmationDialog(String message, String title);'),(2071,'String title','java.lang.String',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2889,'net.sourceforge.ganttproject.gui.UIFacade.showConfirmationDialog(java.lang.String,java.lang.String)',0,'UIFacade.Choice showConfirmationDialog(String message, String title);'),(2072,'Component invoker','java.awt.Component',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2894,'net.sourceforge.ganttproject.gui.UIFacade.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'void showPopupMenu(Component invoker, Action[] actions, int x, int y);'),(2073,'Action[] actions','javax.swing.Action[]',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2894,'net.sourceforge.ganttproject.gui.UIFacade.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'void showPopupMenu(Component invoker, Action[] actions, int x, int y);'),(2074,'int x','int',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2894,'net.sourceforge.ganttproject.gui.UIFacade.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'void showPopupMenu(Component invoker, Action[] actions, int x, int y);'),(2075,'int y','int',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2894,'net.sourceforge.ganttproject.gui.UIFacade.showPopupMenu(java.awt.Component,javax.swing.Action[],int,int)',0,'void showPopupMenu(Component invoker, Action[] actions, int x, int y);'),(2076,'Component content','java.awt.Component',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2890,'net.sourceforge.ganttproject.gui.UIFacade.showDialog(java.awt.Component,javax.swing.Action[])',0,'void showDialog(Component content, Action[] buttonActions);'),(2077,'Action[] buttonActions','javax.swing.Action[]',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2890,'net.sourceforge.ganttproject.gui.UIFacade.showDialog(java.awt.Component,javax.swing.Action[])',0,'void showDialog(Component content, Action[] buttonActions);'),(2078,'Component content','java.awt.Component',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2891,'net.sourceforge.ganttproject.gui.UIFacade.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'void showDialog(Component content, Action[] buttonActions, String title);'),(2079,'Action[] buttonActions','javax.swing.Action[]',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2891,'net.sourceforge.ganttproject.gui.UIFacade.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'void showDialog(Component content, Action[] buttonActions, String title);'),(2080,'String title','java.lang.String',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2891,'net.sourceforge.ganttproject.gui.UIFacade.showDialog(java.awt.Component,javax.swing.Action[],java.lang.String)',0,'void showDialog(Component content, Action[] buttonActions, String title);'),(2081,'String text','java.lang.String',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2886,'net.sourceforge.ganttproject.gui.UIFacade.setStatusText(java.lang.String)',0,'void setStatusText(String text);'),(2082,'String errorMessage','java.lang.String',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2892,'net.sourceforge.ganttproject.gui.UIFacade.showErrorDialog(java.lang.String)',0,'void showErrorDialog(String errorMessage);'),(2083,'Throwable e','java.lang.Throwable',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2893,'net.sourceforge.ganttproject.gui.UIFacade.showErrorDialog(java.lang.Throwable)',0,'void showErrorDialog(Throwable e);'),(2084,'Throwable e','java.lang.Throwable',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2882,'net.sourceforge.ganttproject.gui.UIFacade.logErrorMessage(java.lang.Throwable)',0,'void logErrorMessage(Throwable e);'),(2085,'int viewIndex','int',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2887,'net.sourceforge.ganttproject.gui.UIFacade.setViewIndex(int)',0,'void setViewIndex(int viewIndex);'),(2086,'int location','int',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2884,'net.sourceforge.ganttproject.gui.UIFacade.setGanttDividerLocation(int)',0,'void setGanttDividerLocation(int location);'),(2087,'int location','int',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2885,'net.sourceforge.ganttproject.gui.UIFacade.setResourceDividerLocation(int)',0,'void setResourceDividerLocation(int location);'),(2088,'String title','java.lang.String',0,337,'net.sourceforge.ganttproject.gui.UIFacade',2888,'net.sourceforge.ganttproject.gui.UIFacade.setWorkbenchTitle(java.lang.String)',0,'void setWorkbenchTitle(String title);'),(2089,'JComponent root','javax.swing.JComponent',0,338,'net.sourceforge.ganttproject.gui.UIUtil',2897,'net.sourceforge.ganttproject.gui.UIUtil.setEnabledTree(javax.swing.JComponent,boolean)',0,'public static void setEnabledTree(JComponent root, boolean isEnabled) {\r\n    root.setEnabled(isEnabled);\r\n    Component[] components = root.getComponents();\r\n    for (int i = 0; i < (components.length); i++) {\r\n        if ((components[i]) instanceof JComponent) {\r\n            UIUtil.setEnabledTree(((JComponent) (components[i])), isEnabled);\r\n        }\r\n    }\r\n}'),(2090,'boolean isEnabled','boolean',0,338,'net.sourceforge.ganttproject.gui.UIUtil',2897,'net.sourceforge.ganttproject.gui.UIUtil.setEnabledTree(javax.swing.JComponent,boolean)',0,'public static void setEnabledTree(JComponent root, boolean isEnabled) {\r\n    root.setEnabled(isEnabled);\r\n    Component[] components = root.getComponents();\r\n    for (int i = 0; i < (components.length); i++) {\r\n        if ((components[i]) instanceof JComponent) {\r\n            UIUtil.setEnabledTree(((JComponent) (components[i])), isEnabled);\r\n        }\r\n    }\r\n}'),(2091,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,341,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel',2898,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic AboutAuthorPanel(GanttProject parent) {\r\n    super(GanttLanguage.getInstance().getText(\"authors\"), GanttLanguage.getInstance().getText(\"settingsAuthors\"), parent);\r\n    JTable jTableAuthors = new JTable();\r\n    AboutAuthorPanel.AuthorsFieldTableModel modelauthors = new AboutAuthorPanel.AuthorsFieldTableModel();\r\n    jTableAuthors.setModel(modelauthors);\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"THOMAS Alexandre\", \"alexthomas@ganttproject.org\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"BARASHEV Dmitry\", \"dbarashev@ganttproject.org\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"AZURE Joe\", \"jazure@fishalaska.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"BARANNE Benoit\", \"bbaranne@users.sourceforge.net\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"BOHN Nicolas\", \"nicolasbohn@users.sourceforge.net\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"LIBS Jean-Marc\", \"jyhem@users.sourceforge.net\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"\", \"\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"BARMEIER Matthias\", \"matthias.barmeier@sourcepark.de\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"MURAS Joanna\", \"zabucha@users.sourceforge.net\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"LU Cui\", \"cuix1@yahoo.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"SCHULZ Maik\", \"post@maikschulz.de\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"HAEUSLER Michael\", \"michael@akatose.de\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"ANDRESEN Roger\", \"Roger@Andresen.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"\", \"\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"LIPINSKI Pawel\", \"pawel.lipinski@javart.com.pl\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"AUDRU C�dric\", \"cedricaudru@yahoo.fr\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"A S Hodel\", \"hodelas@ieee.org\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"BALAZS Major\", \"BMajor@Graphisoft.hu\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"BARZILAI Igor\", \"igor.barzilai@free.fr\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"BREZINA Marek\", \"marek.brezina@seznam.cz\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"BROKER Rick\", \"rick_broker@yahoo.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"CASTILHO Danilo\", \"dncastilho@yahoo.com.br\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"CHRISTENSEN Carsten\", \"coc-kultur@aalborg.dk\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"CROUNSE Brian\", \"brian@crounse.name\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"FERRAZ Nelson\", \"nferraz@phperl.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"GLOEGL Michael\", \"gloegl@fmi.uni-passau.de\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"GIANTSIDIS Nikos\", \"nickgiant@yahoo.com\"));// greek translation\r\n\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"HERRMANN G.\", \"herr@nike.eonet.ne.jp\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"HURSEY John\", \"joshh@cs.earlham.edu\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"ILES Jon\", \"jon.iles@tapsterrock.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"Jiwon Kim\", \"yesdi@users.sourceforge.net\"));// Korean language\r\n\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"KARLGREN Jussi\", \"jussi@sics.se\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"KITSIK Ahti\", \"ahti.kitsik@gmail.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"LIN Kirin\", \"kirinlin@users.sourceforge.net\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"LKENFACK Etienne\", \"etiennelk@hotmail.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"MADSEN Jan\", \"JM-kultur@aalborg.dk\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"MARCH Stephen\", \"steve@enerds.ca\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"MIYATA Yasuhiro\", \"yasuhiro.miyata@ulsystems.co.jp\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"NATHANAEL Uwe\", \"Uwe.Nathanael@t-online.de\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"OGNESS John\", \"john@ogness.net\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"PAOLETTI Tomaso\", \"tom@ipaoletti.net\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"PLUSCHKE Andreas\", \"homepage.plueschke@gmx.de\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"RACINOWSKI Przemyslaw\", \"p.racinowski@wp.pl\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"REY Juan\", \"juanrey@inicia.es\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"SAHIN Cengiz\", \"cengiz@sahinc.de\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"SENIGAGLIESI Paolo\", \"senigagliesi_inf@hotmail.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"SHABTAI Yoav\", \"yoavs@pmp-medical.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"STAVRIDES Paul\", \"pstav@adelie.net\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"VAN DER WIEL Andre\", \"a.vd.wiel@chello.nl\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"VOCI Elio\", \"elio.voci@gawab.com\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"ZAVOLZHSKY Alexandr\", \"zavolzhsky@mail.ru\"));\r\n    modelauthors.addField(new AboutAuthorPanel.AuthorsInfo(\"Zheko Zhekov\", \"zhekov@electrostart.com\"));// bulgarian language\r\n\r\n    JPanel authorsPanel = new JPanel(new BorderLayout());\r\n    authorsPanel.add(new JScrollPane(jTableAuthors), BorderLayout.CENTER);\r\n    authorsPanel.setPreferredSize(new Dimension(400, 350));\r\n    vb.add(authorsPanel);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2092,'String name','java.lang.String',0,340,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo',2911,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo.-init-(java.lang.String,java.lang.String)',0,'public AuthorsInfo(String name, String mail) {\r\n    this.name = name;\r\n    this.mail = mail;\r\n}'),(2093,'String mail','java.lang.String',0,340,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo',2911,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo.-init-(java.lang.String,java.lang.String)',0,'public AuthorsInfo(String name, String mail) {\r\n    this.name = name;\r\n    this.mail = mail;\r\n}'),(2094,'boolean askForApply','boolean',0,341,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel',2901,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel.applyChanges(boolean)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.gui.options.GeneralOptionPanel#applyChanges(boolean)\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    return false;\r\n}'),(2095,'AboutAuthorPanel.AuthorsInfo w','net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo',340,339,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel',2904,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel.addField(net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo)',0,'public void addField(AboutAuthorPanel.AuthorsInfo w) {\r\n    data.addElement(w);\r\n    fireTableRowsInserted(((data.size()) - 1), ((data.size()) - 1));\r\n}'),(2096,'int col','int',0,339,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel',2907,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel.getColumnName(int)',0,'public String getColumnName(int col) {\r\n    return columnNames[col];\r\n}'),(2097,'int c','int',0,339,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel',2905,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel.getColumnClass(int)',0,'public Class getColumnClass(int c) {\r\n    return columnClasses[c];\r\n}'),(2098,'int row','int',0,339,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel',2909,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel.getValueAt(int,int)',0,'public Object getValueAt(int row, int col) {\r\n    AboutAuthorPanel.AuthorsInfo info = ((AboutAuthorPanel.AuthorsInfo) (data.elementAt(row)));\r\n    if (col == 0)\r\n        return info.getName();\r\n    else\r\n        if (col == 1)\r\n            return info.getMail();\r\n        else\r\n            return null;\r\n\r\n\r\n}'),(2099,'int col','int',0,339,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel',2909,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel.getValueAt(int,int)',0,'public Object getValueAt(int row, int col) {\r\n    AboutAuthorPanel.AuthorsInfo info = ((AboutAuthorPanel.AuthorsInfo) (data.elementAt(row)));\r\n    if (col == 0)\r\n        return info.getName();\r\n    else\r\n        if (col == 1)\r\n            return info.getMail();\r\n        else\r\n            return null;\r\n\r\n\r\n}'),(2100,'int row','int',0,339,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel',2910,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    return col == 1;\r\n}'),(2101,'int col','int',0,339,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel',2910,'net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    return col == 1;\r\n}'),(2102,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,342,'net.sourceforge.ganttproject.gui.about.AboutDialog',2914,'net.sourceforge.ganttproject.gui.about.AboutDialog.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic AboutDialog(GanttProject parent) {\r\n    super(parent, ((GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"about\"))) + \" - Ganttproject\"), true, new AboutPanel(parent));\r\n    // hide the cancel button\r\n    cancelButton.hide();\r\n}'),(2103,'TreeSelectionEvent e','javax.swing.event.TreeSelectionEvent',0,342,'net.sourceforge.ganttproject.gui.about.AboutDialog',2916,'net.sourceforge.ganttproject.gui.about.AboutDialog.valueChanged(javax.swing.event.TreeSelectionEvent)',0,'/**\r\n * Callback for the tree selection event.\r\n */\r\npublic void valueChanged(TreeSelectionEvent e) {\r\n    DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (e.getPath().getLastPathComponent()));\r\n    String sNode = ((String) (node.getUserObject()));\r\n    // - ask the settingPanel if parameters are changed\r\n    // boolean bHasChange = settingPanel.applyChanges(true); //no change to\r\n    // do on this panel\r\n    // - remove the settingPanel\r\n    mainPanel2.remove(0);\r\n    // - Create the new panel\r\n    if (sNode.equals(GanttProject.correctLabel(language.getText(\"about\"))))\r\n        settingPanel = new AboutPanel(appli);\r\n    else\r\n        if (sNode.equals(language.getText(\"authors\")))\r\n            settingPanel = new AboutAuthorPanel(appli);\r\n        else\r\n            if (sNode.equals(language.getText(\"jinfos\")))\r\n                settingPanel = new AboutJavaInfosPanel(appli);\r\n            else\r\n                if (sNode.equals(language.getText(\"license\")))\r\n                    settingPanel = new AboutLicensePanel(appli);\r\n                else\r\n                    if (sNode.equals(language.getText(\"library\")))\r\n                        settingPanel = new AboutLibraryPanel(appli);\r\n\r\n\r\n\r\n\r\n\r\n    Box vb = Box.createVerticalBox();\r\n    vb.add(new TopPanel((\"  \" + (settingPanel.getTitle())), settingPanel.getComment()));\r\n    vb.add(settingPanel);\r\n    settingPanel.initialize();\r\n    // - add the settingPanel into the main Panel\r\n    mainPanel2.add(vb, 0);\r\n    mainPanel2.repaint();\r\n    mainPanel2.validate();// valide the changes\r\n\r\n}'),(2104,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,345,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel',2917,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic AboutJavaInfosPanel(GanttProject parent) {\r\n    super(GanttLanguage.getInstance().getText(\"jinfos\"), GanttLanguage.getInstance().getText(\"settingsJavaInfos\"), parent);\r\n    JTable jTableProperties = new JTable();\r\n    AboutJavaInfosPanel.AboutFieldTableModel modelproperties = new AboutJavaInfosPanel.AboutFieldTableModel();\r\n    jTableProperties.setModel(modelproperties);\r\n    try {\r\n        Enumeration props = System.getProperties().propertyNames();\r\n        SortedSet s = new TreeSet();\r\n        while (props.hasMoreElements()) {\r\n            s.add(((String) (props.nextElement())));\r\n        } \r\n        Iterator i = s.iterator();\r\n        while (i.hasNext()) {\r\n            String prop = ((String) (i.next()));\r\n            modelproperties.addField(new AboutJavaInfosPanel.SystemInfo(prop, System.getProperty(prop)));\r\n        } \r\n    } catch (AccessControlException e) {\r\n        // This can happen when running in a sandbox (Java WebStart)\r\n        System.err.println(((e + \": \") + (e.getMessage())));\r\n    }\r\n    JPanel infosPanel = new JPanel(new BorderLayout());\r\n    infosPanel.add(new JScrollPane(jTableProperties), BorderLayout.CENTER);\r\n    infosPanel.setPreferredSize(new Dimension(400, 350));\r\n    vb.add(infosPanel);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2105,'String name','java.lang.String',0,344,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo',2930,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo.-init-(java.lang.String,java.lang.String)',0,'public SystemInfo(String name, String value) {\r\n    this.name = name;\r\n    this.value = value;\r\n}'),(2106,'String value','java.lang.String',0,344,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo',2930,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo.-init-(java.lang.String,java.lang.String)',0,'public SystemInfo(String name, String value) {\r\n    this.name = name;\r\n    this.value = value;\r\n}'),(2107,'boolean askForApply','boolean',0,345,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel',2920,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel.applyChanges(boolean)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.gui.options.GeneralOptionPanel#applyChanges(boolean)\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    return false;\r\n}'),(2108,'AboutJavaInfosPanel.SystemInfo w','net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo',344,343,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel',2923,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel.addField(net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo)',0,'public void addField(AboutJavaInfosPanel.SystemInfo w) {\r\n    data.addElement(w);\r\n    fireTableRowsInserted(((data.size()) - 1), ((data.size()) - 1));\r\n}'),(2109,'int col','int',0,343,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel',2926,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel.getColumnName(int)',0,'public String getColumnName(int col) {\r\n    return columnNames[col];\r\n}'),(2110,'int c','int',0,343,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel',2924,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel.getColumnClass(int)',0,'public Class getColumnClass(int c) {\r\n    return columnClasses[c];\r\n}'),(2111,'int row','int',0,343,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel',2928,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel.getValueAt(int,int)',0,'public Object getValueAt(int row, int col) {\r\n    AboutJavaInfosPanel.SystemInfo info = ((AboutJavaInfosPanel.SystemInfo) (data.elementAt(row)));\r\n    if (col == 0)\r\n        return info.getName();\r\n    else\r\n        if (col == 1)\r\n            return info.getValue();\r\n        else\r\n            return null;\r\n\r\n\r\n}'),(2112,'int col','int',0,343,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel',2928,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel.getValueAt(int,int)',0,'public Object getValueAt(int row, int col) {\r\n    AboutJavaInfosPanel.SystemInfo info = ((AboutJavaInfosPanel.SystemInfo) (data.elementAt(row)));\r\n    if (col == 0)\r\n        return info.getName();\r\n    else\r\n        if (col == 1)\r\n            return info.getValue();\r\n        else\r\n            return null;\r\n\r\n\r\n}'),(2113,'int row','int',0,343,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel',2929,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    return false;\r\n}'),(2114,'int col','int',0,343,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel',2929,'net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    return false;\r\n}'),(2115,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,348,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel',2933,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic AboutLibraryPanel(GanttProject parent) {\r\n    super(GanttLanguage.getInstance().getText(\"library\"), GanttLanguage.getInstance().getText(\"settingsLibrary\"), parent);\r\n    JTable jTableLib = new JTable();\r\n    AboutLibraryPanel.LibraryFieldTableModel modellib = new AboutLibraryPanel.LibraryFieldTableModel();\r\n    jTableLib.setModel(modellib);\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(((\"ganttproject-\" + (GanttProject.version)) + \".jar\"), \"ganttproject.biz\", \"Project Manager.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"commons-httpclient.jar\", \"jakarta.apache.org\", \"WebDAV support.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"commons-logging.jar\", \"jakarta.apache.org\", \"WebDAV support.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"jdom-20040226-.jar\", \"jdom.org\", \"WebDAV support.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"webdavlib.jar\", \"jakarta.apache.org\", \"WebDAV support.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"jakarta-slide-webdavlib-2.1b1.jar\", \"webdav.apache.org\", \"WebDAV support.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"helpgui-1.1.jar\", \"helpgui.sf.net\", \"Help viewer in html.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"jgoodies-looks-1.2.2.jar\", \"www.jgoodies.com\", \"Nice LooknFeel.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"avalon.jar\", \"avalon.apache.org\", \"Graphic Export (used for pdf)\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"batik.jar\", \"xml.apache.org\", \"Graphic Export (used for pdf)\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"fop.jar\", \"xml.apache.org\", \"Pdf export library.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"fop-font-metrics.jar\", \"xml.apache.org\", \"Special font use.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"junit-3.8.1.jar\", \"junit.org\", \"Unit tests.\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"jdnc-modifBen.jar\", \"https://jdnc.dev.java.net/\", \"Swing components\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"mpxj_0.0.25_CVS.jar\", \"http://mpxj.sourceforge.net/\", \"Microsoft Project compatibility\"));\r\n    modellib.addField(new AboutLibraryPanel.LibraryInfo(\"icons\", \"eclipse.org\", \"Icons from the Eclipse project (IBM).\"));\r\n    JPanel libraryPanel = new JPanel(new BorderLayout());\r\n    libraryPanel.add(new JScrollPane(jTableLib), BorderLayout.CENTER);\r\n    libraryPanel.setPreferredSize(new Dimension(400, 350));\r\n    vb.add(libraryPanel);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2116,'String libName','java.lang.String',0,347,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo',2946,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'public LibraryInfo(String libName, String libCompany, String libComment) {\r\n    this.libName = libName;\r\n    this.libWeb = libCompany;\r\n    this.libComment = libComment;\r\n}'),(2117,'String libCompany','java.lang.String',0,347,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo',2946,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'public LibraryInfo(String libName, String libCompany, String libComment) {\r\n    this.libName = libName;\r\n    this.libWeb = libCompany;\r\n    this.libComment = libComment;\r\n}'),(2118,'String libComment','java.lang.String',0,347,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo',2946,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'public LibraryInfo(String libName, String libCompany, String libComment) {\r\n    this.libName = libName;\r\n    this.libWeb = libCompany;\r\n    this.libComment = libComment;\r\n}'),(2119,'boolean askForApply','boolean',0,348,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel',2936,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel.applyChanges(boolean)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.gui.options.GeneralOptionPanel#applyChanges(boolean)\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    return false;\r\n}'),(2120,'AboutLibraryPanel.LibraryInfo w','net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo',347,346,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel',2939,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel.addField(net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo)',0,'public void addField(AboutLibraryPanel.LibraryInfo w) {\r\n    data.addElement(w);\r\n    fireTableRowsInserted(((data.size()) - 1), ((data.size()) - 1));\r\n}'),(2121,'int col','int',0,346,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel',2942,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel.getColumnName(int)',0,'public String getColumnName(int col) {\r\n    return columnNames[col];\r\n}'),(2122,'int c','int',0,346,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel',2940,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel.getColumnClass(int)',0,'public Class getColumnClass(int c) {\r\n    return columnClasses[c];\r\n}'),(2123,'int row','int',0,346,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel',2944,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel.getValueAt(int,int)',0,'public Object getValueAt(int row, int col) {\r\n    AboutLibraryPanel.LibraryInfo info = ((AboutLibraryPanel.LibraryInfo) (data.elementAt(row)));\r\n    if (col == 0)\r\n        return info.getName();\r\n    else\r\n        if (col == 1)\r\n            return info.getWeb();\r\n        else\r\n            if (col == 2)\r\n                return info.getComment();\r\n            else\r\n                return null;\r\n\r\n\r\n\r\n}'),(2124,'int col','int',0,346,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel',2944,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel.getValueAt(int,int)',0,'public Object getValueAt(int row, int col) {\r\n    AboutLibraryPanel.LibraryInfo info = ((AboutLibraryPanel.LibraryInfo) (data.elementAt(row)));\r\n    if (col == 0)\r\n        return info.getName();\r\n    else\r\n        if (col == 1)\r\n            return info.getWeb();\r\n        else\r\n            if (col == 2)\r\n                return info.getComment();\r\n            else\r\n                return null;\r\n\r\n\r\n\r\n}'),(2125,'int row','int',0,346,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel',2945,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    return col == 1;\r\n}'),(2126,'int col','int',0,346,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel',2945,'net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    return col == 1;\r\n}'),(2127,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,349,'net.sourceforge.ganttproject.gui.about.AboutLicensePanel',2950,'net.sourceforge.ganttproject.gui.about.AboutLicensePanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic AboutLicensePanel(GanttProject parent) {\r\n    super(GanttLanguage.getInstance().getText(\"license\"), GanttLanguage.getInstance().getText(\"settingsLicense\"), parent);\r\n    JTextArea taLicense = new JTextArea();\r\n    StringBuffer text = new StringBuffer();\r\n    text.append(\"This program is free software; you can redistribute it and/or modify it under the terms of the GNU General \");\r\n    text.append(\"Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\n\n\");\r\n    text.append(\"This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied \");\r\n    text.append(\"warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\n\");\r\n    text.append(\"You should have received a copy of the GNU General Public License along with this program; if not, write to the Free \");\r\n    text.append(\"Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n\n\");\r\n    text.append(\"Browse the entire GPL license at http://www.gnu.org/copyleft/gpl.html\n\");\r\n    taLicense.setText(text.toString());\r\n    taLicense.setEditable(false);\r\n    taLicense.setLineWrap(true);\r\n    taLicense.setWrapStyleWord(true);\r\n    JPanel licensePanel = new JPanel(new BorderLayout());\r\n    licensePanel.add(new JScrollPane(taLicense), BorderLayout.CENTER);\r\n    licensePanel.setPreferredSize(new Dimension(400, 350));\r\n    vb.add(licensePanel);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2128,'boolean askForApply','boolean',0,349,'net.sourceforge.ganttproject.gui.about.AboutLicensePanel',2951,'net.sourceforge.ganttproject.gui.about.AboutLicensePanel.applyChanges(boolean)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.gui.options.GeneralOptionPanel#applyChanges(boolean)\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    return false;\r\n}'),(2129,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,350,'net.sourceforge.ganttproject.gui.about.AboutPanel',2953,'net.sourceforge.ganttproject.gui.about.AboutPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic AboutPanel(GanttProject parent) {\r\n    super(GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"about\")), (((GanttLanguage.getInstance().getText(\"settingsAbout\")) + \" \") + (GanttProject.version)), parent);\r\n    GanttSplash splash = new GanttSplash();\r\n    JLabel jLabelImage = splash.getSplashComponent();\r\n    // JPanel imagePanel = new JPanel(new BorderLayout());\r\n    // imagePanel.add(jLabelImage, BorderLayout.CENTER);\r\n    vb.add(new JPanel());\r\n    vb.add(jLabelImage);\r\n    vb.add(new JPanel());\r\n    JButton bHomePage = new JButton(GanttProject.correctLabel(language.getText(\"webPage\")), new ImageIcon(getClass().getResource(\"/icons/home_16.gif\")));\r\n    bHomePage.setToolTipText(GanttProject.getToolTip((((language.getText(\"goTo\")) + \" \") + \"http://ganttproject.biz\")));// add a simple tool tip\r\n\r\n    // text :)\r\n    bHomePage.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            BrowserControl.displayURL(\"http://ganttproject.biz/\");\r\n        }\r\n    });\r\n    vb.add(bHomePage);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2130,'boolean askForApply','boolean',0,350,'net.sourceforge.ganttproject.gui.about.AboutPanel',2955,'net.sourceforge.ganttproject.gui.about.AboutPanel.applyChanges(boolean)',0,'/**\r\n * This method check if the value has changed, and assk for commit changes.\r\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    // nothing to do :)\r\n    return bHasChange = false;\r\n}'),(2131,'BooleanOption option','net.sourceforge.ganttproject.gui.options.model.BooleanOption',373,351,'net.sourceforge.ganttproject.gui.options.BooleanOptionAction',2957,'net.sourceforge.ganttproject.gui.options.BooleanOptionAction.-init-(net.sourceforge.ganttproject.gui.options.model.BooleanOption)',0,'BooleanOptionAction(BooleanOption option) {\r\n    super(\"\");\r\n    myOption = option;\r\n}'),(2132,'ActionEvent e','java.awt.event.ActionEvent',0,351,'net.sourceforge.ganttproject.gui.options.BooleanOptionAction',2958,'net.sourceforge.ganttproject.gui.options.BooleanOptionAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    myOption.toggle();\r\n}'),(2133,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2959,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic CSVSettingsPanel(GanttProject parent) {\r\n    super(GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"csvexport\")), GanttLanguage.getInstance().getText(\"settingsCVSExport\"), parent);\r\n    appli = parent;\r\n    vb.add(new JSeparator());\r\n    JPanel genePanel = new JPanel(new BorderLayout());\r\n    JLabel lblSeparatedField = new JLabel(language.getText(\"separatedFields\"));\r\n    lblSeparatedField.setFont(new Font(lblSeparatedField.getFont().getFontName(), Font.BOLD, lblSeparatedField.getFont().getSize()));\r\n    genePanel.add(lblSeparatedField, BorderLayout.WEST);\r\n    vb.add(genePanel);\r\n    JPanel fixedPanel = new JPanel(new BorderLayout());\r\n    fixedPanel.add((bFixedSize = new JRadioButton()), BorderLayout.WEST);\r\n    // bFixedSize.setEnabled(false);\r\n    bFixedSize.addActionListener(this);\r\n    fixedPanel.add(new JLabel(language.getText(\"fixedWidth\")), BorderLayout.CENTER);\r\n    vb.add(fixedPanel);\r\n    JPanel separatedPanel = new JPanel(new BorderLayout());\r\n    separatedPanel.add((bSeparatedText = new JRadioButton()), BorderLayout.WEST);\r\n    bSeparatedText.addActionListener(this);\r\n    separatedPanel.add(new JLabel(language.getText(\"separated\")), BorderLayout.CENTER);\r\n    vb.add(separatedPanel);\r\n    JPanel separatorFieldPanel = new JPanel(new GridBagLayout());\r\n    vb.add(separatorFieldPanel);\r\n    GridBagConstraints gbc = new GridBagConstraints();\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(separatorFieldPanel, (bDoubleDot = new JRadioButton()), gbc, 0, 0, 1, 1);\r\n    bDoubleDot.addActionListener(this);\r\n    addUsingGBL(separatorFieldPanel, new JLabel(language.getText(\"doubledot\")), gbc, 1, 0, 1, 1);\r\n    addUsingGBL(separatorFieldPanel, (bDotComa = new JRadioButton()), gbc, 3, 0, 1, 1);\r\n    bDotComa.addActionListener(this);\r\n    addUsingGBL(separatorFieldPanel, new JLabel(language.getText(\"dotComa\")), gbc, 4, 0, 1, 1);\r\n    addUsingGBL(separatorFieldPanel, (bComa = new JRadioButton()), gbc, 6, 0, 1, 1);\r\n    bComa.addActionListener(this);\r\n    addUsingGBL(separatorFieldPanel, new JLabel(language.getText(\"coma\")), gbc, 7, 0, 1, 1);\r\n    bSpace = new JRadioButton();\r\n    // addUsingGBL(separatorFieldPanel, bSpace , gbc, 0, 1, 1, 1);\r\n    bSpace.addActionListener(this);\r\n    // addUsingGBL(separatorFieldPanel, new\r\n    // JLabel(language.getText(\"space\")), gbc, 1, 1, 1, 1);\r\n    addUsingGBL(separatorFieldPanel, (bOther = new JRadioButton()), gbc, 6, 1, 1, 1);\r\n    bOther.addActionListener(this);\r\n    addUsingGBL(separatorFieldPanel, new JLabel(language.getText(\"other\")), gbc, 7, 1, 1, 1);\r\n    addUsingGBL(separatorFieldPanel, (tfOther = new JTextField(5)), gbc, 8, 1, 1, 1);\r\n    JPanel textSeparatorFieldPanel = new JPanel(new FlowLayout());\r\n    vb.add(textSeparatorFieldPanel);\r\n    textSeparatorFieldPanel.add(new JLabel(language.getText(\"textSeparator\")));\r\n    cbTextSeparator = new JComboBox(appli.getOptions().getCSVOptions().getSeparatedTextChars());\r\n    textSeparatorFieldPanel.add(new JLabel(\"  \"));\r\n    textSeparatorFieldPanel.add(cbTextSeparator);\r\n    vb.add(new JPanel());\r\n    // /////////////////////////////////////////////////\r\n    vb.add(new JSeparator());\r\n    JPanel taskPanel = new JPanel(new BorderLayout());\r\n    JLabel lblTaskField = new JLabel(language.getText(\"taskFields\"));\r\n    lblTaskField.setFont(new Font(lblTaskField.getFont().getFontName(), Font.BOLD, lblTaskField.getFont().getSize()));\r\n    taskPanel.add(lblTaskField, BorderLayout.WEST);\r\n    vb.add(taskPanel);\r\n    JPanel taskFieldPanel = new JPanel(new GridBagLayout());\r\n    vb.add(taskFieldPanel);\r\n    addUsingGBL(taskFieldPanel, (cbTaskID = new JCheckBox()), gbc, 0, 0, 1, 1);\r\n    addUsingGBL(taskFieldPanel, new JLabel(language.getText(\"id\")), gbc, 1, 0, 1, 1);\r\n    addUsingGBL(taskFieldPanel, (cbTaskName = new JCheckBox()), gbc, 3, 0, 1, 1);\r\n    addUsingGBL(taskFieldPanel, new JLabel(language.getText(\"name\")), gbc, 4, 0, 1, 1);\r\n    addUsingGBL(taskFieldPanel, (cbTaskDuration = new JCheckBox()), gbc, 6, 0, 1, 1);\r\n    addUsingGBL(taskFieldPanel, new JLabel(language.getText(\"length\")), gbc, 7, 0, 1, 1);\r\n    addUsingGBL(taskFieldPanel, (cbStartDate = new JCheckBox()), gbc, 0, 1, 1, 1);\r\n    addUsingGBL(taskFieldPanel, new JLabel(language.getText(\"dateOfBegining\")), gbc, 1, 1, 1, 1);\r\n    addUsingGBL(taskFieldPanel, (cbEndDate = new JCheckBox()), gbc, 3, 1, 1, 1);\r\n    addUsingGBL(taskFieldPanel, new JLabel(language.getText(\"dateOfEnd\")), gbc, 4, 1, 1, 1);\r\n    addUsingGBL(taskFieldPanel, (cbTaskPercent = new JCheckBox()), gbc, 6, 1, 1, 1);\r\n    addUsingGBL(taskFieldPanel, new JLabel(language.getText(\"advancement\")), gbc, 7, 1, 1, 1);\r\n    addUsingGBL(taskFieldPanel, (cbTaskWebLink = new JCheckBox()), gbc, 0, 2, 1, 1);\r\n    addUsingGBL(taskFieldPanel, new JLabel(language.getText(\"webLink\")), gbc, 1, 2, 1, 1);\r\n    addUsingGBL(taskFieldPanel, (cbTaskResources = new JCheckBox()), gbc, 3, 2, 1, 1);\r\n    addUsingGBL(taskFieldPanel, new JLabel(language.getText(\"resources\")), gbc, 4, 2, 1, 1);\r\n    addUsingGBL(taskFieldPanel, (cbTaskNotes = new JCheckBox()), gbc, 6, 2, 1, 1);\r\n    addUsingGBL(taskFieldPanel, new JLabel(language.getText(\"notes\")), gbc, 7, 2, 1, 1);\r\n    vb.add(new JPanel());\r\n    // /////////////////////////////////////////////////\r\n    vb.add(new JSeparator());\r\n    JPanel resPanel = new JPanel(new BorderLayout());\r\n    JLabel lblResField = new JLabel(language.getText(\"resFields\"));\r\n    lblResField.setFont(new Font(lblResField.getFont().getFontName(), Font.BOLD, lblResField.getFont().getSize()));\r\n    resPanel.add(lblResField, BorderLayout.WEST);\r\n    vb.add(resPanel);\r\n    JPanel resFieldPanel = new JPanel(new GridBagLayout());\r\n    vb.add(resFieldPanel);\r\n    addUsingGBL(resFieldPanel, (cbResID = new JCheckBox()), gbc, 0, 0, 1, 1);\r\n    addUsingGBL(resFieldPanel, new JLabel(language.getText(\"id\")), gbc, 1, 0, 1, 1);\r\n    addUsingGBL(resFieldPanel, (cbResName = new JCheckBox()), gbc, 3, 0, 1, 1);\r\n    addUsingGBL(resFieldPanel, new JLabel(language.getText(\"colName\")), gbc, 4, 0, 1, 1);\r\n    addUsingGBL(resFieldPanel, (cbResMail = new JCheckBox()), gbc, 6, 0, 1, 1);\r\n    addUsingGBL(resFieldPanel, new JLabel(language.getText(\"colMail\")), gbc, 7, 0, 1, 1);\r\n    addUsingGBL(resFieldPanel, (cbResPhone = new JCheckBox()), gbc, 0, 1, 1, 1);\r\n    addUsingGBL(resFieldPanel, new JLabel(language.getText(\"colPhone\")), gbc, 1, 1, 1, 1);\r\n    addUsingGBL(resFieldPanel, (cbResRole = new JCheckBox()), gbc, 3, 1, 1, 1);\r\n    addUsingGBL(resFieldPanel, new JLabel(language.getText(\"colRole\")), gbc, 4, 1, 1, 1);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2134,'Container container','java.awt.Container',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2961,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(2135,'Component component','java.awt.Component',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2961,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(2136,'GridBagConstraints gbc','java.awt.GridBagConstraints',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2961,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(2137,'int x','int',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2961,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(2138,'int y','int',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2961,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(2139,'int w','int',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2961,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(2140,'int h','int',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2961,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'/**\r\n * add a component to container by using GridBagConstraints.\r\n */\r\nprivate void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n}'),(2141,'boolean askForApply','boolean',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2962,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.applyChanges(boolean)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.gui.options.GeneralOptionPanel#applyChanges(boolean)\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    CSVOptions csvOptions = appli.getOptions().getCSVOptions();\r\n    if ((((((((((((((((((getFixed()) == (csvOptions.bFixedSize)) && ((getTaskID()) == (csvOptions.bExportTaskID))) && ((getTaskName()) == (csvOptions.bExportTaskName))) && ((getTaskSD()) == (csvOptions.bExportTaskStartDate))) && ((getTaskED()) == (csvOptions.bExportTaskEndDate))) && ((getTaskDuration()) == (csvOptions.bExportTaskDuration))) && ((getTaskPercent()) == (csvOptions.bExportTaskPercent))) && ((getTaskWebLink()) == (csvOptions.bExportTaskWebLink))) && ((getTaskResources()) == (csvOptions.bExportTaskResources))) && ((getTaskNotes()) == (csvOptions.bExportTaskNotes))) && ((getResourceID()) == (csvOptions.bExportResourceID))) && ((getResourceName()) == (csvOptions.bExportResourceName))) && ((getResourceMail()) == (csvOptions.bExportResourceMail))) && ((getResourcePhone()) == (csvOptions.bExportResourcePhone))) && ((getResourceRole()) == (csvOptions.bExportResourceRole))) && (!(separatCharHasChange()))) && (getTextSeparat().equals(csvOptions.sSeparatedTextChar))) {\r\n        bHasChange = false;\r\n    } else {\r\n        if ((!askForApply) || (askForApply && (askForApplyChanges()))) {\r\n            csvOptions.sSeparatedTextChar = getTextSeparat();\r\n            csvOptions.sSeparatedChar = getSeparat();\r\n            csvOptions.bFixedSize = getFixed();\r\n            csvOptions.bExportTaskID = getTaskID();\r\n            csvOptions.bExportTaskName = getTaskName();\r\n            csvOptions.bExportTaskStartDate = getTaskSD();\r\n            csvOptions.bExportTaskEndDate = getTaskED();\r\n            csvOptions.bExportTaskDuration = getTaskDuration();\r\n            csvOptions.bExportTaskPercent = getTaskPercent();\r\n            csvOptions.bExportTaskWebLink = getTaskWebLink();\r\n            csvOptions.bExportTaskResources = getTaskResources();\r\n            csvOptions.bExportTaskNotes = getTaskNotes();\r\n            csvOptions.bExportResourceID = getResourceID();\r\n            csvOptions.bExportResourceName = getResourceName();\r\n            csvOptions.bExportResourceMail = getResourceMail();\r\n            csvOptions.bExportResourcePhone = getResourcePhone();\r\n            csvOptions.bExportResourceRole = getResourceRole();\r\n        }\r\n        bHasChange = true;\r\n    }\r\n    return bHasChange;\r\n}'),(2142,'ActionEvent e','java.awt.event.ActionEvent',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2960,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.actionPerformed(java.awt.event.ActionEvent)',0,'/**\r\n * Action performed.\r\n */\r\npublic void actionPerformed(ActionEvent e) {\r\n    if ((e.getSource()) instanceof JRadioButton) {\r\n        JRadioButton selectedButton = ((JRadioButton) (e.getSource()));\r\n        if (!(selectedButton.isSelected()))\r\n            selectedButton.setSelected(true);\r\n\r\n    }\r\n    if (((e.getSource()) == (bFixedSize)) && (bFixedSize.isSelected())) {\r\n        bSeparatedText.setSelected(false);\r\n        enableSeparatedButton(false);\r\n    } else\r\n        if (((e.getSource()) == (bSeparatedText)) && (bSeparatedText.isSelected())) {\r\n            bFixedSize.setSelected(false);\r\n            enableSeparatedButton(true);\r\n        } else\r\n            if (((e.getSource()) == (bDoubleDot)) && (bDoubleDot.isSelected())) {\r\n                unselectOther(bDoubleDot);\r\n            } else\r\n                if (((e.getSource()) == (bDotComa)) && (bDotComa.isSelected())) {\r\n                    unselectOther(bDotComa);\r\n                } else\r\n                    if (((e.getSource()) == (bComa)) && (bComa.isSelected())) {\r\n                        unselectOther(bComa);\r\n                    } else\r\n                        if (((e.getSource()) == (bSpace)) && (bSpace.isSelected())) {\r\n                            unselectOther(bSpace);\r\n                        } else\r\n                            if (((e.getSource()) == (bOther)) && (bOther.isSelected())) {\r\n                                unselectOther(bOther);\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}'),(2143,'JRadioButton selectedButton','javax.swing.JRadioButton',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2983,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.unselectOther(javax.swing.JRadioButton)',0,'public void unselectOther(JRadioButton selectedButton) {\r\n    bDoubleDot.setSelected((selectedButton == (bDoubleDot)));\r\n    bDotComa.setSelected((selectedButton == (bDotComa)));\r\n    bComa.setSelected((selectedButton == (bComa)));\r\n    bSpace.setSelected((selectedButton == (bSpace)));\r\n    bOther.setSelected((selectedButton == (bOther)));\r\n    tfOther.setEnabled((selectedButton == (bOther)));\r\n}'),(2144,'boolean enabled','boolean',0,352,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel',2963,'net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.enableSeparatedButton(boolean)',0,'public void enableSeparatedButton(boolean enabled) {\r\n    bDoubleDot.setEnabled(enabled);\r\n    bDotComa.setEnabled(enabled);\r\n    bComa.setEnabled(enabled);\r\n    bSpace.setEnabled(enabled);\r\n    bOther.setEnabled(enabled);\r\n    tfOther.setEnabled((enabled && (bOther.isSelected())));\r\n}'),(2145,'EnumerationOption option','net.sourceforge.ganttproject.gui.options.model.EnumerationOption',384,354,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel',2984,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.-init-(net.sourceforge.ganttproject.gui.options.model.EnumerationOption)',0,'public EnumerationOptionComboBoxModel(EnumerationOption option) {\r\n    myOption = option;\r\n    String currentValue = option.getValue();\r\n    EnumerationOptionComboBoxModel.Item currentItem = null;\r\n    String[] ids = option.getAvailableValues();\r\n    String[] i18nedValues = geti18nedValues(option);\r\n    myValues = new ArrayList(ids.length);\r\n    for (int i = 0; i < (ids.length); i++) {\r\n        EnumerationOptionComboBoxModel.Item nextItem = new EnumerationOptionComboBoxModel.Item(ids[i], i18nedValues[i]);\r\n        myValues.add(nextItem);\r\n        if (ids[i].equals(currentValue)) {\r\n            currentItem = nextItem;\r\n        }\r\n    }\r\n    if (currentItem != null) {\r\n        setSelectedItem(currentItem);\r\n    }\r\n}'),(2146,'String id','java.lang.String',0,353,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel$Item',2991,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel$Item.-init-(java.lang.String,java.lang.String)',0,'public Item(String id, String displayValue) {\r\n    myID = id;\r\n    myDisplayValue = displayValue;\r\n}'),(2147,'String displayValue','java.lang.String',0,353,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel$Item',2991,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel$Item.-init-(java.lang.String,java.lang.String)',0,'public Item(String id, String displayValue) {\r\n    myID = id;\r\n    myDisplayValue = displayValue;\r\n}'),(2148,'Object item','java.lang.Object',0,354,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel',2990,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.setSelectedItem(java.lang.Object)',0,'public void setSelectedItem(Object item) {\r\n    mySelectedItem = ((EnumerationOptionComboBoxModel.Item) (item));\r\n    myOption.setValue(mySelectedItem.myID);\r\n}'),(2149,'int index','int',0,354,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel',2986,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getElementAt(int)',0,'public Object getElementAt(int index) {\r\n    return myValues.get(index);\r\n}'),(2150,'EnumerationOption option','net.sourceforge.ganttproject.gui.options.model.EnumerationOption',384,354,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel',2989,'net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.geti18nedValues(net.sourceforge.ganttproject.gui.options.model.EnumerationOption)',0,'String[] geti18nedValues(EnumerationOption option) {\r\n    String[] ids = option.getAvailableValues();\r\n    String[] result = new String[ids.length];\r\n    for (int i = 0; i < (ids.length); i++) {\r\n        result[i] = GanttLanguage.getInstance().getText(((\"optionValue.\" + (ids[i])) + \".label\"));\r\n        if (result[i].startsWith(GanttLanguage.MISSING_RESOURCE)) {\r\n            // System.err.println(result[i]);\r\n            result[i] = ids[i];\r\n        }\r\n    }\r\n    return result;\r\n}'),(2151,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,355,'net.sourceforge.ganttproject.gui.options.ExportSettingsPanel',2993,'net.sourceforge.ganttproject.gui.options.ExportSettingsPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic ExportSettingsPanel(GanttProject parent) {\r\n    super(GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"export\")), GanttLanguage.getInstance().getText(\"settingsExport\"), parent);\r\n    appli = parent;\r\n    // export the name of the task\r\n    JPanel namePanel = new JPanel(new BorderLayout());\r\n    namePanel.add((cbName = new JCheckBox()), BorderLayout.WEST);\r\n    namePanel.add(new JLabel(language.getText(\"name\")), BorderLayout.CENTER);\r\n    vb.add(namePanel);\r\n    vb.add(new JPanel());\r\n    // export the complete percent of the task\r\n    JPanel completePanel = new JPanel(new BorderLayout());\r\n    completePanel.add((cbComplete = new JCheckBox()), BorderLayout.WEST);\r\n    completePanel.add(new JLabel(language.getText(\"advancement\")), BorderLayout.CENTER);\r\n    vb.add(completePanel);\r\n    vb.add(new JPanel());\r\n    // export the relationst of the task\r\n    JPanel relationsPanel = new JPanel(new BorderLayout());\r\n    relationsPanel.add((cbRelations = new JCheckBox()), BorderLayout.WEST);\r\n    relationsPanel.add(new JLabel(language.getText(\"depends\")), BorderLayout.CENTER);\r\n    vb.add(relationsPanel);\r\n    vb.add(new JPanel());\r\n    // export the 3D border of the task\r\n    // JPanel bordersPanel = new JPanel(new BorderLayout());\r\n    // bordersPanel.add(cb3dBorder = new JCheckBox(), BorderLayout.WEST);\r\n    // bordersPanel.add(new JLabel(language.getText(\"border3D\")),\r\n    // BorderLayout.CENTER);\r\n    // vb.add(bordersPanel);\r\n    vb.add(new JPanel());\r\n}'),(2152,'boolean askForApply','boolean',0,355,'net.sourceforge.ganttproject.gui.options.ExportSettingsPanel',2994,'net.sourceforge.ganttproject.gui.options.ExportSettingsPanel.applyChanges(boolean)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.gui.options.GeneralOptionPanel#applyChanges(boolean)\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    if ((((getExportName()) == (appli.getOptions().getExportName())) && ((getExportComplete()) == (appli.getOptions().getExportComplete()))) && ((getExportRelations()) == (appli.getOptions().getExportRelations()))) {\r\n        bHasChange = false;\r\n    } else {\r\n        bHasChange = true;\r\n        if ((!askForApply) || (askForApply && (askForApplyChanges()))) {\r\n            appli.getOptions().setExportName(getExportName());\r\n            appli.getOptions().setExportComplete(getExportComplete());\r\n            appli.getOptions().setExportRelations(getExportRelations());\r\n        }\r\n    }\r\n    return bHasChange;\r\n}'),(2153,'Action[] choiceChangeActions','javax.swing.Action[]',0,356,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel',3002,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(javax.swing.Action[],net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[],int)',0,'public Component getComponent(Action[] choiceChangeActions, GPOptionGroup[] choiceOptions, int selectedGroupIndex) {\r\n    JComponent[] choiceComponents = new JComponent[choiceOptions.length];\r\n    for (int i = 0; i < (choiceChangeActions.length); i++) {\r\n        GPOptionGroup nextOptions = choiceOptions[i];\r\n        JComponent nextOptionComponent = (nextOptions == null) ? new JPanel() : myOptionPageBuilder.buildPlanePage(new GPOptionGroup[]{ nextOptions });\r\n        choiceComponents[i] = nextOptionComponent;\r\n    }\r\n    return getComponent(choiceChangeActions, choiceComponents, selectedGroupIndex);\r\n}'),(2154,'GPOptionGroup[] choiceOptions','net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[]',0,356,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel',3002,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(javax.swing.Action[],net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[],int)',0,'public Component getComponent(Action[] choiceChangeActions, GPOptionGroup[] choiceOptions, int selectedGroupIndex) {\r\n    JComponent[] choiceComponents = new JComponent[choiceOptions.length];\r\n    for (int i = 0; i < (choiceChangeActions.length); i++) {\r\n        GPOptionGroup nextOptions = choiceOptions[i];\r\n        JComponent nextOptionComponent = (nextOptions == null) ? new JPanel() : myOptionPageBuilder.buildPlanePage(new GPOptionGroup[]{ nextOptions });\r\n        choiceComponents[i] = nextOptionComponent;\r\n    }\r\n    return getComponent(choiceChangeActions, choiceComponents, selectedGroupIndex);\r\n}'),(2155,'int selectedGroupIndex','int',0,356,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel',3002,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(javax.swing.Action[],net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[],int)',0,'public Component getComponent(Action[] choiceChangeActions, GPOptionGroup[] choiceOptions, int selectedGroupIndex) {\r\n    JComponent[] choiceComponents = new JComponent[choiceOptions.length];\r\n    for (int i = 0; i < (choiceChangeActions.length); i++) {\r\n        GPOptionGroup nextOptions = choiceOptions[i];\r\n        JComponent nextOptionComponent = (nextOptions == null) ? new JPanel() : myOptionPageBuilder.buildPlanePage(new GPOptionGroup[]{ nextOptions });\r\n        choiceComponents[i] = nextOptionComponent;\r\n    }\r\n    return getComponent(choiceChangeActions, choiceComponents, selectedGroupIndex);\r\n}'),(2156,'Action[] choiceChangeActions','javax.swing.Action[]',0,356,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel',3001,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(javax.swing.Action[],javax.swing.JComponent[],int)',0,'public JComponent getComponent(Action[] choiceChangeActions, JComponent[] choiceComponents, int selectedGroupIndex) {\r\n    myButtons = new AbstractButton[choiceChangeActions.length];\r\n    myOptionComponents = new JComponent[choiceChangeActions.length];\r\n    Box result = Box.createVerticalBox();\r\n    myExporterToggles = new ButtonGroup();\r\n    for (int i = 0; i < (choiceChangeActions.length); i++) {\r\n        final int selectedIndex = i;\r\n        final Action nextRealAction = choiceChangeActions[i];\r\n        Action nextWrapperAction = new AbstractAction(String.valueOf(nextRealAction.getValue(Action.NAME))) {\r\n            public void actionPerformed(ActionEvent e) {\r\n                nextRealAction.actionPerformed(e);\r\n                updateSelectionUI(selectedIndex);\r\n            }\r\n        };\r\n        JRadioButton nextButton = new JRadioButton(nextWrapperAction);\r\n        nextButton.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, 0));\r\n        JPanel nextExporterPanel = new JPanel(new BorderLayout());\r\n        nextExporterPanel.add(nextButton, BorderLayout.NORTH);\r\n        myButtons[i] = nextButton;\r\n        myExporterToggles.add(nextButton);\r\n        JComponent nextOptionComponent = choiceComponents[i];\r\n        myOptionComponents[i] = nextOptionComponent;\r\n        nextOptionComponent.setBorder(BorderFactory.createEmptyBorder(0, 30, 20, 0));\r\n        nextExporterPanel.add(nextOptionComponent, BorderLayout.CENTER);\r\n        setEnabledTree(nextOptionComponent, false);\r\n        result.add(nextExporterPanel);\r\n        // if (i == 0) {\r\n        // nextButton.setSelected(true);\r\n        // }\r\n    }\r\n    setSelected(selectedGroupIndex);\r\n    return result;\r\n}'),(2157,'JComponent[] choiceComponents','javax.swing.JComponent[]',0,356,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel',3001,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(javax.swing.Action[],javax.swing.JComponent[],int)',0,'public JComponent getComponent(Action[] choiceChangeActions, JComponent[] choiceComponents, int selectedGroupIndex) {\r\n    myButtons = new AbstractButton[choiceChangeActions.length];\r\n    myOptionComponents = new JComponent[choiceChangeActions.length];\r\n    Box result = Box.createVerticalBox();\r\n    myExporterToggles = new ButtonGroup();\r\n    for (int i = 0; i < (choiceChangeActions.length); i++) {\r\n        final int selectedIndex = i;\r\n        final Action nextRealAction = choiceChangeActions[i];\r\n        Action nextWrapperAction = new AbstractAction(String.valueOf(nextRealAction.getValue(Action.NAME))) {\r\n            public void actionPerformed(ActionEvent e) {\r\n                nextRealAction.actionPerformed(e);\r\n                updateSelectionUI(selectedIndex);\r\n            }\r\n        };\r\n        JRadioButton nextButton = new JRadioButton(nextWrapperAction);\r\n        nextButton.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, 0));\r\n        JPanel nextExporterPanel = new JPanel(new BorderLayout());\r\n        nextExporterPanel.add(nextButton, BorderLayout.NORTH);\r\n        myButtons[i] = nextButton;\r\n        myExporterToggles.add(nextButton);\r\n        JComponent nextOptionComponent = choiceComponents[i];\r\n        myOptionComponents[i] = nextOptionComponent;\r\n        nextOptionComponent.setBorder(BorderFactory.createEmptyBorder(0, 30, 20, 0));\r\n        nextExporterPanel.add(nextOptionComponent, BorderLayout.CENTER);\r\n        setEnabledTree(nextOptionComponent, false);\r\n        result.add(nextExporterPanel);\r\n        // if (i == 0) {\r\n        // nextButton.setSelected(true);\r\n        // }\r\n    }\r\n    setSelected(selectedGroupIndex);\r\n    return result;\r\n}'),(2158,'int selectedGroupIndex','int',0,356,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel',3001,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(javax.swing.Action[],javax.swing.JComponent[],int)',0,'public JComponent getComponent(Action[] choiceChangeActions, JComponent[] choiceComponents, int selectedGroupIndex) {\r\n    myButtons = new AbstractButton[choiceChangeActions.length];\r\n    myOptionComponents = new JComponent[choiceChangeActions.length];\r\n    Box result = Box.createVerticalBox();\r\n    myExporterToggles = new ButtonGroup();\r\n    for (int i = 0; i < (choiceChangeActions.length); i++) {\r\n        final int selectedIndex = i;\r\n        final Action nextRealAction = choiceChangeActions[i];\r\n        Action nextWrapperAction = new AbstractAction(String.valueOf(nextRealAction.getValue(Action.NAME))) {\r\n            public void actionPerformed(ActionEvent e) {\r\n                nextRealAction.actionPerformed(e);\r\n                updateSelectionUI(selectedIndex);\r\n            }\r\n        };\r\n        JRadioButton nextButton = new JRadioButton(nextWrapperAction);\r\n        nextButton.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, 0));\r\n        JPanel nextExporterPanel = new JPanel(new BorderLayout());\r\n        nextExporterPanel.add(nextButton, BorderLayout.NORTH);\r\n        myButtons[i] = nextButton;\r\n        myExporterToggles.add(nextButton);\r\n        JComponent nextOptionComponent = choiceComponents[i];\r\n        myOptionComponents[i] = nextOptionComponent;\r\n        nextOptionComponent.setBorder(BorderFactory.createEmptyBorder(0, 30, 20, 0));\r\n        nextExporterPanel.add(nextOptionComponent, BorderLayout.CENTER);\r\n        setEnabledTree(nextOptionComponent, false);\r\n        result.add(nextExporterPanel);\r\n        // if (i == 0) {\r\n        // nextButton.setSelected(true);\r\n        // }\r\n    }\r\n    setSelected(selectedGroupIndex);\r\n    return result;\r\n}'),(2159,'int selectedIndex','int',0,356,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel',3005,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.updateSelectionUI(int)',0,'private void updateSelectionUI(int selectedIndex) {\r\n    AbstractButton prevSelected = myButtons[mySelectedIndex];\r\n    prevSelected.setText(mySavedSelectedText);\r\n    setEnabledTree(myOptionComponents[mySelectedIndex], false);\r\n    setSelected(selectedIndex);\r\n}'),(2160,'int selectedIndex','int',0,356,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel',3004,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setSelected(int)',0,'private void setSelected(int selectedIndex) {\r\n    AbstractButton newSelected = myButtons[selectedIndex];\r\n    mySavedSelectedText = newSelected.getText();\r\n    newSelected.setText(((\"<html><body><b><u>\" + (mySavedSelectedText)) + \"</u></b></body></html>\"));\r\n    mySelectedIndex = selectedIndex;\r\n    newSelected.setSelected(true);\r\n    setEnabledTree(myOptionComponents[mySelectedIndex], true);\r\n}'),(2161,'JComponent root','javax.swing.JComponent',0,356,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel',3003,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setEnabledTree(javax.swing.JComponent,boolean)',0,'private void setEnabledTree(JComponent root, boolean isEnabled) {\r\n    UIUtil.setEnabledTree(root, isEnabled);\r\n}'),(2162,'boolean isEnabled','boolean',0,356,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel',3003,'net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setEnabledTree(javax.swing.JComponent,boolean)',0,'private void setEnabledTree(JComponent root, boolean isEnabled) {\r\n    UIUtil.setEnabledTree(root, isEnabled);\r\n}'),(2163,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,357,'net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider',3008,'net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.getOptionGroups(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GPOptionGroup[] getOptionGroups(IGanttProject project, UIFacade uiFacade) {\r\n    return uiFacade.getGanttChart().getOptionGroups();\r\n}'),(2164,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,357,'net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider',3008,'net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.getOptionGroups(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GPOptionGroup[] getOptionGroups(IGanttProject project, UIFacade uiFacade) {\r\n    return uiFacade.getGanttChart().getOptionGroups();\r\n}'),(2165,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,357,'net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider',3007,'net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.buildPageComponent(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public Component buildPageComponent(IGanttProject project, UIFacade uiFacade) {\r\n    throw new UnsupportedOperationException();\r\n}'),(2166,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,357,'net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider',3007,'net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.buildPageComponent(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public Component buildPageComponent(IGanttProject project, UIFacade uiFacade) {\r\n    throw new UnsupportedOperationException();\r\n}'),(2167,'String title','java.lang.String',0,358,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel',3012,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.-init-(java.lang.String,java.lang.String)',0,'// -- METHODS --\r\npublic GeneralOptionPanel(String title, String comment) {\r\n    this(title, comment, null);\r\n}'),(2168,'String comment','java.lang.String',0,358,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel',3012,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.-init-(java.lang.String,java.lang.String)',0,'// -- METHODS --\r\npublic GeneralOptionPanel(String title, String comment) {\r\n    this(title, comment, null);\r\n}'),(2169,'String title','java.lang.String',0,358,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel',3013,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.-init-(java.lang.String,java.lang.String,java.awt.Frame)',0,'public GeneralOptionPanel(String title, String comment, Frame parent) {\r\n    super();\r\n    appli = parent;\r\n    setLayout(new BorderLayout());\r\n    add(vb, BorderLayout.CENTER);\r\n    myTitle = title;\r\n    myComment = comment;\r\n}'),(2170,'String comment','java.lang.String',0,358,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel',3013,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.-init-(java.lang.String,java.lang.String,java.awt.Frame)',0,'public GeneralOptionPanel(String title, String comment, Frame parent) {\r\n    super();\r\n    appli = parent;\r\n    setLayout(new BorderLayout());\r\n    add(vb, BorderLayout.CENTER);\r\n    myTitle = title;\r\n    myComment = comment;\r\n}'),(2171,'Frame parent','java.awt.Frame',0,358,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel',3013,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.-init-(java.lang.String,java.lang.String,java.awt.Frame)',0,'public GeneralOptionPanel(String title, String comment, Frame parent) {\r\n    super();\r\n    appli = parent;\r\n    setLayout(new BorderLayout());\r\n    add(vb, BorderLayout.CENTER);\r\n    myTitle = title;\r\n    myComment = comment;\r\n}'),(2172,'boolean askForApply','boolean',0,358,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel',3014,'net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.applyChanges(boolean)',0,'/**\r\n * This method check if the value has changed, and assk for commit changes.\r\n */\r\npublic abstract boolean applyChanges(boolean askForApply);'),(2173,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,359,'net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel',3022,'net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic LanguageSettingsPanel(GanttProject parent) {\r\n    super(GanttLanguage.getInstance().getText(\"languages\"), GanttLanguage.getInstance().getText(\"settingsLanguages\"), parent);\r\n    appli = parent;\r\n    // create the combo box with all languages\r\n    cbLanguage = new JComboBox();\r\n    cbLanguage.addItem(\"Traditional Chinese\");\r\n    cbLanguage.addItem(\"Simplified Chinese\");\r\n    cbLanguage.addItem(\"u0411u044au043bu0433u0430u0440u0441u043au0438\");\r\n    cbLanguage.addItem(\"u010cesky\");\r\n    cbLanguage.addItem(\"Dansk\");\r\n    cbLanguage.addItem(\"Deutsch\");\r\n    cbLanguage.addItem(\"English\");\r\n    cbLanguage.addItem(\"English (United Kingdom)\");\r\n    cbLanguage.addItem(\"Espau00f1ol\");\r\n    cbLanguage.addItem(\"Estonian\");\r\n    cbLanguage.addItem(\"Finnish\");\r\n    cbLanguage.addItem(\"Franu00e7ais\");\r\n    cbLanguage.addItem(\"Greek\");\r\n    cbLanguage.addItem(\"Hrvatski\");\r\n    cbLanguage.addItem(\"Hungarian\");\r\n    cbLanguage.addItem(\"Korean\");\r\n    cbLanguage.addItem(\"u05e2u05d1u05e8u05d9u05ea\");\r\n    cbLanguage.addItem(\"Italiano\");\r\n    cbLanguage.addItem(\"Japanese\");\r\n    cbLanguage.addItem(\"Nederlands\");\r\n    cbLanguage.addItem(\"Norsk\");\r\n    cbLanguage.addItem(\"Polski\");\r\n    cbLanguage.addItem(\"Portuguu00eas\");\r\n    cbLanguage.addItem(\"Portuguu00eas do Brasil\");\r\n    cbLanguage.addItem(\"u0420u0443u0441u0441u043au0438u0439\");\r\n    cbLanguage.addItem(\"Romanian\");\r\n    cbLanguage.addItem(\"Slovenu0161u010dina\");\r\n    cbLanguage.addItem(\"Slovensky\");\r\n    cbLanguage.addItem(\"Svenska\");\r\n    cbLanguage.addItem(\"Tu00fcrku00e7e\");\r\n    cbLanguage.addItem(\"Tiu1ebfng anh\");\r\n    cbLanguage.addItemListener(this);\r\n    JPanel languagePanel = new JPanel(new BorderLayout());\r\n    languagePanel.add(cbLanguage, BorderLayout.NORTH);\r\n    vb.add(languagePanel);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2174,'boolean askForApply','boolean',0,359,'net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel',3023,'net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel.applyChanges(boolean)',0,'/**\r\n * This method check if the value has changed, and assk for commit changes.\r\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    // if there is changes\r\n    if (bHasChange) {\r\n        if ((!askForApply) || (askForApply && (askForApplyChanges())))\r\n            changeLanguage();\r\n\r\n    }\r\n    return bHasChange;\r\n}'),(2175,'ItemEvent e','java.awt.event.ItemEvent',0,359,'net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel',3026,'net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel.itemStateChanged(java.awt.event.ItemEvent)',0,'/**\r\n * The language has changed.\r\n */\r\npublic void itemStateChanged(ItemEvent e) {\r\n    if ((e.getStateChange()) == (ItemEvent.SELECTED))\r\n        this.bHasChange = true;\r\n\r\n}'),(2176,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,360,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel',3027,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic LnFSettingsPanel(GanttProject parent) {\r\n    super(GanttLanguage.getInstance().getText(\"looknfeel\"), GanttLanguage.getInstance().getText(\"settingsLooknFeel\"), parent);\r\n    appli = parent;\r\n    // create the combo box with all languages\r\n    cbLnf = new JComboBox();\r\n    cbLnf.setName(\"comboLnf\");\r\n    // cbLnf.addActionListener(this);\r\n    GanttLookAndFeelInfo[] lookAndFeels = GanttLookAndFeels.getGanttLookAndFeels().getInstalledLookAndFeels();\r\n    for (int i = 0; i < (lookAndFeels.length); i++) {\r\n        cbLnf.addItem(lookAndFeels[i]);\r\n    }\r\n    cbLnf.addItemListener(this);\r\n    JPanel languagePanel = new JPanel(new BorderLayout());\r\n    languagePanel.add(cbLnf, BorderLayout.NORTH);\r\n    vb.add(languagePanel);\r\n    vb.add(new JPanel());\r\n    // use small icons\r\n    JPanel iconTextPanel = new JPanel(new FlowLayout());\r\n    iconTextPanel.add(new JLabel(language.getText(\"show\")));\r\n    iconTextPanel.add((cbButtonType = new JComboBox()));\r\n    cbButtonType.addItem(language.getText(\"buttonIcon\"));\r\n    cbButtonType.addItem(language.getText(\"buttonIconText\"));\r\n    cbButtonType.addItem(language.getText(\"buttonText\"));\r\n    iconTextPanel.add(new JLabel(\"  \"));\r\n    iconTextPanel.add((cbSmallIcon = new JCheckBox()));\r\n    iconTextPanel.add(new JLabel(language.getText(\"useSmalIcons\")));\r\n    JPanel iconTextPanel2 = new JPanel(new BorderLayout());\r\n    iconTextPanel2.add(iconTextPanel, BorderLayout.WEST);\r\n    vb.add(iconTextPanel2);\r\n    vb.add(new JPanel());\r\n    // // status bar setting\r\n    // JPanel statusPanel = new JPanel(new BorderLayout());\r\n    // statusPanel.add(cbShowStatus = new JCheckBox(), BorderLayout.WEST);\r\n    // statusPanel.add(new JLabel(language.getText(\"showStatusBar\")),\r\n    // BorderLayout.CENTER);\r\n    // vb.add(statusPanel);\r\n    // vb.add(new JPanel());\r\n    JPanel positionPanel = new JPanel(new FlowLayout());\r\n    JPanel currentPanel = new JPanel(new BorderLayout());\r\n    JPanel deletedPanel = new JPanel(new BorderLayout());\r\n    currentPanel.add(new JLabel(language.getText(\"currentToolBar\")), BorderLayout.NORTH);\r\n    deletedPanel.add(new JLabel(language.getText(\"availableToolBar\")), BorderLayout.NORTH);\r\n    /* iconList = new DefaultListModel (); buttonList = new DefaultListModel\n    (); for (int i = 0 ; i < appli.getButtonList().size() ; i++)\n    buttonList.addElement(appli.getButtonList().getElementAt(i)); for\n    (int i = 0 ; i < buttonList.size() ; i++) { if\n    (buttonList.elementAt(i).equals(language.getText(\"separator\").toUpperCase()))\n    iconList.addElement (buttonList.getElementAt(i)); else { if\n    (((TestGanttRolloverButton)buttonList.getElementAt(i)).getIcon() ==\n    null) iconList.addElement\n    (((TestGanttRolloverButton)buttonList.getElementAt(i)).getText());\n    else iconList.addElement\n    (((TestGanttRolloverButton)buttonList.getElementAt(i)).getIcon()); } }\n     */\r\n    list = new JList();\r\n    listDeleted = new JList();\r\n    listDeleted.setName(\"listDeleted\");\r\n    scrollPane = new JScrollPane(listDeleted);\r\n    scrollPane.setPreferredSize(new Dimension(110, 200));\r\n    deletedPanel.add(scrollPane, BorderLayout.EAST);\r\n    // list = new JList(iconList);\r\n    list.setName(\"list\");\r\n    scrollPane = new JScrollPane(list);\r\n    scrollPane.setPreferredSize(new Dimension(110, 200));\r\n    currentPanel.add(scrollPane, BorderLayout.EAST);\r\n    Box currentButtonBox = Box.createVerticalBox();\r\n    Box deletedButtonBox = Box.createVerticalBox();\r\n    JButton bUp = new JButton();\r\n    bUp.setIcon(new ImageIcon(getClass().getResource(\"/icons/up_16.gif\")));\r\n    bUp.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"upTask\"))));\r\n    bUp.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            upButtonActionPerformed(evt);\r\n        }\r\n    });\r\n    JButton bDown = new JButton();\r\n    bDown.setIcon(new ImageIcon(getClass().getResource(\"/icons/down_16.gif\")));\r\n    bDown.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"downTask\"))));\r\n    bDown.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            downButtonActionPerformed(evt);\r\n        }\r\n    });\r\n    JButton bSeparator = new JButton();\r\n    bSeparator.setIcon(new ImageIcon(getClass().getResource(\"/icons/separator_16.gif\")));\r\n    bSeparator.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"separator\"))));\r\n    bSeparator.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            separatorButtonActionPerformed(evt);\r\n        }\r\n    });\r\n    JButton bDelete = new JButton();\r\n    bDelete.setIcon(new ImageIcon(getClass().getResource(\"/icons/indent_16.gif\")));\r\n    bDelete.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"delete\"))));\r\n    bDelete.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            deleteButtonActionPerformed(evt);\r\n        }\r\n    });\r\n    JButton bAdd = new JButton();\r\n    bAdd.setIcon(new ImageIcon(getClass().getResource(\"/icons/unindent_16.gif\")));\r\n    bAdd.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(language.getText(\"add\"))));\r\n    bAdd.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            addButtonActionPerformed(evt);\r\n        }\r\n    });\r\n    currentButtonBox.add(new JPanel());\r\n    currentButtonBox.add(new JPanel());\r\n    currentButtonBox.add(bUp);\r\n    currentButtonBox.add(new JPanel());\r\n    currentButtonBox.add(bDown);\r\n    currentButtonBox.add(new JPanel());\r\n    currentButtonBox.add(new JPanel());\r\n    deletedButtonBox.add(new JPanel());\r\n    deletedButtonBox.add(new JPanel());\r\n    deletedButtonBox.add(bAdd);\r\n    deletedButtonBox.add(new JPanel());\r\n    deletedButtonBox.add(bDelete);\r\n    deletedButtonBox.add(new JPanel());\r\n    deletedButtonBox.add(new JPanel());\r\n    positionPanel.add(currentButtonBox);\r\n    positionPanel.add(currentPanel);\r\n    positionPanel.add(new JPanel());\r\n    positionPanel.add(deletedButtonBox);\r\n    positionPanel.add(new JPanel());\r\n    positionPanel.add(deletedPanel);\r\n    positionPanel.add(new JPanel());\r\n    vb.add(positionPanel);\r\n    vb.add(new JPanel());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2177,'boolean askForApply','boolean',0,360,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel',3030,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel.applyChanges(boolean)',0,'/**\r\n * This method check if the value has changed, and assk for commit changes.\r\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    if ((cbSmallIcon.isSelected()) != (appli.getOptions().getIconSize().equals(\"16\")))\r\n        bHasChange = true;\r\n\r\n    if ((cbButtonType.getSelectedIndex()) != (appli.getOptions().getButtonShow()))\r\n        bHasChange = true;\r\n\r\n    // if (getShowStatusBar() != appli.getOptions().getShowStatusBar())\r\n    // bHasChange = true;\r\n    if (bIconMoved)\r\n        bHasChange = true;\r\n\r\n    // if there is changes\r\n    if (bHasChange) {\r\n        if ((!askForApply) || (askForApply && (askForApplyChanges()))) {\r\n            appli.changeLookAndFeel(getLookAndFeel());\r\n            appli.changeOrder(buttonList, deletedButtonList);\r\n            appli.getOptions().setIconSize((cbSmallIcon.isSelected() ? \"16\" : \"24\"));\r\n            appli.getOptions().setButtonShow(cbButtonType.getSelectedIndex());\r\n            // appli.getOptions().setShowStatusBar(cbShowStatus.isSelected());\r\n            // appli.getStatusBar().setVisible(getShowStatusBar());\r\n            appli.applyButtonOptions();\r\n        }\r\n    }\r\n    return bHasChange;\r\n}'),(2178,'ItemEvent e','java.awt.event.ItemEvent',0,360,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel',3035,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel.itemStateChanged(java.awt.event.ItemEvent)',0,'/**\r\n * The looknfeel has changed.\r\n */\r\npublic void itemStateChanged(ItemEvent e) {\r\n    if ((e.getStateChange()) == (ItemEvent.SELECTED)) {\r\n        this.bHasChange = true;\r\n    }\r\n}'),(2179,'ActionEvent evt','java.awt.event.ActionEvent',0,360,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel',3037,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel.upButtonActionPerformed(java.awt.event.ActionEvent)',0,'/**\r\n * Action on click the up button.\r\n */\r\nprivate void upButtonActionPerformed(ActionEvent evt) {\r\n    Object[] objects = list.getSelectedValues();\r\n    int[] selection = list.getSelectedIndices();\r\n    if ((objects.length) > 0) {\r\n        if ((selection[0]) != 0) {\r\n            list.ensureIndexIsVisible(selection[0]);\r\n            for (int i = 0; i < (objects.length); i++) {\r\n                int index = selection[i];\r\n                iconList.setElementAt(iconList.getElementAt((index - 1)), index);\r\n                iconList.setElementAt(objects[i], (index - 1));\r\n                Object object = buttonList.getElementAt(index);\r\n                buttonList.setElementAt(buttonList.getElementAt((index - 1)), index);\r\n                buttonList.setElementAt(object, (index - 1));\r\n                selection[i] = index - 1;\r\n            }\r\n            list.setSelectedIndices(selection);\r\n        }\r\n        bIconMoved = true;\r\n    }\r\n}'),(2180,'ActionEvent evt','java.awt.event.ActionEvent',0,360,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel',3032,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel.downButtonActionPerformed(java.awt.event.ActionEvent)',0,'/**\r\n * Action on click the down button.\r\n */\r\nprivate void downButtonActionPerformed(ActionEvent evt) {\r\n    Object[] objects = list.getSelectedValues();\r\n    int[] selection = list.getSelectedIndices();\r\n    if ((objects.length) > 0) {\r\n        if ((selection[((selection.length) - 1)]) != ((iconList.size()) - 1)) {\r\n            list.ensureIndexIsVisible(selection[((selection.length) - 1)]);\r\n            for (int i = (objects.length) - 1; i > (-1); i--) {\r\n                int index = selection[i];\r\n                iconList.setElementAt(iconList.getElementAt((index + 1)), index);\r\n                iconList.setElementAt(objects[i], (index + 1));\r\n                Object object = buttonList.getElementAt(index);\r\n                buttonList.setElementAt(buttonList.getElementAt((index + 1)), index);\r\n                buttonList.setElementAt(object, (index + 1));\r\n                selection[i] = index + 1;\r\n            }\r\n            list.setSelectedIndices(selection);\r\n        }\r\n        bIconMoved = true;\r\n    }\r\n}'),(2181,'ActionEvent evt','java.awt.event.ActionEvent',0,360,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel',3036,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel.separatorButtonActionPerformed(java.awt.event.ActionEvent)',0,'/**\r\n * Add a new separator.\r\n */\r\nprivate void separatorButtonActionPerformed(ActionEvent evt) {\r\n    int index = 0;\r\n    if ((list.getSelectedIndex()) != (-1))\r\n        index = list.getSelectedIndex();\r\n\r\n    iconList.add(index, GPToolBar.SEPARATOR_OBJECT);\r\n    buttonList.add(index, GPToolBar.SEPARATOR_OBJECT);\r\n    list.setSelectedIndex(index);\r\n    bIconMoved = true;\r\n}'),(2182,'ActionEvent evt','java.awt.event.ActionEvent',0,360,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel',3031,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel.deleteButtonActionPerformed(java.awt.event.ActionEvent)',0,'/**\r\n * Remove the selected button on the list.\r\n */\r\nprivate void deleteButtonActionPerformed(ActionEvent evt) {\r\n    int[] indexes = list.getSelectedIndices();\r\n    int[] indexesDeleted = new int[indexes.length];\r\n    if ((indexes.length) != 0) {\r\n        for (int i = 0; i < (indexes.length); i++) {\r\n            indexes[i] = (indexes[i]) - i;\r\n            Object icon = iconList.remove(indexes[i]);\r\n            Object button = buttonList.remove(indexes[i]);\r\n            if ((icon.getClass()) != (String.class)) {\r\n                deletedIconList.addElement(icon);\r\n                deletedButtonList.addElement(button);\r\n            }\r\n        }\r\n        listDeleted.setSelectedIndex(((deletedIconList.getSize()) - 1));\r\n        if ((iconList.getSize()) > 0)\r\n            list.setSelectedIndex(indexes[0]);\r\n\r\n        bHasChange = true;\r\n    }\r\n}'),(2183,'ActionEvent evt','java.awt.event.ActionEvent',0,360,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel',3029,'net.sourceforge.ganttproject.gui.options.LnFSettingsPanel.addButtonActionPerformed(java.awt.event.ActionEvent)',0,'/**\r\n * Add available button to the list.\r\n */\r\nprivate void addButtonActionPerformed(ActionEvent evt) {\r\n    int index = list.getSelectedIndex();\r\n    if (index == (-1))\r\n        index = 0;\r\n\r\n    int[] indexesDeleted = listDeleted.getSelectedIndices();\r\n    if ((indexesDeleted.length) != 0) {\r\n        int j = 0;\r\n        for (int i = 0; i < (indexesDeleted.length); i++) {\r\n            if ((indexesDeleted[i]) == 0) {\r\n                j = 1;\r\n                indexesDeleted[i] = indexesDeleted[i];\r\n            } else\r\n                indexesDeleted[i] = ((indexesDeleted[i]) - i) + j;\r\n\r\n            Object icon = GPToolBar.SEPARATOR_OBJECT;\r\n            Object button = GPToolBar.SEPARATOR_OBJECT;\r\n            if ((deletedIconList.getElementAt(indexesDeleted[i]).getClass()) != (String.class)) {\r\n                icon = deletedIconList.remove(indexesDeleted[i]);\r\n                button = deletedButtonList.remove(indexesDeleted[i]);\r\n            }\r\n            // System.out.println (index + \" + \" + i + \" = \" + index + i);\r\n            if ((iconList.getSize()) != (index + i)) {\r\n                iconList.add(((index + i) + 1), icon);\r\n                buttonList.add(((index + i) + 1), button);\r\n            } else {\r\n                iconList.add((index + i), icon);\r\n                buttonList.add((index + i), button);\r\n            }\r\n        }\r\n        if ((iconList.getSize()) != (index + 1))\r\n            list.setSelectedIndex((index + 1));\r\n        else\r\n            list.setSelectedIndex(index);\r\n\r\n        if ((deletedIconList.getSize()) <= (indexesDeleted[0]))\r\n            listDeleted.setSelectedIndex(0);\r\n        else\r\n            listDeleted.setSelectedIndex(indexesDeleted[0]);\r\n\r\n        bHasChange = true;\r\n    }\r\n}'),(2184,'OptionPageProvider provider','net.sourceforge.ganttproject.gui.options.model.OptionPageProvider',390,361,'net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel',3038,'net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.-init-(net.sourceforge.ganttproject.gui.options.model.OptionPageProvider,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public OptionPageProviderPanel(OptionPageProvider provider, IGanttProject project, UIFacade uiFacade) {\r\n    super(\"\", \"\", uiFacade.getMainFrame());\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myProvider = provider;\r\n    myGroups = myProvider.getOptionGroups(project, uiFacade);\r\n}'),(2185,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,361,'net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel',3038,'net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.-init-(net.sourceforge.ganttproject.gui.options.model.OptionPageProvider,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public OptionPageProviderPanel(OptionPageProvider provider, IGanttProject project, UIFacade uiFacade) {\r\n    super(\"\", \"\", uiFacade.getMainFrame());\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myProvider = provider;\r\n    myGroups = myProvider.getOptionGroups(project, uiFacade);\r\n}'),(2186,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,361,'net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel',3038,'net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.-init-(net.sourceforge.ganttproject.gui.options.model.OptionPageProvider,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public OptionPageProviderPanel(OptionPageProvider provider, IGanttProject project, UIFacade uiFacade) {\r\n    super(\"\", \"\", uiFacade.getMainFrame());\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n    myProvider = provider;\r\n    myGroups = myProvider.getOptionGroups(project, uiFacade);\r\n}'),(2187,'boolean askForApply','boolean',0,361,'net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel',3039,'net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.applyChanges(boolean)',0,'public boolean applyChanges(boolean askForApply) {\r\n    for (int i = 0; i < (myGroups.length); i++) {\r\n        myGroups[i].commit();\r\n    }\r\n    return true;\r\n}'),(2188,'Component parentComponent','java.awt.Component',0,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3044,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.-init-(java.awt.Component)',0,'public OptionsPageBuilder(Component parentComponent) {\r\n    myParentComponent = parentComponent;\r\n}'),(2189,'OptionsPageBuilder.I18N i18n','net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N',362,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3059,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setI18N(net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N)',0,'public void setI18N(OptionsPageBuilder.I18N i18n) {\r\n    myi18n = i18n;\r\n}'),(2190,'String optionKeyPrefix','java.lang.String',0,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3060,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setOptionKeyPrefix(java.lang.String)',0,'public void setOptionKeyPrefix(String optionKeyPrefix) {\r\n    myi18n.myOptionKeyPrefix = optionKeyPrefix;\r\n}'),(2191,'GPOptionGroup[] optionGroups','net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[]',0,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3046,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPage(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[],java.lang.String)',0,'public JComponent buildPage(GPOptionGroup[] optionGroups, String pageID) {\r\n    JPanel result = new JPanel(new BorderLayout());\r\n    result.setBorder(new EmptyBorder(0, 5, 0, 5));\r\n    TopPanel topPanel = new TopPanel(myi18n.getPageTitle(pageID), myi18n.getPageDescription(pageID));\r\n    topPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\r\n    result.add(topPanel, BorderLayout.NORTH);\r\n    JComponent planePage = buildPlanePage(optionGroups);\r\n    result.add(planePage, BorderLayout.CENTER);\r\n    return result;\r\n}'),(2192,'String pageID','java.lang.String',0,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3046,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPage(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[],java.lang.String)',0,'public JComponent buildPage(GPOptionGroup[] optionGroups, String pageID) {\r\n    JPanel result = new JPanel(new BorderLayout());\r\n    result.setBorder(new EmptyBorder(0, 5, 0, 5));\r\n    TopPanel topPanel = new TopPanel(myi18n.getPageTitle(pageID), myi18n.getPageDescription(pageID));\r\n    topPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\r\n    result.add(topPanel, BorderLayout.NORTH);\r\n    JComponent planePage = buildPlanePage(optionGroups);\r\n    result.add(planePage, BorderLayout.CENTER);\r\n    return result;\r\n}'),(2193,'GPOptionGroup[] optionGroups','net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[]',0,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3047,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPlanePage(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup[])',0,'public JComponent buildPlanePage(GPOptionGroup[] optionGroups) {\r\n    final JComponent optionsPanel = new JPanel(new SpringLayout());\r\n    for (int i = 0; i < (optionGroups.length); i++) {\r\n        optionsPanel.add(createGroupComponent(optionGroups[i]));\r\n    }\r\n    SpringUtilities.makeCompactGrid(optionsPanel, optionGroups.length, 1, 0, 0, 5, 5);\r\n    JPanel resultPanel = new JPanel(new BorderLayout());\r\n    resultPanel.add(optionsPanel, BorderLayout.NORTH);\r\n    resultPanel.addFocusListener(new FocusAdapter() {\r\n        public void focusGained(FocusEvent e) {\r\n            optionsPanel.getComponent(0).requestFocus();\r\n        }\r\n    });\r\n    return resultPanel;\r\n}'),(2194,'GPOptionGroup group','net.sourceforge.ganttproject.gui.options.model.GPOptionGroup',389,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3053,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createGroupComponent(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup)',0,'public JComponent createGroupComponent(GPOptionGroup group) {\r\n    JPanel optionsPanel = new JPanel(new SpringLayout());\r\n    if (group.isTitled()) {\r\n        Border lineBorder = BorderFactory.createMatteBorder(1, 0, 0, 0, Color.BLACK);\r\n        optionsPanel.setBorder(BorderFactory.createTitledBorder(lineBorder, myi18n.getOptionGroupLabel(group)));\r\n    }\r\n    GPOption[] options = group.getOptions();\r\n    for (int i = 0; i < (options.length); i++) {\r\n        GPOption nextOption = options[i];\r\n        final Component nextComponent = createOptionComponent(nextOption);\r\n        if (needsLabel(nextOption)) {\r\n            Component nextLabel = createOptionLabel(options[i]);\r\n            optionsPanel.add(nextLabel);\r\n            optionsPanel.add(nextComponent);\r\n        } else {\r\n            optionsPanel.add(nextComponent);\r\n            optionsPanel.add(new JPanel());\r\n        }\r\n        if (i == 0) {\r\n            optionsPanel.addFocusListener(new FocusAdapter() {\r\n                public void focusGained(FocusEvent e) {\r\n                    super.focusGained(e);\r\n                    nextComponent.requestFocus();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    if ((options.length) > 0) {\r\n        SpringUtilities.makeCompactGrid(optionsPanel, options.length, 2, 0, 0, 3, 3);\r\n    }\r\n    return optionsPanel;\r\n}'),(2195,'GPOption nextOption','net.sourceforge.ganttproject.gui.options.model.GPOption',387,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3058,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.needsLabel(net.sourceforge.ganttproject.gui.options.model.GPOption)',0,'private boolean needsLabel(GPOption nextOption) {\r\n    return false == (nextOption instanceof BooleanOption);\r\n}'),(2196,'GPOption option','net.sourceforge.ganttproject.gui.options.model.GPOption',387,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3056,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createStandaloneOptionPanel(net.sourceforge.ganttproject.gui.options.model.GPOption)',0,'public Component createStandaloneOptionPanel(GPOption option) {\r\n    JPanel optionPanel = new JPanel(new BorderLayout());\r\n    Component optionComponent = createOptionComponent(option);\r\n    if (needsLabel(option)) {\r\n        optionPanel.add(createOptionLabel(option), BorderLayout.WEST);\r\n        optionPanel.add(optionComponent, BorderLayout.CENTER);\r\n    } else {\r\n        optionPanel.add(optionComponent, BorderLayout.WEST);\r\n    }\r\n    JPanel result = new JPanel(new BorderLayout());\r\n    result.add(optionPanel, BorderLayout.NORTH);\r\n    return result;\r\n}'),(2197,'GPOption option','net.sourceforge.ganttproject.gui.options.model.GPOption',387,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3055,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createOptionLabel(net.sourceforge.ganttproject.gui.options.model.GPOption)',0,'private Component createOptionLabel(GPOption option) {\r\n    JLabel nextLabel = new JLabel(myi18n.getOptionLabel(option));\r\n    nextLabel.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 3));\r\n    return nextLabel;\r\n}'),(2198,'GPOption option','net.sourceforge.ganttproject.gui.options.model.GPOption',387,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3054,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createOptionComponent(net.sourceforge.ganttproject.gui.options.model.GPOption)',0,'private Component createOptionComponent(GPOption option) {\r\n    Component result = null;\r\n    if (option instanceof EnumerationOption) {\r\n        result = createEnumerationComponent(((EnumerationOption) (option)));\r\n    } else\r\n        if (option instanceof BooleanOption) {\r\n            result = createBooleanComponent(((BooleanOption) (option)));\r\n        } else\r\n            if (option instanceof ColorOption) {\r\n                result = createColorComponent(((ColorOption) (option)));\r\n            } else\r\n                if (option instanceof DateOption) {\r\n                    result = createDateComponent(((DateOption) (option)));\r\n                } else\r\n                    if (option instanceof GPOptionGroup) {\r\n                        result = createButtonComponent(((GPOptionGroup) (option)));\r\n                    } else\r\n                        if (option instanceof StringOption) {\r\n                            result = createStringComponent(((StringOption) (option)));\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n    if (result == null) {\r\n        result = new JLabel((\"Unknown option class=\" + (option.getClass())));\r\n    }\r\n    return result;\r\n}'),(2199,'final StringOption option','net.sourceforge.ganttproject.gui.options.model.StringOption',391,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3057,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createStringComponent(net.sourceforge.ganttproject.gui.options.model.StringOption)',0,'private Component createStringComponent(final StringOption option) {\r\n    final JTextField result = new JTextField(option.getValue());\r\n    result.getDocument().addDocumentListener(new DocumentListener() {\r\n        public void insertUpdate(DocumentEvent e) {\r\n            option.setValue(result.getText());\r\n        }\r\n\r\n        public void removeUpdate(DocumentEvent e) {\r\n            option.setValue(result.getText());\r\n        }\r\n\r\n        public void changedUpdate(DocumentEvent e) {\r\n            option.setValue(result.getText());\r\n        }\r\n    });\r\n    return result;\r\n}'),(2200,'GPOptionGroup optionGroup','net.sourceforge.ganttproject.gui.options.model.GPOptionGroup',389,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3049,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createButtonComponent(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup)',0,'private Component createButtonComponent(GPOptionGroup optionGroup) {\r\n    Action action = new AbstractAction(myi18n.getAdvancedActionTitle()) {\r\n        public void actionPerformed(ActionEvent e) {\r\n            System.err.println(\"[OptionsPageBuilder] createButtonComponent: \");\r\n        }\r\n    };\r\n    JButton result = new JButton(action);\r\n    return result;\r\n}'),(2201,'BooleanOption option','net.sourceforge.ganttproject.gui.options.model.BooleanOption',373,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3048,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createBooleanComponent(net.sourceforge.ganttproject.gui.options.model.BooleanOption)',0,'private Component createBooleanComponent(BooleanOption option) {\r\n    JCheckBox result = new JCheckBox(new BooleanOptionAction(option));\r\n    result.setText(myi18n.getOptionLabel(option));\r\n    result.setHorizontalAlignment(JCheckBox.LEFT);\r\n    result.setHorizontalTextPosition(SwingConstants.TRAILING);\r\n    result.setSelected(option.isChecked());\r\n    ComponentOrientation componentOrientation = GanttLanguage.getInstance().getComponentOrientation();\r\n    result.setComponentOrientation(componentOrientation);\r\n    return result;\r\n}'),(2202,'EnumerationOption option','net.sourceforge.ganttproject.gui.options.model.EnumerationOption',384,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3052,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createEnumerationComponent(net.sourceforge.ganttproject.gui.options.model.EnumerationOption)',0,'private JComboBox createEnumerationComponent(EnumerationOption option) {\r\n    ComboBoxModel model = new EnumerationOptionComboBoxModel(option);\r\n    JComboBox result = new JComboBox(model);\r\n    return result;\r\n}'),(2203,'final ColorOption option','net.sourceforge.ganttproject.gui.options.model.ColorOption',377,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3050,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createColorComponent(net.sourceforge.ganttproject.gui.options.model.ColorOption)',0,'private Component createColorComponent(final ColorOption option) {\r\n    final JButton colorButton = new JButton();\r\n    Action action = new AbstractAction(myi18n.getColorButtonText(option)) {\r\n        public void actionPerformed(ActionEvent e) {\r\n            ActionListener onOkPressing = new ActionListener() {\r\n                public void actionPerformed(ActionEvent e) {\r\n                    Color color = OptionsPageBuilder.ourColorChooser.getColor();\r\n                    colorButton.setBackground(color);\r\n                    option.setValue(color);\r\n                }\r\n            };\r\n            ActionListener onCancelPressing = new ActionListener() {\r\n                public void actionPerformed(ActionEvent e) {\r\n                    // nothing to do for \"Cancel\"\r\n                }\r\n            };\r\n            JDialog dialog = JColorChooser.createDialog(myParentComponent, myi18n.getColorChooserTitle(option), true, OptionsPageBuilder.ourColorChooser, onOkPressing, onCancelPressing);\r\n            OptionsPageBuilder.ourColorChooser.setColor(colorButton.getBackground());\r\n            dialog.setVisible(true);\r\n        }\r\n    };\r\n    colorButton.setAction(action);\r\n    colorButton.setBackground(option.getValue());\r\n    return colorButton;\r\n}'),(2204,'final DateOption option','net.sourceforge.ganttproject.gui.options.model.DateOption',378,363,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder',3051,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createDateComponent(net.sourceforge.ganttproject.gui.options.model.DateOption)',0,'private Component createDateComponent(final DateOption option) {\r\n    final JXDatePicker result = new JXDatePicker();\r\n    result.setDate(option.getValue());\r\n    result.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            option.setValue(((JXDatePicker) (e.getSource())).getDate());\r\n        }\r\n    });\r\n    if (option instanceof ChangeValueDispatcher) {\r\n        ((ChangeValueDispatcher) (option)).addChangeValueListener(new ChangeValueListener() {\r\n            public void changeValue(ChangeValueEvent event) {\r\n                assert (event.getNewValue()) instanceof Date;\r\n                result.setDate(((Date) (event.getNewValue())));\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}'),(2205,'String key','java.lang.String',0,362,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N',3069,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N.getValue(java.lang.String)',0,'protected String getValue(String key) {\r\n    return GanttLanguage.getInstance().getText(key);\r\n}'),(2206,'String pageID','java.lang.String',0,362,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N',3068,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N.getPageTitle(java.lang.String)',0,'public String getPageTitle(String pageID) {\r\n    return GanttLanguage.getInstance().getText((((myOptionPageKeyPrefix) + pageID) + \".title\"));\r\n}'),(2207,'String pageID','java.lang.String',0,362,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N',3067,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N.getPageDescription(java.lang.String)',0,'public String getPageDescription(String pageID) {\r\n    return GanttLanguage.getInstance().getText((((myOptionPageKeyPrefix) + pageID) + \".description\"));\r\n}'),(2208,'GPOptionGroup group','net.sourceforge.ganttproject.gui.options.model.GPOptionGroup',389,362,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N',3065,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N.getOptionGroupLabel(net.sourceforge.ganttproject.gui.options.model.GPOptionGroup)',0,'public String getOptionGroupLabel(GPOptionGroup group) {\r\n    return GanttLanguage.getInstance().getText((((myOptionGroupKeyPrefix) + (group.getID())) + \".label\"));\r\n}'),(2209,'GPOption option','net.sourceforge.ganttproject.gui.options.model.GPOption',387,362,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N',3066,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N.getOptionLabel(net.sourceforge.ganttproject.gui.options.model.GPOption)',0,'public String getOptionLabel(GPOption option) {\r\n    return GanttLanguage.getInstance().getText((((myOptionKeyPrefix) + (option.getID())) + \".label\"));\r\n}'),(2210,'ColorOption colorOption','net.sourceforge.ganttproject.gui.options.model.ColorOption',377,362,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N',3063,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N.getColorButtonText(net.sourceforge.ganttproject.gui.options.model.ColorOption)',0,'String getColorButtonText(ColorOption colorOption) {\r\n    return GanttLanguage.getInstance().getText(\"colorButton\");\r\n}'),(2211,'ColorOption colorOption','net.sourceforge.ganttproject.gui.options.model.ColorOption',377,362,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N',3064,'net.sourceforge.ganttproject.gui.options.OptionsPageBuilder$I18N.getColorChooserTitle(net.sourceforge.ganttproject.gui.options.model.ColorOption)',0,'String getColorChooserTitle(ColorOption colorOption) {\r\n    return GanttLanguage.getInstance().getText(\"selectColor\");\r\n}'),(2212,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,364,'net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel',3070,'net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic ParametersSettingsPanel(GanttProject parent) {\r\n    super(GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"parameters\")), GanttLanguage.getInstance().getText(\"settingsParameters\"), parent);\r\n    appli = parent;\r\n    // automatic launch of task properties\r\n    JPanel autoPanel = new JPanel(new BorderLayout());\r\n    autoPanel.add((cbAutomatic = new JCheckBox()), BorderLayout.WEST);\r\n    autoPanel.add(new JLabel(language.getText(\"automaticLaunch\")), BorderLayout.CENTER);\r\n    vb.add(autoPanel);\r\n    vb.add(new JPanel());\r\n    // move on the graphic area with mouse option\r\n    // JPanel movePanel = new JPanel(new BorderLayout());\r\n    // movePanel.add(cbDrag = new JCheckBox(), BorderLayout.WEST);\r\n    // movePanel.add(new JLabel(language.getText(\"dragTime\")),\r\n    // BorderLayout.CENTER);\r\n    // vb.add(movePanel);\r\n    // vb.add(new JPanel());\r\n    // webdav time block\r\n    JPanel webDavPanel = new JPanel(new BorderLayout());\r\n    webDavPanel.add((spLockDAV = new JSpinner(new SpinnerNumberModel(240, 1, 1440, 1))), BorderLayout.WEST);\r\n    webDavPanel.add(new JLabel(language.getText(\"lockDAV\")), BorderLayout.CENTER);\r\n    vb.add(webDavPanel);\r\n    vb.add(new JPanel());\r\n    // task name prefix\r\n    JPanel taskPrefixPanel = new JPanel(new BorderLayout());\r\n    taskPrefixPanel.add(new JLabel(language.getText(\"taskNamePrefix\")), BorderLayout.WEST);\r\n    taskPrefixPanel.add((tfTaskPrefix = new JTextField()), BorderLayout.CENTER);\r\n    vb.add(taskPrefixPanel);\r\n    vb.add(new JPanel());\r\n    // number of undoes\r\n    // JPanel undoNumberPanel = new JPanel(new BorderLayout());\r\n    // undoNumberPanel.add(spUndoNumber = new JSpinner(new\r\n    // SpinnerNumberModel(50, 1, 200, 1)), BorderLayout.WEST);\r\n    // undoNumberPanel.add (new JLabel(language.getText(\"undoNumber\")),\r\n    // BorderLayout.CENTER);\r\n    // vb.add(undoNumberPanel);\r\n    // vb.add(new JPanel());\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2213,'boolean askForApply','boolean',0,364,'net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel',3071,'net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel.applyChanges(boolean)',0,'/**\r\n * This method check if the value has changed, and assk for commit changes.\r\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    if ((((getAutomatic()) == (appli.getOptions().getAutomatic())) && // getDragTime() == appli.getOptions().getDragTime() &&\r\n    ((getLockDAVMinutes()) == (appli.getOptions().getLockDAVMinutes()))) && // getUndoNumber() == appli.getOptions().getUndoNumber() &&\r\n    (((getTaskNamePrefix()) == null) || (getTaskNamePrefix().equals(appli.getOptions().getTrueTaskNamePrefix())))) {\r\n        bHasChange = false;\r\n    } else {\r\n        bHasChange = true;\r\n        if ((!askForApply) || (askForApply && (askForApplyChanges()))) {\r\n            appli.getOptions().setAutomatic(getAutomatic());\r\n            // appli.getOptions().setDragTime(getDragTime());\r\n            appli.getOptions().setTaskNamePrefix(getTaskNamePrefix());\r\n            // WebDAV Locking\r\n            appli.getOptions().setLockDAVMinutes(getLockDAVMinutes());\r\n            // changeUndoNumber ();\r\n            HttpDocument.setLockDAVMinutes(getLockDAVMinutes());\r\n        }\r\n    }\r\n    return bHasChange;\r\n}'),(2214,'Frame owner','java.awt.Frame',0,365,'net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel',3076,'net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.-init-(java.awt.Frame,net.sourceforge.ganttproject.IGanttProject)',0,'/**\r\n * Default constructor.\r\n */\r\npublic ProjectSettingsPanel(Frame owner, IGanttProject project) {\r\n    super(GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"project\")), GanttLanguage.getInstance().getText(\"settingsProject\"), owner);\r\n    myProject = project;\r\n    Box vbproject = Box.createVerticalBox();\r\n    /* JPanel filePanel = new JPanel(new BorderLayout()); filePanel.add(new\n    JLabel(language.getText(\"file\")), BorderLayout.WEST);\n    vbproject.add(filePanel); vbproject.add(tfFile = new JTextField());\n    tfFile.setEditable(false); vbproject.add(new JPanel());\n     */\r\n    JPanel namePanel = new JPanel(new BorderLayout());\r\n    namePanel.add(new JLabel(language.getText(\"name\")), BorderLayout.WEST);\r\n    vbproject.add(namePanel);\r\n    vbproject.add((tfName = new JTextField()));\r\n    vbproject.add(new JPanel());\r\n    JPanel orgaPanel = new JPanel(new BorderLayout());\r\n    orgaPanel.add(new JLabel(language.getText(\"organization\")), BorderLayout.WEST);\r\n    vbproject.add(orgaPanel);\r\n    vbproject.add((tfOrganization = new JTextField()));\r\n    vbproject.add(new JPanel());\r\n    tfWebLink = new JTextField();\r\n    JButton bWeb = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/web_16.gif\")));\r\n    bWeb.setToolTipText(GanttProject.getToolTip(language.getText(\"openWebLink\")));\r\n    bWeb.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            // link to open the web link\r\n            if (!(BrowserControl.displayURL(tfWebLink.getText()))) {\r\n                GanttDialogInfo gdi = new GanttDialogInfo(null, GanttDialogInfo.ERROR, GanttDialogInfo.YES_OPTION, language.getText(\"msg4\"), language.getText(\"error\"));\r\n                gdi.show();\r\n            }\r\n        }\r\n    });\r\n    JPanel webPanel = new JPanel(new BorderLayout());\r\n    webPanel.add(new JLabel(language.getText(\"webLink\")), BorderLayout.WEST);\r\n    webPanel.add(bWeb, BorderLayout.EAST);\r\n    vbproject.add(webPanel);\r\n    vbproject.add(tfWebLink);\r\n    vbproject.add(new JPanel());\r\n    JPanel descrPanel = new JPanel(new BorderLayout());\r\n    descrPanel.add(new JLabel(language.getText(\"shortDescription\")), BorderLayout.WEST);\r\n    vbproject.add(descrPanel);\r\n    taDescr = new JTextArea(12, 25);\r\n    taDescr.setLineWrap(true);\r\n    taDescr.setWrapStyleWord(true);\r\n    JScrollPane scpArea = new JScrollPane(taDescr);\r\n    vbproject.add(scpArea);\r\n    JPanel projectPanel = new JPanel(new BorderLayout());\r\n    projectPanel.add(vbproject, BorderLayout.NORTH);\r\n    vb.add(projectPanel);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2215,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,365,'net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel',3076,'net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.-init-(java.awt.Frame,net.sourceforge.ganttproject.IGanttProject)',0,'/**\r\n * Default constructor.\r\n */\r\npublic ProjectSettingsPanel(Frame owner, IGanttProject project) {\r\n    super(GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"project\")), GanttLanguage.getInstance().getText(\"settingsProject\"), owner);\r\n    myProject = project;\r\n    Box vbproject = Box.createVerticalBox();\r\n    /* JPanel filePanel = new JPanel(new BorderLayout()); filePanel.add(new\n    JLabel(language.getText(\"file\")), BorderLayout.WEST);\n    vbproject.add(filePanel); vbproject.add(tfFile = new JTextField());\n    tfFile.setEditable(false); vbproject.add(new JPanel());\n     */\r\n    JPanel namePanel = new JPanel(new BorderLayout());\r\n    namePanel.add(new JLabel(language.getText(\"name\")), BorderLayout.WEST);\r\n    vbproject.add(namePanel);\r\n    vbproject.add((tfName = new JTextField()));\r\n    vbproject.add(new JPanel());\r\n    JPanel orgaPanel = new JPanel(new BorderLayout());\r\n    orgaPanel.add(new JLabel(language.getText(\"organization\")), BorderLayout.WEST);\r\n    vbproject.add(orgaPanel);\r\n    vbproject.add((tfOrganization = new JTextField()));\r\n    vbproject.add(new JPanel());\r\n    tfWebLink = new JTextField();\r\n    JButton bWeb = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/web_16.gif\")));\r\n    bWeb.setToolTipText(GanttProject.getToolTip(language.getText(\"openWebLink\")));\r\n    bWeb.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            // link to open the web link\r\n            if (!(BrowserControl.displayURL(tfWebLink.getText()))) {\r\n                GanttDialogInfo gdi = new GanttDialogInfo(null, GanttDialogInfo.ERROR, GanttDialogInfo.YES_OPTION, language.getText(\"msg4\"), language.getText(\"error\"));\r\n                gdi.show();\r\n            }\r\n        }\r\n    });\r\n    JPanel webPanel = new JPanel(new BorderLayout());\r\n    webPanel.add(new JLabel(language.getText(\"webLink\")), BorderLayout.WEST);\r\n    webPanel.add(bWeb, BorderLayout.EAST);\r\n    vbproject.add(webPanel);\r\n    vbproject.add(tfWebLink);\r\n    vbproject.add(new JPanel());\r\n    JPanel descrPanel = new JPanel(new BorderLayout());\r\n    descrPanel.add(new JLabel(language.getText(\"shortDescription\")), BorderLayout.WEST);\r\n    vbproject.add(descrPanel);\r\n    taDescr = new JTextArea(12, 25);\r\n    taDescr.setLineWrap(true);\r\n    taDescr.setWrapStyleWord(true);\r\n    JScrollPane scpArea = new JScrollPane(taDescr);\r\n    vbproject.add(scpArea);\r\n    JPanel projectPanel = new JPanel(new BorderLayout());\r\n    projectPanel.add(vbproject, BorderLayout.NORTH);\r\n    vb.add(projectPanel);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2216,'boolean askForApply','boolean',0,365,'net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel',3078,'net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.applyChanges(boolean)',0,'/**\r\n * This method check if the value has changed, and assk for commit changes.\r\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    if ((((myProject.getProjectName().equals(tfName.getText())) && (myProject.getOrganization().equals(tfOrganization.getText()))) && (myProject.getWebLink().equals(tfWebLink.getText()))) && (myProject.getDescription().equals(taDescr.getText()))) {\r\n        bHasChange = false;\r\n        // no changes\r\n    } else {\r\n        bHasChange = true;\r\n        // apply changes\r\n        if ((!askForApply) || (askForApply && (askForApplyChanges()))) {\r\n            myProject.setProjectName(getProjectName());\r\n            myProject.setDescription(getProjectDescription());\r\n            myProject.setOrganization(getProjectOrganization());\r\n            myProject.setWebLink(getWebLink());\r\n        }\r\n    }\r\n    return bHasChange;\r\n}'),(2217,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,366,'net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider',3086,'net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.getOptionGroups(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GPOptionGroup[] getOptionGroups(IGanttProject project, UIFacade uiFacade) {\r\n    return uiFacade.getResourceChart().getOptionGroups();\r\n}'),(2218,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,366,'net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider',3086,'net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.getOptionGroups(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public GPOptionGroup[] getOptionGroups(IGanttProject project, UIFacade uiFacade) {\r\n    return uiFacade.getResourceChart().getOptionGroups();\r\n}'),(2219,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,366,'net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider',3085,'net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.buildPageComponent(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public Component buildPageComponent(IGanttProject project, UIFacade uiFacade) {\r\n    throw new UnsupportedOperationException();\r\n}'),(2220,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,366,'net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider',3085,'net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.buildPageComponent(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public Component buildPageComponent(IGanttProject project, UIFacade uiFacade) {\r\n    throw new UnsupportedOperationException();\r\n}'),(2221,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,367,'net.sourceforge.ganttproject.gui.options.RolesSettingsPanel',3090,'net.sourceforge.ganttproject.gui.options.RolesSettingsPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic RolesSettingsPanel(GanttProject parent) {\r\n    super(GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"resourceRole\")), GanttLanguage.getInstance().getText(\"settingsRoles\"), parent);\r\n    appli = parent;\r\n    myRolesModel = new RolesTableModel();\r\n    rolesTable = new JTable(myRolesModel);\r\n    rolesTable.setPreferredScrollableViewportSize(new Dimension(400, 350));\r\n    rolesTable.setRowHeight(23);\r\n    rolesTable.getColumnModel().getColumn(0).setPreferredWidth(30);\r\n    rolesTable.getColumnModel().getColumn(1).setPreferredWidth(370);\r\n    vb.add(new JScrollPane(rolesTable));\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2222,'boolean askForApply','boolean',0,367,'net.sourceforge.ganttproject.gui.options.RolesSettingsPanel',3091,'net.sourceforge.ganttproject.gui.options.RolesSettingsPanel.applyChanges(boolean)',0,'/**\r\n * This method check if the value has changed, and assk for commit changes.\r\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    System.err.println(\"[RolesSettingsPanel] applyChanges(): \");\r\n    RoleManager roleManager = myRolesModel.getRoleManager();\r\n    bHasChange = myRolesModel.hasChanges();\r\n    if (!(bHasChange)) {\r\n        System.err.println(\"[RolesSettingsPanel] applyChanges(): no changes\");\r\n        return bHasChange;\r\n    }\r\n    myRolesModel.applyChanges();\r\n    appli.setAskForSave(true);\r\n    return bHasChange;\r\n}'),(2223,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,368,'net.sourceforge.ganttproject.gui.options.SettingsDialog',3093,'net.sourceforge.ganttproject.gui.options.SettingsDialog.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic SettingsDialog(GanttProject parent) {\r\n    super(parent, GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"settings\")), true, new WelcomeSettingsPanel(parent));\r\n    restoreButton = new JButton(language.getText(\"restoreDefaults\"));\r\n    restoreButton.setName(\"restore\");\r\n    restoreButton.addActionListener(this);\r\n    if ((southPanel) != null) {\r\n        southPanel.add(restoreButton);\r\n    }\r\n    addWindowListener(new WindowAdapter() {\r\n        public void windowClosing(WindowEvent e) {\r\n            super.windowClosing(e);\r\n            if ((settingPanel) != null) {\r\n                settingPanel.rollback();\r\n            }\r\n        }\r\n    });\r\n}'),(2224,'TreeSelectionEvent e','javax.swing.event.TreeSelectionEvent',0,368,'net.sourceforge.ganttproject.gui.options.SettingsDialog',3098,'net.sourceforge.ganttproject.gui.options.SettingsDialog.valueChanged(javax.swing.event.TreeSelectionEvent)',0,'/**\r\n * Callback for the tree selection event.\r\n */\r\npublic void valueChanged(TreeSelectionEvent e) {\r\n    if (reinit)\r\n        return;\r\n\r\n    DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (e.getPath().getLastPathComponent()));\r\n    boolean bHasChange = settingPanel.applyChanges(true);\r\n    // construct the sections\r\n    if (((settingPanel) instanceof LanguageSettingsPanel) && bHasChange) {\r\n        reinit = true;\r\n        rootNode.removeAllChildren();\r\n        treeModel.setRoot(rootNode);\r\n        treeModel.reload();\r\n        constructSections();\r\n        reinit = false;\r\n    }\r\n    // - remove the settingPanel\r\n    mainPanel2.remove(0);\r\n    Box vb = Box.createVerticalBox();\r\n    Object userObject = node.getUserObject();\r\n    if (userObject instanceof OptionPageProvider) {\r\n        settingPanel = new OptionPageProviderPanel(((OptionPageProvider) (userObject)), getProject(), getUIFacade());\r\n    } else {\r\n        // - ask the settingPanel if parameters are changed\r\n        // - Create the new panel\r\n        String sNode = ((String) (node.getUserObject()));\r\n        if (sNode.equals(language.getText(\"languages\")))\r\n            settingPanel = new LanguageSettingsPanel(appli);\r\n        else\r\n            if (sNode.equals(GanttProject.correctLabel(language.getText(\"project\"))))\r\n                settingPanel = new ProjectSettingsPanel(((Frame) (getOwner())), getProject());\r\n            else\r\n                if (sNode.equals(GanttProject.correctLabel(language.getText(\"parameters\"))))\r\n                    settingPanel = new ParametersSettingsPanel(appli);\r\n                else\r\n                    if (sNode.equals(GanttProject.correctLabel(language.getText(\"resourceRole\"))))\r\n                        settingPanel = new RolesSettingsPanel(appli);\r\n                    else\r\n                        if (sNode.equals(language.getText(\"looknfeel\")))\r\n                            settingPanel = new LnFSettingsPanel(appli);\r\n                        else\r\n                            if (sNode.equals(GanttProject.correctLabel(language.getText(\"export\"))))\r\n                                settingPanel = new ExportSettingsPanel(appli);\r\n                            else\r\n                                if (sNode.equals(\"csv\"))\r\n                                    settingPanel = new CSVSettingsPanel(appli);\r\n                                else\r\n                                    settingPanel = new WelcomeSettingsPanel(appli);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        vb.add(new TopPanel((\"  \" + (settingPanel.getTitle())), settingPanel.getComment()));\r\n    }\r\n    // - initialize the panel\r\n    settingPanel.initialize();\r\n    vb.add(settingPanel.getComponent());\r\n    // - add the settingPanel into the main Panel\r\n    mainPanel2.add(vb, 0);\r\n    mainPanel2.repaint();\r\n    mainPanel2.validate();// valide the changes\r\n\r\n}'),(2225,'ActionEvent e','java.awt.event.ActionEvent',0,368,'net.sourceforge.ganttproject.gui.options.SettingsDialog',3095,'net.sourceforge.ganttproject.gui.options.SettingsDialog.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    super.actionPerformed(e);\r\n    if ((e.getSource()) == (restoreButton)) {\r\n        appli.restoreOptions();\r\n        // refresh the current panel\r\n        settingPanel.rollback();\r\n    }\r\n}'),(2226,'Component c','java.awt.Component',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3103,'net.sourceforge.ganttproject.gui.options.SpringUtilities.printSizes(java.awt.Component)',0,'/**\r\n * A debugging utility that prints to stdout the components minimum,\r\n * preferred, and maximum sizes.\r\n */\r\npublic static void printSizes(Component c) {\r\n    System.out.println((\"minimumSize = \" + (c.getMinimumSize())));\r\n    System.out.println((\"preferredSize = \" + (c.getPreferredSize())));\r\n    System.out.println((\"maximumSize = \" + (c.getMaximumSize())));\r\n}'),(2227,'Container parent','java.awt.Container',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3102,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component is as big as the maximum\r\n * preferred width and height of the components. The parent is made just big\r\n * enough to fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    Spring xPadSpring = Spring.constant(xPad);\r\n    Spring yPadSpring = Spring.constant(yPad);\r\n    Spring initialXSpring = Spring.constant(initialX);\r\n    Spring initialYSpring = Spring.constant(initialY);\r\n    int max = rows * cols;\r\n    // Calculate Springs that are the max of the width/height so that all\r\n    // cells have the same size.\r\n    Spring maxWidthSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    Spring maxHeightSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    for (int i = 1; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());\r\n        maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());\r\n    }\r\n    // Apply the new width/height Spring. This forces all the\r\n    // components to have the same size.\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        cons.setWidth(maxWidthSpring);\r\n        cons.setHeight(maxHeightSpring);\r\n    }\r\n    // Then adjust the x/y constraints of all the cells so that they\r\n    // are aligned in a grid.\r\n    SpringLayout.Constraints lastCons = null;\r\n    SpringLayout.Constraints lastRowCons = null;\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        if ((i % cols) == 0) {\r\n            // start of new row\r\n            lastRowCons = lastCons;\r\n            cons.setX(initialXSpring);\r\n        } else {\r\n            // x position depends on previous component\r\n            cons.setX(Spring.sum(lastCons.getConstraint(SpringLayout.EAST), xPadSpring));\r\n        }\r\n        if ((i / cols) == 0) {\r\n            // first row\r\n            cons.setY(initialYSpring);\r\n        } else {\r\n            // y position depends on previous row\r\n            cons.setY(Spring.sum(lastRowCons.getConstraint(SpringLayout.SOUTH), yPadSpring));\r\n        }\r\n        lastCons = cons;\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, Spring.sum(Spring.constant(yPad), lastCons.getConstraint(SpringLayout.SOUTH)));\r\n    pCons.setConstraint(SpringLayout.EAST, Spring.sum(Spring.constant(xPad), lastCons.getConstraint(SpringLayout.EAST)));\r\n}'),(2228,'int rows','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3102,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component is as big as the maximum\r\n * preferred width and height of the components. The parent is made just big\r\n * enough to fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    Spring xPadSpring = Spring.constant(xPad);\r\n    Spring yPadSpring = Spring.constant(yPad);\r\n    Spring initialXSpring = Spring.constant(initialX);\r\n    Spring initialYSpring = Spring.constant(initialY);\r\n    int max = rows * cols;\r\n    // Calculate Springs that are the max of the width/height so that all\r\n    // cells have the same size.\r\n    Spring maxWidthSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    Spring maxHeightSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    for (int i = 1; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());\r\n        maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());\r\n    }\r\n    // Apply the new width/height Spring. This forces all the\r\n    // components to have the same size.\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        cons.setWidth(maxWidthSpring);\r\n        cons.setHeight(maxHeightSpring);\r\n    }\r\n    // Then adjust the x/y constraints of all the cells so that they\r\n    // are aligned in a grid.\r\n    SpringLayout.Constraints lastCons = null;\r\n    SpringLayout.Constraints lastRowCons = null;\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        if ((i % cols) == 0) {\r\n            // start of new row\r\n            lastRowCons = lastCons;\r\n            cons.setX(initialXSpring);\r\n        } else {\r\n            // x position depends on previous component\r\n            cons.setX(Spring.sum(lastCons.getConstraint(SpringLayout.EAST), xPadSpring));\r\n        }\r\n        if ((i / cols) == 0) {\r\n            // first row\r\n            cons.setY(initialYSpring);\r\n        } else {\r\n            // y position depends on previous row\r\n            cons.setY(Spring.sum(lastRowCons.getConstraint(SpringLayout.SOUTH), yPadSpring));\r\n        }\r\n        lastCons = cons;\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, Spring.sum(Spring.constant(yPad), lastCons.getConstraint(SpringLayout.SOUTH)));\r\n    pCons.setConstraint(SpringLayout.EAST, Spring.sum(Spring.constant(xPad), lastCons.getConstraint(SpringLayout.EAST)));\r\n}'),(2229,'int cols','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3102,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component is as big as the maximum\r\n * preferred width and height of the components. The parent is made just big\r\n * enough to fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    Spring xPadSpring = Spring.constant(xPad);\r\n    Spring yPadSpring = Spring.constant(yPad);\r\n    Spring initialXSpring = Spring.constant(initialX);\r\n    Spring initialYSpring = Spring.constant(initialY);\r\n    int max = rows * cols;\r\n    // Calculate Springs that are the max of the width/height so that all\r\n    // cells have the same size.\r\n    Spring maxWidthSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    Spring maxHeightSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    for (int i = 1; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());\r\n        maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());\r\n    }\r\n    // Apply the new width/height Spring. This forces all the\r\n    // components to have the same size.\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        cons.setWidth(maxWidthSpring);\r\n        cons.setHeight(maxHeightSpring);\r\n    }\r\n    // Then adjust the x/y constraints of all the cells so that they\r\n    // are aligned in a grid.\r\n    SpringLayout.Constraints lastCons = null;\r\n    SpringLayout.Constraints lastRowCons = null;\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        if ((i % cols) == 0) {\r\n            // start of new row\r\n            lastRowCons = lastCons;\r\n            cons.setX(initialXSpring);\r\n        } else {\r\n            // x position depends on previous component\r\n            cons.setX(Spring.sum(lastCons.getConstraint(SpringLayout.EAST), xPadSpring));\r\n        }\r\n        if ((i / cols) == 0) {\r\n            // first row\r\n            cons.setY(initialYSpring);\r\n        } else {\r\n            // y position depends on previous row\r\n            cons.setY(Spring.sum(lastRowCons.getConstraint(SpringLayout.SOUTH), yPadSpring));\r\n        }\r\n        lastCons = cons;\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, Spring.sum(Spring.constant(yPad), lastCons.getConstraint(SpringLayout.SOUTH)));\r\n    pCons.setConstraint(SpringLayout.EAST, Spring.sum(Spring.constant(xPad), lastCons.getConstraint(SpringLayout.EAST)));\r\n}'),(2230,'int initialX','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3102,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component is as big as the maximum\r\n * preferred width and height of the components. The parent is made just big\r\n * enough to fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    Spring xPadSpring = Spring.constant(xPad);\r\n    Spring yPadSpring = Spring.constant(yPad);\r\n    Spring initialXSpring = Spring.constant(initialX);\r\n    Spring initialYSpring = Spring.constant(initialY);\r\n    int max = rows * cols;\r\n    // Calculate Springs that are the max of the width/height so that all\r\n    // cells have the same size.\r\n    Spring maxWidthSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    Spring maxHeightSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    for (int i = 1; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());\r\n        maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());\r\n    }\r\n    // Apply the new width/height Spring. This forces all the\r\n    // components to have the same size.\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        cons.setWidth(maxWidthSpring);\r\n        cons.setHeight(maxHeightSpring);\r\n    }\r\n    // Then adjust the x/y constraints of all the cells so that they\r\n    // are aligned in a grid.\r\n    SpringLayout.Constraints lastCons = null;\r\n    SpringLayout.Constraints lastRowCons = null;\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        if ((i % cols) == 0) {\r\n            // start of new row\r\n            lastRowCons = lastCons;\r\n            cons.setX(initialXSpring);\r\n        } else {\r\n            // x position depends on previous component\r\n            cons.setX(Spring.sum(lastCons.getConstraint(SpringLayout.EAST), xPadSpring));\r\n        }\r\n        if ((i / cols) == 0) {\r\n            // first row\r\n            cons.setY(initialYSpring);\r\n        } else {\r\n            // y position depends on previous row\r\n            cons.setY(Spring.sum(lastRowCons.getConstraint(SpringLayout.SOUTH), yPadSpring));\r\n        }\r\n        lastCons = cons;\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, Spring.sum(Spring.constant(yPad), lastCons.getConstraint(SpringLayout.SOUTH)));\r\n    pCons.setConstraint(SpringLayout.EAST, Spring.sum(Spring.constant(xPad), lastCons.getConstraint(SpringLayout.EAST)));\r\n}'),(2231,'int initialY','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3102,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component is as big as the maximum\r\n * preferred width and height of the components. The parent is made just big\r\n * enough to fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    Spring xPadSpring = Spring.constant(xPad);\r\n    Spring yPadSpring = Spring.constant(yPad);\r\n    Spring initialXSpring = Spring.constant(initialX);\r\n    Spring initialYSpring = Spring.constant(initialY);\r\n    int max = rows * cols;\r\n    // Calculate Springs that are the max of the width/height so that all\r\n    // cells have the same size.\r\n    Spring maxWidthSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    Spring maxHeightSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    for (int i = 1; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());\r\n        maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());\r\n    }\r\n    // Apply the new width/height Spring. This forces all the\r\n    // components to have the same size.\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        cons.setWidth(maxWidthSpring);\r\n        cons.setHeight(maxHeightSpring);\r\n    }\r\n    // Then adjust the x/y constraints of all the cells so that they\r\n    // are aligned in a grid.\r\n    SpringLayout.Constraints lastCons = null;\r\n    SpringLayout.Constraints lastRowCons = null;\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        if ((i % cols) == 0) {\r\n            // start of new row\r\n            lastRowCons = lastCons;\r\n            cons.setX(initialXSpring);\r\n        } else {\r\n            // x position depends on previous component\r\n            cons.setX(Spring.sum(lastCons.getConstraint(SpringLayout.EAST), xPadSpring));\r\n        }\r\n        if ((i / cols) == 0) {\r\n            // first row\r\n            cons.setY(initialYSpring);\r\n        } else {\r\n            // y position depends on previous row\r\n            cons.setY(Spring.sum(lastRowCons.getConstraint(SpringLayout.SOUTH), yPadSpring));\r\n        }\r\n        lastCons = cons;\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, Spring.sum(Spring.constant(yPad), lastCons.getConstraint(SpringLayout.SOUTH)));\r\n    pCons.setConstraint(SpringLayout.EAST, Spring.sum(Spring.constant(xPad), lastCons.getConstraint(SpringLayout.EAST)));\r\n}'),(2232,'int xPad','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3102,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component is as big as the maximum\r\n * preferred width and height of the components. The parent is made just big\r\n * enough to fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    Spring xPadSpring = Spring.constant(xPad);\r\n    Spring yPadSpring = Spring.constant(yPad);\r\n    Spring initialXSpring = Spring.constant(initialX);\r\n    Spring initialYSpring = Spring.constant(initialY);\r\n    int max = rows * cols;\r\n    // Calculate Springs that are the max of the width/height so that all\r\n    // cells have the same size.\r\n    Spring maxWidthSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    Spring maxHeightSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    for (int i = 1; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());\r\n        maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());\r\n    }\r\n    // Apply the new width/height Spring. This forces all the\r\n    // components to have the same size.\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        cons.setWidth(maxWidthSpring);\r\n        cons.setHeight(maxHeightSpring);\r\n    }\r\n    // Then adjust the x/y constraints of all the cells so that they\r\n    // are aligned in a grid.\r\n    SpringLayout.Constraints lastCons = null;\r\n    SpringLayout.Constraints lastRowCons = null;\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        if ((i % cols) == 0) {\r\n            // start of new row\r\n            lastRowCons = lastCons;\r\n            cons.setX(initialXSpring);\r\n        } else {\r\n            // x position depends on previous component\r\n            cons.setX(Spring.sum(lastCons.getConstraint(SpringLayout.EAST), xPadSpring));\r\n        }\r\n        if ((i / cols) == 0) {\r\n            // first row\r\n            cons.setY(initialYSpring);\r\n        } else {\r\n            // y position depends on previous row\r\n            cons.setY(Spring.sum(lastRowCons.getConstraint(SpringLayout.SOUTH), yPadSpring));\r\n        }\r\n        lastCons = cons;\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, Spring.sum(Spring.constant(yPad), lastCons.getConstraint(SpringLayout.SOUTH)));\r\n    pCons.setConstraint(SpringLayout.EAST, Spring.sum(Spring.constant(xPad), lastCons.getConstraint(SpringLayout.EAST)));\r\n}'),(2233,'int yPad','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3102,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component is as big as the maximum\r\n * preferred width and height of the components. The parent is made just big\r\n * enough to fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    Spring xPadSpring = Spring.constant(xPad);\r\n    Spring yPadSpring = Spring.constant(yPad);\r\n    Spring initialXSpring = Spring.constant(initialX);\r\n    Spring initialYSpring = Spring.constant(initialY);\r\n    int max = rows * cols;\r\n    // Calculate Springs that are the max of the width/height so that all\r\n    // cells have the same size.\r\n    Spring maxWidthSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    Spring maxHeightSpring = layout.getConstraints(parent.getComponent(0)).getWidth();\r\n    for (int i = 1; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());\r\n        maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());\r\n    }\r\n    // Apply the new width/height Spring. This forces all the\r\n    // components to have the same size.\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        cons.setWidth(maxWidthSpring);\r\n        cons.setHeight(maxHeightSpring);\r\n    }\r\n    // Then adjust the x/y constraints of all the cells so that they\r\n    // are aligned in a grid.\r\n    SpringLayout.Constraints lastCons = null;\r\n    SpringLayout.Constraints lastRowCons = null;\r\n    for (int i = 0; i < max; i++) {\r\n        SpringLayout.Constraints cons = layout.getConstraints(parent.getComponent(i));\r\n        if ((i % cols) == 0) {\r\n            // start of new row\r\n            lastRowCons = lastCons;\r\n            cons.setX(initialXSpring);\r\n        } else {\r\n            // x position depends on previous component\r\n            cons.setX(Spring.sum(lastCons.getConstraint(SpringLayout.EAST), xPadSpring));\r\n        }\r\n        if ((i / cols) == 0) {\r\n            // first row\r\n            cons.setY(initialYSpring);\r\n        } else {\r\n            // y position depends on previous row\r\n            cons.setY(Spring.sum(lastRowCons.getConstraint(SpringLayout.SOUTH), yPadSpring));\r\n        }\r\n        lastCons = cons;\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, Spring.sum(Spring.constant(yPad), lastCons.getConstraint(SpringLayout.SOUTH)));\r\n    pCons.setConstraint(SpringLayout.EAST, Spring.sum(Spring.constant(xPad), lastCons.getConstraint(SpringLayout.EAST)));\r\n}'),(2234,'int row','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3100,'net.sourceforge.ganttproject.gui.options.SpringUtilities.getConstraintsForCell(int,int,java.awt.Container,int)',0,'/* Used by makeCompactGrid. */\r\nprivate static SpringLayout.Constraints getConstraintsForCell(int row, int col, Container parent, int cols) {\r\n    SpringLayout layout = ((SpringLayout) (parent.getLayout()));\r\n    Component c = parent.getComponent(((row * cols) + col));\r\n    return layout.getConstraints(c);\r\n}'),(2235,'int col','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3100,'net.sourceforge.ganttproject.gui.options.SpringUtilities.getConstraintsForCell(int,int,java.awt.Container,int)',0,'/* Used by makeCompactGrid. */\r\nprivate static SpringLayout.Constraints getConstraintsForCell(int row, int col, Container parent, int cols) {\r\n    SpringLayout layout = ((SpringLayout) (parent.getLayout()));\r\n    Component c = parent.getComponent(((row * cols) + col));\r\n    return layout.getConstraints(c);\r\n}'),(2236,'Container parent','java.awt.Container',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3100,'net.sourceforge.ganttproject.gui.options.SpringUtilities.getConstraintsForCell(int,int,java.awt.Container,int)',0,'/* Used by makeCompactGrid. */\r\nprivate static SpringLayout.Constraints getConstraintsForCell(int row, int col, Container parent, int cols) {\r\n    SpringLayout layout = ((SpringLayout) (parent.getLayout()));\r\n    Component c = parent.getComponent(((row * cols) + col));\r\n    return layout.getConstraints(c);\r\n}'),(2237,'int cols','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3100,'net.sourceforge.ganttproject.gui.options.SpringUtilities.getConstraintsForCell(int,int,java.awt.Container,int)',0,'/* Used by makeCompactGrid. */\r\nprivate static SpringLayout.Constraints getConstraintsForCell(int row, int col, Container parent, int cols) {\r\n    SpringLayout layout = ((SpringLayout) (parent.getLayout()));\r\n    Component c = parent.getComponent(((row * cols) + col));\r\n    return layout.getConstraints(c);\r\n}'),(2238,'Container parent','java.awt.Container',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3101,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component in a column is as wide as\r\n * the maximum preferred width of the components in that column; height is\r\n * similarly determined for each row. The parent is made just big enough to\r\n * fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeCompactGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeCompactGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    // Align all cells in each column and make them the same width.\r\n    Spring x = Spring.constant(initialX);\r\n    for (int c = 0; c < cols; c++) {\r\n        Spring width = Spring.constant(0);\r\n        for (int r = 0; r < rows; r++) {\r\n            width = Spring.max(width, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getWidth());\r\n        }\r\n        for (int r = 0; r < rows; r++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setX(x);\r\n            constraints.setWidth(width);\r\n        }\r\n        x = Spring.sum(x, Spring.sum(width, Spring.constant(xPad)));\r\n    }\r\n    // Align all cells in each row and make them the same height.\r\n    Spring y = Spring.constant(initialY);\r\n    for (int r = 0; r < rows; r++) {\r\n        Spring height = Spring.constant(0);\r\n        for (int c = 0; c < cols; c++) {\r\n            height = Spring.max(height, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getHeight());\r\n        }\r\n        for (int c = 0; c < cols; c++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setY(y);\r\n            constraints.setHeight(height);\r\n        }\r\n        y = Spring.sum(y, Spring.sum(height, Spring.constant(yPad)));\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, y);\r\n    pCons.setConstraint(SpringLayout.EAST, x);\r\n}'),(2239,'int rows','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3101,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component in a column is as wide as\r\n * the maximum preferred width of the components in that column; height is\r\n * similarly determined for each row. The parent is made just big enough to\r\n * fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeCompactGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeCompactGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    // Align all cells in each column and make them the same width.\r\n    Spring x = Spring.constant(initialX);\r\n    for (int c = 0; c < cols; c++) {\r\n        Spring width = Spring.constant(0);\r\n        for (int r = 0; r < rows; r++) {\r\n            width = Spring.max(width, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getWidth());\r\n        }\r\n        for (int r = 0; r < rows; r++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setX(x);\r\n            constraints.setWidth(width);\r\n        }\r\n        x = Spring.sum(x, Spring.sum(width, Spring.constant(xPad)));\r\n    }\r\n    // Align all cells in each row and make them the same height.\r\n    Spring y = Spring.constant(initialY);\r\n    for (int r = 0; r < rows; r++) {\r\n        Spring height = Spring.constant(0);\r\n        for (int c = 0; c < cols; c++) {\r\n            height = Spring.max(height, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getHeight());\r\n        }\r\n        for (int c = 0; c < cols; c++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setY(y);\r\n            constraints.setHeight(height);\r\n        }\r\n        y = Spring.sum(y, Spring.sum(height, Spring.constant(yPad)));\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, y);\r\n    pCons.setConstraint(SpringLayout.EAST, x);\r\n}'),(2240,'int cols','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3101,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component in a column is as wide as\r\n * the maximum preferred width of the components in that column; height is\r\n * similarly determined for each row. The parent is made just big enough to\r\n * fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeCompactGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeCompactGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    // Align all cells in each column and make them the same width.\r\n    Spring x = Spring.constant(initialX);\r\n    for (int c = 0; c < cols; c++) {\r\n        Spring width = Spring.constant(0);\r\n        for (int r = 0; r < rows; r++) {\r\n            width = Spring.max(width, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getWidth());\r\n        }\r\n        for (int r = 0; r < rows; r++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setX(x);\r\n            constraints.setWidth(width);\r\n        }\r\n        x = Spring.sum(x, Spring.sum(width, Spring.constant(xPad)));\r\n    }\r\n    // Align all cells in each row and make them the same height.\r\n    Spring y = Spring.constant(initialY);\r\n    for (int r = 0; r < rows; r++) {\r\n        Spring height = Spring.constant(0);\r\n        for (int c = 0; c < cols; c++) {\r\n            height = Spring.max(height, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getHeight());\r\n        }\r\n        for (int c = 0; c < cols; c++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setY(y);\r\n            constraints.setHeight(height);\r\n        }\r\n        y = Spring.sum(y, Spring.sum(height, Spring.constant(yPad)));\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, y);\r\n    pCons.setConstraint(SpringLayout.EAST, x);\r\n}'),(2241,'int initialX','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3101,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component in a column is as wide as\r\n * the maximum preferred width of the components in that column; height is\r\n * similarly determined for each row. The parent is made just big enough to\r\n * fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeCompactGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeCompactGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    // Align all cells in each column and make them the same width.\r\n    Spring x = Spring.constant(initialX);\r\n    for (int c = 0; c < cols; c++) {\r\n        Spring width = Spring.constant(0);\r\n        for (int r = 0; r < rows; r++) {\r\n            width = Spring.max(width, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getWidth());\r\n        }\r\n        for (int r = 0; r < rows; r++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setX(x);\r\n            constraints.setWidth(width);\r\n        }\r\n        x = Spring.sum(x, Spring.sum(width, Spring.constant(xPad)));\r\n    }\r\n    // Align all cells in each row and make them the same height.\r\n    Spring y = Spring.constant(initialY);\r\n    for (int r = 0; r < rows; r++) {\r\n        Spring height = Spring.constant(0);\r\n        for (int c = 0; c < cols; c++) {\r\n            height = Spring.max(height, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getHeight());\r\n        }\r\n        for (int c = 0; c < cols; c++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setY(y);\r\n            constraints.setHeight(height);\r\n        }\r\n        y = Spring.sum(y, Spring.sum(height, Spring.constant(yPad)));\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, y);\r\n    pCons.setConstraint(SpringLayout.EAST, x);\r\n}'),(2242,'int initialY','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3101,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component in a column is as wide as\r\n * the maximum preferred width of the components in that column; height is\r\n * similarly determined for each row. The parent is made just big enough to\r\n * fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeCompactGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeCompactGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    // Align all cells in each column and make them the same width.\r\n    Spring x = Spring.constant(initialX);\r\n    for (int c = 0; c < cols; c++) {\r\n        Spring width = Spring.constant(0);\r\n        for (int r = 0; r < rows; r++) {\r\n            width = Spring.max(width, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getWidth());\r\n        }\r\n        for (int r = 0; r < rows; r++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setX(x);\r\n            constraints.setWidth(width);\r\n        }\r\n        x = Spring.sum(x, Spring.sum(width, Spring.constant(xPad)));\r\n    }\r\n    // Align all cells in each row and make them the same height.\r\n    Spring y = Spring.constant(initialY);\r\n    for (int r = 0; r < rows; r++) {\r\n        Spring height = Spring.constant(0);\r\n        for (int c = 0; c < cols; c++) {\r\n            height = Spring.max(height, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getHeight());\r\n        }\r\n        for (int c = 0; c < cols; c++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setY(y);\r\n            constraints.setHeight(height);\r\n        }\r\n        y = Spring.sum(y, Spring.sum(height, Spring.constant(yPad)));\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, y);\r\n    pCons.setConstraint(SpringLayout.EAST, x);\r\n}'),(2243,'int xPad','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3101,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component in a column is as wide as\r\n * the maximum preferred width of the components in that column; height is\r\n * similarly determined for each row. The parent is made just big enough to\r\n * fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeCompactGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeCompactGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    // Align all cells in each column and make them the same width.\r\n    Spring x = Spring.constant(initialX);\r\n    for (int c = 0; c < cols; c++) {\r\n        Spring width = Spring.constant(0);\r\n        for (int r = 0; r < rows; r++) {\r\n            width = Spring.max(width, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getWidth());\r\n        }\r\n        for (int r = 0; r < rows; r++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setX(x);\r\n            constraints.setWidth(width);\r\n        }\r\n        x = Spring.sum(x, Spring.sum(width, Spring.constant(xPad)));\r\n    }\r\n    // Align all cells in each row and make them the same height.\r\n    Spring y = Spring.constant(initialY);\r\n    for (int r = 0; r < rows; r++) {\r\n        Spring height = Spring.constant(0);\r\n        for (int c = 0; c < cols; c++) {\r\n            height = Spring.max(height, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getHeight());\r\n        }\r\n        for (int c = 0; c < cols; c++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setY(y);\r\n            constraints.setHeight(height);\r\n        }\r\n        y = Spring.sum(y, Spring.sum(height, Spring.constant(yPad)));\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, y);\r\n    pCons.setConstraint(SpringLayout.EAST, x);\r\n}'),(2244,'int yPad','int',0,369,'net.sourceforge.ganttproject.gui.options.SpringUtilities',3101,'net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(java.awt.Container,int,int,int,int,int,int)',0,'/**\r\n * Aligns the first <code>rows</code> * <code>cols</code> components of\r\n * <code>parent</code> in a grid. Each component in a column is as wide as\r\n * the maximum preferred width of the components in that column; height is\r\n * similarly determined for each row. The parent is made just big enough to\r\n * fit them all.\r\n *\r\n * @param rows\r\n * 		number of rows\r\n * @param cols\r\n * 		number of columns\r\n * @param initialX\r\n * 		x location to start the grid at\r\n * @param initialY\r\n * 		y location to start the grid at\r\n * @param xPad\r\n * 		x padding between cells\r\n * @param yPad\r\n * 		y padding between cells\r\n */\r\npublic static void makeCompactGrid(Container parent, int rows, int cols, int initialX, int initialY, int xPad, int yPad) {\r\n    SpringLayout layout;\r\n    try {\r\n        layout = ((SpringLayout) (parent.getLayout()));\r\n    } catch (ClassCastException exc) {\r\n        System.err.println(\"The first argument to makeCompactGrid must use SpringLayout.\");\r\n        return;\r\n    }\r\n    // Align all cells in each column and make them the same width.\r\n    Spring x = Spring.constant(initialX);\r\n    for (int c = 0; c < cols; c++) {\r\n        Spring width = Spring.constant(0);\r\n        for (int r = 0; r < rows; r++) {\r\n            width = Spring.max(width, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getWidth());\r\n        }\r\n        for (int r = 0; r < rows; r++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setX(x);\r\n            constraints.setWidth(width);\r\n        }\r\n        x = Spring.sum(x, Spring.sum(width, Spring.constant(xPad)));\r\n    }\r\n    // Align all cells in each row and make them the same height.\r\n    Spring y = Spring.constant(initialY);\r\n    for (int r = 0; r < rows; r++) {\r\n        Spring height = Spring.constant(0);\r\n        for (int c = 0; c < cols; c++) {\r\n            height = Spring.max(height, SpringUtilities.getConstraintsForCell(r, c, parent, cols).getHeight());\r\n        }\r\n        for (int c = 0; c < cols; c++) {\r\n            SpringLayout.Constraints constraints = SpringUtilities.getConstraintsForCell(r, c, parent, cols);\r\n            constraints.setY(y);\r\n            constraints.setHeight(height);\r\n        }\r\n        y = Spring.sum(y, Spring.sum(height, Spring.constant(yPad)));\r\n    }\r\n    // Set the parents size.\r\n    SpringLayout.Constraints pCons = layout.getConstraints(parent);\r\n    pCons.setConstraint(SpringLayout.SOUTH, y);\r\n    pCons.setConstraint(SpringLayout.EAST, x);\r\n}'),(2245,'String title','java.lang.String',0,371,'net.sourceforge.ganttproject.gui.options.TopPanel',3104,'net.sourceforge.ganttproject.gui.options.TopPanel.-init-(java.lang.String,java.lang.String)',0,'/**\r\n * Constructor.\r\n */\r\npublic TopPanel(String title, String comment) {\r\n    setLayout(new BorderLayout());\r\n    Box vb = Box.createVerticalBox();\r\n    add(vb, BorderLayout.CENTER);\r\n    final int iWidth = 420;\r\n    // Paint a gray border around the panel\r\n    JPanel topPanel = new JPanel(new BorderLayout()) {\r\n        public void paint(Graphics g) {\r\n            super.paint(g);\r\n            g.setColor(new Color(0.67F, 0.66F, 0.6F));\r\n            g.drawRect(0, 0, ((getWidth()) - 1), 24);\r\n        }\r\n    };\r\n    topPanel.setBackground(Color.white);\r\n    JLabel labelTitle = new JLabel((\" \" + title));\r\n    labelTitle.setFont(new Font(this.getFont().getFontName(), Font.BOLD, this.getFont().getSize()));\r\n    topPanel.add(labelTitle, BorderLayout.WEST);\r\n    topPanel.add(new TopPanel.myIconPanel(), BorderLayout.EAST);\r\n    topPanel.setPreferredSize(new Dimension(iWidth, 26));\r\n    vb.add(topPanel);\r\n    JTextArea textArea = new JTextArea(comment);\r\n    textArea.setEditable(false);\r\n    textArea.setDragEnabled(false);\r\n    textArea.setLineWrap(true);\r\n    textArea.setWrapStyleWord(true);\r\n    textArea.setMargin(new Insets(3, 5, 3, 5));\r\n    textArea.setBackground(getBackground());\r\n    vb.add(textArea);\r\n    // vb.setBorder(LineBorder.createBlackLineBorder());\r\n    applyComponentOrientation(GanttLanguage.getInstance().getComponentOrientation());\r\n}'),(2246,'String comment','java.lang.String',0,371,'net.sourceforge.ganttproject.gui.options.TopPanel',3104,'net.sourceforge.ganttproject.gui.options.TopPanel.-init-(java.lang.String,java.lang.String)',0,'/**\r\n * Constructor.\r\n */\r\npublic TopPanel(String title, String comment) {\r\n    setLayout(new BorderLayout());\r\n    Box vb = Box.createVerticalBox();\r\n    add(vb, BorderLayout.CENTER);\r\n    final int iWidth = 420;\r\n    // Paint a gray border around the panel\r\n    JPanel topPanel = new JPanel(new BorderLayout()) {\r\n        public void paint(Graphics g) {\r\n            super.paint(g);\r\n            g.setColor(new Color(0.67F, 0.66F, 0.6F));\r\n            g.drawRect(0, 0, ((getWidth()) - 1), 24);\r\n        }\r\n    };\r\n    topPanel.setBackground(Color.white);\r\n    JLabel labelTitle = new JLabel((\" \" + title));\r\n    labelTitle.setFont(new Font(this.getFont().getFontName(), Font.BOLD, this.getFont().getSize()));\r\n    topPanel.add(labelTitle, BorderLayout.WEST);\r\n    topPanel.add(new TopPanel.myIconPanel(), BorderLayout.EAST);\r\n    topPanel.setPreferredSize(new Dimension(iWidth, 26));\r\n    vb.add(topPanel);\r\n    JTextArea textArea = new JTextArea(comment);\r\n    textArea.setEditable(false);\r\n    textArea.setDragEnabled(false);\r\n    textArea.setLineWrap(true);\r\n    textArea.setWrapStyleWord(true);\r\n    textArea.setMargin(new Insets(3, 5, 3, 5));\r\n    textArea.setBackground(getBackground());\r\n    vb.add(textArea);\r\n    // vb.setBorder(LineBorder.createBlackLineBorder());\r\n    applyComponentOrientation(GanttLanguage.getInstance().getComponentOrientation());\r\n}'),(2247,'Graphics g','java.awt.Graphics',0,370,'net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel',3109,'net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel.paintComponent(java.awt.Graphics)',0,'public void paintComponent(Graphics g) {\r\n    icon.paintIcon(this, g, 0, 3);\r\n}'),(2248,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,372,'net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel',3110,'net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic WelcomeSettingsPanel(GanttProject parent) {\r\n    super(GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"settings\")), GanttLanguage.getInstance().getText(\"settingsWelcome\"), parent);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2249,'boolean askForApply','boolean',0,372,'net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel',3111,'net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel.applyChanges(boolean)',0,'/**\r\n * This method check if the value has changed, and assk for commit changes.\r\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    // nothing to do :)\r\n    return false;\r\n}'),(2250,'ChangeValueListener listener','net.sourceforge.ganttproject.gui.options.model.ChangeValueListener',376,374,'net.sourceforge.ganttproject.gui.options.model.ChangeValueDispatcher',3115,'net.sourceforge.ganttproject.gui.options.model.ChangeValueDispatcher.addChangeValueListener(net.sourceforge.ganttproject.gui.options.model.ChangeValueListener)',0,'public void addChangeValueListener(ChangeValueListener listener);'),(2251,'Object id','java.lang.Object',0,375,'net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent',3116,'net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent.-init-(java.lang.Object,java.lang.Object,java.lang.Object)',0,'public ChangeValueEvent(Object id, Object oldValue, Object newValue) {\r\n    myID = id;\r\n    myOldValue = oldValue;\r\n    myNewValue = newValue;\r\n}'),(2252,'Object oldValue','java.lang.Object',0,375,'net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent',3116,'net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent.-init-(java.lang.Object,java.lang.Object,java.lang.Object)',0,'public ChangeValueEvent(Object id, Object oldValue, Object newValue) {\r\n    myID = id;\r\n    myOldValue = oldValue;\r\n    myNewValue = newValue;\r\n}'),(2253,'Object newValue','java.lang.Object',0,375,'net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent',3116,'net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent.-init-(java.lang.Object,java.lang.Object,java.lang.Object)',0,'public ChangeValueEvent(Object id, Object oldValue, Object newValue) {\r\n    myID = id;\r\n    myOldValue = oldValue;\r\n    myNewValue = newValue;\r\n}'),(2254,'ChangeValueEvent event','net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent',375,376,'net.sourceforge.ganttproject.gui.options.model.ChangeValueListener',3121,'net.sourceforge.ganttproject.gui.options.model.ChangeValueListener.changeValue(net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent)',0,'public void changeValue(ChangeValueEvent event);'),(2255,'Color value','java.awt.Color',0,377,'net.sourceforge.ganttproject.gui.options.model.ColorOption',3123,'net.sourceforge.ganttproject.gui.options.model.ColorOption.setValue(java.awt.Color)',0,'public void setValue(Color value);'),(2256,'Date value','java.util.Date',0,378,'net.sourceforge.ganttproject.gui.options.model.DateOption',3125,'net.sourceforge.ganttproject.gui.options.model.DateOption.setValue(java.util.Date)',0,'void setValue(Date value);'),(2257,'String id','java.lang.String',0,379,'net.sourceforge.ganttproject.gui.options.model.DefaultBooleanOption',3126,'net.sourceforge.ganttproject.gui.options.model.DefaultBooleanOption.-init-(java.lang.String)',0,'public DefaultBooleanOption(String id) {\r\n    super(id);\r\n}'),(2258,'String value','java.lang.String',0,379,'net.sourceforge.ganttproject.gui.options.model.DefaultBooleanOption',3131,'net.sourceforge.ganttproject.gui.options.model.DefaultBooleanOption.loadPersistentValue(java.lang.String)',0,'public void loadPersistentValue(String value) {\r\n    myLockedValue = Boolean.valueOf(value).booleanValue();\r\n}'),(2259,'String id','java.lang.String',0,380,'net.sourceforge.ganttproject.gui.options.model.DefaultColorOption',3134,'net.sourceforge.ganttproject.gui.options.model.DefaultColorOption.-init-(java.lang.String)',0,'public DefaultColorOption(String id) {\r\n    super(id);\r\n}'),(2260,'Color value','java.awt.Color',0,380,'net.sourceforge.ganttproject.gui.options.model.DefaultColorOption',3140,'net.sourceforge.ganttproject.gui.options.model.DefaultColorOption.setValue(java.awt.Color)',0,'public void setValue(Color value) {\r\n    if (!(isLocked())) {\r\n        throw new IllegalStateException(\"Lock option before setting value\");\r\n    }\r\n    myLockedValue = value;\r\n}'),(2261,'String value','java.lang.String',0,380,'net.sourceforge.ganttproject.gui.options.model.DefaultColorOption',3139,'net.sourceforge.ganttproject.gui.options.model.DefaultColorOption.loadPersistentValue(java.lang.String)',0,'public void loadPersistentValue(String value) {\r\n    myLockedValue = ColorConvertion.determineColor(value);\r\n}'),(2262,'String id','java.lang.String',0,381,'net.sourceforge.ganttproject.gui.options.model.DefaultDateOption',3141,'net.sourceforge.ganttproject.gui.options.model.DefaultDateOption.-init-(java.lang.String)',0,'public DefaultDateOption(String id) {\r\n    super(id);\r\n}'),(2263,'Date value','java.util.Date',0,381,'net.sourceforge.ganttproject.gui.options.model.DefaultDateOption',3147,'net.sourceforge.ganttproject.gui.options.model.DefaultDateOption.setValue(java.util.Date)',0,'public void setValue(Date value) {\r\n    if (!(isLocked())) {\r\n        throw new IllegalStateException(\"Lock option before setting value\");\r\n    }\r\n    fireChangeValueEvent(new ChangeValueEvent(getID(), myLockedValue, value));\r\n    myLockedValue = value;\r\n}'),(2264,'String value','java.lang.String',0,381,'net.sourceforge.ganttproject.gui.options.model.DefaultDateOption',3146,'net.sourceforge.ganttproject.gui.options.model.DefaultDateOption.loadPersistentValue(java.lang.String)',0,'public void loadPersistentValue(String value) {\r\n    // TODO Auto-generated method stub\r\n}'),(2265,'String id','java.lang.String',0,382,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption',3148,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption.-init-(java.lang.String,java.lang.String[])',0,'public DefaultEnumerationOption(String id, String[] values) {\r\n    super(id);\r\n    myValues = values;\r\n}'),(2266,'String[] values','java.lang.String[]',0,382,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption',3148,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption.-init-(java.lang.String,java.lang.String[])',0,'public DefaultEnumerationOption(String id, String[] values) {\r\n    super(id);\r\n    myValues = values;\r\n}'),(2267,'String id','java.lang.String',0,382,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption',3149,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption.-init-(java.lang.String,java.util.List)',0,'public DefaultEnumerationOption(String id, List values) {\r\n    super(id);\r\n    myValues = ((String[]) (values.toArray(new String[0])));\r\n}'),(2268,'List values','java.util.List',0,382,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption',3149,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption.-init-(java.lang.String,java.util.List)',0,'public DefaultEnumerationOption(String id, List values) {\r\n    super(id);\r\n    myValues = ((String[]) (values.toArray(new String[0])));\r\n}'),(2269,'String value','java.lang.String',0,382,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption',3156,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption.setValue(java.lang.String)',0,'public void setValue(String value) {\r\n    if (!(isLocked())) {\r\n        throw new IllegalStateException(\"Lock option before setting value\");\r\n    }\r\n    ChangeValueEvent event = new ChangeValueEvent(getID(), myLockedValue, value);\r\n    myLockedValue = value;\r\n    fireChangeValueEvent(event);\r\n}'),(2270,'String value','java.lang.String',0,382,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption',3155,'net.sourceforge.ganttproject.gui.options.model.DefaultEnumerationOption.loadPersistentValue(java.lang.String)',0,'public void loadPersistentValue(String value) {\r\n    setValue(value);\r\n}'),(2271,'String id','java.lang.String',0,383,'net.sourceforge.ganttproject.gui.options.model.DefaultStringOption',3157,'net.sourceforge.ganttproject.gui.options.model.DefaultStringOption.-init-(java.lang.String)',0,'public DefaultStringOption(String id) {\r\n    super(id);\r\n}'),(2272,'String value','java.lang.String',0,383,'net.sourceforge.ganttproject.gui.options.model.DefaultStringOption',3164,'net.sourceforge.ganttproject.gui.options.model.DefaultStringOption.setValue(java.lang.String)',0,'public void setValue(String value) {\r\n    if (!(isLocked())) {\r\n        throw new IllegalStateException(\"Lock option before setting value\");\r\n    }\r\n    ChangeValueEvent event = new ChangeValueEvent(getID(), myLockedValue, value);\r\n    myLockedValue = value;\r\n    fireChangeValueEvent(event);\r\n}'),(2273,'String value','java.lang.String',0,383,'net.sourceforge.ganttproject.gui.options.model.DefaultStringOption',3163,'net.sourceforge.ganttproject.gui.options.model.DefaultStringOption.loadPersistentValue(java.lang.String)',0,'public void loadPersistentValue(String value) {\r\n    setValue(value);\r\n}'),(2274,'String value','java.lang.String',0,384,'net.sourceforge.ganttproject.gui.options.model.EnumerationOption',3167,'net.sourceforge.ganttproject.gui.options.model.EnumerationOption.setValue(java.lang.String)',0,'void setValue(String value);'),(2275,'String legacyValue','java.lang.String',0,385,'net.sourceforge.ganttproject.gui.options.model.GP1XOptionConverter',3170,'net.sourceforge.ganttproject.gui.options.model.GP1XOptionConverter.loadValue(java.lang.String)',0,'void loadValue(String legacyValue);'),(2276,'String id','java.lang.String',0,386,'net.sourceforge.ganttproject.gui.options.model.GPAbstractOption',3171,'net.sourceforge.ganttproject.gui.options.model.GPAbstractOption.-init-(java.lang.String)',0,'protected GPAbstractOption(String id) {\r\n    myID = id;\r\n}'),(2277,'boolean isLocked','boolean',0,386,'net.sourceforge.ganttproject.gui.options.model.GPAbstractOption',3179,'net.sourceforge.ganttproject.gui.options.model.GPAbstractOption.setLocked(boolean)',0,'protected void setLocked(boolean isLocked) {\r\n    this.isLocked = isLocked;\r\n}'),(2278,'ChangeValueListener listener','net.sourceforge.ganttproject.gui.options.model.ChangeValueListener',376,386,'net.sourceforge.ganttproject.gui.options.model.GPAbstractOption',3172,'net.sourceforge.ganttproject.gui.options.model.GPAbstractOption.addChangeValueListener(net.sourceforge.ganttproject.gui.options.model.ChangeValueListener)',0,'public void addChangeValueListener(ChangeValueListener listener) {\r\n    myListeners.add(listener);\r\n}'),(2279,'ChangeValueEvent event','net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent',375,386,'net.sourceforge.ganttproject.gui.options.model.GPAbstractOption',3174,'net.sourceforge.ganttproject.gui.options.model.GPAbstractOption.fireChangeValueEvent(net.sourceforge.ganttproject.gui.options.model.ChangeValueEvent)',0,'protected void fireChangeValueEvent(ChangeValueEvent event) {\r\n    Iterator it = myListeners.iterator();\r\n    while (it.hasNext()) {\r\n        ((ChangeValueListener) (it.next())).changeValue(event);\r\n    } \r\n}'),(2280,'String value','java.lang.String',0,387,'net.sourceforge.ganttproject.gui.options.model.GPOption',3184,'net.sourceforge.ganttproject.gui.options.model.GPOption.loadPersistentValue(java.lang.String)',0,'void loadPersistentValue(String value);'),(2281,'String id','java.lang.String',0,389,'net.sourceforge.ganttproject.gui.options.model.GPOptionGroup',3188,'net.sourceforge.ganttproject.gui.options.model.GPOptionGroup.-init-(java.lang.String,net.sourceforge.ganttproject.gui.options.model.GPOption[])',0,'public GPOptionGroup(String id, GPOption[] options) {\r\n    myID = id;\r\n    myOptions = options;\r\n}'),(2282,'GPOption[] options','net.sourceforge.ganttproject.gui.options.model.GPOption[]',0,389,'net.sourceforge.ganttproject.gui.options.model.GPOptionGroup',3188,'net.sourceforge.ganttproject.gui.options.model.GPOptionGroup.-init-(java.lang.String,net.sourceforge.ganttproject.gui.options.model.GPOption[])',0,'public GPOptionGroup(String id, GPOption[] options) {\r\n    myID = id;\r\n    myOptions = options;\r\n}'),(2283,'String optionID','java.lang.String',0,389,'net.sourceforge.ganttproject.gui.options.model.GPOptionGroup',3191,'net.sourceforge.ganttproject.gui.options.model.GPOptionGroup.getOption(java.lang.String)',0,'public GPOption getOption(String optionID) {\r\n    assert optionID != null;\r\n    for (int i = 0; i < (myOptions.length); i++) {\r\n        if (myOptions[i].getID().equals(optionID)) {\r\n            return myOptions[i];\r\n        }\r\n    }\r\n    return null;\r\n}'),(2284,'net.sourceforge.ganttproject.gui.options.model.GPOption','net.sourceforge.ganttproject.gui.options.model.GPOption',387,389,'net.sourceforge.ganttproject.gui.options.model.GPOptionGroup',3191,'net.sourceforge.ganttproject.gui.options.model.GPOptionGroup.getOption(java.lang.String)',1,'public GPOption getOption(String optionID) {\r\n    assert optionID != null;\r\n    for (int i = 0; i < (myOptions.length); i++) {\r\n        if (myOptions[i].getID().equals(optionID)) {\r\n            return myOptions[i];\r\n        }\r\n    }\r\n    return null;\r\n}'),(2285,'boolean isTitled','boolean',0,389,'net.sourceforge.ganttproject.gui.options.model.GPOptionGroup',3196,'net.sourceforge.ganttproject.gui.options.model.GPOptionGroup.setTitled(boolean)',0,'public void setTitled(boolean isTitled) {\r\n    this.isTitled = isTitled;\r\n}'),(2286,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,390,'net.sourceforge.ganttproject.gui.options.model.OptionPageProvider',3198,'net.sourceforge.ganttproject.gui.options.model.OptionPageProvider.getOptionGroups(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'GPOptionGroup[] getOptionGroups(IGanttProject project, UIFacade uiFacade);'),(2287,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,390,'net.sourceforge.ganttproject.gui.options.model.OptionPageProvider',3198,'net.sourceforge.ganttproject.gui.options.model.OptionPageProvider.getOptionGroups(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'GPOptionGroup[] getOptionGroups(IGanttProject project, UIFacade uiFacade);'),(2288,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,390,'net.sourceforge.ganttproject.gui.options.model.OptionPageProvider',3197,'net.sourceforge.ganttproject.gui.options.model.OptionPageProvider.buildPageComponent(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'Component buildPageComponent(IGanttProject project, UIFacade uiFacade);'),(2289,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,390,'net.sourceforge.ganttproject.gui.options.model.OptionPageProvider',3197,'net.sourceforge.ganttproject.gui.options.model.OptionPageProvider.buildPageComponent(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'Component buildPageComponent(IGanttProject project, UIFacade uiFacade);'),(2290,'String value','java.lang.String',0,391,'net.sourceforge.ganttproject.gui.options.model.StringOption',3202,'net.sourceforge.ganttproject.gui.options.model.StringOption.setValue(java.lang.String)',0,'public void setValue(String value);'),(2291,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,392,'net.sourceforge.ganttproject.gui.previousState.GanttCompareToPreviousStateBean',3203,'net.sourceforge.ganttproject.gui.previousState.GanttCompareToPreviousStateBean.-init-(net.sourceforge.ganttproject.GanttProject)',0,'public GanttCompareToPreviousStateBean(GanttProject project) {\r\n    myPreviousStates = project.getPreviouStates();\r\n    init();\r\n}'),(2292,'ActionListener l','java.awt.event.ActionListener',0,392,'net.sourceforge.ganttproject.gui.previousState.GanttCompareToPreviousStateBean',3204,'net.sourceforge.ganttproject.gui.previousState.GanttCompareToPreviousStateBean.addActionListener(java.awt.event.ActionListener)',0,'public void addActionListener(ActionListener l) {\r\n    okButton.addActionListener(l);\r\n    cancelButton.addActionListener(l);\r\n    removeButton.addActionListener(l);\r\n    nameComboBox.addActionListener(l);\r\n}'),(2293,'boolean b','boolean',0,392,'net.sourceforge.ganttproject.gui.previousState.GanttCompareToPreviousStateBean',3210,'net.sourceforge.ganttproject.gui.previousState.GanttCompareToPreviousStateBean.setEnabled(boolean)',0,'public void setEnabled(boolean b) {\r\n    removeButton.setEnabled(b);\r\n}'),(2294,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,393,'net.sourceforge.ganttproject.gui.previousState.GanttDialogCompareToPreviousState',3211,'net.sourceforge.ganttproject.gui.previousState.GanttDialogCompareToPreviousState.-init-(net.sourceforge.ganttproject.GanttProject)',0,'public GanttDialogCompareToPreviousState(GanttProject project) {\r\n    super(project, GanttLanguage.getInstance().getText(\"comparePrev\"), true);\r\n    myProject = project;\r\n    compareToPreviousBean = new GanttCompareToPreviousStateBean(project);\r\n    compareToPreviousBean.addActionListener(this);\r\n    Container cp = getContentPane();\r\n    cp.add(compareToPreviousBean, BorderLayout.CENTER);\r\n    this.pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(lang.getComponentOrientation());\r\n}'),(2295,'ActionEvent evt','java.awt.event.ActionEvent',0,393,'net.sourceforge.ganttproject.gui.previousState.GanttDialogCompareToPreviousState',3212,'net.sourceforge.ganttproject.gui.previousState.GanttDialogCompareToPreviousState.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent evt) {\r\n    if ((evt.getSource()) instanceof JButton) {\r\n        JButton button = ((JButton) (evt.getSource()));\r\n        if (button.getName().equals(\"ok\")) {\r\n            if ((compareToPreviousBean.getSelected()) != 0) {\r\n                try {\r\n                    ArrayList tasks = ((GanttPreviousState) (myProject.getPreviouStates().get(((compareToPreviousBean.getSelected()) - 1)))).load();\r\n                    myProject.getArea().setPreviousStateTasks(tasks);\r\n                    myProject.getArea().repaint();\r\n                } catch (Exception e) {\r\n                    myProject.getUIFacade().showErrorDialog(e);\r\n                }\r\n            } else\r\n                myProject.getArea().setPreviousStateTasks(null);\r\n\r\n            this.setVisible(false);\r\n            dispose();\r\n        } else\r\n            if (button.getName().equals(\"cancel\")) {\r\n                this.setVisible(false);\r\n                dispose();\r\n            } else\r\n                if (button.getName().equals(\"remove\")) {\r\n                    GanttDialogInfo gdi = new GanttDialogInfo(myProject, GanttDialogInfo.WARNING, GanttDialogInfo.YES_NO_OPTION, lang.getText(\"msg25\"), lang.getText(\"warning\"));\r\n                    gdi.show();\r\n                    if ((gdi.res) == (GanttDialogInfo.YES)) {\r\n                        compareToPreviousBean.removeItem();\r\n                        // this.setVisible(false);\r\n                        // dispose();\r\n                    }\r\n                }\r\n\r\n\r\n    } else\r\n        if ((evt.getSource()) instanceof JComboBox) {\r\n            JComboBox comboBox = ((JComboBox) (evt.getSource()));\r\n            if (comboBox.getName().equals(\"nameComboBox\")) {\r\n                if ((compareToPreviousBean.getSelected()) == 0)\r\n                    compareToPreviousBean.setEnabled(false);\r\n                else\r\n                    compareToPreviousBean.setEnabled(true);\r\n\r\n            }\r\n        }\r\n\r\n}'),(2296,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,394,'net.sourceforge.ganttproject.gui.previousState.GanttDialogSaveAsPreviousState',3213,'net.sourceforge.ganttproject.gui.previousState.GanttDialogSaveAsPreviousState.-init-(net.sourceforge.ganttproject.GanttProject)',0,'public GanttDialogSaveAsPreviousState(GanttProject project) {\r\n    super(project, GanttLanguage.getInstance().getText(\"saveCurrent\"), true);\r\n    myProject = project;\r\n    previousStateBean = new GanttSaveAsPreviousStateBean(myProject);\r\n    previousStateBean.addActionListener(this);\r\n    Container cp = getContentPane();\r\n    cp.add(previousStateBean, BorderLayout.CENTER);\r\n    this.pack();\r\n    setResizable(false);\r\n    DialogAligner.center(this, getParent());\r\n    applyComponentOrientation(lang.getComponentOrientation());\r\n}'),(2297,'ActionEvent evt','java.awt.event.ActionEvent',0,394,'net.sourceforge.ganttproject.gui.previousState.GanttDialogSaveAsPreviousState',3214,'net.sourceforge.ganttproject.gui.previousState.GanttDialogSaveAsPreviousState.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent evt) {\r\n    if ((evt.getSource()) instanceof JButton) {\r\n        JButton button = ((JButton) (evt.getSource()));\r\n        if (button.getName().equals(\"ok\")) {\r\n            boolean overWrite = true;\r\n            for (int i = 0; i < (myProject.getPreviouStates().size()); i++)\r\n                if (((GanttPreviousState) (myProject.getPreviouStates().get(i))).getName().equals(previousStateBean.getName())) {\r\n                    GanttDialogInfo gdi = new GanttDialogInfo(myProject, GanttDialogInfo.WARNING, GanttDialogInfo.YES_NO_OPTION, (((previousStateBean.getName()) + \"\n\") + (lang.getText(\"msg18\"))), lang.getText(\"warning\"));\r\n                    gdi.show();\r\n                    if ((gdi.res) == (GanttDialogInfo.YES))\r\n                        myProject.getPreviouStates().remove(i);\r\n                    else\r\n                        overWrite = false;\r\n\r\n                    break;\r\n                }\r\n\r\n            if (overWrite) {\r\n                try {\r\n                    myPreviousState = new GanttPreviousState(previousStateBean.getName(), myProject);\r\n                    isSaved = true;\r\n                    previousStateBean.setDefaultName();\r\n                } catch (IOException e) {\r\n                    myProject.getUIFacade().showErrorDialog(e);\r\n                }\r\n                this.setVisible(false);\r\n                dispose();\r\n            }\r\n        } else\r\n            if (button.getName().equals(\"cancel\")) {\r\n                this.setVisible(false);\r\n                dispose();\r\n            }\r\n\r\n    } else\r\n        if ((evt.getSource()) instanceof JComboBox) {\r\n            JComboBox comboBox = ((JComboBox) (evt.getSource()));\r\n            if (comboBox.getName().equals(\"nameComboBox\")) {\r\n                previousStateBean.getTextField().setText(((comboBox.getSelectedItem()) + \"\"));\r\n            }\r\n        }\r\n\r\n}'),(2298,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,395,'net.sourceforge.ganttproject.gui.previousState.GanttSaveAsPreviousStateBean',3217,'net.sourceforge.ganttproject.gui.previousState.GanttSaveAsPreviousStateBean.-init-(net.sourceforge.ganttproject.GanttProject)',0,'public GanttSaveAsPreviousStateBean(GanttProject project) {\r\n    myPreviousStates = project.getPreviouStates();\r\n    if ((myPreviousStates.size()) == 0) {\r\n        GanttSaveAsPreviousStateBean.defaultName = GanttLanguage.getInstance().getText(\"save\");\r\n        GanttSaveAsPreviousStateBean.count = 1;\r\n    }\r\n    init();\r\n}'),(2299,'ActionListener l','java.awt.event.ActionListener',0,395,'net.sourceforge.ganttproject.gui.previousState.GanttSaveAsPreviousStateBean',3218,'net.sourceforge.ganttproject.gui.previousState.GanttSaveAsPreviousStateBean.addActionListener(java.awt.event.ActionListener)',0,'public void addActionListener(ActionListener l) {\r\n    okButton.addActionListener(l);\r\n    cancelButton.addActionListener(l);\r\n    nameComboBox.addActionListener(l);\r\n}'),(2300,'String roleSetName','java.lang.String',0,396,'net.sourceforge.ganttproject.gui.projectwizard.I18N',3233,'net.sourceforge.ganttproject.gui.projectwizard.I18N.getRolesetTooltipHeader(java.lang.String)',0,'public String getRolesetTooltipHeader(String roleSetName) {\r\n    return MessageFormat.format(\"<html><body><h3>{0}</h3><ul>\", ((Object[]) (new String[]{ roleSetName })));\r\n}'),(2301,'Role role','net.sourceforge.ganttproject.roles.Role',512,396,'net.sourceforge.ganttproject.gui.projectwizard.I18N',3226,'net.sourceforge.ganttproject.gui.projectwizard.I18N.formatRoleForTooltip(net.sourceforge.ganttproject.roles.Role)',0,'public String formatRoleForTooltip(Role role) {\r\n    return MessageFormat.format(\"<li>{0}</li>\", ((Object[]) (new String[]{ role.getName() })));\r\n}'),(2302,'RoleSet roleSet','net.sourceforge.ganttproject.roles.RoleSet',520,396,'net.sourceforge.ganttproject.gui.projectwizard.I18N',3231,'net.sourceforge.ganttproject.gui.projectwizard.I18N.getRoleSetDisplayName(net.sourceforge.ganttproject.roles.RoleSet)',0,'public String getRoleSetDisplayName(RoleSet roleSet) {\r\n    return GanttLanguage.getInstance().getText(((\"roleSet.\" + (roleSet.getName())) + \".displayName\"));\r\n}'),(2303,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,397,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard',3235,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard.createNewProject(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public PrjInfos createNewProject(IGanttProject project, UIFacade uiFacade) {\r\n    RoleSet[] roleSets = project.getRoleManager().getRoleSets();\r\n    NewProjectWizardWindow newProjectWizard = new NewProjectWizardWindow(uiFacade, new I18N());\r\n    newProjectWizard.addProjectNamePage(project);\r\n    newProjectWizard.addRoleSetPage(roleSets);\r\n    newProjectWizard.addWeekendConfigurationPage(project.getActiveCalendar(), project);\r\n    newProjectWizard.show();\r\n    return new PrjInfos();\r\n}'),(2304,'net.sourceforge.ganttproject.PrjInfos','net.sourceforge.ganttproject.PrjInfos',87,397,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard',3235,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard.createNewProject(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',1,'public PrjInfos createNewProject(IGanttProject project, UIFacade uiFacade) {\r\n    RoleSet[] roleSets = project.getRoleManager().getRoleSets();\r\n    NewProjectWizardWindow newProjectWizard = new NewProjectWizardWindow(uiFacade, new I18N());\r\n    newProjectWizard.addProjectNamePage(project);\r\n    newProjectWizard.addRoleSetPage(roleSets);\r\n    newProjectWizard.addWeekendConfigurationPage(project.getActiveCalendar(), project);\r\n    newProjectWizard.show();\r\n    return new PrjInfos();\r\n}'),(2305,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,397,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard',3235,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard.createNewProject(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'public PrjInfos createNewProject(IGanttProject project, UIFacade uiFacade) {\r\n    RoleSet[] roleSets = project.getRoleManager().getRoleSets();\r\n    NewProjectWizardWindow newProjectWizard = new NewProjectWizardWindow(uiFacade, new I18N());\r\n    newProjectWizard.addProjectNamePage(project);\r\n    newProjectWizard.addRoleSetPage(roleSets);\r\n    newProjectWizard.addWeekendConfigurationPage(project.getActiveCalendar(), project);\r\n    newProjectWizard.show();\r\n    return new PrjInfos();\r\n}'),(2306,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,398,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow',3236,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.projectwizard.I18N)',0,'public NewProjectWizardWindow(UIFacade uiFacade, I18N i18n) {\r\n    super(uiFacade, i18n.getNewProjectWizardWindowTitle());\r\n    myI18n = i18n;\r\n}'),(2307,'I18N i18n','net.sourceforge.ganttproject.gui.projectwizard.I18N',396,398,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow',3236,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.gui.projectwizard.I18N)',0,'public NewProjectWizardWindow(UIFacade uiFacade, I18N i18n) {\r\n    super(uiFacade, i18n.getNewProjectWizardWindowTitle());\r\n    myI18n = i18n;\r\n}'),(2308,'RoleSet[] roleSets','net.sourceforge.ganttproject.roles.RoleSet[]',0,398,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow',3238,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addRoleSetPage(net.sourceforge.ganttproject.roles.RoleSet[])',0,'public void addRoleSetPage(RoleSet[] roleSets) {\r\n    WizardPage roleSetPage = new RoleSetPage(roleSets, myI18n);\r\n    addPage(roleSetPage);\r\n}'),(2309,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,398,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow',3237,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addProjectNamePage(net.sourceforge.ganttproject.IGanttProject)',0,'public void addProjectNamePage(IGanttProject project) {\r\n    WizardPage projectNamePage = new ProjectNamePage(null, project, myI18n);\r\n    addPage(projectNamePage);\r\n}'),(2310,'GPCalendar calendar','net.sourceforge.ganttproject.calendar.GPCalendar',146,398,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow',3239,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addWeekendConfigurationPage(net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.IGanttProject)',0,'public void addWeekendConfigurationPage(GPCalendar calendar, IGanttProject project) {\r\n    WizardPage weekendPage;\r\n    try {\r\n        weekendPage = new WeekendConfigurationPage(calendar, myI18n, project);\r\n        addPage(weekendPage);\r\n    } catch (Exception e) {\r\n        getUIFacade().showErrorDialog(e);\r\n    }\r\n}'),(2311,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,398,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow',3239,'net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addWeekendConfigurationPage(net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.IGanttProject)',0,'public void addWeekendConfigurationPage(GPCalendar calendar, IGanttProject project) {\r\n    WizardPage weekendPage;\r\n    try {\r\n        weekendPage = new WeekendConfigurationPage(calendar, myI18n, project);\r\n        addPage(weekendPage);\r\n    } catch (Exception e) {\r\n        getUIFacade().showErrorDialog(e);\r\n    }\r\n}'),(2312,'Frame owner','java.awt.Frame',0,399,'net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage',3240,'net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.-init-(java.awt.Frame,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.projectwizard.I18N)',0,'public ProjectNamePage(Frame owner, IGanttProject project, I18N i18n) {\r\n    myProjectSettingsPanel = new ProjectSettingsPanel(owner, project);\r\n    myI18N = i18n;\r\n}'),(2313,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,399,'net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage',3240,'net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.-init-(java.awt.Frame,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.projectwizard.I18N)',0,'public ProjectNamePage(Frame owner, IGanttProject project, I18N i18n) {\r\n    myProjectSettingsPanel = new ProjectSettingsPanel(owner, project);\r\n    myI18N = i18n;\r\n}'),(2314,'I18N i18n','net.sourceforge.ganttproject.gui.projectwizard.I18N',396,399,'net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage',3240,'net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.-init-(java.awt.Frame,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.projectwizard.I18N)',0,'public ProjectNamePage(Frame owner, IGanttProject project, I18N i18n) {\r\n    myProjectSettingsPanel = new ProjectSettingsPanel(owner, project);\r\n    myI18N = i18n;\r\n}'),(2315,'boolean active','boolean',0,399,'net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage',3243,'net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.setActive(boolean)',0,'public void setActive(boolean active) {\r\n    if (!active) {\r\n        myProjectSettingsPanel.applyChanges(false);\r\n    }\r\n}'),(2316,'RoleSet[] roleSets','net.sourceforge.ganttproject.roles.RoleSet[]',0,401,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage',3244,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.-init-(net.sourceforge.ganttproject.roles.RoleSet[],net.sourceforge.ganttproject.gui.projectwizard.I18N)',0,'RoleSetPage(RoleSet[] roleSets, I18N i18n) {\r\n    myI18N = i18n;\r\n    myListModel = new RoleSetPage.RoleSetListModel(roleSets, i18n);\r\n}'),(2317,'I18N i18n','net.sourceforge.ganttproject.gui.projectwizard.I18N',396,401,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage',3244,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.-init-(net.sourceforge.ganttproject.roles.RoleSet[],net.sourceforge.ganttproject.gui.projectwizard.I18N)',0,'RoleSetPage(RoleSet[] roleSets, I18N i18n) {\r\n    myI18N = i18n;\r\n    myListModel = new RoleSetPage.RoleSetListModel(roleSets, i18n);\r\n}'),(2318,'RoleSet[] roleSets','net.sourceforge.ganttproject.roles.RoleSet[]',0,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3249,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.-init-(net.sourceforge.ganttproject.roles.RoleSet[],net.sourceforge.ganttproject.gui.projectwizard.I18N)',0,'RoleSetListModel(RoleSet[] roleSets, I18N i18n) {\r\n    myRoleSets = roleSets;\r\n    myI18n = i18n;\r\n}'),(2319,'I18N i18n','net.sourceforge.ganttproject.gui.projectwizard.I18N',396,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3249,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.-init-(net.sourceforge.ganttproject.roles.RoleSet[],net.sourceforge.ganttproject.gui.projectwizard.I18N)',0,'RoleSetListModel(RoleSet[] roleSets, I18N i18n) {\r\n    myRoleSets = roleSets;\r\n    myI18n = i18n;\r\n}'),(2320,'int index','int',0,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3256,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.toggle(int)',0,'public void toggle(int index) {\r\n    if (!(isTheOnlyEnabled(myRoleSets[index]))) {\r\n        myRoleSets[index].setEnabled((!(myRoleSets[index].isEnabled())));\r\n        fireContentsChanged(this, index, index);\r\n    }\r\n}'),(2321,'int index','int',0,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3252,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.getElementAt(int)',0,'public Object getElementAt(int index) {\r\n    return myRoleSets[index];\r\n}'),(2322,'JList list','javax.swing.JList',0,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3253,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\r\n    final RoleSet roleSet = ((RoleSet) (value));\r\n    final JCheckBox result = new JCheckBox(myI18n.getRoleSetDisplayName(roleSet), roleSet.isEnabled());\r\n    if (isTheOnlyEnabled(roleSet)) {\r\n        result.setEnabled(false);\r\n    }\r\n    result.setToolTipText(createTooltipText(roleSet));\r\n    return result;\r\n}'),(2323,'Object value','java.lang.Object',0,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3253,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\r\n    final RoleSet roleSet = ((RoleSet) (value));\r\n    final JCheckBox result = new JCheckBox(myI18n.getRoleSetDisplayName(roleSet), roleSet.isEnabled());\r\n    if (isTheOnlyEnabled(roleSet)) {\r\n        result.setEnabled(false);\r\n    }\r\n    result.setToolTipText(createTooltipText(roleSet));\r\n    return result;\r\n}'),(2324,'int index','int',0,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3253,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\r\n    final RoleSet roleSet = ((RoleSet) (value));\r\n    final JCheckBox result = new JCheckBox(myI18n.getRoleSetDisplayName(roleSet), roleSet.isEnabled());\r\n    if (isTheOnlyEnabled(roleSet)) {\r\n        result.setEnabled(false);\r\n    }\r\n    result.setToolTipText(createTooltipText(roleSet));\r\n    return result;\r\n}'),(2325,'boolean isSelected','boolean',0,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3253,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\r\n    final RoleSet roleSet = ((RoleSet) (value));\r\n    final JCheckBox result = new JCheckBox(myI18n.getRoleSetDisplayName(roleSet), roleSet.isEnabled());\r\n    if (isTheOnlyEnabled(roleSet)) {\r\n        result.setEnabled(false);\r\n    }\r\n    result.setToolTipText(createTooltipText(roleSet));\r\n    return result;\r\n}'),(2326,'boolean cellHasFocus','boolean',0,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3253,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\r\n    final RoleSet roleSet = ((RoleSet) (value));\r\n    final JCheckBox result = new JCheckBox(myI18n.getRoleSetDisplayName(roleSet), roleSet.isEnabled());\r\n    if (isTheOnlyEnabled(roleSet)) {\r\n        result.setEnabled(false);\r\n    }\r\n    result.setToolTipText(createTooltipText(roleSet));\r\n    return result;\r\n}'),(2327,'RoleSet roleSet','net.sourceforge.ganttproject.roles.RoleSet',520,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3255,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.isTheOnlyEnabled(net.sourceforge.ganttproject.roles.RoleSet)',0,'private boolean isTheOnlyEnabled(RoleSet roleSet) {\r\n    boolean result = true;\r\n    for (int i = 0; i < (myRoleSets.length); i++) {\r\n        if (((myRoleSets[i]) != roleSet) && (myRoleSets[i].isEnabled())) {\r\n            result = false;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(2328,'RoleSet roleSet','net.sourceforge.ganttproject.roles.RoleSet',520,400,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel',3250,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel.createTooltipText(net.sourceforge.ganttproject.roles.RoleSet)',0,'private String createTooltipText(RoleSet roleSet) {\r\n    StringBuffer result = new StringBuffer();\r\n    result.append(myI18n.getRolesetTooltipHeader(roleSet.getName()));\r\n    Role[] roles = roleSet.getRoles();\r\n    for (int i = 0; i < (roles.length); i++) {\r\n        Role nextRole = roles[i];\r\n        result.append(myI18n.formatRoleForTooltip(nextRole));\r\n    }\r\n    result.append(myI18n.getRolesetTooltipFooter());\r\n    return result.toString();\r\n}'),(2329,'boolean active','boolean',0,401,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage',3248,'net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.setActive(boolean)',0,'public void setActive(boolean active) {\r\n}'),(2330,'GPCalendar calendar','net.sourceforge.ganttproject.calendar.GPCalendar',146,403,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage',3257,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.-init-(net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.gui.projectwizard.I18N,net.sourceforge.ganttproject.IGanttProject)',0,'WeekendConfigurationPage(GPCalendar calendar, I18N i18n, IGanttProject project) throws Exception {\r\n    myCalendar = calendar;\r\n    myCalendar.getPublicHolidays().clear();\r\n    myProject = ((GanttProject) (project));\r\n    myI18N = i18n;\r\n    String[] dayNames = myI18N.getDayNames();\r\n    myPanel = new JPanel(new BorderLayout());\r\n    choosePublicHoliday = new JLabel(GanttLanguage.getInstance().getText(\"choosePublicHoliday\"));\r\n    chooseWeekend = new JLabel(GanttLanguage.getInstance().getText(\"chooseWeekend\"));\r\n    JCCalendar = new JComboBox();\r\n    JCCalendar.addItem(GanttLanguage.getInstance().getText(\"none\"));\r\n    XMLCalendarOpen open = new XMLCalendarOpen();\r\n    open.setCalendars();\r\n    String[] labels = open.getLabels();\r\n    calendars = open.getCalendarResources();\r\n    for (int i = 0; i < (labels.length); i++)\r\n        JCCalendar.addItem(labels[i]);\r\n\r\n    JCCalendar.addActionListener(this);\r\n    JPanel publicHolidayPanel = new JPanel(new BorderLayout());\r\n    publicHolidayPanel.add(choosePublicHoliday, BorderLayout.WEST);\r\n    publicHolidayPanel.add(JCCalendar);\r\n    myBox.add(publicHolidayPanel);\r\n    myBox.add(new JPanel());\r\n    Box cb = Box.createVerticalBox();\r\n    /* Table to keep all the JCheckBoxes with days of the week.\n    It is used to check if in project creation dialog all days are marked as weekend. If they are, day selected \n    last will be unmarked. See class CheckBoxAction.\n\n    If you know better solution, do not hesitate to replace this code.\n     */\r\n    JCheckBox[] allCheckBoxes = new JCheckBox[7];\r\n    cb.add(chooseWeekend);\r\n    int nextDay = Calendar.MONDAY;\r\n    for (int i = 0; i < 7; i++) {\r\n        JCheckBox nextCheckBox = new JCheckBox();\r\n        nextCheckBox.setSelected(((calendar.getWeekDayType(nextDay)) == (GPCalendar.DayType.WEEKEND)));\r\n        nextCheckBox.setAction(new WeekendConfigurationPage.CheckBoxAction(nextDay, dayNames[(nextDay - 1)], nextCheckBox.getModel(), allCheckBoxes));\r\n        cb.add(nextCheckBox);\r\n        allCheckBoxes[i] = nextCheckBox;\r\n        if ((++nextDay) >= 8) {\r\n            nextDay = 1;\r\n        }\r\n    }\r\n    JPanel weekendPanel = new JPanel(new BorderLayout());\r\n    weekendPanel.add(cb, BorderLayout.WEST);\r\n    myBox.add(weekendPanel);\r\n    myBox.add(new JPanel());\r\n    JPanel projectPanel = new JPanel(new BorderLayout());\r\n    projectPanel.add(myBox, BorderLayout.NORTH);\r\n    myPanel.add(projectPanel);\r\n    // addUsingGBL(myPanel, myBox, gbc, 0, 1, 4, 4);\r\n}'),(2331,'I18N i18n','net.sourceforge.ganttproject.gui.projectwizard.I18N',396,403,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage',3257,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.-init-(net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.gui.projectwizard.I18N,net.sourceforge.ganttproject.IGanttProject)',0,'WeekendConfigurationPage(GPCalendar calendar, I18N i18n, IGanttProject project) throws Exception {\r\n    myCalendar = calendar;\r\n    myCalendar.getPublicHolidays().clear();\r\n    myProject = ((GanttProject) (project));\r\n    myI18N = i18n;\r\n    String[] dayNames = myI18N.getDayNames();\r\n    myPanel = new JPanel(new BorderLayout());\r\n    choosePublicHoliday = new JLabel(GanttLanguage.getInstance().getText(\"choosePublicHoliday\"));\r\n    chooseWeekend = new JLabel(GanttLanguage.getInstance().getText(\"chooseWeekend\"));\r\n    JCCalendar = new JComboBox();\r\n    JCCalendar.addItem(GanttLanguage.getInstance().getText(\"none\"));\r\n    XMLCalendarOpen open = new XMLCalendarOpen();\r\n    open.setCalendars();\r\n    String[] labels = open.getLabels();\r\n    calendars = open.getCalendarResources();\r\n    for (int i = 0; i < (labels.length); i++)\r\n        JCCalendar.addItem(labels[i]);\r\n\r\n    JCCalendar.addActionListener(this);\r\n    JPanel publicHolidayPanel = new JPanel(new BorderLayout());\r\n    publicHolidayPanel.add(choosePublicHoliday, BorderLayout.WEST);\r\n    publicHolidayPanel.add(JCCalendar);\r\n    myBox.add(publicHolidayPanel);\r\n    myBox.add(new JPanel());\r\n    Box cb = Box.createVerticalBox();\r\n    /* Table to keep all the JCheckBoxes with days of the week.\n    It is used to check if in project creation dialog all days are marked as weekend. If they are, day selected \n    last will be unmarked. See class CheckBoxAction.\n\n    If you know better solution, do not hesitate to replace this code.\n     */\r\n    JCheckBox[] allCheckBoxes = new JCheckBox[7];\r\n    cb.add(chooseWeekend);\r\n    int nextDay = Calendar.MONDAY;\r\n    for (int i = 0; i < 7; i++) {\r\n        JCheckBox nextCheckBox = new JCheckBox();\r\n        nextCheckBox.setSelected(((calendar.getWeekDayType(nextDay)) == (GPCalendar.DayType.WEEKEND)));\r\n        nextCheckBox.setAction(new WeekendConfigurationPage.CheckBoxAction(nextDay, dayNames[(nextDay - 1)], nextCheckBox.getModel(), allCheckBoxes));\r\n        cb.add(nextCheckBox);\r\n        allCheckBoxes[i] = nextCheckBox;\r\n        if ((++nextDay) >= 8) {\r\n            nextDay = 1;\r\n        }\r\n    }\r\n    JPanel weekendPanel = new JPanel(new BorderLayout());\r\n    weekendPanel.add(cb, BorderLayout.WEST);\r\n    myBox.add(weekendPanel);\r\n    myBox.add(new JPanel());\r\n    JPanel projectPanel = new JPanel(new BorderLayout());\r\n    projectPanel.add(myBox, BorderLayout.NORTH);\r\n    myPanel.add(projectPanel);\r\n    // addUsingGBL(myPanel, myBox, gbc, 0, 1, 4, 4);\r\n}'),(2332,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,403,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage',3257,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.-init-(net.sourceforge.ganttproject.calendar.GPCalendar,net.sourceforge.ganttproject.gui.projectwizard.I18N,net.sourceforge.ganttproject.IGanttProject)',0,'WeekendConfigurationPage(GPCalendar calendar, I18N i18n, IGanttProject project) throws Exception {\r\n    myCalendar = calendar;\r\n    myCalendar.getPublicHolidays().clear();\r\n    myProject = ((GanttProject) (project));\r\n    myI18N = i18n;\r\n    String[] dayNames = myI18N.getDayNames();\r\n    myPanel = new JPanel(new BorderLayout());\r\n    choosePublicHoliday = new JLabel(GanttLanguage.getInstance().getText(\"choosePublicHoliday\"));\r\n    chooseWeekend = new JLabel(GanttLanguage.getInstance().getText(\"chooseWeekend\"));\r\n    JCCalendar = new JComboBox();\r\n    JCCalendar.addItem(GanttLanguage.getInstance().getText(\"none\"));\r\n    XMLCalendarOpen open = new XMLCalendarOpen();\r\n    open.setCalendars();\r\n    String[] labels = open.getLabels();\r\n    calendars = open.getCalendarResources();\r\n    for (int i = 0; i < (labels.length); i++)\r\n        JCCalendar.addItem(labels[i]);\r\n\r\n    JCCalendar.addActionListener(this);\r\n    JPanel publicHolidayPanel = new JPanel(new BorderLayout());\r\n    publicHolidayPanel.add(choosePublicHoliday, BorderLayout.WEST);\r\n    publicHolidayPanel.add(JCCalendar);\r\n    myBox.add(publicHolidayPanel);\r\n    myBox.add(new JPanel());\r\n    Box cb = Box.createVerticalBox();\r\n    /* Table to keep all the JCheckBoxes with days of the week.\n    It is used to check if in project creation dialog all days are marked as weekend. If they are, day selected \n    last will be unmarked. See class CheckBoxAction.\n\n    If you know better solution, do not hesitate to replace this code.\n     */\r\n    JCheckBox[] allCheckBoxes = new JCheckBox[7];\r\n    cb.add(chooseWeekend);\r\n    int nextDay = Calendar.MONDAY;\r\n    for (int i = 0; i < 7; i++) {\r\n        JCheckBox nextCheckBox = new JCheckBox();\r\n        nextCheckBox.setSelected(((calendar.getWeekDayType(nextDay)) == (GPCalendar.DayType.WEEKEND)));\r\n        nextCheckBox.setAction(new WeekendConfigurationPage.CheckBoxAction(nextDay, dayNames[(nextDay - 1)], nextCheckBox.getModel(), allCheckBoxes));\r\n        cb.add(nextCheckBox);\r\n        allCheckBoxes[i] = nextCheckBox;\r\n        if ((++nextDay) >= 8) {\r\n            nextDay = 1;\r\n        }\r\n    }\r\n    JPanel weekendPanel = new JPanel(new BorderLayout());\r\n    weekendPanel.add(cb, BorderLayout.WEST);\r\n    myBox.add(weekendPanel);\r\n    myBox.add(new JPanel());\r\n    JPanel projectPanel = new JPanel(new BorderLayout());\r\n    projectPanel.add(myBox, BorderLayout.NORTH);\r\n    myPanel.add(projectPanel);\r\n    // addUsingGBL(myPanel, myBox, gbc, 0, 1, 4, 4);\r\n}'),(2333,'int day','int',0,402,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage$CheckBoxAction',3264,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage$CheckBoxAction.-init-(int,java.lang.String,javax.swing.ButtonModel,javax.swing.JCheckBox[])',0,'CheckBoxAction(int day, String dayName, ButtonModel model, JCheckBox[] allCheckBoxes) {\r\n    super(dayName);\r\n    myDay = day;\r\n    myModel = model;\r\n    myCheckBoxes = allCheckBoxes;\r\n}'),(2334,'String dayName','java.lang.String',0,402,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage$CheckBoxAction',3264,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage$CheckBoxAction.-init-(int,java.lang.String,javax.swing.ButtonModel,javax.swing.JCheckBox[])',0,'CheckBoxAction(int day, String dayName, ButtonModel model, JCheckBox[] allCheckBoxes) {\r\n    super(dayName);\r\n    myDay = day;\r\n    myModel = model;\r\n    myCheckBoxes = allCheckBoxes;\r\n}'),(2335,'ButtonModel model','javax.swing.ButtonModel',0,402,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage$CheckBoxAction',3264,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage$CheckBoxAction.-init-(int,java.lang.String,javax.swing.ButtonModel,javax.swing.JCheckBox[])',0,'CheckBoxAction(int day, String dayName, ButtonModel model, JCheckBox[] allCheckBoxes) {\r\n    super(dayName);\r\n    myDay = day;\r\n    myModel = model;\r\n    myCheckBoxes = allCheckBoxes;\r\n}'),(2336,'JCheckBox[] allCheckBoxes','javax.swing.JCheckBox[]',0,402,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage$CheckBoxAction',3264,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage$CheckBoxAction.-init-(int,java.lang.String,javax.swing.ButtonModel,javax.swing.JCheckBox[])',0,'CheckBoxAction(int day, String dayName, ButtonModel model, JCheckBox[] allCheckBoxes) {\r\n    super(dayName);\r\n    myDay = day;\r\n    myModel = model;\r\n    myCheckBoxes = allCheckBoxes;\r\n}'),(2337,'boolean b','boolean',0,403,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage',3263,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.setActive(boolean)',0,'public void setActive(boolean b) {\r\n}'),(2338,'ActionEvent e','java.awt.event.ActionEvent',0,402,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage$CheckBoxAction',3265,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage$CheckBoxAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    // Counting number of selected days of the week.\r\n    int count = 0;\r\n    for (int i = 0; i < (myCheckBoxes.length); i++) {\r\n        if (myCheckBoxes[i].isSelected()) {\r\n            count++;\r\n        }\r\n    }\r\n    if (count == (myCheckBoxes.length)) {\r\n        // If all days of the week are marked as weekend unmark selected the last.\r\n        myModel.setSelected(false);\r\n    } else {\r\n        this.myCalendar.setWeekDayType(myDay, (myModel.isSelected() ? GPCalendar.DayType.WEEKEND : GPCalendar.DayType.WORKING));\r\n    }\r\n}'),(2339,'ActionEvent evt','java.awt.event.ActionEvent',0,403,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage',3259,'net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent evt) {\r\n    if ((evt.getSource()) instanceof JComboBox) {\r\n        if ((evt.getSource()) == (JCCalendar))\r\n            myCalendar.setPublicHolidays(getProjectCalendar(), myProject);\r\n\r\n    }\r\n}'),(2340,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,406,'net.sourceforge.ganttproject.gui.projectwizard.WizardImpl',3267,'net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,java.lang.String)',0,'public WizardImpl(UIFacade uiFacade, String title) {\r\n    // super(frame, title, true);\r\n    myUIFacade = uiFacade;\r\n    myTitle = title;\r\n    myCardLayout = new CardLayout();\r\n    myPagesContainer = new JPanel(myCardLayout);\r\n    myNextAction = new WizardImpl.NextAction();\r\n    myBackAction = new WizardImpl.BackAction();\r\n}'),(2341,'String title','java.lang.String',0,406,'net.sourceforge.ganttproject.gui.projectwizard.WizardImpl',3267,'net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,java.lang.String)',0,'public WizardImpl(UIFacade uiFacade, String title) {\r\n    // super(frame, title, true);\r\n    myUIFacade = uiFacade;\r\n    myTitle = title;\r\n    myCardLayout = new CardLayout();\r\n    myPagesContainer = new JPanel(myCardLayout);\r\n    myNextAction = new WizardImpl.NextAction();\r\n    myBackAction = new WizardImpl.BackAction();\r\n}'),(2342,'ActionEvent e','java.awt.event.ActionEvent',0,405,'net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction',3281,'net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    this.nextPage();\r\n}'),(2343,'ActionEvent e','java.awt.event.ActionEvent',0,404,'net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction',3279,'net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    this.backPage();\r\n}'),(2344,'WizardPage page','net.sourceforge.ganttproject.gui.projectwizard.WizardPage',407,406,'net.sourceforge.ganttproject.gui.projectwizard.WizardImpl',3268,'net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.addPage(net.sourceforge.ganttproject.gui.projectwizard.WizardPage)',0,'protected void addPage(WizardPage page) {\r\n    myPages.add(page);\r\n}'),(2345,'boolean b','boolean',0,407,'net.sourceforge.ganttproject.gui.projectwizard.WizardPage',3284,'net.sourceforge.ganttproject.gui.projectwizard.WizardPage.setActive(boolean)',0,'void setActive(boolean b);'),(2346,'Date date','java.util.Date',0,408,'net.sourceforge.ganttproject.gui.scrolling.ScrollingListener',3286,'net.sourceforge.ganttproject.gui.scrolling.ScrollingListener.scrollLeft(java.util.Date)',0,'void scrollLeft(Date date);'),(2347,'Date date','java.util.Date',0,409,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManager',3291,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManager.scrollLeft(java.util.Date)',0,'void scrollLeft(Date date);'),(2348,'ScrollingListener listener','net.sourceforge.ganttproject.gui.scrolling.ScrollingListener',408,409,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManager',3288,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManager.addScrollingListener(net.sourceforge.ganttproject.gui.scrolling.ScrollingListener)',0,'void addScrollingListener(ScrollingListener listener);'),(2349,'ScrollingListener listener','net.sourceforge.ganttproject.gui.scrolling.ScrollingListener',408,409,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManager',3289,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManager.removeScrollingListener(net.sourceforge.ganttproject.gui.scrolling.ScrollingListener)',0,'void removeScrollingListener(ScrollingListener listener);'),(2350,'Date date','java.util.Date',0,410,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl',3297,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollLeft(java.util.Date)',0,'public void scrollLeft(Date date) {\r\n    for (int i = 0; i < (myListeners.size()); i++) {\r\n        ScrollingListener nextListener = ((ScrollingListener) (myListeners.get(i)));\r\n        nextListener.scrollLeft(date);\r\n    }\r\n}'),(2351,'ScrollingListener listener','net.sourceforge.ganttproject.gui.scrolling.ScrollingListener',408,410,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl',3294,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.addScrollingListener(net.sourceforge.ganttproject.gui.scrolling.ScrollingListener)',0,'public void addScrollingListener(ScrollingListener listener) {\r\n    myListeners.add(listener);\r\n}'),(2352,'ScrollingListener listener','net.sourceforge.ganttproject.gui.scrolling.ScrollingListener',408,410,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl',3295,'net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.removeScrollingListener(net.sourceforge.ganttproject.gui.scrolling.ScrollingListener)',0,'public void removeScrollingListener(ScrollingListener listener) {\r\n    myListeners.remove(listener);\r\n}'),(2353,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,411,'net.sourceforge.ganttproject.gui.server.ConnectionPanel',3299,'net.sourceforge.ganttproject.gui.server.ConnectionPanel.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic ConnectionPanel(GanttProject parent) {\r\n    super(GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"openFromServer\")), GanttLanguage.getInstance().getText(\"settingsConnection\"), parent);\r\n    Box vbServer = Box.createVerticalBox();\r\n    // url textfield\r\n    JPanel urlPanel = new JPanel(new BorderLayout());\r\n    urlPanel.add(new JLabel(language.getText(\"fileFromServer\")), BorderLayout.WEST);\r\n    // urlPanel.add(tfUrl = new JTextField(), BorderLayout.CENTER);\r\n    // vb.add(urlPanel);\r\n    // vb.add(new JPanel());\r\n    vbServer.add(urlPanel);\r\n    vbServer.add((tfUrl = new JTextField(\"http://\")));\r\n    vbServer.add(new JPanel());\r\n    // login textfield\r\n    JPanel loginPanel = new JPanel(new BorderLayout());\r\n    loginPanel.add(new JLabel(language.getText(\"userName\")), BorderLayout.WEST);\r\n    /* loginPanel.add(tfLogin = new JTextField(), BorderLayout.CENTER);\n    vb.add(loginPanel); vb.add(new JPanel());\n     */\r\n    vbServer.add(loginPanel);\r\n    vbServer.add((tfLogin = new JTextField()));\r\n    vbServer.add(new JPanel());\r\n    // password textfield\r\n    JPanel passwordPanel = new JPanel(new BorderLayout());\r\n    passwordPanel.add(new JLabel(language.getText(\"userName\")), BorderLayout.WEST);\r\n    /* passwordPanel.add(tfPassword = new JPasswordField(),\n    BorderLayout.CENTER); vb.add(passwordPanel); vb.add(new JPanel());\n     */\r\n    vbServer.add(passwordPanel);\r\n    vbServer.add((tfPassword = new JPasswordField()));\r\n    vbServer.add(new JPanel());\r\n    JPanel serverPanel = new JPanel(new BorderLayout());\r\n    serverPanel.add(vbServer, BorderLayout.NORTH);\r\n    vb.add(serverPanel);\r\n    applyComponentOrientation(language.getComponentOrientation());\r\n}'),(2354,'boolean askForApply','boolean',0,411,'net.sourceforge.ganttproject.gui.server.ConnectionPanel',3300,'net.sourceforge.ganttproject.gui.server.ConnectionPanel.applyChanges(boolean)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.gui.options.GeneralOptionPanel#applyChanges(boolean)\n */\r\npublic boolean applyChanges(boolean askForApply) {\r\n    return false;\r\n}'),(2355,'GanttProject parent','net.sourceforge.ganttproject.GanttProject',53,412,'net.sourceforge.ganttproject.gui.server.ServerDialog',3302,'net.sourceforge.ganttproject.gui.server.ServerDialog.-init-(net.sourceforge.ganttproject.GanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic ServerDialog(GanttProject parent) {\r\n    super(parent, GanttProject.correctLabel(GanttLanguage.getInstance().getText(\"webServer\")), true, new ConnectionPanel(parent));\r\n}'),(2356,'TreeSelectionEvent e','javax.swing.event.TreeSelectionEvent',0,412,'net.sourceforge.ganttproject.gui.server.ServerDialog',3304,'net.sourceforge.ganttproject.gui.server.ServerDialog.valueChanged(javax.swing.event.TreeSelectionEvent)',0,'/* (non-Javadoc)\n\n@see javax.swing.event.TreeSelectionListener#valueChanged(javax.swing.event.TreeSelectionEvent)\n */\r\npublic void valueChanged(TreeSelectionEvent e) {\r\n    DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (e.getPath().getLastPathComponent()));\r\n    String sNode = ((String) (node.getUserObject()));\r\n    // - ask the settingPanel if parameters are changed\r\n    // boolean bHasChange = settingPanel.applyChanges(true); //no change to\r\n    // do on this panel\r\n    // - remove the settingPanel\r\n    mainPanel2.remove(0);\r\n    // - Create the new panel\r\n    if (sNode.equals(GanttProject.correctLabel(language.getText(\"openFromServer\"))))\r\n        settingPanel = new ConnectionPanel(appli);\r\n\r\n    // - initialize the panel\r\n    settingPanel.initialize();\r\n    // - add the settingPanel into the main Panel\r\n    mainPanel2.add(settingPanel, 0);\r\n    mainPanel2.repaint();\r\n    mainPanel2.validate();// valide the changes\r\n\r\n}'),(2357,'Task task','net.sourceforge.ganttproject.task.Task',548,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3305,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.-init-(net.sourceforge.ganttproject.task.Task)',0,'public CommonPanel(Task task) {\r\n    language = GanttLanguage.getInstance();\r\n    myTask = task;\r\n}'),(2358,'Container container','java.awt.Container',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3306,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'protected void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n    container.applyComponentOrientation(ComponentOrientation.getOrientation(Locale.getDefault()));\r\n}'),(2359,'Component component','java.awt.Component',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3306,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'protected void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n    container.applyComponentOrientation(ComponentOrientation.getOrientation(Locale.getDefault()));\r\n}'),(2360,'GridBagConstraints gbc','java.awt.GridBagConstraints',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3306,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'protected void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n    container.applyComponentOrientation(ComponentOrientation.getOrientation(Locale.getDefault()));\r\n}'),(2361,'int x','int',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3306,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'protected void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n    container.applyComponentOrientation(ComponentOrientation.getOrientation(Locale.getDefault()));\r\n}'),(2362,'int y','int',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3306,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'protected void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n    container.applyComponentOrientation(ComponentOrientation.getOrientation(Locale.getDefault()));\r\n}'),(2363,'int w','int',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3306,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'protected void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n    container.applyComponentOrientation(ComponentOrientation.getOrientation(Locale.getDefault()));\r\n}'),(2364,'int h','int',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3306,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.addUsingGBL(java.awt.Container,java.awt.Component,java.awt.GridBagConstraints,int,int,int,int)',0,'protected void addUsingGBL(Container container, Component component, GridBagConstraints gbc, int x, int y, int w, int h) {\r\n    gbc.gridx = x;\r\n    gbc.gridy = y;\r\n    gbc.gridwidth = w;\r\n    gbc.gridheight = h;\r\n    gbc.weighty = 0;\r\n    container.add(component, gbc);\r\n    container.applyComponentOrientation(ComponentOrientation.getOrientation(Locale.getDefault()));\r\n}'),(2365,'Container container','java.awt.Container',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3311,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprotected void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(2366,'GridBagConstraints gbc','java.awt.GridBagConstraints',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3311,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprotected void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(2367,'JLabel nameLabel','javax.swing.JLabel',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3311,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprotected void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(2368,'JTextField nameField','javax.swing.JTextField',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3311,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprotected void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(2369,'JLabel durationLabel','javax.swing.JLabel',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3311,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprotected void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(2370,'JTextField durationField','javax.swing.JTextField',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3311,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setFirstRow(java.awt.Container,java.awt.GridBagConstraints,javax.swing.JLabel,javax.swing.JTextField,javax.swing.JLabel,javax.swing.JTextField)',0,'/**\r\n * set the first row in all the tabbed pane. thus give them a common look\r\n */\r\nprotected void setFirstRow(Container container, GridBagConstraints gbc, JLabel nameLabel, JTextField nameField, JLabel durationLabel, JTextField durationField) {\r\n    container.setLayout(new GridBagLayout());\r\n    gbc.weightx = 0;\r\n    gbc.weighty = 0;\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    addUsingGBL(container, nameLabel, gbc, 0, 0, 1, 1);\r\n    addUsingGBL(container, nameField, gbc, 1, 0, 1, 1);\r\n    addUsingGBL(container, durationLabel, gbc, 2, 0, 1, 1);\r\n    gbc.weightx = 1;\r\n    addUsingGBL(container, durationField, gbc, 3, 0, 1, 1);\r\n}'),(2371,'String newName','java.lang.String',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3310,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.nameChanged(java.lang.String)',0,'public void nameChanged(String newName) {\r\n    nameField3.setText(newName);\r\n}'),(2372,'int newDuration','int',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3307,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.durationChanged(int)',0,'public void durationChanged(int newDuration) {\r\n    durationField3.setText((\"\" + newDuration));\r\n}'),(2373,'boolean onlyOneTask','boolean',0,413,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel',3312,'net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setupCommonFields(boolean)',0,'protected JPanel setupCommonFields(boolean onlyOneTask) {\r\n    nameLabel3 = new JLabel(((getLanguage().getText(\"name\")) + \":\"));\r\n    nameField3 = new JTextField(20);\r\n    nameField3.setText(getTask().getName());\r\n    durationLabel3 = new JLabel(((getLanguage().getText(\"length\")) + \":\"));\r\n    durationField3 = new JTextField(8);\r\n    durationField3.setText((\"\" + (getTask().getDuration().getLength())));\r\n    nameField3.setEditable(false);\r\n    durationField3.setEditable(false);\r\n    firstRowPanel3 = new JPanel(flowL);\r\n    setFirstRow(firstRowPanel3, gbc, nameLabel3, nameField3, durationLabel3, durationField3);\r\n    if (!onlyOneTask) {\r\n        nameLabel3.setVisible(false);\r\n        nameField3.setVisible(false);\r\n    }\r\n    return firstRowPanel3;\r\n}'),(2374,'CustomColumnsManager manager','net.sourceforge.ganttproject.task.CustomColumnsManager',534,415,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel',3313,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.-init-(net.sourceforge.ganttproject.task.CustomColumnsManager,net.sourceforge.ganttproject.task.CustomColumnsStorage,net.sourceforge.ganttproject.gui.UIFacade)',0,'public CustomColumnsPanel(CustomColumnsManager manager, CustomColumnsStorage customColHandler, UIFacade uifacade) {\r\n    myColumnManager = manager;\r\n    customColumnStorage = customColHandler;\r\n    myUIfacade = uifacade;\r\n    this.initComponents();\r\n}'),(2375,'CustomColumnsStorage customColHandler','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,415,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel',3313,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.-init-(net.sourceforge.ganttproject.task.CustomColumnsManager,net.sourceforge.ganttproject.task.CustomColumnsStorage,net.sourceforge.ganttproject.gui.UIFacade)',0,'public CustomColumnsPanel(CustomColumnsManager manager, CustomColumnsStorage customColHandler, UIFacade uifacade) {\r\n    myColumnManager = manager;\r\n    customColumnStorage = customColHandler;\r\n    myUIfacade = uifacade;\r\n    this.initComponents();\r\n}'),(2376,'UIFacade uifacade','net.sourceforge.ganttproject.gui.UIFacade',337,415,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel',3313,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.-init-(net.sourceforge.ganttproject.task.CustomColumnsManager,net.sourceforge.ganttproject.task.CustomColumnsStorage,net.sourceforge.ganttproject.gui.UIFacade)',0,'public CustomColumnsPanel(CustomColumnsManager manager, CustomColumnsStorage customColHandler, UIFacade uifacade) {\r\n    myColumnManager = manager;\r\n    customColumnStorage = customColHandler;\r\n    myUIfacade = uifacade;\r\n    this.initComponents();\r\n}'),(2377,'CustomColumnsStorage ccHandler','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3317,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.-init-(net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'public CustomColumnTableModel(CustomColumnsStorage ccHandler) {\r\n    customColumnsHandler = ccHandler;\r\n    this.columnIdentifiers = titles;\r\n    this.dataVector = new Vector();\r\n    Iterator it = customColumnsHandler.getCustomColums().iterator();\r\n    while (it.hasNext()) {\r\n        CustomColumn cc = ((CustomColumn) (it.next()));\r\n        Object[] o = new Object[]{ cc.getName(), cc.getType(), cc.getDefaultValue() };\r\n        this.addRow(o);\r\n    } \r\n}'),(2378,'CustomColumnsStorage cch','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3322,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.refreshData(net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'public void refreshData(CustomColumnsStorage cch) {\r\n    customColumnsHandler = cch;\r\n    this.dataVector = new Vector();\r\n    Iterator it = customColumnsHandler.getCustomColums().iterator();\r\n    while (it.hasNext()) {\r\n        CustomColumn cc = ((CustomColumn) (it.next()));\r\n        Object[] o = new Object[]{ cc.getName(), cc.getType(), cc.getDefaultValue() };\r\n        this.addRow(o);\r\n    } \r\n}'),(2379,'int column','int',0,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3319,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.getColumnName(int)',0,'public String getColumnName(int column) {\r\n    return ((String) (columnIdentifiers.get(column)));\r\n}'),(2380,'int column','int',0,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3318,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.getColumnClass(int)',0,'public Class getColumnClass(int column) {\r\n    return String.class;\r\n}'),(2381,'int row','int',0,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3321,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    return col != 1;\r\n}'),(2382,'int col','int',0,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3321,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    return col != 1;\r\n}'),(2383,'int row','int',0,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3320,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.getValueAt(int,int)',0,'public Object getValueAt(int row, int col) {\r\n    String colName = ((String) (((Vector) (this.dataVector.get(row))).get(0)));\r\n    CustomColumn res = customColumnsHandler.getCustomColumn(colName);\r\n    if (res != null) {\r\n        switch (col) {\r\n            case 0 :\r\n                return res.getName();\r\n            case 1 :\r\n                {\r\n                    Class cl = res.getType();\r\n                    if (cl.equals(String.class))\r\n                        return CustomColumnsPanel.language.getText(\"text\");\r\n\r\n                    if (GregorianCalendar.class.isAssignableFrom(cl))\r\n                        return CustomColumnsPanel.language.getText(\"date\");\r\n\r\n                    if (cl.equals(Boolean.class))\r\n                        return CustomColumnsPanel.language.getText(\"boolean\");\r\n\r\n                    if (cl.equals(Integer.class))\r\n                        return CustomColumnsPanel.language.getText(\"integer\");\r\n\r\n                    if (cl.equals(Double.class))\r\n                        return CustomColumnsPanel.language.getText(\"double\");\r\n\r\n                }\r\n            case 2 :\r\n                return res.getDefaultValue();\r\n        }\r\n    }\r\n    return null;\r\n}'),(2384,'int col','int',0,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3320,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.getValueAt(int,int)',0,'public Object getValueAt(int row, int col) {\r\n    String colName = ((String) (((Vector) (this.dataVector.get(row))).get(0)));\r\n    CustomColumn res = customColumnsHandler.getCustomColumn(colName);\r\n    if (res != null) {\r\n        switch (col) {\r\n            case 0 :\r\n                return res.getName();\r\n            case 1 :\r\n                {\r\n                    Class cl = res.getType();\r\n                    if (cl.equals(String.class))\r\n                        return CustomColumnsPanel.language.getText(\"text\");\r\n\r\n                    if (GregorianCalendar.class.isAssignableFrom(cl))\r\n                        return CustomColumnsPanel.language.getText(\"date\");\r\n\r\n                    if (cl.equals(Boolean.class))\r\n                        return CustomColumnsPanel.language.getText(\"boolean\");\r\n\r\n                    if (cl.equals(Integer.class))\r\n                        return CustomColumnsPanel.language.getText(\"integer\");\r\n\r\n                    if (cl.equals(Double.class))\r\n                        return CustomColumnsPanel.language.getText(\"double\");\r\n\r\n                }\r\n            case 2 :\r\n                return res.getDefaultValue();\r\n        }\r\n    }\r\n    return null;\r\n}'),(2385,'Object o','java.lang.Object',0,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3323,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.setValueAt(java.lang.Object,int,int)',0,'public void setValueAt(Object o, int row, int col) {\r\n    String oldName;\r\n    Vector v = ((Vector) (dataVector.get(row)));\r\n    oldName = ((String) (v.get(0)));\r\n    if (col == 0) {\r\n        if (!(((String) (o)).equals(oldName))) {\r\n            if (!(customColumnStorage.exists(((String) (o))))) {\r\n                v.setElementAt(o, col);\r\n                myColumnManager.changeCustomColumnName(oldName, ((String) (o)));\r\n            }\r\n        }\r\n    }\r\n    if (col == 2) {\r\n        try {\r\n            myColumnManager.changeCustomColumnDefaultValue(oldName, o);\r\n            v.setElementAt(o, col);\r\n        } catch (CustomColumnsException e) {\r\n            myUIfacade.showErrorDialog(e);\r\n        }\r\n    }\r\n}'),(2386,'int row','int',0,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3323,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.setValueAt(java.lang.Object,int,int)',0,'public void setValueAt(Object o, int row, int col) {\r\n    String oldName;\r\n    Vector v = ((Vector) (dataVector.get(row)));\r\n    oldName = ((String) (v.get(0)));\r\n    if (col == 0) {\r\n        if (!(((String) (o)).equals(oldName))) {\r\n            if (!(customColumnStorage.exists(((String) (o))))) {\r\n                v.setElementAt(o, col);\r\n                myColumnManager.changeCustomColumnName(oldName, ((String) (o)));\r\n            }\r\n        }\r\n    }\r\n    if (col == 2) {\r\n        try {\r\n            myColumnManager.changeCustomColumnDefaultValue(oldName, o);\r\n            v.setElementAt(o, col);\r\n        } catch (CustomColumnsException e) {\r\n            myUIfacade.showErrorDialog(e);\r\n        }\r\n    }\r\n}'),(2387,'int col','int',0,414,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel',3323,'net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel$CustomColumnTableModel.setValueAt(java.lang.Object,int,int)',0,'public void setValueAt(Object o, int row, int col) {\r\n    String oldName;\r\n    Vector v = ((Vector) (dataVector.get(row)));\r\n    oldName = ((String) (v.get(0)));\r\n    if (col == 0) {\r\n        if (!(((String) (o)).equals(oldName))) {\r\n            if (!(customColumnStorage.exists(((String) (o))))) {\r\n                v.setElementAt(o, col);\r\n                myColumnManager.changeCustomColumnName(oldName, ((String) (o)));\r\n            }\r\n        }\r\n    }\r\n    if (col == 2) {\r\n        try {\r\n            myColumnManager.changeCustomColumnDefaultValue(oldName, o);\r\n            v.setElementAt(o, col);\r\n        } catch (CustomColumnsException e) {\r\n            myUIfacade.showErrorDialog(e);\r\n        }\r\n    }\r\n}'),(2388,'Task task','net.sourceforge.ganttproject.task.Task',548,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3324,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.-init-(net.sourceforge.ganttproject.task.Task)',0,'public DependencyTableModel(Task task) {\r\n    myDependencies = new ArrayList(Arrays.asList(task.getDependenciesAsDependant().toArray()));\r\n    myMutator = task.getManager().getDependencyCollection().createMutator();\r\n    myTask = task;\r\n}'),(2389,'Task task','net.sourceforge.ganttproject.task.Task',548,416,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem',3334,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem.-init-(net.sourceforge.ganttproject.task.Task)',0,'TaskComboItem(Task task) {\r\n    myTask = task;\r\n    myText = ((\"[#\" + (task.getTaskID())) + \"] \") + (task.getName());\r\n}'),(2390,'int col','int',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3328,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getColumnName(int)',0,'/**\r\n * Return the name of the colums col\r\n */\r\npublic String getColumnName(int col) {\r\n    return columnNames[col];\r\n}'),(2391,'int row','int',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3330,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getValueAt(int,int)',0,'/**\r\n * Return the object at the specify row & colums\r\n */\r\npublic Object getValueAt(int row, int col) {\r\n    Object result;\r\n    if ((row >= 0) && (row < (getRowCount()))) {\r\n        if (row == (myDependencies.size())) {\r\n            result = \"\";\r\n        } else {\r\n            TaskDependency dep = ((TaskDependency) (myDependencies.get(row)));\r\n            switch (col) {\r\n                case 0 :\r\n                    {\r\n                        result = new Integer(dep.getDependee().getTaskID());\r\n                        break;\r\n                    }\r\n                case 1 :\r\n                    {\r\n                        result = dep.getDependee();\r\n                        break;\r\n                    }\r\n                case 2 :\r\n                    {\r\n                        result = dep.getConstraint().getName();\r\n                        break;\r\n                    }\r\n                case 3 :\r\n                    {\r\n                        result = new Integer(dep.getDifference());\r\n                        break;\r\n                    }\r\n                case 4 :\r\n                    {\r\n                        result = dep.getHardness();\r\n                        break;\r\n                    }\r\n                default :\r\n                    {\r\n                        throw new IllegalArgumentException((\"Illegal column number=\" + col));\r\n                    }\r\n            }\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException((\"Illegal row number=\" + row));\r\n    }\r\n    return result;\r\n}'),(2392,'int col','int',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3330,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getValueAt(int,int)',0,'/**\r\n * Return the object at the specify row & colums\r\n */\r\npublic Object getValueAt(int row, int col) {\r\n    Object result;\r\n    if ((row >= 0) && (row < (getRowCount()))) {\r\n        if (row == (myDependencies.size())) {\r\n            result = \"\";\r\n        } else {\r\n            TaskDependency dep = ((TaskDependency) (myDependencies.get(row)));\r\n            switch (col) {\r\n                case 0 :\r\n                    {\r\n                        result = new Integer(dep.getDependee().getTaskID());\r\n                        break;\r\n                    }\r\n                case 1 :\r\n                    {\r\n                        result = dep.getDependee();\r\n                        break;\r\n                    }\r\n                case 2 :\r\n                    {\r\n                        result = dep.getConstraint().getName();\r\n                        break;\r\n                    }\r\n                case 3 :\r\n                    {\r\n                        result = new Integer(dep.getDifference());\r\n                        break;\r\n                    }\r\n                case 4 :\r\n                    {\r\n                        result = dep.getHardness();\r\n                        break;\r\n                    }\r\n                default :\r\n                    {\r\n                        throw new IllegalArgumentException((\"Illegal column number=\" + col));\r\n                    }\r\n            }\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException((\"Illegal row number=\" + row));\r\n    }\r\n    return result;\r\n}'),(2393,'int row','int',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3331,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    boolean result = col > 0;\r\n    if (result) {\r\n        result = (col == 2) ? row < (myDependencies.size()) : row <= (myDependencies.size());\r\n    }\r\n    return result;\r\n}'),(2394,'int col','int',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3331,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.isCellEditable(int,int)',0,'public boolean isCellEditable(int row, int col) {\r\n    boolean result = col > 0;\r\n    if (result) {\r\n        result = (col == 2) ? row < (myDependencies.size()) : row <= (myDependencies.size());\r\n    }\r\n    return result;\r\n}'),(2395,'Object value','java.lang.Object',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3332,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.setValueAt(java.lang.Object,int,int)',0,'public void setValueAt(Object value, int row, int col) {\r\n    if (row >= 0) {\r\n        try {\r\n            if (row == (myDependencies.size())) {\r\n                createDependency(value);\r\n            } else {\r\n                updateDependency(value, row, col);\r\n            }\r\n        } catch (TaskDependencyException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException((\"I cant set data in row=\" + row));\r\n    }\r\n    fireTableCellUpdated(row, col);\r\n}'),(2396,'int row','int',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3332,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.setValueAt(java.lang.Object,int,int)',0,'public void setValueAt(Object value, int row, int col) {\r\n    if (row >= 0) {\r\n        try {\r\n            if (row == (myDependencies.size())) {\r\n                createDependency(value);\r\n            } else {\r\n                updateDependency(value, row, col);\r\n            }\r\n        } catch (TaskDependencyException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException((\"I cant set data in row=\" + row));\r\n    }\r\n    fireTableCellUpdated(row, col);\r\n}'),(2397,'int col','int',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3332,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.setValueAt(java.lang.Object,int,int)',0,'public void setValueAt(Object value, int row, int col) {\r\n    if (row >= 0) {\r\n        try {\r\n            if (row == (myDependencies.size())) {\r\n                createDependency(value);\r\n            } else {\r\n                updateDependency(value, row, col);\r\n            }\r\n        } catch (TaskDependencyException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n    } else {\r\n        throw new IllegalArgumentException((\"I cant set data in row=\" + row));\r\n    }\r\n    fireTableCellUpdated(row, col);\r\n}'),(2398,'Object value','java.lang.Object',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3333,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.updateDependency(java.lang.Object,int,int)',0,'private void updateDependency(Object value, int row, int col) throws TaskDependencyException {\r\n    TaskDependency dep = ((TaskDependency) (myDependencies.get(row)));\r\n    switch (col) {\r\n        case 4 :\r\n            dep.setHardness(((TaskDependency.Hardness) (value)));\r\n            break;\r\n        case 3 :\r\n            {\r\n                int loadAsInt = Integer.parseInt(String.valueOf(value));\r\n                dep.setDifference(loadAsInt);\r\n                break;\r\n            }\r\n        case 2 :\r\n            {\r\n                TaskDependencyConstraint clone;\r\n                try {\r\n                    clone = ((TaskDependencyConstraint) (((ConstraintImpl) (value)).clone()));\r\n                } catch (CloneNotSupportedException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                dep.setConstraint(clone);\r\n                break;\r\n            }\r\n        case 1 :\r\n            {\r\n                dep.delete();\r\n                myDependencies.remove(row);\r\n                if (value == null) {\r\n                    fireTableRowsDeleted(row, row);\r\n                } else {\r\n                    Task selectedTask = ((DependencyTableModel.TaskComboItem) (value)).myTask;\r\n                    TaskDependency newDependency = myMutator.createDependency(myTask, selectedTask, new FinishStartConstraintImpl());\r\n                    myDependencies.add(newDependency);\r\n                }\r\n            }\r\n    }\r\n}'),(2399,'int row','int',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3333,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.updateDependency(java.lang.Object,int,int)',0,'private void updateDependency(Object value, int row, int col) throws TaskDependencyException {\r\n    TaskDependency dep = ((TaskDependency) (myDependencies.get(row)));\r\n    switch (col) {\r\n        case 4 :\r\n            dep.setHardness(((TaskDependency.Hardness) (value)));\r\n            break;\r\n        case 3 :\r\n            {\r\n                int loadAsInt = Integer.parseInt(String.valueOf(value));\r\n                dep.setDifference(loadAsInt);\r\n                break;\r\n            }\r\n        case 2 :\r\n            {\r\n                TaskDependencyConstraint clone;\r\n                try {\r\n                    clone = ((TaskDependencyConstraint) (((ConstraintImpl) (value)).clone()));\r\n                } catch (CloneNotSupportedException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                dep.setConstraint(clone);\r\n                break;\r\n            }\r\n        case 1 :\r\n            {\r\n                dep.delete();\r\n                myDependencies.remove(row);\r\n                if (value == null) {\r\n                    fireTableRowsDeleted(row, row);\r\n                } else {\r\n                    Task selectedTask = ((DependencyTableModel.TaskComboItem) (value)).myTask;\r\n                    TaskDependency newDependency = myMutator.createDependency(myTask, selectedTask, new FinishStartConstraintImpl());\r\n                    myDependencies.add(newDependency);\r\n                }\r\n            }\r\n    }\r\n}'),(2400,'int col','int',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3333,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.updateDependency(java.lang.Object,int,int)',0,'private void updateDependency(Object value, int row, int col) throws TaskDependencyException {\r\n    TaskDependency dep = ((TaskDependency) (myDependencies.get(row)));\r\n    switch (col) {\r\n        case 4 :\r\n            dep.setHardness(((TaskDependency.Hardness) (value)));\r\n            break;\r\n        case 3 :\r\n            {\r\n                int loadAsInt = Integer.parseInt(String.valueOf(value));\r\n                dep.setDifference(loadAsInt);\r\n                break;\r\n            }\r\n        case 2 :\r\n            {\r\n                TaskDependencyConstraint clone;\r\n                try {\r\n                    clone = ((TaskDependencyConstraint) (((ConstraintImpl) (value)).clone()));\r\n                } catch (CloneNotSupportedException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                dep.setConstraint(clone);\r\n                break;\r\n            }\r\n        case 1 :\r\n            {\r\n                dep.delete();\r\n                myDependencies.remove(row);\r\n                if (value == null) {\r\n                    fireTableRowsDeleted(row, row);\r\n                } else {\r\n                    Task selectedTask = ((DependencyTableModel.TaskComboItem) (value)).myTask;\r\n                    TaskDependency newDependency = myMutator.createDependency(myTask, selectedTask, new FinishStartConstraintImpl());\r\n                    myDependencies.add(newDependency);\r\n                }\r\n            }\r\n    }\r\n}'),(2401,'Object value','java.lang.Object',0,417,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel',3326,'net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.createDependency(java.lang.Object)',0,'private void createDependency(Object value) throws TaskDependencyException {\r\n    if (value instanceof DependencyTableModel.TaskComboItem) {\r\n        Task selectedTask = ((DependencyTableModel.TaskComboItem) (value)).myTask;\r\n        TaskDependency dep = myMutator.createDependency(myTask, selectedTask, new FinishStartConstraintImpl());\r\n        myDependencies.add(dep);\r\n        fireTableRowsInserted(myDependencies.size(), myDependencies.size());\r\n    }\r\n}'),(2402,'String newName','java.lang.String',0,418,'net.sourceforge.ganttproject.gui.taskproperties.InternalStateListener',3337,'net.sourceforge.ganttproject.gui.taskproperties.InternalStateListener.nameChanged(java.lang.String)',0,'void nameChanged(String newName);'),(2403,'int newDuration','int',0,418,'net.sourceforge.ganttproject.gui.taskproperties.InternalStateListener',3336,'net.sourceforge.ganttproject.gui.taskproperties.InternalStateListener.durationChanged(int)',0,'void durationChanged(int newDuration);'),(2404,'Task task','net.sourceforge.ganttproject.task.Task',548,420,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel',3338,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.resource.HumanResourceManager,net.sourceforge.ganttproject.roles.RoleManager,boolean)',0,'public TaskAllocationsPanel(Task task, HumanResourceManager hrManager, RoleManager roleMgr, boolean onlyOneTask) {\r\n    super(task);\r\n    myHRManager = hrManager;\r\n    myRoleManager = roleMgr;\r\n    this.onlyOneTask = onlyOneTask;\r\n}'),(2405,'HumanResourceManager hrManager','net.sourceforge.ganttproject.resource.HumanResourceManager',501,420,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel',3338,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.resource.HumanResourceManager,net.sourceforge.ganttproject.roles.RoleManager,boolean)',0,'public TaskAllocationsPanel(Task task, HumanResourceManager hrManager, RoleManager roleMgr, boolean onlyOneTask) {\r\n    super(task);\r\n    myHRManager = hrManager;\r\n    myRoleManager = roleMgr;\r\n    this.onlyOneTask = onlyOneTask;\r\n}'),(2406,'RoleManager roleMgr','net.sourceforge.ganttproject.roles.RoleManager',517,420,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel',3338,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.resource.HumanResourceManager,net.sourceforge.ganttproject.roles.RoleManager,boolean)',0,'public TaskAllocationsPanel(Task task, HumanResourceManager hrManager, RoleManager roleMgr, boolean onlyOneTask) {\r\n    super(task);\r\n    myHRManager = hrManager;\r\n    myRoleManager = roleMgr;\r\n    this.onlyOneTask = onlyOneTask;\r\n}'),(2407,'boolean onlyOneTask','boolean',0,420,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel',3338,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.resource.HumanResourceManager,net.sourceforge.ganttproject.roles.RoleManager,boolean)',0,'public TaskAllocationsPanel(Task task, HumanResourceManager hrManager, RoleManager roleMgr, boolean onlyOneTask) {\r\n    super(task);\r\n    myHRManager = hrManager;\r\n    myRoleManager = roleMgr;\r\n    this.onlyOneTask = onlyOneTask;\r\n}'),(2408,'ResourceAssignmentCollection assignments','net.sourceforge.ganttproject.task.ResourceAssignmentCollection',541,420,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel',3340,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.constructResourcesPanel(net.sourceforge.ganttproject.task.ResourceAssignmentCollection)',0,'private void constructResourcesPanel(ResourceAssignmentCollection assignments) {\r\n    resourcesPanel = new JPanel(new GridBagLayout());\r\n    myResourcesTableModel = new ResourcesTableModel(assignments);\r\n    resourcesTable = new JXTable(myResourcesTableModel);\r\n    setUpResourcesComboColumn(resourcesTable);// set column editor\r\n\r\n    setUpCoordinatorBooleanColumn(resourcesTable);\r\n    setUpRolesComboColumn(resourcesTable);\r\n    resourcesTable.setRowHeight(23);\r\n    resourcesTable.getColumnModel().getColumn(0).setPreferredWidth(10);\r\n    resourcesTable.getColumnModel().getColumn(1).setPreferredWidth(240);\r\n    resourcesTable.getColumnModel().getColumn(2).setPreferredWidth(60);\r\n    resourcesTable.getColumnModel().getColumn(3).setPreferredWidth(60);\r\n    resourcesTable.getColumnModel().getColumn(4).setPreferredWidth(100);\r\n    resourcesTable.setHighlighters(new org.jdesktop.swing.decorator.HighlighterPipeline(new Highlighter[]{ new Highlighter(new Color(255, 255, 255), null) }));\r\n    resourcesScrollPane = new JScrollPane(resourcesTable);\r\n    resourcesScrollPane.setPreferredSize(new Dimension(500, 130));\r\n    JPanel secondResourcesScrollPane = new JPanel();\r\n    secondResourcesScrollPane.setBorder(new TitledBorder(new EtchedBorder(), GanttProject.correctLabel(getLanguage().getText(\"human\"))));\r\n    secondResourcesScrollPane.add(resourcesScrollPane);\r\n    JButton bremove = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/delete_16.gif\")));\r\n    bremove.setToolTipText(GanttProject.getToolTip(getLanguage().getText(\"removeResources\")));\r\n    bremove.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent evt) {\r\n            int[] selectedRow = resourcesTable.getSelectedRows();\r\n            for (int i = 0; i < (selectedRow.length); ++i) {\r\n                resourcesTable.getModel().setValueAt(null, selectedRow[i], 1);\r\n            }\r\n        }\r\n    });\r\n    secondResourcesScrollPane.add(bremove);\r\n    GridBagConstraints gbc = new GridBagConstraints();\r\n    gbc.anchor = GridBagConstraints.WEST;\r\n    gbc.insets.right = 15;\r\n    gbc.insets.left = 10;\r\n    gbc.insets.top = 10;\r\n    gbc.weighty = 0;\r\n    JPanel commonFields = setupCommonFields(onlyOneTask);\r\n    addUsingGBL(resourcesPanel, commonFields, gbc, 0, 0, 1, 1);\r\n    gbc.gridx = 0;\r\n    gbc.gridy = 1;\r\n    gbc.gridwidth = 8;\r\n    gbc.gridheight = 1;\r\n    gbc.weighty = 1;\r\n    resourcesPanel.add(secondResourcesScrollPane, gbc);\r\n}'),(2409,'final JTable resourceTable','javax.swing.JTable',0,420,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel',3343,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.setUpCoordinatorBooleanColumn(javax.swing.JTable)',0,'private void setUpCoordinatorBooleanColumn(final JTable resourceTable) {\r\n    TableColumn resourcesColumn = resourceTable.getColumnModel().getColumn(3);\r\n    resourcesColumn.setCellRenderer(new TaskAllocationsPanel.BooleanRenderer());\r\n}'),(2410,'final JTable resourceTable','javax.swing.JTable',0,420,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel',3344,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.setUpResourcesComboColumn(javax.swing.JTable)',0,'private void setUpResourcesComboColumn(final JTable resourceTable) {\r\n    List resources = myHRManager.getResources();\r\n    final JComboBox comboBox = new JComboBox();\r\n    for (int i = 0; i < (resources.size()); i++) {\r\n        comboBox.addItem(resources.get(i));\r\n    }\r\n    TableColumn resourcesColumn = resourceTable.getColumnModel().getColumn(1);\r\n    comboBox.setEditable(false);\r\n    resourcesColumn.setCellEditor(new DefaultCellEditor(comboBox));\r\n}'),(2411,'final JTable resourceTable','javax.swing.JTable',0,420,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel',3345,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.setUpRolesComboColumn(javax.swing.JTable)',0,'private void setUpRolesComboColumn(final JTable resourceTable) {\r\n    final Role[] roles = myRoleManager.getEnabledRoles();\r\n    final JComboBox comboBox = new JComboBox();\r\n    for (int i = 0; i < (roles.length); i++) {\r\n        Role role = ((Role) (roles[i]));\r\n        comboBox.addItem(role);\r\n    }\r\n    TableColumn rolesColumn = resourceTable.getColumnModel().getColumn(4);\r\n    comboBox.setEditable(false);\r\n    rolesColumn.setCellEditor(new DefaultCellEditor(comboBox));\r\n    rolesColumn.setCellRenderer(new DefaultTableCellRenderer());\r\n}'),(2412,'JTable table','javax.swing.JTable',0,419,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer',3347,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer.getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)',0,'public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\r\n    if (isSelected) {\r\n        setForeground(table.getSelectionForeground());\r\n        super.setBackground(table.getSelectionBackground());\r\n    } else {\r\n        setForeground(table.getForeground());\r\n        setBackground(table.getBackground());\r\n    }\r\n    if (!(value.getClass().equals(Boolean.class)))\r\n        setSelected(false);\r\n    else\r\n        setSelected(((value != null) && (((Boolean) (value)).booleanValue())));\r\n\r\n    return this;\r\n}'),(2413,'Object value','java.lang.Object',0,419,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer',3347,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer.getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)',0,'public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\r\n    if (isSelected) {\r\n        setForeground(table.getSelectionForeground());\r\n        super.setBackground(table.getSelectionBackground());\r\n    } else {\r\n        setForeground(table.getForeground());\r\n        setBackground(table.getBackground());\r\n    }\r\n    if (!(value.getClass().equals(Boolean.class)))\r\n        setSelected(false);\r\n    else\r\n        setSelected(((value != null) && (((Boolean) (value)).booleanValue())));\r\n\r\n    return this;\r\n}'),(2414,'boolean isSelected','boolean',0,419,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer',3347,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer.getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)',0,'public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\r\n    if (isSelected) {\r\n        setForeground(table.getSelectionForeground());\r\n        super.setBackground(table.getSelectionBackground());\r\n    } else {\r\n        setForeground(table.getForeground());\r\n        setBackground(table.getBackground());\r\n    }\r\n    if (!(value.getClass().equals(Boolean.class)))\r\n        setSelected(false);\r\n    else\r\n        setSelected(((value != null) && (((Boolean) (value)).booleanValue())));\r\n\r\n    return this;\r\n}'),(2415,'boolean hasFocus','boolean',0,419,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer',3347,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer.getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)',0,'public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\r\n    if (isSelected) {\r\n        setForeground(table.getSelectionForeground());\r\n        super.setBackground(table.getSelectionBackground());\r\n    } else {\r\n        setForeground(table.getForeground());\r\n        setBackground(table.getBackground());\r\n    }\r\n    if (!(value.getClass().equals(Boolean.class)))\r\n        setSelected(false);\r\n    else\r\n        setSelected(((value != null) && (((Boolean) (value)).booleanValue())));\r\n\r\n    return this;\r\n}'),(2416,'int row','int',0,419,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer',3347,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer.getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)',0,'public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\r\n    if (isSelected) {\r\n        setForeground(table.getSelectionForeground());\r\n        super.setBackground(table.getSelectionBackground());\r\n    } else {\r\n        setForeground(table.getForeground());\r\n        setBackground(table.getBackground());\r\n    }\r\n    if (!(value.getClass().equals(Boolean.class)))\r\n        setSelected(false);\r\n    else\r\n        setSelected(((value != null) && (((Boolean) (value)).booleanValue())));\r\n\r\n    return this;\r\n}'),(2417,'int column','int',0,419,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer',3347,'net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$BooleanRenderer.getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)',0,'public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\r\n    if (isSelected) {\r\n        setForeground(table.getSelectionForeground());\r\n        super.setBackground(table.getSelectionBackground());\r\n    } else {\r\n        setForeground(table.getForeground());\r\n        setBackground(table.getBackground());\r\n    }\r\n    if (!(value.getClass().equals(Boolean.class)))\r\n        setSelected(false);\r\n    else\r\n        setSelected(((value != null) && (((Boolean) (value)).booleanValue())));\r\n\r\n    return this;\r\n}'),(2418,'Task task','net.sourceforge.ganttproject.task.Task',548,421,'net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel',3348,'net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.-init-(net.sourceforge.ganttproject.task.Task)',0,'public TaskDependenciesPanel(Task task) {\r\n    super(task);\r\n    myTaskManager = task.getManager();\r\n}'),(2419,'TableColumn predecessorColumn','javax.swing.table.TableColumn',0,421,'net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel',3355,'net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.setUpPredecessorComboColumn(javax.swing.table.TableColumn,javax.swing.JTable)',0,'protected void setUpPredecessorComboColumn(TableColumn predecessorColumn, final JTable predecessorTable) {\r\n    // Set up the editor for the sport cells.\r\n    final JComboBox comboBox = new JComboBox();\r\n    Task[] possiblePredecessors = myTaskManager.getAlgorithmCollection().getFindPossibleDependeesAlgorithm().run(getTask());\r\n    for (int i = 0; i < (possiblePredecessors.length); i++) {\r\n        Task next = possiblePredecessors[i];\r\n        comboBox.addItem(new DependencyTableModel.TaskComboItem(next));\r\n    }\r\n    comboBox.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            if ((predecessorTable.getEditingRow()) != (-1)) {\r\n                DependencyTableModel.TaskComboItem selectedItem = ((DependencyTableModel.TaskComboItem) (comboBox.getSelectedItem()));\r\n                if (selectedItem != null) {\r\n                    predecessorTable.setValueAt(selectedItem, predecessorTable.getEditingRow(), 0);\r\n                    predecessorTable.setValueAt(TaskDependenciesPanel.CONSTRAINTS[0], predecessorTable.getEditingRow(), 2);\r\n                    // predecessorTable.setValueAt(0+\"\",\r\n                    // predecessorTable.getEditingRow(), 3);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    comboBox.setEditable(false);\r\n    predecessorColumn.setCellEditor(new DefaultCellEditor(comboBox));\r\n}'),(2420,'final JTable predecessorTable','javax.swing.JTable',0,421,'net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel',3355,'net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.setUpPredecessorComboColumn(javax.swing.table.TableColumn,javax.swing.JTable)',0,'protected void setUpPredecessorComboColumn(TableColumn predecessorColumn, final JTable predecessorTable) {\r\n    // Set up the editor for the sport cells.\r\n    final JComboBox comboBox = new JComboBox();\r\n    Task[] possiblePredecessors = myTaskManager.getAlgorithmCollection().getFindPossibleDependeesAlgorithm().run(getTask());\r\n    for (int i = 0; i < (possiblePredecessors.length); i++) {\r\n        Task next = possiblePredecessors[i];\r\n        comboBox.addItem(new DependencyTableModel.TaskComboItem(next));\r\n    }\r\n    comboBox.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            if ((predecessorTable.getEditingRow()) != (-1)) {\r\n                DependencyTableModel.TaskComboItem selectedItem = ((DependencyTableModel.TaskComboItem) (comboBox.getSelectedItem()));\r\n                if (selectedItem != null) {\r\n                    predecessorTable.setValueAt(selectedItem, predecessorTable.getEditingRow(), 0);\r\n                    predecessorTable.setValueAt(TaskDependenciesPanel.CONSTRAINTS[0], predecessorTable.getEditingRow(), 2);\r\n                    // predecessorTable.setValueAt(0+\"\",\r\n                    // predecessorTable.getEditingRow(), 3);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    comboBox.setEditable(false);\r\n    predecessorColumn.setCellEditor(new DefaultCellEditor(comboBox));\r\n}'),(2421,'TableColumn typeColumn','javax.swing.table.TableColumn',0,421,'net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel',3356,'net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.setUpTypeComboColumn(javax.swing.table.TableColumn)',0,'private void setUpTypeComboColumn(TableColumn typeColumn) {\r\n    // Set up the editor for the sport cells.\r\n    DefaultComboBoxModel model = new DefaultComboBoxModel(TaskDependenciesPanel.CONSTRAINTS);\r\n    JComboBox comboBox = new JComboBox(model);\r\n    comboBox.setSelectedIndex(0);\r\n    comboBox.setEditable(false);\r\n    typeColumn.setCellEditor(new DefaultCellEditor(comboBox));\r\n}'),(2422,'TableColumn hardnessColumn','javax.swing.table.TableColumn',0,421,'net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel',3354,'net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.setUpHardnessColumnEditor(javax.swing.table.TableColumn)',0,'private void setUpHardnessColumnEditor(TableColumn hardnessColumn) {\r\n    DefaultComboBoxModel model = new DefaultComboBoxModel(TaskDependenciesPanel.HARDNESS);\r\n    JComboBox comboBox = new JComboBox(model);\r\n    comboBox.setSelectedIndex(0);\r\n    comboBox.setEditable(false);\r\n    hardnessColumn.setCellEditor(new DefaultCellEditor(comboBox));\r\n}'),(2423,'ZoomManager manager','net.sourceforge.ganttproject.gui.zoom.ZoomManager',425,422,'net.sourceforge.ganttproject.gui.zoom.ZoomEvent',3357,'net.sourceforge.ganttproject.gui.zoom.ZoomEvent.-init-(net.sourceforge.ganttproject.gui.zoom.ZoomManager,net.sourceforge.ganttproject.gui.zoom.ZoomManager$ZoomState)',0,'ZoomEvent(ZoomManager manager, ZoomManager.ZoomState newZoomState) {\r\n    super(manager);\r\n    myNewZoomState = newZoomState;\r\n}'),(2424,'ZoomManager.ZoomState newZoomState','net.sourceforge.ganttproject.gui.zoom.ZoomManager$ZoomState',424,422,'net.sourceforge.ganttproject.gui.zoom.ZoomEvent',3357,'net.sourceforge.ganttproject.gui.zoom.ZoomEvent.-init-(net.sourceforge.ganttproject.gui.zoom.ZoomManager,net.sourceforge.ganttproject.gui.zoom.ZoomManager$ZoomState)',0,'ZoomEvent(ZoomManager manager, ZoomManager.ZoomState newZoomState) {\r\n    super(manager);\r\n    myNewZoomState = newZoomState;\r\n}'),(2425,'ZoomEvent e','net.sourceforge.ganttproject.gui.zoom.ZoomEvent',422,423,'net.sourceforge.ganttproject.gui.zoom.ZoomListener',3359,'net.sourceforge.ganttproject.gui.zoom.ZoomListener.zoomChanged(net.sourceforge.ganttproject.gui.zoom.ZoomEvent)',0,'void zoomChanged(ZoomEvent e);'),(2426,'TimeUnitPair timeUnitPair','net.sourceforge.ganttproject.time.TimeUnitPair',638,424,'net.sourceforge.ganttproject.gui.zoom.ZoomManager$ZoomState',3371,'net.sourceforge.ganttproject.gui.zoom.ZoomManager$ZoomState.-init-(net.sourceforge.ganttproject.time.TimeUnitPair,int,int)',0,'ZoomState(TimeUnitPair timeUnitPair, int bottomUnitWidth, int stateNumber) {\r\n    myTimeUnitPair = timeUnitPair;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myStateNumber = stateNumber;\r\n}'),(2427,'int bottomUnitWidth','int',0,424,'net.sourceforge.ganttproject.gui.zoom.ZoomManager$ZoomState',3371,'net.sourceforge.ganttproject.gui.zoom.ZoomManager$ZoomState.-init-(net.sourceforge.ganttproject.time.TimeUnitPair,int,int)',0,'ZoomState(TimeUnitPair timeUnitPair, int bottomUnitWidth, int stateNumber) {\r\n    myTimeUnitPair = timeUnitPair;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myStateNumber = stateNumber;\r\n}'),(2428,'int stateNumber','int',0,424,'net.sourceforge.ganttproject.gui.zoom.ZoomManager$ZoomState',3371,'net.sourceforge.ganttproject.gui.zoom.ZoomManager$ZoomState.-init-(net.sourceforge.ganttproject.time.TimeUnitPair,int,int)',0,'ZoomState(TimeUnitPair timeUnitPair, int bottomUnitWidth, int stateNumber) {\r\n    myTimeUnitPair = timeUnitPair;\r\n    myBottomUnitWidth = bottomUnitWidth;\r\n    myStateNumber = stateNumber;\r\n}'),(2429,'TimeUnitStack timeUnitStack','net.sourceforge.ganttproject.time.TimeUnitStack',639,425,'net.sourceforge.ganttproject.gui.zoom.ZoomManager',3361,'net.sourceforge.ganttproject.gui.zoom.ZoomManager.-init-(net.sourceforge.ganttproject.time.TimeUnitStack)',0,'public ZoomManager(TimeUnitStack timeUnitStack) {\r\n    myTimeUnitStack = timeUnitStack;\r\n    TimeUnitPair[] unitPairs = myTimeUnitStack.getTimeUnitPairs();\r\n    myZoomStates = new ZoomManager.ZoomState[unitPairs.length];\r\n    int width1 = 60;\r\n    int width2 = 40;\r\n    for (int i = 0; i < (unitPairs.length); i++) {\r\n        myZoomStates[i] = new ZoomManager.ZoomState(unitPairs[i], width1, i);\r\n        // myZoomStates[i*2+1] = new ZoomState(unitPairs[i], width2);\r\n        float scale = 2 / 3;\r\n        if (i < ((unitPairs.length) - 1)) {\r\n            float defaults1 = unitPairs[i].getBottomTimeUnit().getAtomCount(myTimeUnitStack.getDefaultTimeUnit());\r\n            float defaults2 = unitPairs[(i + 1)].getBottomTimeUnit().getAtomCount(myTimeUnitStack.getDefaultTimeUnit());\r\n            scale = (2 * defaults2) / (3 * defaults1);\r\n        }\r\n        width1 = ((int) (width1 * scale));\r\n    }\r\n}'),(2430,'ZoomListener listener','net.sourceforge.ganttproject.gui.zoom.ZoomListener',423,425,'net.sourceforge.ganttproject.gui.zoom.ZoomManager',3362,'net.sourceforge.ganttproject.gui.zoom.ZoomManager.addZoomListener(net.sourceforge.ganttproject.gui.zoom.ZoomListener)',0,'public void addZoomListener(ZoomListener listener) {\r\n    myListeners.add(listener);\r\n    listener.zoomChanged(new ZoomEvent(this, myZoomStates[myZooming]));\r\n}'),(2431,'ZoomListener listener','net.sourceforge.ganttproject.gui.zoom.ZoomListener',423,425,'net.sourceforge.ganttproject.gui.zoom.ZoomManager',3367,'net.sourceforge.ganttproject.gui.zoom.ZoomManager.removeZoomListener(net.sourceforge.ganttproject.gui.zoom.ZoomListener)',0,'public void removeZoomListener(ZoomListener listener) {\r\n    myListeners.remove(listener);\r\n}'),(2432,'int oldZoomValue','int',0,425,'net.sourceforge.ganttproject.gui.zoom.ZoomManager',3365,'net.sourceforge.ganttproject.gui.zoom.ZoomManager.fireZoomingChanged(int,int)',0,'public void fireZoomingChanged(int oldZoomValue, int newZoomValue) {\r\n    ZoomEvent e = new ZoomEvent(this, myZoomStates[newZoomValue]);\r\n    for (int i = 0; i < (myListeners.size()); i++) {\r\n        ZoomListener nextListener = ((ZoomListener) (myListeners.get(i)));\r\n        nextListener.zoomChanged(e);\r\n    }\r\n}'),(2433,'int newZoomValue','int',0,425,'net.sourceforge.ganttproject.gui.zoom.ZoomManager',3365,'net.sourceforge.ganttproject.gui.zoom.ZoomManager.fireZoomingChanged(int,int)',0,'public void fireZoomingChanged(int oldZoomValue, int newZoomValue) {\r\n    ZoomEvent e = new ZoomEvent(this, myZoomStates[newZoomValue]);\r\n    for (int i = 0; i < (myListeners.size()); i++) {\r\n        ZoomListener nextListener = ((ZoomListener) (myListeners.get(i)));\r\n        nextListener.zoomChanged(e);\r\n    }\r\n}'),(2434,'String persistentName','java.lang.String',0,425,'net.sourceforge.ganttproject.gui.zoom.ZoomManager',3368,'net.sourceforge.ganttproject.gui.zoom.ZoomManager.setZoomState(java.lang.String)',0,'public void setZoomState(String persistentName) {\r\n    for (int i = 0; i < (myZoomStates.length); i++) {\r\n        if (myZoomStates[i].getPersistentName().equals(persistentName)) {\r\n            myZooming = i;\r\n            fireZoomingChanged(0, myZooming);\r\n            break;\r\n        }\r\n    }\r\n}'),(2435,'ImportFileWizardImpl.State state','net.sourceforge.ganttproject.importer.ImportFileWizardImpl$State',428,426,'net.sourceforge.ganttproject.importer.FileChooserPage',3375,'net.sourceforge.ganttproject.importer.FileChooserPage.-init-(net.sourceforge.ganttproject.importer.ImportFileWizardImpl$State)',0,'public FileChooserPage(ImportFileWizardImpl.State state) {\r\n    myState = state;\r\n}'),(2436,'boolean b','boolean',0,426,'net.sourceforge.ganttproject.importer.FileChooserPage',3381,'net.sourceforge.ganttproject.importer.FileChooserPage.setActive(boolean)',0,'public void setActive(boolean b) {\r\n    if (b == false) {\r\n        super.setActive(b);\r\n        myState.setFile(getSelectedFile());\r\n    } else {\r\n        if ((myState.getFile()) != null) {\r\n            setSelectedFile(myState.getFile());\r\n        }\r\n        super.setActive(b);\r\n    }\r\n}'),(2437,'File file','java.io.File',0,426,'net.sourceforge.ganttproject.importer.FileChooserPage',3380,'net.sourceforge.ganttproject.importer.FileChooserPage.onFileChosen(java.io.File)',0,'protected void onFileChosen(File file) {\r\n    myState.setFile(file);\r\n}'),(2438,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,427,'net.sourceforge.ganttproject.importer.ImportFileAction',3382,'net.sourceforge.ganttproject.importer.ImportFileAction.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.GanttProject)',0,'public ImportFileAction(UIFacade uiFacade, GanttProject project) {\r\n    super(null, \"16\");\r\n    /* putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_I,\n    MENU_MASK));\n     */\r\n    myUIFacade = uiFacade;\r\n    myProject = project;\r\n}'),(2439,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,427,'net.sourceforge.ganttproject.importer.ImportFileAction',3382,'net.sourceforge.ganttproject.importer.ImportFileAction.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.GanttProject)',0,'public ImportFileAction(UIFacade uiFacade, GanttProject project) {\r\n    super(null, \"16\");\r\n    /* putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_I,\n    MENU_MASK));\n     */\r\n    myUIFacade = uiFacade;\r\n    myProject = project;\r\n}'),(2440,'ActionEvent e','java.awt.event.ActionEvent',0,427,'net.sourceforge.ganttproject.importer.ImportFileAction',3383,'net.sourceforge.ganttproject.importer.ImportFileAction.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent e) {\r\n    ImportFileWizardImpl wizard = new ImportFileWizardImpl(myUIFacade, myProject);\r\n    wizard.show();\r\n}'),(2441,'boolean isNull','boolean',0,427,'net.sourceforge.ganttproject.importer.ImportFileAction',3386,'net.sourceforge.ganttproject.importer.ImportFileAction.isIconVisible(boolean)',0,'public void isIconVisible(boolean isNull) {\r\n}'),(2442,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,429,'net.sourceforge.ganttproject.importer.ImportFileWizardImpl',3387,'net.sourceforge.ganttproject.importer.ImportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.GanttProject)',0,'public ImportFileWizardImpl(UIFacade uiFacade, GanttProject project) {\r\n    super(uiFacade, GanttLanguage.getInstance().getText(\"importWizard.dialog.title\"));\r\n    myProject = project;\r\n    myState = new ImportFileWizardImpl.State();\r\n    Importer[] importers = getImporters();\r\n    addPage(new ImporterChooserPage(importers, myState));\r\n    addPage(new FileChooserPage(myState));\r\n}'),(2443,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,429,'net.sourceforge.ganttproject.importer.ImportFileWizardImpl',3387,'net.sourceforge.ganttproject.importer.ImportFileWizardImpl.-init-(net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.GanttProject)',0,'public ImportFileWizardImpl(UIFacade uiFacade, GanttProject project) {\r\n    super(uiFacade, GanttLanguage.getInstance().getText(\"importWizard.dialog.title\"));\r\n    myProject = project;\r\n    myState = new ImportFileWizardImpl.State();\r\n    Importer[] importers = getImporters();\r\n    addPage(new ImporterChooserPage(importers, myState));\r\n    addPage(new FileChooserPage(myState));\r\n}'),(2444,'String key','java.lang.String',0,429,'net.sourceforge.ganttproject.importer.ImportFileWizardImpl',3391,'net.sourceforge.ganttproject.importer.ImportFileWizardImpl.i18n(java.lang.String)',0,'private String i18n(String key) {\r\n    return GanttLanguage.getInstance().getText(key);\r\n}'),(2445,'File myFile','java.io.File',0,428,'net.sourceforge.ganttproject.importer.ImportFileWizardImpl$State',3396,'net.sourceforge.ganttproject.importer.ImportFileWizardImpl$State.setFile(java.io.File)',0,'void setFile(File myFile) {\r\n    this.myFile = myFile;\r\n    this.adjustButtonState();\r\n}'),(2446,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,430,'net.sourceforge.ganttproject.importer.Importer',3400,'net.sourceforge.ganttproject.importer.Importer.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'void run(GanttProject project, UIFacade facade, File selectedFile, boolean merge);'),(2447,'UIFacade facade','net.sourceforge.ganttproject.gui.UIFacade',337,430,'net.sourceforge.ganttproject.importer.Importer',3400,'net.sourceforge.ganttproject.importer.Importer.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'void run(GanttProject project, UIFacade facade, File selectedFile, boolean merge);'),(2448,'File selectedFile','java.io.File',0,430,'net.sourceforge.ganttproject.importer.Importer',3400,'net.sourceforge.ganttproject.importer.Importer.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'void run(GanttProject project, UIFacade facade, File selectedFile, boolean merge);'),(2449,'boolean merge','boolean',0,430,'net.sourceforge.ganttproject.importer.Importer',3400,'net.sourceforge.ganttproject.importer.Importer.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'void run(GanttProject project, UIFacade facade, File selectedFile, boolean merge);'),(2450,'Importer[] importers','net.sourceforge.ganttproject.importer.Importer[]',0,432,'net.sourceforge.ganttproject.importer.ImporterChooserPage',3405,'net.sourceforge.ganttproject.importer.ImporterChooserPage.-init-(net.sourceforge.ganttproject.importer.Importer[],net.sourceforge.ganttproject.importer.ImportFileWizardImpl$State)',0,'ImporterChooserPage(Importer[] importers, ImportFileWizardImpl.State state) {\r\n    myImporters = importers;\r\n    myState = state;\r\n}'),(2451,'ImportFileWizardImpl.State state','net.sourceforge.ganttproject.importer.ImportFileWizardImpl$State',428,432,'net.sourceforge.ganttproject.importer.ImporterChooserPage',3405,'net.sourceforge.ganttproject.importer.ImporterChooserPage.-init-(net.sourceforge.ganttproject.importer.Importer[],net.sourceforge.ganttproject.importer.ImportFileWizardImpl$State)',0,'ImporterChooserPage(Importer[] importers, ImportFileWizardImpl.State state) {\r\n    myImporters = importers;\r\n    myState = state;\r\n}'),(2452,'boolean b','boolean',0,432,'net.sourceforge.ganttproject.importer.ImporterChooserPage',3409,'net.sourceforge.ganttproject.importer.ImporterChooserPage.setActive(boolean)',0,'public void setActive(boolean b) {\r\n}'),(2453,'FileFilter fileFilter','javax.swing.filechooser.FileFilter',0,433,'net.sourceforge.ganttproject.importer.ImporterFactory',3412,'net.sourceforge.ganttproject.importer.ImporterFactory.createImporter(javax.swing.filechooser.FileFilter)',0,'public static Importer createImporter(FileFilter fileFilter) {\r\n    if (fileFilter == (ImporterFactory.txtFilter)) {\r\n        return new ImporterFromTxtFile();\r\n    }\r\n    if (fileFilter == (ImporterFactory.ganFilter)) {\r\n        return new ImporterFromGanttFile();\r\n    }\r\n    // else if (fileFilter==plannerFilter) {\r\n    // return new ImporterFromPlannerFile();\r\n    // }\r\n    return null;\r\n}'),(2454,'net.sourceforge.ganttproject.importer.Importer','net.sourceforge.ganttproject.importer.Importer',430,433,'net.sourceforge.ganttproject.importer.ImporterFactory',3412,'net.sourceforge.ganttproject.importer.ImporterFactory.createImporter(javax.swing.filechooser.FileFilter)',1,'public static Importer createImporter(FileFilter fileFilter) {\r\n    if (fileFilter == (ImporterFactory.txtFilter)) {\r\n        return new ImporterFromTxtFile();\r\n    }\r\n    if (fileFilter == (ImporterFactory.ganFilter)) {\r\n        return new ImporterFromGanttFile();\r\n    }\r\n    // else if (fileFilter==plannerFilter) {\r\n    // return new ImporterFromPlannerFile();\r\n    // }\r\n    return null;\r\n}'),(2455,'GanttOptions options','net.sourceforge.ganttproject.GanttOptions',48,433,'net.sourceforge.ganttproject.importer.ImporterFactory',3411,'net.sourceforge.ganttproject.importer.ImporterFactory.createFileChooser(net.sourceforge.ganttproject.GanttOptions)',0,'public static JFileChooser createFileChooser(GanttOptions options) {\r\n    JFileChooser fc = new JFileChooser(options.getWorkingDir());\r\n    FileFilter[] filefilters = fc.getChoosableFileFilters();\r\n    for (int i = 0; i < (filefilters.length); i++) {\r\n        fc.removeChoosableFileFilter(filefilters[i]);\r\n    }\r\n    fc.addChoosableFileFilter(ImporterFactory.ganFilter);\r\n    fc.addChoosableFileFilter(ImporterFactory.mppFilter);\r\n    fc.addChoosableFileFilter(ImporterFactory.txtFilter);\r\n    // fc.addChoosableFileFilter(plannerFilter);\r\n    return fc;\r\n}'),(2456,'String id','java.lang.String',0,435,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$TaskFieldImpl',3432,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$TaskFieldImpl.-init-(java.lang.String,int,int)',0,'TaskFieldImpl(String id, int order, int width) {\r\n    myID = id;\r\n    myOrder = order;\r\n    myWidth = width;\r\n}'),(2457,'int order','int',0,435,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$TaskFieldImpl',3432,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$TaskFieldImpl.-init-(java.lang.String,int,int)',0,'TaskFieldImpl(String id, int order, int width) {\r\n    myID = id;\r\n    myOrder = order;\r\n    myWidth = width;\r\n}'),(2458,'int width','int',0,435,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$TaskFieldImpl',3432,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$TaskFieldImpl.-init-(java.lang.String,int,int)',0,'TaskFieldImpl(String id, int order, int width) {\r\n    myID = id;\r\n    myOrder = order;\r\n    myWidth = width;\r\n}'),(2459,'GanttProject targetProject','net.sourceforge.ganttproject.GanttProject',53,434,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$BufferProject',3423,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$BufferProject.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'BufferProject(GanttProject targetProject, UIFacade uiFacade) {\r\n    myDocumentManager = new DocumentCreator(this, uiFacade, this) {\r\n        protected TableHeaderUIFacade getVisibleFields() {\r\n            return myVisibleFields;\r\n        }\r\n    };\r\n    myTaskManager = targetProject.getTaskManager().emptyClone();\r\n    myUIfacade = uiFacade;\r\n}'),(2460,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,434,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$BufferProject',3423,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$BufferProject.-init-(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'BufferProject(GanttProject targetProject, UIFacade uiFacade) {\r\n    myDocumentManager = new DocumentCreator(this, uiFacade, this) {\r\n        protected TableHeaderUIFacade getVisibleFields() {\r\n            return myVisibleFields;\r\n        }\r\n    };\r\n    myTaskManager = targetProject.getTaskManager().emptyClone();\r\n    myUIfacade = uiFacade;\r\n}'),(2461,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3422,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'public void run(GanttProject project, final UIFacade uiFacade, final File selectedFile, final boolean bMerge) {\r\n    myUIFacade = project.getUIFacade();\r\n    final GanttProject targetProject = project;\r\n    final ImporterFromGanttFile.BufferProject bufferProject = createBufferProject(targetProject, uiFacade);\r\n    project.getUndoManager().undoableEdit(\"Import\", new Runnable() {\r\n        public void run() {\r\n            openDocument(targetProject, bufferProject, uiFacade, selectedFile, bMerge);\r\n            myUIFacade.getTaskTree().getVisibleFields().importData(bufferProject.getVisibleFields());\r\n        }\r\n    });\r\n}'),(2462,'final UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3422,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'public void run(GanttProject project, final UIFacade uiFacade, final File selectedFile, final boolean bMerge) {\r\n    myUIFacade = project.getUIFacade();\r\n    final GanttProject targetProject = project;\r\n    final ImporterFromGanttFile.BufferProject bufferProject = createBufferProject(targetProject, uiFacade);\r\n    project.getUndoManager().undoableEdit(\"Import\", new Runnable() {\r\n        public void run() {\r\n            openDocument(targetProject, bufferProject, uiFacade, selectedFile, bMerge);\r\n            myUIFacade.getTaskTree().getVisibleFields().importData(bufferProject.getVisibleFields());\r\n        }\r\n    });\r\n}'),(2463,'final File selectedFile','java.io.File',0,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3422,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'public void run(GanttProject project, final UIFacade uiFacade, final File selectedFile, final boolean bMerge) {\r\n    myUIFacade = project.getUIFacade();\r\n    final GanttProject targetProject = project;\r\n    final ImporterFromGanttFile.BufferProject bufferProject = createBufferProject(targetProject, uiFacade);\r\n    project.getUndoManager().undoableEdit(\"Import\", new Runnable() {\r\n        public void run() {\r\n            openDocument(targetProject, bufferProject, uiFacade, selectedFile, bMerge);\r\n            myUIFacade.getTaskTree().getVisibleFields().importData(bufferProject.getVisibleFields());\r\n        }\r\n    });\r\n}'),(2464,'final boolean bMerge','boolean',0,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3422,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'public void run(GanttProject project, final UIFacade uiFacade, final File selectedFile, final boolean bMerge) {\r\n    myUIFacade = project.getUIFacade();\r\n    final GanttProject targetProject = project;\r\n    final ImporterFromGanttFile.BufferProject bufferProject = createBufferProject(targetProject, uiFacade);\r\n    project.getUndoManager().undoableEdit(\"Import\", new Runnable() {\r\n        public void run() {\r\n            openDocument(targetProject, bufferProject, uiFacade, selectedFile, bMerge);\r\n            myUIFacade.getTaskTree().getVisibleFields().importData(bufferProject.getVisibleFields());\r\n        }\r\n    });\r\n}'),(2465,'String name','java.lang.String',0,436,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$VisibleFieldsImpl',3439,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$VisibleFieldsImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    myFields.add(new ImporterFromGanttFile.TaskFieldImpl(name, order, width));\r\n}'),(2466,'int order','int',0,436,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$VisibleFieldsImpl',3439,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$VisibleFieldsImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    myFields.add(new ImporterFromGanttFile.TaskFieldImpl(name, order, width));\r\n}'),(2467,'int width','int',0,436,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$VisibleFieldsImpl',3439,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$VisibleFieldsImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    myFields.add(new ImporterFromGanttFile.TaskFieldImpl(name, order, width));\r\n}'),(2468,'int index','int',0,436,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$VisibleFieldsImpl',3441,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$VisibleFieldsImpl.getField(int)',0,'public TableHeaderUIFacade.Column getField(int index) {\r\n    return ((TableHeaderUIFacade.Column) (myFields.get(index)));\r\n}'),(2469,'TableHeaderUIFacade source','net.sourceforge.ganttproject.gui.TableHeaderUIFacade',324,436,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$VisibleFieldsImpl',3443,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile$VisibleFieldsImpl.importData(net.sourceforge.ganttproject.gui.TableHeaderUIFacade)',0,'public void importData(TableHeaderUIFacade source) {\r\n    for (int i = 0; i < (source.getSize()); i++) {\r\n        TableHeaderUIFacade.Column nextField = source.getField(i);\r\n        myFields.add(nextField);\r\n    }\r\n}'),(2470,'final GanttProject targetProject','net.sourceforge.ganttproject.GanttProject',53,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3417,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.createBufferProject(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'private ImporterFromGanttFile.BufferProject createBufferProject(final GanttProject targetProject, final UIFacade uiFacade) {\r\n    return new ImporterFromGanttFile.BufferProject(targetProject, uiFacade);\r\n}'),(2471,'final UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3417,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.createBufferProject(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade)',0,'private ImporterFromGanttFile.BufferProject createBufferProject(final GanttProject targetProject, final UIFacade uiFacade) {\r\n    return new ImporterFromGanttFile.BufferProject(targetProject, uiFacade);\r\n}'),(2472,'File selectedFile','java.io.File',0,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3418,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getDocument(java.io.File)',0,'protected Document getDocument(File selectedFile) {\r\n    return new FileDocument(selectedFile);\r\n}'),(2473,'net.sourceforge.ganttproject.document.Document','net.sourceforge.ganttproject.document.Document',233,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3418,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getDocument(java.io.File)',1,'protected Document getDocument(File selectedFile) {\r\n    return new FileDocument(selectedFile);\r\n}'),(2474,'GanttProject targetProject','net.sourceforge.ganttproject.GanttProject',53,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3421,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.openDocument(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'protected void openDocument(GanttProject targetProject, IGanttProject bufferProject, UIFacade uiFacade, File selectedFile, boolean bMerge) {\r\n    try {\r\n        Document document = bufferProject.getDocumentManager().getDocument(selectedFile.getAbsolutePath());\r\n        document.read();\r\n        targetProject.getRoleManager().importData(bufferProject.getRoleManager());\r\n        {\r\n            CustomPropertyManager targetResCustomPropertyMgr = targetProject.getResourceCustomPropertyManager();\r\n            targetResCustomPropertyMgr.importData(bufferProject.getResourceCustomPropertyManager());\r\n        }\r\n        Map original2ImportedResource = targetProject.getHumanResourceManager().importData(bufferProject.getHumanResourceManager());\r\n        {\r\n            CustomColumnsStorage targetCustomColumnStorage = targetProject.getCustomColumnsStorage();\r\n            targetCustomColumnStorage.importData(bufferProject.getCustomColumnsStorage());\r\n        }\r\n        TaskManagerImpl origTaskManager = ((TaskManagerImpl) (targetProject.getTaskManager()));\r\n        try {\r\n            origTaskManager.setEventsEnabled(false);\r\n            Map original2ImportedTask = origTaskManager.importData(bufferProject.getTaskManager());\r\n            origTaskManager.importAssignments(bufferProject.getTaskManager(), targetProject.getHumanResourceManager(), original2ImportedTask, original2ImportedResource);\r\n        } finally {\r\n            origTaskManager.setEventsEnabled(true);\r\n        }\r\n        targetProject.getResourcePanel().getResourceTreeTableModel().updateResources();\r\n        /* TaskManager taskManager = bufferProject.getTaskManager().emptyClone();\n        // ResourceManager resourceManager =\n        // project.getHumanResourceManager();\n        ResourceManager resourceManager = new HumanResourceManager(bufferProject\n        .getRoleManager().getDefaultRole());\n        RoleManager roleManager = new RoleManagerImpl();\n        GanttXMLOpen opener = new GanttXMLOpen(bufferProject.prjInfos, bufferProject\n        .getArea(), taskManager, bufferProject.getUIFacade());\n        opener.addTagHandler(opener.getDefaultTagHandler());\n        TaskTagHandler taskHandler = new TaskTagHandler(taskManager, opener\n        .getContext());\n        opener.addTagHandler(taskHandler);\n        BlankLineTagHandler blankLineHandler = new BlankLineTagHandler(bufferProject.getUIFacade().getGanttChart());\n        opener.addTagHandler(blankLineHandler);\n        ResourceTagHandler resourceHandler = new ResourceTagHandler(\n        resourceManager, roleManager, bufferProject.getResourceCustomPropertyManager());\n        opener.addTagHandler(resourceHandler);\n        DependencyTagHandler dependencyHandler = new DependencyTagHandler(\n        opener.getContext(), taskManager, myUIFacade);\n        opener.addTagHandler(dependencyHandler);\n        RoleTagHandler roleHandler = new RoleTagHandler(roleManager);\n        opener.addTagHandler(roleHandler);\n        opener.addParsingListener(dependencyHandler);\n        opener.addParsingListener(resourceHandler);\n        AllocationTagHandler allocationHandler = new AllocationTagHandler(\n        resourceManager, taskManager, roleManager);\n        opener.addTagHandler(allocationHandler);\n        opener.addParsingListener(allocationHandler);\n        VacationTagHandler vacationHandler = new VacationTagHandler(\n        resourceManager);\n        opener.addTagHandler(vacationHandler);\n\n        //\n        if (bMerge == false) {\n        HolidayTagHandler holidayHandler = new HolidayTagHandler(\n        bufferProject);\n\n        opener.addTagHandler(holidayHandler);\n        opener.addParsingListener(holidayHandler);\n        } else {\n        opener.isMerging(true);\n        }\n        opener.load(document.getInputStream());\n\n        bufferProject.getRoleManager().importData(roleManager);\n        Map original2ImportedResource = bufferProject.getHumanResourceManager()\n        .importData(resourceManager);\n        TaskManagerImpl origTaskManager = (TaskManagerImpl) bufferProject.getTaskManager();\n        try {\n        origTaskManager.setEventsEnabled(false);\n        Map original2ImportedTask = origTaskManager.importData(taskManager);\n        origTaskManager.importAssignments(\n        taskManager,\n        bufferProject.getHumanResourceManager(), original2ImportedTask,\n        original2ImportedResource);\n        }\n        finally {\n        origTaskManager.setEventsEnabled(true);\n        }\n        bufferProject.getResourcePanel().getResourceTreeTableModel()\n        .updateResources();\n         */\r\n    } catch (IOException e) {\r\n        uiFacade.showErrorDialog(e);\r\n    }\r\n}'),(2475,'IGanttProject bufferProject','net.sourceforge.ganttproject.IGanttProject',84,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3421,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.openDocument(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'protected void openDocument(GanttProject targetProject, IGanttProject bufferProject, UIFacade uiFacade, File selectedFile, boolean bMerge) {\r\n    try {\r\n        Document document = bufferProject.getDocumentManager().getDocument(selectedFile.getAbsolutePath());\r\n        document.read();\r\n        targetProject.getRoleManager().importData(bufferProject.getRoleManager());\r\n        {\r\n            CustomPropertyManager targetResCustomPropertyMgr = targetProject.getResourceCustomPropertyManager();\r\n            targetResCustomPropertyMgr.importData(bufferProject.getResourceCustomPropertyManager());\r\n        }\r\n        Map original2ImportedResource = targetProject.getHumanResourceManager().importData(bufferProject.getHumanResourceManager());\r\n        {\r\n            CustomColumnsStorage targetCustomColumnStorage = targetProject.getCustomColumnsStorage();\r\n            targetCustomColumnStorage.importData(bufferProject.getCustomColumnsStorage());\r\n        }\r\n        TaskManagerImpl origTaskManager = ((TaskManagerImpl) (targetProject.getTaskManager()));\r\n        try {\r\n            origTaskManager.setEventsEnabled(false);\r\n            Map original2ImportedTask = origTaskManager.importData(bufferProject.getTaskManager());\r\n            origTaskManager.importAssignments(bufferProject.getTaskManager(), targetProject.getHumanResourceManager(), original2ImportedTask, original2ImportedResource);\r\n        } finally {\r\n            origTaskManager.setEventsEnabled(true);\r\n        }\r\n        targetProject.getResourcePanel().getResourceTreeTableModel().updateResources();\r\n        /* TaskManager taskManager = bufferProject.getTaskManager().emptyClone();\n        // ResourceManager resourceManager =\n        // project.getHumanResourceManager();\n        ResourceManager resourceManager = new HumanResourceManager(bufferProject\n        .getRoleManager().getDefaultRole());\n        RoleManager roleManager = new RoleManagerImpl();\n        GanttXMLOpen opener = new GanttXMLOpen(bufferProject.prjInfos, bufferProject\n        .getArea(), taskManager, bufferProject.getUIFacade());\n        opener.addTagHandler(opener.getDefaultTagHandler());\n        TaskTagHandler taskHandler = new TaskTagHandler(taskManager, opener\n        .getContext());\n        opener.addTagHandler(taskHandler);\n        BlankLineTagHandler blankLineHandler = new BlankLineTagHandler(bufferProject.getUIFacade().getGanttChart());\n        opener.addTagHandler(blankLineHandler);\n        ResourceTagHandler resourceHandler = new ResourceTagHandler(\n        resourceManager, roleManager, bufferProject.getResourceCustomPropertyManager());\n        opener.addTagHandler(resourceHandler);\n        DependencyTagHandler dependencyHandler = new DependencyTagHandler(\n        opener.getContext(), taskManager, myUIFacade);\n        opener.addTagHandler(dependencyHandler);\n        RoleTagHandler roleHandler = new RoleTagHandler(roleManager);\n        opener.addTagHandler(roleHandler);\n        opener.addParsingListener(dependencyHandler);\n        opener.addParsingListener(resourceHandler);\n        AllocationTagHandler allocationHandler = new AllocationTagHandler(\n        resourceManager, taskManager, roleManager);\n        opener.addTagHandler(allocationHandler);\n        opener.addParsingListener(allocationHandler);\n        VacationTagHandler vacationHandler = new VacationTagHandler(\n        resourceManager);\n        opener.addTagHandler(vacationHandler);\n\n        //\n        if (bMerge == false) {\n        HolidayTagHandler holidayHandler = new HolidayTagHandler(\n        bufferProject);\n\n        opener.addTagHandler(holidayHandler);\n        opener.addParsingListener(holidayHandler);\n        } else {\n        opener.isMerging(true);\n        }\n        opener.load(document.getInputStream());\n\n        bufferProject.getRoleManager().importData(roleManager);\n        Map original2ImportedResource = bufferProject.getHumanResourceManager()\n        .importData(resourceManager);\n        TaskManagerImpl origTaskManager = (TaskManagerImpl) bufferProject.getTaskManager();\n        try {\n        origTaskManager.setEventsEnabled(false);\n        Map original2ImportedTask = origTaskManager.importData(taskManager);\n        origTaskManager.importAssignments(\n        taskManager,\n        bufferProject.getHumanResourceManager(), original2ImportedTask,\n        original2ImportedResource);\n        }\n        finally {\n        origTaskManager.setEventsEnabled(true);\n        }\n        bufferProject.getResourcePanel().getResourceTreeTableModel()\n        .updateResources();\n         */\r\n    } catch (IOException e) {\r\n        uiFacade.showErrorDialog(e);\r\n    }\r\n}'),(2476,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3421,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.openDocument(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'protected void openDocument(GanttProject targetProject, IGanttProject bufferProject, UIFacade uiFacade, File selectedFile, boolean bMerge) {\r\n    try {\r\n        Document document = bufferProject.getDocumentManager().getDocument(selectedFile.getAbsolutePath());\r\n        document.read();\r\n        targetProject.getRoleManager().importData(bufferProject.getRoleManager());\r\n        {\r\n            CustomPropertyManager targetResCustomPropertyMgr = targetProject.getResourceCustomPropertyManager();\r\n            targetResCustomPropertyMgr.importData(bufferProject.getResourceCustomPropertyManager());\r\n        }\r\n        Map original2ImportedResource = targetProject.getHumanResourceManager().importData(bufferProject.getHumanResourceManager());\r\n        {\r\n            CustomColumnsStorage targetCustomColumnStorage = targetProject.getCustomColumnsStorage();\r\n            targetCustomColumnStorage.importData(bufferProject.getCustomColumnsStorage());\r\n        }\r\n        TaskManagerImpl origTaskManager = ((TaskManagerImpl) (targetProject.getTaskManager()));\r\n        try {\r\n            origTaskManager.setEventsEnabled(false);\r\n            Map original2ImportedTask = origTaskManager.importData(bufferProject.getTaskManager());\r\n            origTaskManager.importAssignments(bufferProject.getTaskManager(), targetProject.getHumanResourceManager(), original2ImportedTask, original2ImportedResource);\r\n        } finally {\r\n            origTaskManager.setEventsEnabled(true);\r\n        }\r\n        targetProject.getResourcePanel().getResourceTreeTableModel().updateResources();\r\n        /* TaskManager taskManager = bufferProject.getTaskManager().emptyClone();\n        // ResourceManager resourceManager =\n        // project.getHumanResourceManager();\n        ResourceManager resourceManager = new HumanResourceManager(bufferProject\n        .getRoleManager().getDefaultRole());\n        RoleManager roleManager = new RoleManagerImpl();\n        GanttXMLOpen opener = new GanttXMLOpen(bufferProject.prjInfos, bufferProject\n        .getArea(), taskManager, bufferProject.getUIFacade());\n        opener.addTagHandler(opener.getDefaultTagHandler());\n        TaskTagHandler taskHandler = new TaskTagHandler(taskManager, opener\n        .getContext());\n        opener.addTagHandler(taskHandler);\n        BlankLineTagHandler blankLineHandler = new BlankLineTagHandler(bufferProject.getUIFacade().getGanttChart());\n        opener.addTagHandler(blankLineHandler);\n        ResourceTagHandler resourceHandler = new ResourceTagHandler(\n        resourceManager, roleManager, bufferProject.getResourceCustomPropertyManager());\n        opener.addTagHandler(resourceHandler);\n        DependencyTagHandler dependencyHandler = new DependencyTagHandler(\n        opener.getContext(), taskManager, myUIFacade);\n        opener.addTagHandler(dependencyHandler);\n        RoleTagHandler roleHandler = new RoleTagHandler(roleManager);\n        opener.addTagHandler(roleHandler);\n        opener.addParsingListener(dependencyHandler);\n        opener.addParsingListener(resourceHandler);\n        AllocationTagHandler allocationHandler = new AllocationTagHandler(\n        resourceManager, taskManager, roleManager);\n        opener.addTagHandler(allocationHandler);\n        opener.addParsingListener(allocationHandler);\n        VacationTagHandler vacationHandler = new VacationTagHandler(\n        resourceManager);\n        opener.addTagHandler(vacationHandler);\n\n        //\n        if (bMerge == false) {\n        HolidayTagHandler holidayHandler = new HolidayTagHandler(\n        bufferProject);\n\n        opener.addTagHandler(holidayHandler);\n        opener.addParsingListener(holidayHandler);\n        } else {\n        opener.isMerging(true);\n        }\n        opener.load(document.getInputStream());\n\n        bufferProject.getRoleManager().importData(roleManager);\n        Map original2ImportedResource = bufferProject.getHumanResourceManager()\n        .importData(resourceManager);\n        TaskManagerImpl origTaskManager = (TaskManagerImpl) bufferProject.getTaskManager();\n        try {\n        origTaskManager.setEventsEnabled(false);\n        Map original2ImportedTask = origTaskManager.importData(taskManager);\n        origTaskManager.importAssignments(\n        taskManager,\n        bufferProject.getHumanResourceManager(), original2ImportedTask,\n        original2ImportedResource);\n        }\n        finally {\n        origTaskManager.setEventsEnabled(true);\n        }\n        bufferProject.getResourcePanel().getResourceTreeTableModel()\n        .updateResources();\n         */\r\n    } catch (IOException e) {\r\n        uiFacade.showErrorDialog(e);\r\n    }\r\n}'),(2477,'File selectedFile','java.io.File',0,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3421,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.openDocument(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'protected void openDocument(GanttProject targetProject, IGanttProject bufferProject, UIFacade uiFacade, File selectedFile, boolean bMerge) {\r\n    try {\r\n        Document document = bufferProject.getDocumentManager().getDocument(selectedFile.getAbsolutePath());\r\n        document.read();\r\n        targetProject.getRoleManager().importData(bufferProject.getRoleManager());\r\n        {\r\n            CustomPropertyManager targetResCustomPropertyMgr = targetProject.getResourceCustomPropertyManager();\r\n            targetResCustomPropertyMgr.importData(bufferProject.getResourceCustomPropertyManager());\r\n        }\r\n        Map original2ImportedResource = targetProject.getHumanResourceManager().importData(bufferProject.getHumanResourceManager());\r\n        {\r\n            CustomColumnsStorage targetCustomColumnStorage = targetProject.getCustomColumnsStorage();\r\n            targetCustomColumnStorage.importData(bufferProject.getCustomColumnsStorage());\r\n        }\r\n        TaskManagerImpl origTaskManager = ((TaskManagerImpl) (targetProject.getTaskManager()));\r\n        try {\r\n            origTaskManager.setEventsEnabled(false);\r\n            Map original2ImportedTask = origTaskManager.importData(bufferProject.getTaskManager());\r\n            origTaskManager.importAssignments(bufferProject.getTaskManager(), targetProject.getHumanResourceManager(), original2ImportedTask, original2ImportedResource);\r\n        } finally {\r\n            origTaskManager.setEventsEnabled(true);\r\n        }\r\n        targetProject.getResourcePanel().getResourceTreeTableModel().updateResources();\r\n        /* TaskManager taskManager = bufferProject.getTaskManager().emptyClone();\n        // ResourceManager resourceManager =\n        // project.getHumanResourceManager();\n        ResourceManager resourceManager = new HumanResourceManager(bufferProject\n        .getRoleManager().getDefaultRole());\n        RoleManager roleManager = new RoleManagerImpl();\n        GanttXMLOpen opener = new GanttXMLOpen(bufferProject.prjInfos, bufferProject\n        .getArea(), taskManager, bufferProject.getUIFacade());\n        opener.addTagHandler(opener.getDefaultTagHandler());\n        TaskTagHandler taskHandler = new TaskTagHandler(taskManager, opener\n        .getContext());\n        opener.addTagHandler(taskHandler);\n        BlankLineTagHandler blankLineHandler = new BlankLineTagHandler(bufferProject.getUIFacade().getGanttChart());\n        opener.addTagHandler(blankLineHandler);\n        ResourceTagHandler resourceHandler = new ResourceTagHandler(\n        resourceManager, roleManager, bufferProject.getResourceCustomPropertyManager());\n        opener.addTagHandler(resourceHandler);\n        DependencyTagHandler dependencyHandler = new DependencyTagHandler(\n        opener.getContext(), taskManager, myUIFacade);\n        opener.addTagHandler(dependencyHandler);\n        RoleTagHandler roleHandler = new RoleTagHandler(roleManager);\n        opener.addTagHandler(roleHandler);\n        opener.addParsingListener(dependencyHandler);\n        opener.addParsingListener(resourceHandler);\n        AllocationTagHandler allocationHandler = new AllocationTagHandler(\n        resourceManager, taskManager, roleManager);\n        opener.addTagHandler(allocationHandler);\n        opener.addParsingListener(allocationHandler);\n        VacationTagHandler vacationHandler = new VacationTagHandler(\n        resourceManager);\n        opener.addTagHandler(vacationHandler);\n\n        //\n        if (bMerge == false) {\n        HolidayTagHandler holidayHandler = new HolidayTagHandler(\n        bufferProject);\n\n        opener.addTagHandler(holidayHandler);\n        opener.addParsingListener(holidayHandler);\n        } else {\n        opener.isMerging(true);\n        }\n        opener.load(document.getInputStream());\n\n        bufferProject.getRoleManager().importData(roleManager);\n        Map original2ImportedResource = bufferProject.getHumanResourceManager()\n        .importData(resourceManager);\n        TaskManagerImpl origTaskManager = (TaskManagerImpl) bufferProject.getTaskManager();\n        try {\n        origTaskManager.setEventsEnabled(false);\n        Map original2ImportedTask = origTaskManager.importData(taskManager);\n        origTaskManager.importAssignments(\n        taskManager,\n        bufferProject.getHumanResourceManager(), original2ImportedTask,\n        original2ImportedResource);\n        }\n        finally {\n        origTaskManager.setEventsEnabled(true);\n        }\n        bufferProject.getResourcePanel().getResourceTreeTableModel()\n        .updateResources();\n         */\r\n    } catch (IOException e) {\r\n        uiFacade.showErrorDialog(e);\r\n    }\r\n}'),(2478,'boolean bMerge','boolean',0,437,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile',3421,'net.sourceforge.ganttproject.importer.ImporterFromGanttFile.openDocument(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'protected void openDocument(GanttProject targetProject, IGanttProject bufferProject, UIFacade uiFacade, File selectedFile, boolean bMerge) {\r\n    try {\r\n        Document document = bufferProject.getDocumentManager().getDocument(selectedFile.getAbsolutePath());\r\n        document.read();\r\n        targetProject.getRoleManager().importData(bufferProject.getRoleManager());\r\n        {\r\n            CustomPropertyManager targetResCustomPropertyMgr = targetProject.getResourceCustomPropertyManager();\r\n            targetResCustomPropertyMgr.importData(bufferProject.getResourceCustomPropertyManager());\r\n        }\r\n        Map original2ImportedResource = targetProject.getHumanResourceManager().importData(bufferProject.getHumanResourceManager());\r\n        {\r\n            CustomColumnsStorage targetCustomColumnStorage = targetProject.getCustomColumnsStorage();\r\n            targetCustomColumnStorage.importData(bufferProject.getCustomColumnsStorage());\r\n        }\r\n        TaskManagerImpl origTaskManager = ((TaskManagerImpl) (targetProject.getTaskManager()));\r\n        try {\r\n            origTaskManager.setEventsEnabled(false);\r\n            Map original2ImportedTask = origTaskManager.importData(bufferProject.getTaskManager());\r\n            origTaskManager.importAssignments(bufferProject.getTaskManager(), targetProject.getHumanResourceManager(), original2ImportedTask, original2ImportedResource);\r\n        } finally {\r\n            origTaskManager.setEventsEnabled(true);\r\n        }\r\n        targetProject.getResourcePanel().getResourceTreeTableModel().updateResources();\r\n        /* TaskManager taskManager = bufferProject.getTaskManager().emptyClone();\n        // ResourceManager resourceManager =\n        // project.getHumanResourceManager();\n        ResourceManager resourceManager = new HumanResourceManager(bufferProject\n        .getRoleManager().getDefaultRole());\n        RoleManager roleManager = new RoleManagerImpl();\n        GanttXMLOpen opener = new GanttXMLOpen(bufferProject.prjInfos, bufferProject\n        .getArea(), taskManager, bufferProject.getUIFacade());\n        opener.addTagHandler(opener.getDefaultTagHandler());\n        TaskTagHandler taskHandler = new TaskTagHandler(taskManager, opener\n        .getContext());\n        opener.addTagHandler(taskHandler);\n        BlankLineTagHandler blankLineHandler = new BlankLineTagHandler(bufferProject.getUIFacade().getGanttChart());\n        opener.addTagHandler(blankLineHandler);\n        ResourceTagHandler resourceHandler = new ResourceTagHandler(\n        resourceManager, roleManager, bufferProject.getResourceCustomPropertyManager());\n        opener.addTagHandler(resourceHandler);\n        DependencyTagHandler dependencyHandler = new DependencyTagHandler(\n        opener.getContext(), taskManager, myUIFacade);\n        opener.addTagHandler(dependencyHandler);\n        RoleTagHandler roleHandler = new RoleTagHandler(roleManager);\n        opener.addTagHandler(roleHandler);\n        opener.addParsingListener(dependencyHandler);\n        opener.addParsingListener(resourceHandler);\n        AllocationTagHandler allocationHandler = new AllocationTagHandler(\n        resourceManager, taskManager, roleManager);\n        opener.addTagHandler(allocationHandler);\n        opener.addParsingListener(allocationHandler);\n        VacationTagHandler vacationHandler = new VacationTagHandler(\n        resourceManager);\n        opener.addTagHandler(vacationHandler);\n\n        //\n        if (bMerge == false) {\n        HolidayTagHandler holidayHandler = new HolidayTagHandler(\n        bufferProject);\n\n        opener.addTagHandler(holidayHandler);\n        opener.addParsingListener(holidayHandler);\n        } else {\n        opener.isMerging(true);\n        }\n        opener.load(document.getInputStream());\n\n        bufferProject.getRoleManager().importData(roleManager);\n        Map original2ImportedResource = bufferProject.getHumanResourceManager()\n        .importData(resourceManager);\n        TaskManagerImpl origTaskManager = (TaskManagerImpl) bufferProject.getTaskManager();\n        try {\n        origTaskManager.setEventsEnabled(false);\n        Map original2ImportedTask = origTaskManager.importData(taskManager);\n        origTaskManager.importAssignments(\n        taskManager,\n        bufferProject.getHumanResourceManager(), original2ImportedTask,\n        original2ImportedResource);\n        }\n        finally {\n        origTaskManager.setEventsEnabled(true);\n        }\n        bufferProject.getResourcePanel().getResourceTreeTableModel()\n        .updateResources();\n         */\r\n    } catch (IOException e) {\r\n        uiFacade.showErrorDialog(e);\r\n    }\r\n}'),(2479,'GanttProject project','net.sourceforge.ganttproject.GanttProject',53,438,'net.sourceforge.ganttproject.importer.ImporterFromTxtFile',3447,'net.sourceforge.ganttproject.importer.ImporterFromTxtFile.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'public void run(GanttProject project, UIFacade uiFacade, File selectedFile, boolean merge) {\r\n    GanttTXTOpen opener = new GanttTXTOpen(project.getTree(), project, project.getArea(), project.getTaskManager());\r\n    opener.load(selectedFile);\r\n    project.setModified();\r\n}'),(2480,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,438,'net.sourceforge.ganttproject.importer.ImporterFromTxtFile',3447,'net.sourceforge.ganttproject.importer.ImporterFromTxtFile.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'public void run(GanttProject project, UIFacade uiFacade, File selectedFile, boolean merge) {\r\n    GanttTXTOpen opener = new GanttTXTOpen(project.getTree(), project, project.getArea(), project.getTaskManager());\r\n    opener.load(selectedFile);\r\n    project.setModified();\r\n}'),(2481,'File selectedFile','java.io.File',0,438,'net.sourceforge.ganttproject.importer.ImporterFromTxtFile',3447,'net.sourceforge.ganttproject.importer.ImporterFromTxtFile.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'public void run(GanttProject project, UIFacade uiFacade, File selectedFile, boolean merge) {\r\n    GanttTXTOpen opener = new GanttTXTOpen(project.getTree(), project, project.getArea(), project.getTaskManager());\r\n    opener.load(selectedFile);\r\n    project.setModified();\r\n}'),(2482,'boolean merge','boolean',0,438,'net.sourceforge.ganttproject.importer.ImporterFromTxtFile',3447,'net.sourceforge.ganttproject.importer.ImporterFromTxtFile.run(net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.gui.UIFacade,java.io.File,boolean)',0,'public void run(GanttProject project, UIFacade uiFacade, File selectedFile, boolean merge) {\r\n    GanttTXTOpen opener = new GanttTXTOpen(project.getTree(), project, project.getArea(), project.getTaskManager());\r\n    opener.load(selectedFile);\r\n    project.setModified();\r\n}'),(2483,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,439,'net.sourceforge.ganttproject.io.AssignmentSaver',3449,'net.sourceforge.ganttproject.io.AssignmentSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler)',0,'void save(IGanttProject project, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"allocations\", handler);\r\n    Task[] tasks = project.getTaskManager().getTasks();\r\n    for (int i = 0; i < (tasks.length); i++) {\r\n        Task task = tasks[i];\r\n        ResourceAssignment[] assignments = task.getAssignments();\r\n        for (int j = 0; j < (assignments.length); j++) {\r\n            int task_id = task.getTaskID();\r\n            ResourceAssignment next = assignments[j];\r\n            Role roleForAssignment = next.getRoleForAssignment();\r\n            if (roleForAssignment == null) {\r\n                if ((next.getResource()) instanceof HumanResource) {\r\n                    roleForAssignment = ((HumanResource) (next.getResource())).getRole();\r\n                }\r\n            }\r\n            addAttribute(\"task-id\", String.valueOf(task_id), attrs);\r\n            addAttribute(\"resource-id\", String.valueOf(next.getResource().getId()), attrs);\r\n            addAttribute(\"function\", roleForAssignment.getPersistentID(), attrs);\r\n            addAttribute(\"responsible\", String.valueOf(next.isCoordinator()), attrs);\r\n            addAttribute(\"load\", String.valueOf(next.getLoad()), attrs);\r\n            emptyElement(\"allocation\", attrs, handler);\r\n        }\r\n    }\r\n    endElement(\"allocations\", handler);\r\n}'),(2484,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,439,'net.sourceforge.ganttproject.io.AssignmentSaver',3449,'net.sourceforge.ganttproject.io.AssignmentSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler)',0,'void save(IGanttProject project, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"allocations\", handler);\r\n    Task[] tasks = project.getTaskManager().getTasks();\r\n    for (int i = 0; i < (tasks.length); i++) {\r\n        Task task = tasks[i];\r\n        ResourceAssignment[] assignments = task.getAssignments();\r\n        for (int j = 0; j < (assignments.length); j++) {\r\n            int task_id = task.getTaskID();\r\n            ResourceAssignment next = assignments[j];\r\n            Role roleForAssignment = next.getRoleForAssignment();\r\n            if (roleForAssignment == null) {\r\n                if ((next.getResource()) instanceof HumanResource) {\r\n                    roleForAssignment = ((HumanResource) (next.getResource())).getRole();\r\n                }\r\n            }\r\n            addAttribute(\"task-id\", String.valueOf(task_id), attrs);\r\n            addAttribute(\"resource-id\", String.valueOf(next.getResource().getId()), attrs);\r\n            addAttribute(\"function\", roleForAssignment.getPersistentID(), attrs);\r\n            addAttribute(\"responsible\", String.valueOf(next.isCoordinator()), attrs);\r\n            addAttribute(\"load\", String.valueOf(next.getLoad()), attrs);\r\n            emptyElement(\"allocation\", attrs, handler);\r\n        }\r\n    }\r\n    endElement(\"allocations\", handler);\r\n}'),(2485,'String s','java.lang.String',0,440,'net.sourceforge.ganttproject.io.CSVOptions',3451,'net.sourceforge.ganttproject.io.CSVOptions.correct(java.lang.String)',0,'public String correct(String s) {\r\n    String res;\r\n    res = s.replaceAll(\"&\", \"&#38;\");\r\n    res = res.replaceAll(\"<\", \"&#60;\");\r\n    res = res.replaceAll(\">\", \"&#62;\");\r\n    res = res.replaceAll(\"/\", \"&#47;\");\r\n    res = res.replaceAll(\"\"\", \"&#34;\");\r\n    return res;\r\n}'),(2486,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,441,'net.sourceforge.ganttproject.io.CalendarSaver',3456,'net.sourceforge.ganttproject.io.CalendarSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler)',0,'void save(IGanttProject project, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"calendars\", attrs, handler);\r\n    startElement(\"day-types\", attrs, handler);\r\n    // \r\n    addAttribute(\"id\", \"0\", attrs);\r\n    emptyElement(\"day-type\", attrs, handler);\r\n    addAttribute(\"id\", \"1\", attrs);\r\n    emptyElement(\"day-type\", attrs, handler);\r\n    // \r\n    addAttribute(\"id\", \"1\", attrs);\r\n    addAttribute(\"name\", \"default\", attrs);\r\n    startElement(\"calendar\", attrs, handler);\r\n    for (int i = 1; i <= 7; i++) {\r\n        boolean holiday = (project.getActiveCalendar().getWeekDayType(i)) == (GPCalendar.DayType.WEEKEND);\r\n        addAttribute(getShortDayName(i), (holiday ? \"1\" : \"0\"), attrs);\r\n    }\r\n    emptyElement(\"default-week\", attrs, handler);\r\n    emptyElement(\"overriden-day-types\", attrs, handler);\r\n    emptyElement(\"days\", attrs, handler);\r\n    endElement(\"calendar\", handler);\r\n    // \r\n    endElement(\"day-types\", handler);\r\n    Collection publicHoliday = project.getActiveCalendar().getPublicHolidays();\r\n    for (Iterator iter = publicHoliday.iterator(); iter.hasNext();) {\r\n        Date d = ((Date) (iter.next()));\r\n        if ((d.getYear()) == (1 - 1900))\r\n            addAttribute(\"year\", \"\", attrs);\r\n        else\r\n            addAttribute(\"year\", (((d.getYear()) + 1900) + \"\"), attrs);\r\n\r\n        addAttribute(\"month\", (((d.getMonth()) + 1) + \"\"), attrs);\r\n        addAttribute(\"date\", ((d.getDate()) + \"\"), attrs);\r\n        emptyElement(\"date\", attrs, handler);\r\n    }\r\n    endElement(\"calendars\", handler);\r\n}'),(2487,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,441,'net.sourceforge.ganttproject.io.CalendarSaver',3456,'net.sourceforge.ganttproject.io.CalendarSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler)',0,'void save(IGanttProject project, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"calendars\", attrs, handler);\r\n    startElement(\"day-types\", attrs, handler);\r\n    // \r\n    addAttribute(\"id\", \"0\", attrs);\r\n    emptyElement(\"day-type\", attrs, handler);\r\n    addAttribute(\"id\", \"1\", attrs);\r\n    emptyElement(\"day-type\", attrs, handler);\r\n    // \r\n    addAttribute(\"id\", \"1\", attrs);\r\n    addAttribute(\"name\", \"default\", attrs);\r\n    startElement(\"calendar\", attrs, handler);\r\n    for (int i = 1; i <= 7; i++) {\r\n        boolean holiday = (project.getActiveCalendar().getWeekDayType(i)) == (GPCalendar.DayType.WEEKEND);\r\n        addAttribute(getShortDayName(i), (holiday ? \"1\" : \"0\"), attrs);\r\n    }\r\n    emptyElement(\"default-week\", attrs, handler);\r\n    emptyElement(\"overriden-day-types\", attrs, handler);\r\n    emptyElement(\"days\", attrs, handler);\r\n    endElement(\"calendar\", handler);\r\n    // \r\n    endElement(\"day-types\", handler);\r\n    Collection publicHoliday = project.getActiveCalendar().getPublicHolidays();\r\n    for (Iterator iter = publicHoliday.iterator(); iter.hasNext();) {\r\n        Date d = ((Date) (iter.next()));\r\n        if ((d.getYear()) == (1 - 1900))\r\n            addAttribute(\"year\", \"\", attrs);\r\n        else\r\n            addAttribute(\"year\", (((d.getYear()) + 1900) + \"\"), attrs);\r\n\r\n        addAttribute(\"month\", (((d.getMonth()) + 1) + \"\"), attrs);\r\n        addAttribute(\"date\", ((d.getDate()) + \"\"), attrs);\r\n        emptyElement(\"date\", attrs, handler);\r\n    }\r\n    endElement(\"calendars\", handler);\r\n}'),(2488,'int i','int',0,441,'net.sourceforge.ganttproject.io.CalendarSaver',3455,'net.sourceforge.ganttproject.io.CalendarSaver.getShortDayName(int)',0,'private String getShortDayName(int i) {\r\n    myCalendar.set(Calendar.DAY_OF_WEEK, i);\r\n    return myShortFormat.format(myCalendar.getTime()).toLowerCase();\r\n}'),(2489,'OutputStream output','java.io.OutputStream',0,442,'net.sourceforge.ganttproject.io.GPSaver',3457,'net.sourceforge.ganttproject.io.GPSaver.save(java.io.OutputStream)',0,'void save(OutputStream output) throws IOException;'),(2490,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3458,'net.sourceforge.ganttproject.io.GanttCSVExport.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.io.CSVOptions)',0,'/**\r\n * Constructor.\r\n */\r\npublic GanttCSVExport(IGanttProject project, CSVOptions csvOptions) {\r\n    myProject = project;\r\n    myTasks = project.getTaskManager().getTasks();\r\n    myHrManager = ((HumanResourceManager) (project.getHumanResourceManager()));\r\n    this.csvOptions = csvOptions;\r\n}'),(2491,'CSVOptions csvOptions','net.sourceforge.ganttproject.io.CSVOptions',440,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3458,'net.sourceforge.ganttproject.io.GanttCSVExport.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.io.CSVOptions)',0,'/**\r\n * Constructor.\r\n */\r\npublic GanttCSVExport(IGanttProject project, CSVOptions csvOptions) {\r\n    myProject = project;\r\n    myTasks = project.getTaskManager().getTasks();\r\n    myHrManager = ((HumanResourceManager) (project.getHumanResourceManager()));\r\n    this.csvOptions = csvOptions;\r\n}'),(2492,'OutputStream stream','java.io.OutputStream',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3466,'net.sourceforge.ganttproject.io.GanttCSVExport.save(java.io.OutputStream)',0,'/**\r\n * Save the project as CSV on a stream\r\n *\r\n * @throws IOException\r\n * 		\r\n */\r\npublic void save(OutputStream stream) throws IOException {\r\n    OutputStreamWriter out = new OutputStreamWriter(stream);\r\n    beginToSave(out);\r\n    out.close();\r\n}'),(2493,'OutputStreamWriter out','java.io.OutputStreamWriter',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3459,'net.sourceforge.ganttproject.io.GanttCSVExport.beginToSave(java.io.OutputStreamWriter)',0,'/**\r\n * Start saving the csv document.\r\n */\r\npublic void beginToSave(OutputStreamWriter out) throws IOException {\r\n    resources = myHrManager.getResources();\r\n    bFixedSize = csvOptions.bFixedSize;\r\n    if (csvOptions.bFixedSize)\r\n        getMaxSize();\r\n\r\n    writeTasks(out);\r\n    out.write(\"\n\n\n\");\r\n    writeResources(out);\r\n    out.write(\"\n\");\r\n}'),(2494,'OutputStreamWriter out','java.io.OutputStreamWriter',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3467,'net.sourceforge.ganttproject.io.GanttCSVExport.writeCell(java.io.OutputStreamWriter,java.lang.String)',0,'private void writeCell(OutputStreamWriter out, String cellValue) throws IOException {\r\n    out.write(((correctField(cellValue)) + (bFixedSize ? \"\" : csvOptions.sSeparatedChar)));\r\n}'),(2495,'String cellValue','java.lang.String',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3467,'net.sourceforge.ganttproject.io.GanttCSVExport.writeCell(java.io.OutputStreamWriter,java.lang.String)',0,'private void writeCell(OutputStreamWriter out, String cellValue) throws IOException {\r\n    out.write(((correctField(cellValue)) + (bFixedSize ? \"\" : csvOptions.sSeparatedChar)));\r\n}'),(2496,'OutputStreamWriter out','java.io.OutputStreamWriter',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3472,'net.sourceforge.ganttproject.io.GanttCSVExport.writeTextCell(java.io.OutputStreamWriter,java.lang.String)',0,'private void writeTextCell(OutputStreamWriter out, String cellValue) throws IOException {\r\n    out.write((((bFixedSize ? \"\" : csvOptions.sSeparatedTextChar) + (correctField(cellValue))) + (bFixedSize ? \"\" : (csvOptions.sSeparatedTextChar) + (csvOptions.sSeparatedChar))));\r\n}'),(2497,'String cellValue','java.lang.String',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3472,'net.sourceforge.ganttproject.io.GanttCSVExport.writeTextCell(java.io.OutputStreamWriter,java.lang.String)',0,'private void writeTextCell(OutputStreamWriter out, String cellValue) throws IOException {\r\n    out.write((((bFixedSize ? \"\" : csvOptions.sSeparatedTextChar) + (correctField(cellValue))) + (bFixedSize ? \"\" : (csvOptions.sSeparatedTextChar) + (csvOptions.sSeparatedChar))));\r\n}'),(2498,'OutputStreamWriter out','java.io.OutputStreamWriter',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3470,'net.sourceforge.ganttproject.io.GanttCSVExport.writeTaskHeaders(java.io.OutputStreamWriter)',0,'private void writeTaskHeaders(OutputStreamWriter out) throws IOException {\r\n    if (csvOptions.bExportTaskID) {\r\n        writeCell(out, i18n(\"tableColID\"));\r\n    }\r\n    if (csvOptions.bExportTaskName) {\r\n        writeCell(out, i18n(\"tableColName\"));\r\n    }\r\n    if (csvOptions.bExportTaskStartDate) {\r\n        writeCell(out, i18n(\"tableColBegDate\"));\r\n    }\r\n    if (csvOptions.bExportTaskEndDate) {\r\n        writeCell(out, i18n(\"tableColEndDate\"));\r\n    }\r\n    if (csvOptions.bExportTaskDuration) {\r\n        writeCell(out, i18n(\"tableColDuration\"));\r\n    }\r\n    if (csvOptions.bExportTaskPercent) {\r\n        writeCell(out, i18n(\"tableColCompletion\"));\r\n    }\r\n    if (csvOptions.bExportTaskWebLink) {\r\n        writeCell(out, i18n(\"webLink\"));\r\n    }\r\n    if (csvOptions.bExportTaskResources) {\r\n        writeCell(out, i18n(\"resources\"));\r\n    }\r\n    if (csvOptions.bExportTaskNotes) {\r\n        writeCell(out, i18n(\"notes\"));\r\n    }\r\n    /* <String> */\r\n    List customFields = myProject.getCustomColumnsStorage().getCustomColumnsNames();\r\n    for (int i = 0; i < (customFields.size()); i++) {\r\n        writeCell(out, String.valueOf(customFields.get(i)));\r\n    }\r\n    out.write(\"\n\n\");\r\n}'),(2499,'String key','java.lang.String',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3465,'net.sourceforge.ganttproject.io.GanttCSVExport.i18n(java.lang.String)',0,'private String i18n(String key) {\r\n    return GanttLanguage.getInstance().getText(key);\r\n}'),(2500,'OutputStreamWriter out','java.io.OutputStreamWriter',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3471,'net.sourceforge.ganttproject.io.GanttCSVExport.writeTasks(java.io.OutputStreamWriter)',0,'/**\r\n * Write all tasks.\r\n */\r\nprivate void writeTasks(OutputStreamWriter out) throws IOException {\r\n    writeTaskHeaders(out);\r\n    /* <String> */\r\n    List customFields = myProject.getCustomColumnsStorage().getCustomColumnsNames();\r\n    for (int i = 0; i < (myTasks.length); i++) {\r\n        Task task = myTasks[i];\r\n        // ID\r\n        if (csvOptions.bExportTaskID) {\r\n            writeCell(out, (\"\" + (task.getTaskID())));\r\n        }\r\n        // Name\r\n        if (csvOptions.bExportTaskName) {\r\n            writeTextCell(out, getName(task));\r\n        }\r\n        // Start Date\r\n        if (csvOptions.bExportTaskStartDate) {\r\n            writeCell(out, task.getStart().toString());\r\n        }\r\n        // End Date\r\n        if (csvOptions.bExportTaskEndDate) {\r\n            writeCell(out, task.getEnd().toString());\r\n        }\r\n        // Duration\r\n        if (csvOptions.bExportTaskDuration) {\r\n            writeCell(out, (\"\" + (task.getDuration().getLength())));\r\n        }\r\n        // Percent complete\r\n        if (csvOptions.bExportTaskPercent) {\r\n            writeCell(out, (\"\" + (task.getCompletionPercentage())));\r\n        }\r\n        // Web Link\r\n        if (csvOptions.bExportTaskWebLink) {\r\n            writeTextCell(out, getWebLink(((GanttTask) (task))));\r\n        }\r\n        // associated resources\r\n        if (csvOptions.bExportTaskResources) {\r\n            writeTextCell(out, getAssignments(task));\r\n        }\r\n        // Notes\r\n        if (csvOptions.bExportTaskNotes) {\r\n            writeTextCell(out, task.getNotes());\r\n        }\r\n        CustomColumnsValues customValues = task.getCustomValues();\r\n        for (int j = 0; j < (customFields.size()); j++) {\r\n            Object nextCustomFieldValue = customValues.getValue(String.valueOf(customFields.get(j)));\r\n            writeCell(out, String.valueOf(nextCustomFieldValue));\r\n        }\r\n        out.write(\"\n\");\r\n    }\r\n}// end of write tasks\r\n'),(2501,'OutputStreamWriter out','java.io.OutputStreamWriter',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3468,'net.sourceforge.ganttproject.io.GanttCSVExport.writeResourceHeaders(java.io.OutputStreamWriter)',0,'private void writeResourceHeaders(OutputStreamWriter out) throws IOException {\r\n    if (csvOptions.bExportResourceID) {\r\n        writeCell(out, i18n(\"tableColID\"));\r\n    }\r\n    if (csvOptions.bExportResourceName) {\r\n        writeCell(out, i18n(\"tableColResourceName\"));\r\n    }\r\n    if (csvOptions.bExportResourceMail) {\r\n        writeCell(out, i18n(\"tableColResourceEMail\"));\r\n    }\r\n    if (csvOptions.bExportResourcePhone) {\r\n        writeCell(out, i18n(\"tableColResourcePhone\"));\r\n    }\r\n    if (csvOptions.bExportResourceRole) {\r\n        writeCell(out, i18n(\"tableColResourceRole\"));\r\n    }\r\n    List customFieldDefs = myProject.getResourceCustomPropertyManager().getDefinitions();\r\n    for (int i = 0; i < (customFieldDefs.size()); i++) {\r\n        CustomPropertyDefinition nextDef = ((CustomPropertyDefinition) (customFieldDefs.get(i)));\r\n        writeCell(out, nextDef.getName());\r\n    }\r\n    out.write(\"\n\n\");\r\n}'),(2502,'OutputStreamWriter out','java.io.OutputStreamWriter',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3469,'net.sourceforge.ganttproject.io.GanttCSVExport.writeResources(java.io.OutputStreamWriter)',0,'/**\r\n * write the resources.\r\n */\r\nprivate void writeResources(OutputStreamWriter out) throws IOException {\r\n    writeResourceHeaders(out);\r\n    // parse all resources\r\n    for (int i = 0; i < (resources.size()); i++) {\r\n        HumanResource p = ((HumanResource) (resources.get(i)));\r\n        // ID\r\n        if (csvOptions.bExportResourceID) {\r\n            writeCell(out, (\"\" + (p.getId())));\r\n        }\r\n        // Name\r\n        if (csvOptions.bExportResourceName) {\r\n            writeTextCell(out, p.getName());\r\n        }\r\n        // Mail\r\n        if (csvOptions.bExportResourceMail) {\r\n            writeTextCell(out, p.getMail());\r\n        }\r\n        // Phone\r\n        if (csvOptions.bExportResourcePhone) {\r\n            writeTextCell(out, p.getPhone());\r\n        }\r\n        // Role\r\n        if (csvOptions.bExportResourceRole) {\r\n            Role role = p.getRole();\r\n            String sRoleID = (role == null) ? \"0\" : role.getPersistentID();\r\n            writeTextCell(out, sRoleID);\r\n        }\r\n        List customProps = p.getCustomProperties();\r\n        for (int j = 0; j < (customProps.size()); j++) {\r\n            CustomProperty nextProperty = ((CustomProperty) (customProps.get(j)));\r\n            writeTextCell(out, nextProperty.getValueAsString());\r\n        }\r\n        out.write(\"\n\");\r\n    }\r\n}// end of write resources\r\n'),(2503,'Task task','net.sourceforge.ganttproject.task.Task',548,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3463,'net.sourceforge.ganttproject.io.GanttCSVExport.getName(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n *\r\n *\r\n * @return the name of task with the correct level.\r\n */\r\nprivate String getName(Task task) {\r\n    if (bFixedSize)\r\n        return task.getName();\r\n\r\n    String res = \"\";\r\n    int depth = task.getManager().getTaskHierarchy().getDepth(task);\r\n    for (int i = 0; i < depth; i++) {\r\n        res += \"  \";\r\n    }\r\n    return res + (task.getName());\r\n}'),(2504,'GanttTask task','net.sourceforge.ganttproject.GanttTask',63,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3464,'net.sourceforge.ganttproject.io.GanttCSVExport.getWebLink(net.sourceforge.ganttproject.GanttTask)',0,'/**\r\n *\r\n *\r\n * @return the link of the task.\r\n */\r\nprivate String getWebLink(GanttTask task) {\r\n    return task.getWebLink().equals(\"http://\") ? \"\" : task.getWebLink();\r\n}'),(2505,'Task task','net.sourceforge.ganttproject.task.Task',548,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3461,'net.sourceforge.ganttproject.io.GanttCSVExport.getAssignments(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n *\r\n *\r\n * @return the list of the assignment for the resources.\r\n */\r\nprivate String getAssignments(Task task) {\r\n    String res = \"\";\r\n    ResourceAssignment[] assignment = task.getAssignments();\r\n    for (int i = 0; i < (assignment.length); i++)\r\n        res += (assignment[i].getResource()) + (i == ((assignment.length) - 1) ? \"\" : csvOptions.sSeparatedChar.equals(\";\") ? \",\" : \";\");\r\n\r\n    return res;\r\n}'),(2506,'String field','java.lang.String',0,443,'net.sourceforge.ganttproject.io.GanttCSVExport',3460,'net.sourceforge.ganttproject.io.GanttCSVExport.correctField(java.lang.String)',0,'private String correctField(String field) {\r\n    String res = \"\";\r\n    for (int i = 0; i < ((iMaxSize) - (field.length())); i++)\r\n        res += \" \";\r\n\r\n    res += field;\r\n    return res;\r\n}'),(2507,'GanttTreeTable treeTable','net.sourceforge.ganttproject.GanttTreeTable',81,444,'net.sourceforge.ganttproject.io.GanttChartViewSaver',3474,'net.sourceforge.ganttproject.io.GanttChartViewSaver.save(net.sourceforge.ganttproject.GanttTreeTable,javax.xml.transform.sax.TransformerHandler)',0,'void save(GanttTreeTable treeTable, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"taskdisplaycolumns\", handler);\r\n    final List displayedColumns = treeTable.getDisplayColumns();\r\n    if (displayedColumns != null) {\r\n        for (int i = 0; i < (displayedColumns.size()); i++) {\r\n            GanttTreeTable.DisplayedColumn dc = ((GanttTreeTable.DisplayedColumn) (displayedColumns.get(i)));\r\n            if (dc.isDisplayed()) {\r\n                addAttribute(\"property-id\", dc.getID(), attrs);\r\n                addAttribute(\"order\", String.valueOf(dc.getOrder()), attrs);\r\n                addAttribute(\"width\", String.valueOf(dc.getWidth()), attrs);\r\n                emptyElement(\"displaycolumn\", attrs, handler);\r\n            }\r\n        }\r\n    }\r\n    endElement(\"taskdisplaycolumns\", handler);\r\n}'),(2508,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,444,'net.sourceforge.ganttproject.io.GanttChartViewSaver',3474,'net.sourceforge.ganttproject.io.GanttChartViewSaver.save(net.sourceforge.ganttproject.GanttTreeTable,javax.xml.transform.sax.TransformerHandler)',0,'void save(GanttTreeTable treeTable, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"taskdisplaycolumns\", handler);\r\n    final List displayedColumns = treeTable.getDisplayColumns();\r\n    if (displayedColumns != null) {\r\n        for (int i = 0; i < (displayedColumns.size()); i++) {\r\n            GanttTreeTable.DisplayedColumn dc = ((GanttTreeTable.DisplayedColumn) (displayedColumns.get(i)));\r\n            if (dc.isDisplayed()) {\r\n                addAttribute(\"property-id\", dc.getID(), attrs);\r\n                addAttribute(\"order\", String.valueOf(dc.getOrder()), attrs);\r\n                addAttribute(\"width\", String.valueOf(dc.getWidth()), attrs);\r\n                emptyElement(\"displaycolumn\", attrs, handler);\r\n            }\r\n        }\r\n    }\r\n    endElement(\"taskdisplaycolumns\", handler);\r\n}'),(2509,'GanttTree2 tree','net.sourceforge.ganttproject.GanttTree2',73,445,'net.sourceforge.ganttproject.io.GanttTXTOpen',3475,'net.sourceforge.ganttproject.io.GanttTXTOpen.-init-(net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttGraphicArea,net.sourceforge.ganttproject.task.TaskManager)',0,'/**\r\n * Constructor.\r\n */\r\npublic GanttTXTOpen(GanttTree2 tree, GanttProject appli, GanttGraphicArea gra, TaskManager taskManager) {\r\n    // Affect fields of the class\r\n    this(taskManager);\r\n    this.treePanel = tree;\r\n    this.prj = appli;\r\n    this.area = gra;\r\n}'),(2510,'GanttProject appli','net.sourceforge.ganttproject.GanttProject',53,445,'net.sourceforge.ganttproject.io.GanttTXTOpen',3475,'net.sourceforge.ganttproject.io.GanttTXTOpen.-init-(net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttGraphicArea,net.sourceforge.ganttproject.task.TaskManager)',0,'/**\r\n * Constructor.\r\n */\r\npublic GanttTXTOpen(GanttTree2 tree, GanttProject appli, GanttGraphicArea gra, TaskManager taskManager) {\r\n    // Affect fields of the class\r\n    this(taskManager);\r\n    this.treePanel = tree;\r\n    this.prj = appli;\r\n    this.area = gra;\r\n}'),(2511,'GanttGraphicArea gra','net.sourceforge.ganttproject.GanttGraphicArea',45,445,'net.sourceforge.ganttproject.io.GanttTXTOpen',3475,'net.sourceforge.ganttproject.io.GanttTXTOpen.-init-(net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttGraphicArea,net.sourceforge.ganttproject.task.TaskManager)',0,'/**\r\n * Constructor.\r\n */\r\npublic GanttTXTOpen(GanttTree2 tree, GanttProject appli, GanttGraphicArea gra, TaskManager taskManager) {\r\n    // Affect fields of the class\r\n    this(taskManager);\r\n    this.treePanel = tree;\r\n    this.prj = appli;\r\n    this.area = gra;\r\n}'),(2512,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,445,'net.sourceforge.ganttproject.io.GanttTXTOpen',3475,'net.sourceforge.ganttproject.io.GanttTXTOpen.-init-(net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttProject,net.sourceforge.ganttproject.GanttGraphicArea,net.sourceforge.ganttproject.task.TaskManager)',0,'/**\r\n * Constructor.\r\n */\r\npublic GanttTXTOpen(GanttTree2 tree, GanttProject appli, GanttGraphicArea gra, TaskManager taskManager) {\r\n    // Affect fields of the class\r\n    this(taskManager);\r\n    this.treePanel = tree;\r\n    this.prj = appli;\r\n    this.area = gra;\r\n}'),(2513,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,445,'net.sourceforge.ganttproject.io.GanttTXTOpen',3476,'net.sourceforge.ganttproject.io.GanttTXTOpen.-init-(net.sourceforge.ganttproject.task.TaskManager)',0,'/**\r\n * Constructor with a task manager.\r\n */\r\npublic GanttTXTOpen(TaskManager taskManager) {\r\n    myTaskManager = taskManager;\r\n}'),(2514,'File f','java.io.File',0,445,'net.sourceforge.ganttproject.io.GanttTXTOpen',3477,'net.sourceforge.ganttproject.io.GanttTXTOpen.load(java.io.File)',0,'/**\r\n * Load tasks list from a text file.\r\n */\r\npublic boolean load(File f) {\r\n    try {\r\n        // Open a stream\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(f)));\r\n        while (br.ready()) {\r\n            // Read each lines\r\n            String sTaskName = br.readLine();\r\n            // The test is used to skip the white line (with no text)\r\n            if (!(sTaskName.equals(\"\"))) {\r\n                // Create the task\r\n                GanttTask task = myTaskManager.createTask();\r\n                task.setColor(area.getTaskColor());\r\n                task.setName(sTaskName);\r\n                task.setLength(1);\r\n                myTaskManager.registerTask(task);\r\n                treePanel.addObject(task, null, (-1));\r\n            }\r\n        } \r\n    } catch (Exception e) {\r\n        return false;\r\n    }\r\n    return true;\r\n}'),(2515,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3478,'net.sourceforge.ganttproject.io.GanttXFIGSaver.-init-(net.sourceforge.ganttproject.IGanttProject)',0,'/**\r\n * Constructor.\r\n */\r\npublic GanttXFIGSaver(IGanttProject project) {\r\n    // this.area = area;\r\n    // this.prjInfos = prjInfos;\r\n    myTaskManager = project.getTaskManager();\r\n}'),(2516,'OutputStream stream','java.io.OutputStream',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3488,'net.sourceforge.ganttproject.io.GanttXFIGSaver.save(java.io.OutputStream)',0,'/**\r\n * Save the project as XFIG on a stream\r\n */\r\npublic void save(OutputStream stream) {\r\n    try {\r\n        OutputStreamWriter fout = new OutputStreamWriter(stream);\r\n        beginToSave(fout);\r\n        fout.close();// close the stream\r\n\r\n    } catch (IOException e) {\r\n        System.out.println(e);\r\n        System.out.println(\"Error in saving the xfig file\");\r\n    }\r\n}'),(2517,'OutputStreamWriter fout','java.io.OutputStreamWriter',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3480,'net.sourceforge.ganttproject.io.GanttXFIGSaver.beginToSave(java.io.OutputStreamWriter)',0,'/**\r\n * Start saving the xfig image.\r\n */\r\npublic void beginToSave(OutputStreamWriter fout) throws IOException {\r\n    if (debug)\r\n        System.out.println(\"beginToSave begin\");\r\n\r\n    float depthval = 50;// depth level - 999 is the lowest level.\r\n\r\n    // targetWidthPoints is in pixels, 1200 pixels per inch,\r\n    // or about 472 pixels/cm\r\n    float targetWidthPoints = 1200;\r\n    // get the list of tasks on an array list\r\n    // lot = tree.getAllTasks();\r\n    lot = Arrays.asList(myTaskManager.getTasks());\r\n    fTtextwidth = getProjectTextWidth();\r\n    if (debug)\r\n        System.out.println((\"Text Size : \" + (fTtextwidth)));\r\n\r\n    // write the xfig header\r\n    xfigheader(fout);\r\n    // Search for the user colors\r\n    searchUserColor();\r\n    // Need to give user control of date range created in plot\r\n    setProjectPlotTimes(targetWidthPoints, 50);\r\n    // Write the list of tasks\r\n    drawTasks(fout);\r\n    // Write the axes\r\n    labelAxes(fout);\r\n    if (debug)\r\n        System.out.println(\"beginToSave end\");\r\n\r\n}'),(2518,'Task task','net.sourceforge.ganttproject.task.Task',548,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3486,'net.sourceforge.ganttproject.io.GanttXFIGSaver.getTaskTextWidth(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n *\r\n *\r\n * @return the textwith of this task for and its children tasks. Determine\r\nwidth of text labels (task names) in this task assume fixed\r\nwidth, 14 letters to the inch, 1200 ppi each level is indented\r\n1/4 inch (300 points @ 1200ppi)\r\n */\r\nprivate float getTaskTextWidth(Task task) {\r\n    if (debug)\r\n        System.out.println(\"getTaskTextWidth begin\");\r\n\r\n    Task t = task;\r\n    float res = (((float) (t.getName().length())) * (1.0F / 14.0F)) * 1200.0F;\r\n    Task[] children = task.getManager().getTaskHierarchy().getNestedTasks(task);\r\n    for (int i = 0; i < (children.length); i++) {\r\n        float subTaskTextWidth = 0.25F + (getTaskTextWidth(children[i]));\r\n        if (subTaskTextWidth > res)\r\n            res = subTaskTextWidth;\r\n\r\n    }\r\n    if (debug)\r\n        System.out.println(\"getTaskTextWidth end\");\r\n\r\n    return res;\r\n}'),(2519,'OutputStreamWriter fout','java.io.OutputStreamWriter',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3493,'net.sourceforge.ganttproject.io.GanttXFIGSaver.xfigheader(java.io.OutputStreamWriter)',0,'/**\r\n * Write the header of the XFIG FILE Based on the xfig file specification.\r\n */\r\npublic void xfigheader(OutputStreamWriter fout) throws IOException {\r\n    if (debug)\r\n        System.out.println(\"xfigheader begin\");\r\n\r\n    fout.write(\"#FIG 3.2\n\");// version\r\n\r\n    fout.write(\"Landscape\n\");// orientation\r\n\r\n    fout.write(\"Center\n\");// justification\r\n\r\n    fout.write(\"Inches\n\");// units\r\n\r\n    fout.write(\"Letter\n\");// papersize\r\n\r\n    fout.write(\"100.0\n\");// magnification\r\n\r\n    fout.write(\"Single\n\");// multiplePage\r\n\r\n    fout.write(\"-2\n\");// transparentColor\r\n\r\n    fout.write(\"1200 2\n\");// resolutionPpi origin\r\n\r\n    if (debug)\r\n        System.out.println(\"xfigheader end\");\r\n\r\n}'),(2520,'float targetWidthPoints','float',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3490,'net.sourceforge.ganttproject.io.GanttXFIGSaver.setProjectPlotTimes(float,float)',0,'/**\r\n * get project time range, compute box scaling values and shifts so that the\r\n * total chart fits in targetWidthPoints units: targetWidthPoints is in\r\n * pixels, 1200 pixels per inch, or about 472 pixels/cm this also adds box\r\n * and text objects to the project tasks for plotting later\r\n */\r\npublic void setProjectPlotTimes(float targetWidthPoints, float depthval) {\r\n    if (debug)\r\n        System.out.println(\"setProjectPlotTimes begin\");\r\n\r\n    float targetwidth = targetWidthPoints - (fTtextwidth);\r\n    GanttCalendar startDate = null;\r\n    GanttCalendar endDate = null;\r\n    // Get project start, end times\r\n    for (Iterator it = lot.iterator(); it.hasNext();) {\r\n        // get the task\r\n        Task task = ((Task) (((DefaultMutableTreeNode) (it.next())).getUserObject()));\r\n        if ((startDate == null) && (endDate == null)) {\r\n            startDate = task.getStart();\r\n            endDate = task.getEnd();\r\n        } else {\r\n            // before\r\n            if ((task.getStart().compareTo(startDate)) == (-1))\r\n                startDate = task.getStart();\r\n\r\n            // after\r\n            if ((task.getEnd().compareTo(startDate)) == 1)\r\n                endDate = task.getEnd();\r\n\r\n        }\r\n    }\r\n    // shift all dates by this amount to plot\r\n    dateShift = startDate;\r\n    scale = targetwidth / (Math.max(1.0F, ((float) (endDate.diff(startDate)))));\r\n    chwidth = (scale) * ((float) (endDate.diff(startDate)));\r\n    System.out.println(((((\"Chart width =\" + (chwidth)) + \" points = \") + ((chwidth) / 1200)) + \" inches\n\"));\r\n    int index = 0;\r\n    // now add text and box objects to the tasks\r\n    for (Iterator it = lot.iterator(); it.hasNext();) {\r\n        DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (it.next()));\r\n        if (!(node.isRoot())) {\r\n            // get the task\r\n            GanttTask task = ((GanttTask) (node.getUserObject()));\r\n            // get the text infos of the task\r\n            GanttXFIGSaver.TextObject textLabel = task2text(task, index, node.getLevel(), ((int) (depthval)));\r\n            if (debug)\r\n                System.out.println(\"    add TEXT\");\r\n\r\n            atl.add(textLabel);\r\n            // get the box object of the task\r\n            GanttXFIGSaver.BoxObject boxObject = task2box(task, ((int) (depthval)), index, node.isLeaf());\r\n            if (debug)\r\n                System.out.println(\"    add BOX\");\r\n\r\n            abl.add(boxObject);\r\n            index++;\r\n        }\r\n    }\r\n    if (debug)\r\n        System.out.println((\"setProjectPlotTimes end + index=\" + index));\r\n\r\n}'),(2521,'float depthval','float',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3490,'net.sourceforge.ganttproject.io.GanttXFIGSaver.setProjectPlotTimes(float,float)',0,'/**\r\n * get project time range, compute box scaling values and shifts so that the\r\n * total chart fits in targetWidthPoints units: targetWidthPoints is in\r\n * pixels, 1200 pixels per inch, or about 472 pixels/cm this also adds box\r\n * and text objects to the project tasks for plotting later\r\n */\r\npublic void setProjectPlotTimes(float targetWidthPoints, float depthval) {\r\n    if (debug)\r\n        System.out.println(\"setProjectPlotTimes begin\");\r\n\r\n    float targetwidth = targetWidthPoints - (fTtextwidth);\r\n    GanttCalendar startDate = null;\r\n    GanttCalendar endDate = null;\r\n    // Get project start, end times\r\n    for (Iterator it = lot.iterator(); it.hasNext();) {\r\n        // get the task\r\n        Task task = ((Task) (((DefaultMutableTreeNode) (it.next())).getUserObject()));\r\n        if ((startDate == null) && (endDate == null)) {\r\n            startDate = task.getStart();\r\n            endDate = task.getEnd();\r\n        } else {\r\n            // before\r\n            if ((task.getStart().compareTo(startDate)) == (-1))\r\n                startDate = task.getStart();\r\n\r\n            // after\r\n            if ((task.getEnd().compareTo(startDate)) == 1)\r\n                endDate = task.getEnd();\r\n\r\n        }\r\n    }\r\n    // shift all dates by this amount to plot\r\n    dateShift = startDate;\r\n    scale = targetwidth / (Math.max(1.0F, ((float) (endDate.diff(startDate)))));\r\n    chwidth = (scale) * ((float) (endDate.diff(startDate)));\r\n    System.out.println(((((\"Chart width =\" + (chwidth)) + \" points = \") + ((chwidth) / 1200)) + \" inches\n\"));\r\n    int index = 0;\r\n    // now add text and box objects to the tasks\r\n    for (Iterator it = lot.iterator(); it.hasNext();) {\r\n        DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (it.next()));\r\n        if (!(node.isRoot())) {\r\n            // get the task\r\n            GanttTask task = ((GanttTask) (node.getUserObject()));\r\n            // get the text infos of the task\r\n            GanttXFIGSaver.TextObject textLabel = task2text(task, index, node.getLevel(), ((int) (depthval)));\r\n            if (debug)\r\n                System.out.println(\"    add TEXT\");\r\n\r\n            atl.add(textLabel);\r\n            // get the box object of the task\r\n            GanttXFIGSaver.BoxObject boxObject = task2box(task, ((int) (depthval)), index, node.isLeaf());\r\n            if (debug)\r\n                System.out.println(\"    add BOX\");\r\n\r\n            abl.add(boxObject);\r\n            index++;\r\n        }\r\n    }\r\n    if (debug)\r\n        System.out.println((\"setProjectPlotTimes end + index=\" + index));\r\n\r\n}'),(2522,'GanttTask task','net.sourceforge.ganttproject.GanttTask',63,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3492,'net.sourceforge.ganttproject.io.GanttXFIGSaver.task2text(net.sourceforge.ganttproject.GanttTask,int,int,int)',0,'/**\r\n * convert task structureto an xfig text data structure\r\n */\r\npublic GanttXFIGSaver.TextObject task2text(GanttTask task, int number, int level, int depthval) {\r\n    if (debug)\r\n        System.out.println(\"task2text begin\");\r\n\r\n    /* System.out.println(\"task : \"+task+ \" number : \"+number+ \" level :\n    \"+level+ \" depthval : \"+depthval);\n     */\r\n    GanttXFIGSaver.TextObject taskText = new GanttXFIGSaver.TextObject();\r\n    taskText.sub_type = 0;// left justified\r\n\r\n    taskText.color = 0;// black\r\n\r\n    taskText.depth = depthval;\r\n    taskText.pen_style = 0;// unused\r\n\r\n    taskText.font = 0;// Times Roman\r\n\r\n    taskText.font_size = 10;// fonts size in points\r\n\r\n    taskText.angle = 0;// text angle in radians\r\n\r\n    taskText.font_flags = 4;// not rigid, not special, postscript, not\r\n\r\n    // hidden.\r\n    taskText.height = 0.25F * 1200.0F;\r\n    taskText.length = (0.125F * ((float) (task.getName().length()))) * 1200.0F;\r\n    taskText.y = ((int) ((((1200.0F * 0.25F) * ((float) (number))) + 5.0F) - (1200.0F / 16.0F)));\r\n    taskText.x = ((int) ((1200.0F * 0.25F) * (((float) (level)) + 1.0F)));\r\n    taskText.str = task.getName();\r\n    if (debug)\r\n        System.out.println(\"task2text end\");\r\n\r\n    return taskText;\r\n}');
INSERT INTO `parameters` VALUES (2523,'int number','int',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3492,'net.sourceforge.ganttproject.io.GanttXFIGSaver.task2text(net.sourceforge.ganttproject.GanttTask,int,int,int)',0,'/**\r\n * convert task structureto an xfig text data structure\r\n */\r\npublic GanttXFIGSaver.TextObject task2text(GanttTask task, int number, int level, int depthval) {\r\n    if (debug)\r\n        System.out.println(\"task2text begin\");\r\n\r\n    /* System.out.println(\"task : \"+task+ \" number : \"+number+ \" level :\n    \"+level+ \" depthval : \"+depthval);\n     */\r\n    GanttXFIGSaver.TextObject taskText = new GanttXFIGSaver.TextObject();\r\n    taskText.sub_type = 0;// left justified\r\n\r\n    taskText.color = 0;// black\r\n\r\n    taskText.depth = depthval;\r\n    taskText.pen_style = 0;// unused\r\n\r\n    taskText.font = 0;// Times Roman\r\n\r\n    taskText.font_size = 10;// fonts size in points\r\n\r\n    taskText.angle = 0;// text angle in radians\r\n\r\n    taskText.font_flags = 4;// not rigid, not special, postscript, not\r\n\r\n    // hidden.\r\n    taskText.height = 0.25F * 1200.0F;\r\n    taskText.length = (0.125F * ((float) (task.getName().length()))) * 1200.0F;\r\n    taskText.y = ((int) ((((1200.0F * 0.25F) * ((float) (number))) + 5.0F) - (1200.0F / 16.0F)));\r\n    taskText.x = ((int) ((1200.0F * 0.25F) * (((float) (level)) + 1.0F)));\r\n    taskText.str = task.getName();\r\n    if (debug)\r\n        System.out.println(\"task2text end\");\r\n\r\n    return taskText;\r\n}'),(2524,'int level','int',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3492,'net.sourceforge.ganttproject.io.GanttXFIGSaver.task2text(net.sourceforge.ganttproject.GanttTask,int,int,int)',0,'/**\r\n * convert task structureto an xfig text data structure\r\n */\r\npublic GanttXFIGSaver.TextObject task2text(GanttTask task, int number, int level, int depthval) {\r\n    if (debug)\r\n        System.out.println(\"task2text begin\");\r\n\r\n    /* System.out.println(\"task : \"+task+ \" number : \"+number+ \" level :\n    \"+level+ \" depthval : \"+depthval);\n     */\r\n    GanttXFIGSaver.TextObject taskText = new GanttXFIGSaver.TextObject();\r\n    taskText.sub_type = 0;// left justified\r\n\r\n    taskText.color = 0;// black\r\n\r\n    taskText.depth = depthval;\r\n    taskText.pen_style = 0;// unused\r\n\r\n    taskText.font = 0;// Times Roman\r\n\r\n    taskText.font_size = 10;// fonts size in points\r\n\r\n    taskText.angle = 0;// text angle in radians\r\n\r\n    taskText.font_flags = 4;// not rigid, not special, postscript, not\r\n\r\n    // hidden.\r\n    taskText.height = 0.25F * 1200.0F;\r\n    taskText.length = (0.125F * ((float) (task.getName().length()))) * 1200.0F;\r\n    taskText.y = ((int) ((((1200.0F * 0.25F) * ((float) (number))) + 5.0F) - (1200.0F / 16.0F)));\r\n    taskText.x = ((int) ((1200.0F * 0.25F) * (((float) (level)) + 1.0F)));\r\n    taskText.str = task.getName();\r\n    if (debug)\r\n        System.out.println(\"task2text end\");\r\n\r\n    return taskText;\r\n}'),(2525,'int depthval','int',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3492,'net.sourceforge.ganttproject.io.GanttXFIGSaver.task2text(net.sourceforge.ganttproject.GanttTask,int,int,int)',0,'/**\r\n * convert task structureto an xfig text data structure\r\n */\r\npublic GanttXFIGSaver.TextObject task2text(GanttTask task, int number, int level, int depthval) {\r\n    if (debug)\r\n        System.out.println(\"task2text begin\");\r\n\r\n    /* System.out.println(\"task : \"+task+ \" number : \"+number+ \" level :\n    \"+level+ \" depthval : \"+depthval);\n     */\r\n    GanttXFIGSaver.TextObject taskText = new GanttXFIGSaver.TextObject();\r\n    taskText.sub_type = 0;// left justified\r\n\r\n    taskText.color = 0;// black\r\n\r\n    taskText.depth = depthval;\r\n    taskText.pen_style = 0;// unused\r\n\r\n    taskText.font = 0;// Times Roman\r\n\r\n    taskText.font_size = 10;// fonts size in points\r\n\r\n    taskText.angle = 0;// text angle in radians\r\n\r\n    taskText.font_flags = 4;// not rigid, not special, postscript, not\r\n\r\n    // hidden.\r\n    taskText.height = 0.25F * 1200.0F;\r\n    taskText.length = (0.125F * ((float) (task.getName().length()))) * 1200.0F;\r\n    taskText.y = ((int) ((((1200.0F * 0.25F) * ((float) (number))) + 5.0F) - (1200.0F / 16.0F)));\r\n    taskText.x = ((int) ((1200.0F * 0.25F) * (((float) (level)) + 1.0F)));\r\n    taskText.str = task.getName();\r\n    if (debug)\r\n        System.out.println(\"task2text end\");\r\n\r\n    return taskText;\r\n}'),(2526,'GanttTask task','net.sourceforge.ganttproject.GanttTask',63,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3491,'net.sourceforge.ganttproject.io.GanttXFIGSaver.task2box(net.sourceforge.ganttproject.GanttTask,int,int,boolean)',0,'/**\r\n * get the task box.\r\n */\r\npublic GanttXFIGSaver.BoxObject task2box(GanttTask task, int depthval, int number, boolean isLeaf) {\r\n    // boxObject: total box\r\n    // boxObjectPct: black line in center of box object\r\n    // min box width: 1.\r\n    // object to return\r\n    GanttXFIGSaver.BoxObject boxObject = new GanttXFIGSaver.BoxObject();\r\n    if (isLeaf) {\r\n        boxObject.sub_type = 2;// box\r\n\r\n        boxObject.npoints = 5;\r\n    } else {\r\n        boxObject.sub_type = 3;// polygon\r\n\r\n        boxObject.npoints = 7;\r\n    }\r\n    boxObject.depth = depthval;\r\n    if (!isLeaf)\r\n        boxObject.depth -= 2;\r\n    // ?????\r\n\r\n    // See BoxObject class for other default values\r\n    // Construct box corners\r\n    float boxLen = Math.max(1.0F, ((task.getLength()) * (scale)));\r\n    float boxLenPct = Math.max(1.0F, ((boxLen * (task.getCompletionPercentage())) / 100.0F));\r\n    float boxHeight = 1200.0F / 8.0F;\r\n    float pLo = boxHeight * 0.25F;\r\n    float pHi = boxHeight * 0.75F;\r\n    float[] pointsPct = new float[]{ 0, pLo, boxLenPct, pLo, boxLenPct, pHi, 0, pHi, 0, pLo };\r\n    if ((boxObject.sub_type) == 2) {\r\n        boxObject.points = new float[10];\r\n        boxObject.points[0] = 0;\r\n        boxObject.points[1] = 0;\r\n        boxObject.points[2] = boxLen;\r\n        boxObject.points[3] = 0;\r\n        boxObject.points[4] = boxLen;\r\n        boxObject.points[5] = boxHeight;\r\n        boxObject.points[6] = 0;\r\n        boxObject.points[7] = boxHeight;\r\n        boxObject.points[8] = 0;\r\n        boxObject.points[9] = 0;\r\n    } else {\r\n        float boxLo = boxHeight / 4;\r\n        boxObject.points = new float[14];\r\n        boxObject.points[0] = 0;\r\n        boxObject.points[1] = boxHeight;\r\n        boxObject.points[2] = 0;\r\n        boxObject.points[3] = 0;\r\n        boxObject.points[4] = boxLen;\r\n        boxObject.points[5] = 0;\r\n        boxObject.points[6] = boxLen;\r\n        boxObject.points[7] = boxHeight;// top bow\r\n\r\n        boxObject.points[8] = boxLen;\r\n        boxObject.points[9] = boxLo;\r\n        boxObject.points[10] = 0;\r\n        boxObject.points[11] = boxLo;\r\n        boxObject.points[10] = 0;\r\n        boxObject.points[13] = boxHeight;\r\n    }\r\n    int blen = boxObject.points.length;\r\n    // shift to this row\r\n    float xShift = 0;\r\n    float yShift = ((1200.0F * 0.25F) * (((float) (number)) + 4)) + (1200.0F / 16.0F);\r\n    /* boxObject.points(2:2:blen) += yShift; boxObject.points(1:2:blen) +=\n    xShift;\n     */\r\n    for (int i = 1; i < blen; i += 2)\r\n        boxObject.points[i] += yShift;\r\n\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += xShift;\r\n\r\n    // pointsPct(2:2:10) += yShift;\r\n    // pointsPct(1:2:9) += xShift;\r\n    // boxObjectPct = boxObject; // percent completed\r\n    // boxObjectPct.points = pointsPct;\r\n    // boxObjectPct.npoints = 5;\r\n    // boxObjectPct.area_fill = 20;\r\n    // boxObjectPct.fill_color = 0;\r\n    // shift boxes by start date\r\n    /* boxObject.points(1:2:blen) += task.start*boxScale; */\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += (task.getStart().diff(dateShift)) * (scale);\r\n\r\n    // boxObjectPct.points(1:2:9) += task.start*boxScale;\r\n    // now shift again by text width (must be calculated and set in\r\n    // task.boxindent)\r\n    /* boxObject.points(1:2:blen) += task.boxindent; */\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += (fTtextwidth) + 120;\r\n\r\n    // boxObjectPct.points(1:2:9) += task.boxindent;\r\n    // boxObjectPct.depth--;\r\n    // fix angle brackets in polygon object\r\n    /* if(boxObject.sub_type == 3) { angwid = min(60,boxLen/2);\n    boxObject.points([9,11]) += [-angwid,angwid]; }\n     */\r\n    if ((boxObject.sub_type) == 3) {\r\n        float angwid = Math.min(60, (boxLen / 2));\r\n        boxObject.points[9] += -angwid;\r\n        boxObject.points[11] += angwid;\r\n    }\r\n    return boxObject;\r\n}'),(2527,'int depthval','int',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3491,'net.sourceforge.ganttproject.io.GanttXFIGSaver.task2box(net.sourceforge.ganttproject.GanttTask,int,int,boolean)',0,'/**\r\n * get the task box.\r\n */\r\npublic GanttXFIGSaver.BoxObject task2box(GanttTask task, int depthval, int number, boolean isLeaf) {\r\n    // boxObject: total box\r\n    // boxObjectPct: black line in center of box object\r\n    // min box width: 1.\r\n    // object to return\r\n    GanttXFIGSaver.BoxObject boxObject = new GanttXFIGSaver.BoxObject();\r\n    if (isLeaf) {\r\n        boxObject.sub_type = 2;// box\r\n\r\n        boxObject.npoints = 5;\r\n    } else {\r\n        boxObject.sub_type = 3;// polygon\r\n\r\n        boxObject.npoints = 7;\r\n    }\r\n    boxObject.depth = depthval;\r\n    if (!isLeaf)\r\n        boxObject.depth -= 2;\r\n    // ?????\r\n\r\n    // See BoxObject class for other default values\r\n    // Construct box corners\r\n    float boxLen = Math.max(1.0F, ((task.getLength()) * (scale)));\r\n    float boxLenPct = Math.max(1.0F, ((boxLen * (task.getCompletionPercentage())) / 100.0F));\r\n    float boxHeight = 1200.0F / 8.0F;\r\n    float pLo = boxHeight * 0.25F;\r\n    float pHi = boxHeight * 0.75F;\r\n    float[] pointsPct = new float[]{ 0, pLo, boxLenPct, pLo, boxLenPct, pHi, 0, pHi, 0, pLo };\r\n    if ((boxObject.sub_type) == 2) {\r\n        boxObject.points = new float[10];\r\n        boxObject.points[0] = 0;\r\n        boxObject.points[1] = 0;\r\n        boxObject.points[2] = boxLen;\r\n        boxObject.points[3] = 0;\r\n        boxObject.points[4] = boxLen;\r\n        boxObject.points[5] = boxHeight;\r\n        boxObject.points[6] = 0;\r\n        boxObject.points[7] = boxHeight;\r\n        boxObject.points[8] = 0;\r\n        boxObject.points[9] = 0;\r\n    } else {\r\n        float boxLo = boxHeight / 4;\r\n        boxObject.points = new float[14];\r\n        boxObject.points[0] = 0;\r\n        boxObject.points[1] = boxHeight;\r\n        boxObject.points[2] = 0;\r\n        boxObject.points[3] = 0;\r\n        boxObject.points[4] = boxLen;\r\n        boxObject.points[5] = 0;\r\n        boxObject.points[6] = boxLen;\r\n        boxObject.points[7] = boxHeight;// top bow\r\n\r\n        boxObject.points[8] = boxLen;\r\n        boxObject.points[9] = boxLo;\r\n        boxObject.points[10] = 0;\r\n        boxObject.points[11] = boxLo;\r\n        boxObject.points[10] = 0;\r\n        boxObject.points[13] = boxHeight;\r\n    }\r\n    int blen = boxObject.points.length;\r\n    // shift to this row\r\n    float xShift = 0;\r\n    float yShift = ((1200.0F * 0.25F) * (((float) (number)) + 4)) + (1200.0F / 16.0F);\r\n    /* boxObject.points(2:2:blen) += yShift; boxObject.points(1:2:blen) +=\n    xShift;\n     */\r\n    for (int i = 1; i < blen; i += 2)\r\n        boxObject.points[i] += yShift;\r\n\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += xShift;\r\n\r\n    // pointsPct(2:2:10) += yShift;\r\n    // pointsPct(1:2:9) += xShift;\r\n    // boxObjectPct = boxObject; // percent completed\r\n    // boxObjectPct.points = pointsPct;\r\n    // boxObjectPct.npoints = 5;\r\n    // boxObjectPct.area_fill = 20;\r\n    // boxObjectPct.fill_color = 0;\r\n    // shift boxes by start date\r\n    /* boxObject.points(1:2:blen) += task.start*boxScale; */\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += (task.getStart().diff(dateShift)) * (scale);\r\n\r\n    // boxObjectPct.points(1:2:9) += task.start*boxScale;\r\n    // now shift again by text width (must be calculated and set in\r\n    // task.boxindent)\r\n    /* boxObject.points(1:2:blen) += task.boxindent; */\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += (fTtextwidth) + 120;\r\n\r\n    // boxObjectPct.points(1:2:9) += task.boxindent;\r\n    // boxObjectPct.depth--;\r\n    // fix angle brackets in polygon object\r\n    /* if(boxObject.sub_type == 3) { angwid = min(60,boxLen/2);\n    boxObject.points([9,11]) += [-angwid,angwid]; }\n     */\r\n    if ((boxObject.sub_type) == 3) {\r\n        float angwid = Math.min(60, (boxLen / 2));\r\n        boxObject.points[9] += -angwid;\r\n        boxObject.points[11] += angwid;\r\n    }\r\n    return boxObject;\r\n}'),(2528,'int number','int',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3491,'net.sourceforge.ganttproject.io.GanttXFIGSaver.task2box(net.sourceforge.ganttproject.GanttTask,int,int,boolean)',0,'/**\r\n * get the task box.\r\n */\r\npublic GanttXFIGSaver.BoxObject task2box(GanttTask task, int depthval, int number, boolean isLeaf) {\r\n    // boxObject: total box\r\n    // boxObjectPct: black line in center of box object\r\n    // min box width: 1.\r\n    // object to return\r\n    GanttXFIGSaver.BoxObject boxObject = new GanttXFIGSaver.BoxObject();\r\n    if (isLeaf) {\r\n        boxObject.sub_type = 2;// box\r\n\r\n        boxObject.npoints = 5;\r\n    } else {\r\n        boxObject.sub_type = 3;// polygon\r\n\r\n        boxObject.npoints = 7;\r\n    }\r\n    boxObject.depth = depthval;\r\n    if (!isLeaf)\r\n        boxObject.depth -= 2;\r\n    // ?????\r\n\r\n    // See BoxObject class for other default values\r\n    // Construct box corners\r\n    float boxLen = Math.max(1.0F, ((task.getLength()) * (scale)));\r\n    float boxLenPct = Math.max(1.0F, ((boxLen * (task.getCompletionPercentage())) / 100.0F));\r\n    float boxHeight = 1200.0F / 8.0F;\r\n    float pLo = boxHeight * 0.25F;\r\n    float pHi = boxHeight * 0.75F;\r\n    float[] pointsPct = new float[]{ 0, pLo, boxLenPct, pLo, boxLenPct, pHi, 0, pHi, 0, pLo };\r\n    if ((boxObject.sub_type) == 2) {\r\n        boxObject.points = new float[10];\r\n        boxObject.points[0] = 0;\r\n        boxObject.points[1] = 0;\r\n        boxObject.points[2] = boxLen;\r\n        boxObject.points[3] = 0;\r\n        boxObject.points[4] = boxLen;\r\n        boxObject.points[5] = boxHeight;\r\n        boxObject.points[6] = 0;\r\n        boxObject.points[7] = boxHeight;\r\n        boxObject.points[8] = 0;\r\n        boxObject.points[9] = 0;\r\n    } else {\r\n        float boxLo = boxHeight / 4;\r\n        boxObject.points = new float[14];\r\n        boxObject.points[0] = 0;\r\n        boxObject.points[1] = boxHeight;\r\n        boxObject.points[2] = 0;\r\n        boxObject.points[3] = 0;\r\n        boxObject.points[4] = boxLen;\r\n        boxObject.points[5] = 0;\r\n        boxObject.points[6] = boxLen;\r\n        boxObject.points[7] = boxHeight;// top bow\r\n\r\n        boxObject.points[8] = boxLen;\r\n        boxObject.points[9] = boxLo;\r\n        boxObject.points[10] = 0;\r\n        boxObject.points[11] = boxLo;\r\n        boxObject.points[10] = 0;\r\n        boxObject.points[13] = boxHeight;\r\n    }\r\n    int blen = boxObject.points.length;\r\n    // shift to this row\r\n    float xShift = 0;\r\n    float yShift = ((1200.0F * 0.25F) * (((float) (number)) + 4)) + (1200.0F / 16.0F);\r\n    /* boxObject.points(2:2:blen) += yShift; boxObject.points(1:2:blen) +=\n    xShift;\n     */\r\n    for (int i = 1; i < blen; i += 2)\r\n        boxObject.points[i] += yShift;\r\n\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += xShift;\r\n\r\n    // pointsPct(2:2:10) += yShift;\r\n    // pointsPct(1:2:9) += xShift;\r\n    // boxObjectPct = boxObject; // percent completed\r\n    // boxObjectPct.points = pointsPct;\r\n    // boxObjectPct.npoints = 5;\r\n    // boxObjectPct.area_fill = 20;\r\n    // boxObjectPct.fill_color = 0;\r\n    // shift boxes by start date\r\n    /* boxObject.points(1:2:blen) += task.start*boxScale; */\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += (task.getStart().diff(dateShift)) * (scale);\r\n\r\n    // boxObjectPct.points(1:2:9) += task.start*boxScale;\r\n    // now shift again by text width (must be calculated and set in\r\n    // task.boxindent)\r\n    /* boxObject.points(1:2:blen) += task.boxindent; */\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += (fTtextwidth) + 120;\r\n\r\n    // boxObjectPct.points(1:2:9) += task.boxindent;\r\n    // boxObjectPct.depth--;\r\n    // fix angle brackets in polygon object\r\n    /* if(boxObject.sub_type == 3) { angwid = min(60,boxLen/2);\n    boxObject.points([9,11]) += [-angwid,angwid]; }\n     */\r\n    if ((boxObject.sub_type) == 3) {\r\n        float angwid = Math.min(60, (boxLen / 2));\r\n        boxObject.points[9] += -angwid;\r\n        boxObject.points[11] += angwid;\r\n    }\r\n    return boxObject;\r\n}'),(2529,'boolean isLeaf','boolean',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3491,'net.sourceforge.ganttproject.io.GanttXFIGSaver.task2box(net.sourceforge.ganttproject.GanttTask,int,int,boolean)',0,'/**\r\n * get the task box.\r\n */\r\npublic GanttXFIGSaver.BoxObject task2box(GanttTask task, int depthval, int number, boolean isLeaf) {\r\n    // boxObject: total box\r\n    // boxObjectPct: black line in center of box object\r\n    // min box width: 1.\r\n    // object to return\r\n    GanttXFIGSaver.BoxObject boxObject = new GanttXFIGSaver.BoxObject();\r\n    if (isLeaf) {\r\n        boxObject.sub_type = 2;// box\r\n\r\n        boxObject.npoints = 5;\r\n    } else {\r\n        boxObject.sub_type = 3;// polygon\r\n\r\n        boxObject.npoints = 7;\r\n    }\r\n    boxObject.depth = depthval;\r\n    if (!isLeaf)\r\n        boxObject.depth -= 2;\r\n    // ?????\r\n\r\n    // See BoxObject class for other default values\r\n    // Construct box corners\r\n    float boxLen = Math.max(1.0F, ((task.getLength()) * (scale)));\r\n    float boxLenPct = Math.max(1.0F, ((boxLen * (task.getCompletionPercentage())) / 100.0F));\r\n    float boxHeight = 1200.0F / 8.0F;\r\n    float pLo = boxHeight * 0.25F;\r\n    float pHi = boxHeight * 0.75F;\r\n    float[] pointsPct = new float[]{ 0, pLo, boxLenPct, pLo, boxLenPct, pHi, 0, pHi, 0, pLo };\r\n    if ((boxObject.sub_type) == 2) {\r\n        boxObject.points = new float[10];\r\n        boxObject.points[0] = 0;\r\n        boxObject.points[1] = 0;\r\n        boxObject.points[2] = boxLen;\r\n        boxObject.points[3] = 0;\r\n        boxObject.points[4] = boxLen;\r\n        boxObject.points[5] = boxHeight;\r\n        boxObject.points[6] = 0;\r\n        boxObject.points[7] = boxHeight;\r\n        boxObject.points[8] = 0;\r\n        boxObject.points[9] = 0;\r\n    } else {\r\n        float boxLo = boxHeight / 4;\r\n        boxObject.points = new float[14];\r\n        boxObject.points[0] = 0;\r\n        boxObject.points[1] = boxHeight;\r\n        boxObject.points[2] = 0;\r\n        boxObject.points[3] = 0;\r\n        boxObject.points[4] = boxLen;\r\n        boxObject.points[5] = 0;\r\n        boxObject.points[6] = boxLen;\r\n        boxObject.points[7] = boxHeight;// top bow\r\n\r\n        boxObject.points[8] = boxLen;\r\n        boxObject.points[9] = boxLo;\r\n        boxObject.points[10] = 0;\r\n        boxObject.points[11] = boxLo;\r\n        boxObject.points[10] = 0;\r\n        boxObject.points[13] = boxHeight;\r\n    }\r\n    int blen = boxObject.points.length;\r\n    // shift to this row\r\n    float xShift = 0;\r\n    float yShift = ((1200.0F * 0.25F) * (((float) (number)) + 4)) + (1200.0F / 16.0F);\r\n    /* boxObject.points(2:2:blen) += yShift; boxObject.points(1:2:blen) +=\n    xShift;\n     */\r\n    for (int i = 1; i < blen; i += 2)\r\n        boxObject.points[i] += yShift;\r\n\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += xShift;\r\n\r\n    // pointsPct(2:2:10) += yShift;\r\n    // pointsPct(1:2:9) += xShift;\r\n    // boxObjectPct = boxObject; // percent completed\r\n    // boxObjectPct.points = pointsPct;\r\n    // boxObjectPct.npoints = 5;\r\n    // boxObjectPct.area_fill = 20;\r\n    // boxObjectPct.fill_color = 0;\r\n    // shift boxes by start date\r\n    /* boxObject.points(1:2:blen) += task.start*boxScale; */\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += (task.getStart().diff(dateShift)) * (scale);\r\n\r\n    // boxObjectPct.points(1:2:9) += task.start*boxScale;\r\n    // now shift again by text width (must be calculated and set in\r\n    // task.boxindent)\r\n    /* boxObject.points(1:2:blen) += task.boxindent; */\r\n    for (int i = 0; i < blen; i += 2)\r\n        boxObject.points[i] += (fTtextwidth) + 120;\r\n\r\n    // boxObjectPct.points(1:2:9) += task.boxindent;\r\n    // boxObjectPct.depth--;\r\n    // fix angle brackets in polygon object\r\n    /* if(boxObject.sub_type == 3) { angwid = min(60,boxLen/2);\n    boxObject.points([9,11]) += [-angwid,angwid]; }\n     */\r\n    if ((boxObject.sub_type) == 3) {\r\n        float angwid = Math.min(60, (boxLen / 2));\r\n        boxObject.points[9] += -angwid;\r\n        boxObject.points[11] += angwid;\r\n    }\r\n    return boxObject;\r\n}'),(2530,'OutputStreamWriter fout','java.io.OutputStreamWriter',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3481,'net.sourceforge.ganttproject.io.GanttXFIGSaver.drawTasks(java.io.OutputStreamWriter)',0,'/**\r\n * Draw the list of tasks.\r\n */\r\npublic void drawTasks(OutputStreamWriter fout) throws IOException {\r\n    try {\r\n        if (debug)\r\n            System.out.println(\"drawTasks begin\");\r\n\r\n        // loop on tasks\r\n        int i = 0;\r\n        for (Iterator it = lot.iterator(); it.hasNext();) {\r\n            DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (it.next()));\r\n            // get the task\r\n            if (!(node.isRoot())) {\r\n                GanttTask task = ((GanttTask) (node.getUserObject()));\r\n                GanttXFIGSaver.TextObject txtObj = ((GanttXFIGSaver.TextObject) (atl.get(i)));\r\n                GanttXFIGSaver.BoxObject boxObject = ((GanttXFIGSaver.BoxObject) (abl.get(i)));\r\n                // print the text of the task\r\n                drawtext(fout, txtObj);\r\n                // print the box of the task\r\n                drawbox(fout, boxObject);\r\n                // print the percent complete\r\n                // print relations\r\n                // update index\r\n                i++;\r\n            }\r\n        }\r\n        if (debug)\r\n            System.out.println(\"drawTasks end\");\r\n\r\n    } catch (Exception e) {\r\n        System.out.println(e);\r\n    }\r\n}'),(2531,'OutputStreamWriter fout','java.io.OutputStreamWriter',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3483,'net.sourceforge.ganttproject.io.GanttXFIGSaver.drawtext(java.io.OutputStreamWriter,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject)',0,'/**\r\n * Draw text for the taskObject.\r\n */\r\npublic void drawtext(OutputStreamWriter fout, GanttXFIGSaver.TextObject txtObj) throws IOException {\r\n    if (debug)\r\n        System.out.println(\"drawtext begin\");\r\n\r\n    fout.write(\"4 \");\r\n    fout.write(((txtObj.sub_type) + \" \"));\r\n    fout.write(((txtObj.color) + \" \"));\r\n    fout.write(((txtObj.depth) + \" \"));\r\n    fout.write(((txtObj.pen_style) + \" \"));\r\n    fout.write(((txtObj.font) + \" \"));\r\n    fout.write(((txtObj.font_size) + \" \"));\r\n    fout.write(((txtObj.angle) + \" \"));\r\n    fout.write(((txtObj.font_flags) + \" \"));\r\n    fout.write(((((txtObj.height) + \" \") + (txtObj.length)) + \" \"));\r\n    fout.write(((((txtObj.x) + \" \") + (txtObj.y)) + \" \"));\r\n    fout.write(((txtObj.str) + \"\\001\n\"));\r\n    if (debug)\r\n        System.out.println(\"drawtext end\");\r\n\r\n}'),(2532,'GanttXFIGSaver.TextObject txtObj','net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject',447,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3483,'net.sourceforge.ganttproject.io.GanttXFIGSaver.drawtext(java.io.OutputStreamWriter,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject)',0,'/**\r\n * Draw text for the taskObject.\r\n */\r\npublic void drawtext(OutputStreamWriter fout, GanttXFIGSaver.TextObject txtObj) throws IOException {\r\n    if (debug)\r\n        System.out.println(\"drawtext begin\");\r\n\r\n    fout.write(\"4 \");\r\n    fout.write(((txtObj.sub_type) + \" \"));\r\n    fout.write(((txtObj.color) + \" \"));\r\n    fout.write(((txtObj.depth) + \" \"));\r\n    fout.write(((txtObj.pen_style) + \" \"));\r\n    fout.write(((txtObj.font) + \" \"));\r\n    fout.write(((txtObj.font_size) + \" \"));\r\n    fout.write(((txtObj.angle) + \" \"));\r\n    fout.write(((txtObj.font_flags) + \" \"));\r\n    fout.write(((((txtObj.height) + \" \") + (txtObj.length)) + \" \"));\r\n    fout.write(((((txtObj.x) + \" \") + (txtObj.y)) + \" \"));\r\n    fout.write(((txtObj.str) + \"\\001\n\"));\r\n    if (debug)\r\n        System.out.println(\"drawtext end\");\r\n\r\n}'),(2533,'OutputStreamWriter fout','java.io.OutputStreamWriter',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3482,'net.sourceforge.ganttproject.io.GanttXFIGSaver.drawbox(java.io.OutputStreamWriter,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject)',0,'/**\r\n * draw the box of the task.\r\n */\r\npublic void drawbox(OutputStreamWriter fout, GanttXFIGSaver.BoxObject boxObject) throws IOException {\r\n    if (debug)\r\n        System.out.println(\"drawbox begin\");\r\n\r\n    // draw an xfig box object;\r\n    fout.write(\"2 \");\r\n    fout.write(((boxObject.sub_type) + \" \"));\r\n    fout.write(((boxObject.line_style) + \" \"));\r\n    fout.write(((boxObject.thickness) + \" \"));\r\n    fout.write(((boxObject.pen_color) + \" \"));\r\n    fout.write(((boxObject.fill_color) + \" \"));\r\n    fout.write(((boxObject.depth) + \" \"));\r\n    fout.write(((boxObject.pen_style) + \" \"));\r\n    fout.write(((boxObject.area_fill) + \" \"));\r\n    fout.write(((\" \" + (boxObject.style_val)) + \"  \"));\r\n    fout.write(((boxObject.join_style) + \" \"));\r\n    fout.write(((boxObject.cap_style) + \" \"));\r\n    fout.write(((boxObject.radius) + \" \"));\r\n    fout.write(((boxObject.forward_arrow) + \" \"));\r\n    fout.write(((boxObject.backward_arrow) + \" \"));\r\n    fout.write(((boxObject.npoints) + \"\n	\"));\r\n    int arrow_type = 1;\r\n    int arrow_style = 1;\r\n    float arrow_thickness = 1.0F;\r\n    float arrow_width = 60.0F;\r\n    float arrow_height = 60.0F;\r\n    if ((boxObject.sub_type) == 3) {\r\n        if ((boxObject.forward_arrow) != 0) {\r\n            System.out.println(\"forward\");\r\n            fout.write((((((((((\"      \" + ((int) (arrow_type))) + \" \") + ((int) (arrow_style))) + \" \") + ((int) (arrow_thickness))) + ((int) (arrow_width))) + \" \") + ((int) (arrow_height))) + \"\n\"));\r\n        }\r\n        if ((boxObject.backward_arrow) != 0) {\r\n            fout.write((((((((((\"      \" + ((int) (arrow_type))) + \" \") + ((int) (arrow_style))) + \" \") + ((int) (arrow_thickness))) + ((int) (arrow_width))) + \" \") + ((int) (arrow_height))) + \"\n\"));\r\n            System.out.println(\"back\");\r\n        }\r\n    }\r\n    for (int i = 0; i < (boxObject.points.length); i++)\r\n        fout.write((((int) (boxObject.points[i])) + \" \"));\r\n\r\n    fout.write(\"\n\");\r\n    if (debug)\r\n        System.out.println(\"drawbox end\");\r\n\r\n}'),(2534,'GanttXFIGSaver.BoxObject boxObject','net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject',446,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3482,'net.sourceforge.ganttproject.io.GanttXFIGSaver.drawbox(java.io.OutputStreamWriter,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject)',0,'/**\r\n * draw the box of the task.\r\n */\r\npublic void drawbox(OutputStreamWriter fout, GanttXFIGSaver.BoxObject boxObject) throws IOException {\r\n    if (debug)\r\n        System.out.println(\"drawbox begin\");\r\n\r\n    // draw an xfig box object;\r\n    fout.write(\"2 \");\r\n    fout.write(((boxObject.sub_type) + \" \"));\r\n    fout.write(((boxObject.line_style) + \" \"));\r\n    fout.write(((boxObject.thickness) + \" \"));\r\n    fout.write(((boxObject.pen_color) + \" \"));\r\n    fout.write(((boxObject.fill_color) + \" \"));\r\n    fout.write(((boxObject.depth) + \" \"));\r\n    fout.write(((boxObject.pen_style) + \" \"));\r\n    fout.write(((boxObject.area_fill) + \" \"));\r\n    fout.write(((\" \" + (boxObject.style_val)) + \"  \"));\r\n    fout.write(((boxObject.join_style) + \" \"));\r\n    fout.write(((boxObject.cap_style) + \" \"));\r\n    fout.write(((boxObject.radius) + \" \"));\r\n    fout.write(((boxObject.forward_arrow) + \" \"));\r\n    fout.write(((boxObject.backward_arrow) + \" \"));\r\n    fout.write(((boxObject.npoints) + \"\n	\"));\r\n    int arrow_type = 1;\r\n    int arrow_style = 1;\r\n    float arrow_thickness = 1.0F;\r\n    float arrow_width = 60.0F;\r\n    float arrow_height = 60.0F;\r\n    if ((boxObject.sub_type) == 3) {\r\n        if ((boxObject.forward_arrow) != 0) {\r\n            System.out.println(\"forward\");\r\n            fout.write((((((((((\"      \" + ((int) (arrow_type))) + \" \") + ((int) (arrow_style))) + \" \") + ((int) (arrow_thickness))) + ((int) (arrow_width))) + \" \") + ((int) (arrow_height))) + \"\n\"));\r\n        }\r\n        if ((boxObject.backward_arrow) != 0) {\r\n            fout.write((((((((((\"      \" + ((int) (arrow_type))) + \" \") + ((int) (arrow_style))) + \" \") + ((int) (arrow_thickness))) + ((int) (arrow_width))) + \" \") + ((int) (arrow_height))) + \"\n\"));\r\n            System.out.println(\"back\");\r\n        }\r\n    }\r\n    for (int i = 0; i < (boxObject.points.length); i++)\r\n        fout.write((((int) (boxObject.points[i])) + \" \"));\r\n\r\n    fout.write(\"\n\");\r\n    if (debug)\r\n        System.out.println(\"drawbox end\");\r\n\r\n}'),(2535,'OutputStreamWriter fout','java.io.OutputStreamWriter',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3487,'net.sourceforge.ganttproject.io.GanttXFIGSaver.labelAxes(java.io.OutputStreamWriter)',0,'/**\r\n * Draw the axes.\r\n */\r\npublic void labelAxes(OutputStreamWriter fout) {\r\n    // TODO write this method\r\n    if (debug)\r\n        System.out.println(\"labelAxes begin\");\r\n\r\n    if (debug)\r\n        System.out.println(\"labelAxes end\");\r\n\r\n}'),(2536,'Color color','java.awt.Color',0,448,'net.sourceforge.ganttproject.io.GanttXFIGSaver',3484,'net.sourceforge.ganttproject.io.GanttXFIGSaver.getHexaColor(java.awt.Color)',0,'/**\r\n *\r\n *\r\n * @return a color as a string like #00FF00 for green color.\r\n */\r\nprivate String getHexaColor(Color color) {\r\n    if (debug)\r\n        System.out.println(\"getHexaColor begin\");\r\n\r\n    String sColor = \"#\";// result string\r\n\r\n    if ((color.getRed()) <= 15)\r\n        sColor += \"0\";\r\n\r\n    sColor += Integer.toHexString(color.getRed());\r\n    if ((color.getGreen()) <= 15)\r\n        sColor += \"0\";\r\n\r\n    sColor += Integer.toHexString(color.getGreen());\r\n    if ((color.getBlue()) <= 15)\r\n        sColor += \"0\";\r\n\r\n    sColor += Integer.toHexString(color.getBlue());\r\n    if (debug)\r\n        System.out.println(\"getHexaColor end\");\r\n\r\n    return sColor;\r\n}'),(2537,'PrjInfos info','net.sourceforge.ganttproject.PrjInfos',87,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3496,'net.sourceforge.ganttproject.io.GanttXMLOpen.-init-(net.sourceforge.ganttproject.PrjInfos,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * Constructor\r\n *\r\n * @param uiFacade\r\n * 		TODO\r\n */\r\npublic GanttXMLOpen(PrjInfos info, UIConfiguration uiConfig, TaskManager taskManager, UIFacade uiFacade) {\r\n    this(taskManager);\r\n    // this.treePanel = tree;\r\n    myProjectInfo = info;\r\n    myUIConfig = uiConfig;\r\n    // this.peop = resources;\r\n    // this.area = gra;\r\n    // this.bImport = bImport;\r\n    this.viewIndex = 0;\r\n    this.ganttDividerLocation = 300;// todo does this arbitrary value is\r\n\r\n    // right ?\r\n    this.resourceDividerLocation = 300;\r\n    // if(bImport)\r\n    // maxID = ((TaskManagerImpl)taskManager).getMaxID();\r\n    myUIFacade = uiFacade;\r\n}'),(2538,'UIConfiguration uiConfig','net.sourceforge.ganttproject.gui.UIConfiguration',335,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3496,'net.sourceforge.ganttproject.io.GanttXMLOpen.-init-(net.sourceforge.ganttproject.PrjInfos,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * Constructor\r\n *\r\n * @param uiFacade\r\n * 		TODO\r\n */\r\npublic GanttXMLOpen(PrjInfos info, UIConfiguration uiConfig, TaskManager taskManager, UIFacade uiFacade) {\r\n    this(taskManager);\r\n    // this.treePanel = tree;\r\n    myProjectInfo = info;\r\n    myUIConfig = uiConfig;\r\n    // this.peop = resources;\r\n    // this.area = gra;\r\n    // this.bImport = bImport;\r\n    this.viewIndex = 0;\r\n    this.ganttDividerLocation = 300;// todo does this arbitrary value is\r\n\r\n    // right ?\r\n    this.resourceDividerLocation = 300;\r\n    // if(bImport)\r\n    // maxID = ((TaskManagerImpl)taskManager).getMaxID();\r\n    myUIFacade = uiFacade;\r\n}'),(2539,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3496,'net.sourceforge.ganttproject.io.GanttXMLOpen.-init-(net.sourceforge.ganttproject.PrjInfos,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * Constructor\r\n *\r\n * @param uiFacade\r\n * 		TODO\r\n */\r\npublic GanttXMLOpen(PrjInfos info, UIConfiguration uiConfig, TaskManager taskManager, UIFacade uiFacade) {\r\n    this(taskManager);\r\n    // this.treePanel = tree;\r\n    myProjectInfo = info;\r\n    myUIConfig = uiConfig;\r\n    // this.peop = resources;\r\n    // this.area = gra;\r\n    // this.bImport = bImport;\r\n    this.viewIndex = 0;\r\n    this.ganttDividerLocation = 300;// todo does this arbitrary value is\r\n\r\n    // right ?\r\n    this.resourceDividerLocation = 300;\r\n    // if(bImport)\r\n    // maxID = ((TaskManagerImpl)taskManager).getMaxID();\r\n    myUIFacade = uiFacade;\r\n}'),(2540,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3496,'net.sourceforge.ganttproject.io.GanttXMLOpen.-init-(net.sourceforge.ganttproject.PrjInfos,net.sourceforge.ganttproject.gui.UIConfiguration,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * Constructor\r\n *\r\n * @param uiFacade\r\n * 		TODO\r\n */\r\npublic GanttXMLOpen(PrjInfos info, UIConfiguration uiConfig, TaskManager taskManager, UIFacade uiFacade) {\r\n    this(taskManager);\r\n    // this.treePanel = tree;\r\n    myProjectInfo = info;\r\n    myUIConfig = uiConfig;\r\n    // this.peop = resources;\r\n    // this.area = gra;\r\n    // this.bImport = bImport;\r\n    this.viewIndex = 0;\r\n    this.ganttDividerLocation = 300;// todo does this arbitrary value is\r\n\r\n    // right ?\r\n    this.resourceDividerLocation = 300;\r\n    // if(bImport)\r\n    // maxID = ((TaskManagerImpl)taskManager).getMaxID();\r\n    myUIFacade = uiFacade;\r\n}'),(2541,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3497,'net.sourceforge.ganttproject.io.GanttXMLOpen.-init-(net.sourceforge.ganttproject.task.TaskManager)',0,'public GanttXMLOpen(TaskManager taskManager) {\r\n    myContext = new ParsingContext();\r\n    myTaskManager = taskManager;\r\n}'),(2542,'String filename','java.lang.String',0,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3507,'net.sourceforge.ganttproject.io.GanttXMLOpen.load(java.lang.String)',0,'public boolean load(String filename) {\r\n    boolean temp = load(new File(filename));\r\n    // constructRelationship();\r\n    return temp;\r\n}'),(2543,'InputStream inStream','java.io.InputStream',0,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3506,'net.sourceforge.ganttproject.io.GanttXMLOpen.load(java.io.InputStream)',0,'public boolean load(InputStream inStream) throws IOException {\r\n    // Use an instance of ourselves as the SAX event handler\r\n    myTaskManager.getAlgorithmCollection().getAdjustTaskBoundsAlgorithm().setEnabled(false);\r\n    myTaskManager.getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm().setEnabled(false);\r\n    DefaultHandler handler = new GanttXMLOpen.GanttXMLParser();\r\n    // Use the default (non-validating) parser\r\n    SAXParserFactory factory = SAXParserFactory.newInstance();\r\n    try {\r\n        // Parse the input\r\n        SAXParser saxParser;\r\n        saxParser = factory.newSAXParser();\r\n        saxParser.parse(inStream, handler);\r\n    } catch (ParserConfigurationException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n        throw new IOException(e.getMessage());\r\n    } catch (SAXException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n        throw new IOException(e.getMessage());\r\n    }\r\n    myTaskManager.getAlgorithmCollection().getRecalculateTaskScheduleAlgorithm().setEnabled(true);\r\n    myTaskManager.getAlgorithmCollection().getAdjustTaskBoundsAlgorithm().setEnabled(true);\r\n    // treePanel.refreshAllId(treePanel.getRoot());\r\n    // treePanel.forwardScheduling();\r\n    if (!(bMerge)) {\r\n        myUIFacade.setViewIndex(viewIndex);\r\n        myUIFacade.setGanttDividerLocation(ganttDividerLocation);\r\n        if ((resourceDividerLocation) != 0)\r\n            myUIFacade.setResourceDividerLocation(resourceDividerLocation);\r\n\r\n    }\r\n    return true;\r\n}'),(2544,'File file','java.io.File',0,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3505,'net.sourceforge.ganttproject.io.GanttXMLOpen.load(java.io.File)',0,'public boolean load(File file) {\r\n    // Use an instance of ourselves as the SAX event handler\r\n    DefaultHandler handler = new GanttXMLOpen.GanttXMLParser();\r\n    // Use the default (non-validating) parser\r\n    SAXParserFactory factory = SAXParserFactory.newInstance();\r\n    try {\r\n        // Parse the input\r\n        SAXParser saxParser = factory.newSAXParser();\r\n        saxParser.parse(file, handler);\r\n    } catch (Exception e) {\r\n        myUIFacade.showErrorDialog(e);\r\n        /* GanttDialogInfo gdi = new GanttDialogInfo((JFrame) myUIFacade,\n        GanttDialogInfo.ERROR, GanttDialogInfo.YES_OPTION, language\n        .getText(\"msg2\")\n        + file.getAbsolutePath(), language.getText(\"error\"));\n        gdi.show();\n         */\r\n        return false;\r\n    }\r\n    // if(treePanel!=null) {\r\n    // treePanel.forwardScheduling();//refreshAllId(treePanel.getRoot());\r\n    // }\r\n    return true;\r\n}'),(2545,'TagHandler handler','net.sourceforge.ganttproject.parser.TagHandler',481,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3500,'net.sourceforge.ganttproject.io.GanttXMLOpen.addTagHandler(net.sourceforge.ganttproject.parser.TagHandler)',0,'public void addTagHandler(TagHandler handler) {\r\n    myTagHandlers.add(handler);\r\n}'),(2546,'ParsingListener listener','net.sourceforge.ganttproject.parser.ParsingListener',477,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3499,'net.sourceforge.ganttproject.io.GanttXMLOpen.addParsingListener(net.sourceforge.ganttproject.parser.ParsingListener)',0,'public void addParsingListener(ParsingListener listener) {\r\n    myListeners.add(listener);\r\n}'),(2547,'String namespaceURI','java.lang.String',0,449,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler',3511,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    indent += \"    \";\r\n    String eName = sName;// element name\r\n\r\n    if (\"\".equals(eName)) {\r\n        eName = qName;// not namespaceAware\r\n\r\n    }\r\n    if (eName.equals(\"description\")) {\r\n        myCharacterBuffer = new StringBuffer();\r\n        typeChar = 0;\r\n    }\r\n    if (eName.equals(\"notes\")) {\r\n        myCharacterBuffer = new StringBuffer();\r\n        typeChar = 1;\r\n        // barmeier: we know that this tag has only attibutes no nested\r\n        // tags\r\n        // we can do we need here.\r\n    }\r\n    /* if (eName.equals(\"allocation\")) { String aName; int taskId = 0;\n    int resourceId = 0; int load = 0; for (int i = 0; i <\n    attrs.getLength(); i++) { aName = attrs.getQName(i); if\n    (aName.equals(\"task-id\")) { taskId = new\n    Integer(attrs.getValue(i)).intValue(); } else if\n    (aName.equals(\"resource-id\")) { resourceId = new\n    Integer(attrs.getValue(i)).intValue(); } else if\n    (aName.equals(\"load\")) { load = new\n    Integer(attrs.getValue(i)).intValue(); } } // if no load is\n    specified I assume 100% load // this should only be the case if\n    old files // were loaded. if (load == 0) { load = 100; }\n    GanttTask the_task = treePanel.getTask(taskId); HumanResource\n    user = peop.getUserByNumber(resourceId - 1); //\n    user.setLoad(load+user.getMaximumUnitsPerDay());\n    the_task.taskUser(peop.getUserByNumber(resourceId - 1), load); }\n     */\r\n    // int task_id = 0;\r\n    // GanttTask task = new GanttTask(new String(), new GanttCalendar(),\r\n    // 1);\r\n    // GanttTask task = myTaskManager.createTask();\r\n    // task.setLength(1);\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getLocalName(i);// Attr name\r\n\r\n            if (\"\".equals(aName)) {\r\n                aName = attrs.getQName(i);\r\n                // The project part\r\n            }\r\n            if ((eName.equals(\"project\")) && ((myTagStack.size()) == 1)) {\r\n                if (aName.equals(\"name\")) {\r\n                    myProjectInfo._sProjectName = attrs.getValue(i);\r\n                } else\r\n                    if (aName.equals(\"company\")) {\r\n                        myProjectInfo._sOrganization = attrs.getValue(i);\r\n                    } else\r\n                        if (aName.equals(\"webLink\")) {\r\n                            myProjectInfo._sWebLink = attrs.getValue(i);\r\n                        } else// TODO: 1.12 repair scrolling to the saved date\r\n\r\n                            if (aName.equals(\"view-date\")) {\r\n                                myUIFacade.getScrollingManager().scrollLeft(GanttCalendar.parseXMLDate(attrs.getValue(i)).getTime());\r\n                            } else\r\n                                if (aName.equals(\"view-index\")) {\r\n                                    viewIndex = new Integer(attrs.getValue(i)).hashCode();\r\n                                } else\r\n                                    if (aName.equals(\"gantt-divider-location\")) {\r\n                                        ganttDividerLocation = new Integer(attrs.getValue(i)).intValue();\r\n                                    } else\r\n                                        if (aName.equals(\"resource-divider-location\")) {\r\n                                            resourceDividerLocation = new Integer(attrs.getValue(i)).intValue();\r\n                                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            } else\r\n                if (eName.equals(\"tasks\")) {\r\n                    if (aName.equals(\"color\")) {\r\n                        myUIConfig.setProjectLevelTaskColor(determineColor(attrs.getValue(i)));\r\n                    }\r\n                }\r\n\r\n        }\r\n    }\r\n}'),(2548,'String sName','java.lang.String',0,449,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler',3511,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    indent += \"    \";\r\n    String eName = sName;// element name\r\n\r\n    if (\"\".equals(eName)) {\r\n        eName = qName;// not namespaceAware\r\n\r\n    }\r\n    if (eName.equals(\"description\")) {\r\n        myCharacterBuffer = new StringBuffer();\r\n        typeChar = 0;\r\n    }\r\n    if (eName.equals(\"notes\")) {\r\n        myCharacterBuffer = new StringBuffer();\r\n        typeChar = 1;\r\n        // barmeier: we know that this tag has only attibutes no nested\r\n        // tags\r\n        // we can do we need here.\r\n    }\r\n    /* if (eName.equals(\"allocation\")) { String aName; int taskId = 0;\n    int resourceId = 0; int load = 0; for (int i = 0; i <\n    attrs.getLength(); i++) { aName = attrs.getQName(i); if\n    (aName.equals(\"task-id\")) { taskId = new\n    Integer(attrs.getValue(i)).intValue(); } else if\n    (aName.equals(\"resource-id\")) { resourceId = new\n    Integer(attrs.getValue(i)).intValue(); } else if\n    (aName.equals(\"load\")) { load = new\n    Integer(attrs.getValue(i)).intValue(); } } // if no load is\n    specified I assume 100% load // this should only be the case if\n    old files // were loaded. if (load == 0) { load = 100; }\n    GanttTask the_task = treePanel.getTask(taskId); HumanResource\n    user = peop.getUserByNumber(resourceId - 1); //\n    user.setLoad(load+user.getMaximumUnitsPerDay());\n    the_task.taskUser(peop.getUserByNumber(resourceId - 1), load); }\n     */\r\n    // int task_id = 0;\r\n    // GanttTask task = new GanttTask(new String(), new GanttCalendar(),\r\n    // 1);\r\n    // GanttTask task = myTaskManager.createTask();\r\n    // task.setLength(1);\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getLocalName(i);// Attr name\r\n\r\n            if (\"\".equals(aName)) {\r\n                aName = attrs.getQName(i);\r\n                // The project part\r\n            }\r\n            if ((eName.equals(\"project\")) && ((myTagStack.size()) == 1)) {\r\n                if (aName.equals(\"name\")) {\r\n                    myProjectInfo._sProjectName = attrs.getValue(i);\r\n                } else\r\n                    if (aName.equals(\"company\")) {\r\n                        myProjectInfo._sOrganization = attrs.getValue(i);\r\n                    } else\r\n                        if (aName.equals(\"webLink\")) {\r\n                            myProjectInfo._sWebLink = attrs.getValue(i);\r\n                        } else// TODO: 1.12 repair scrolling to the saved date\r\n\r\n                            if (aName.equals(\"view-date\")) {\r\n                                myUIFacade.getScrollingManager().scrollLeft(GanttCalendar.parseXMLDate(attrs.getValue(i)).getTime());\r\n                            } else\r\n                                if (aName.equals(\"view-index\")) {\r\n                                    viewIndex = new Integer(attrs.getValue(i)).hashCode();\r\n                                } else\r\n                                    if (aName.equals(\"gantt-divider-location\")) {\r\n                                        ganttDividerLocation = new Integer(attrs.getValue(i)).intValue();\r\n                                    } else\r\n                                        if (aName.equals(\"resource-divider-location\")) {\r\n                                            resourceDividerLocation = new Integer(attrs.getValue(i)).intValue();\r\n                                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            } else\r\n                if (eName.equals(\"tasks\")) {\r\n                    if (aName.equals(\"color\")) {\r\n                        myUIConfig.setProjectLevelTaskColor(determineColor(attrs.getValue(i)));\r\n                    }\r\n                }\r\n\r\n        }\r\n    }\r\n}'),(2549,'String qName','java.lang.String',0,449,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler',3511,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    indent += \"    \";\r\n    String eName = sName;// element name\r\n\r\n    if (\"\".equals(eName)) {\r\n        eName = qName;// not namespaceAware\r\n\r\n    }\r\n    if (eName.equals(\"description\")) {\r\n        myCharacterBuffer = new StringBuffer();\r\n        typeChar = 0;\r\n    }\r\n    if (eName.equals(\"notes\")) {\r\n        myCharacterBuffer = new StringBuffer();\r\n        typeChar = 1;\r\n        // barmeier: we know that this tag has only attibutes no nested\r\n        // tags\r\n        // we can do we need here.\r\n    }\r\n    /* if (eName.equals(\"allocation\")) { String aName; int taskId = 0;\n    int resourceId = 0; int load = 0; for (int i = 0; i <\n    attrs.getLength(); i++) { aName = attrs.getQName(i); if\n    (aName.equals(\"task-id\")) { taskId = new\n    Integer(attrs.getValue(i)).intValue(); } else if\n    (aName.equals(\"resource-id\")) { resourceId = new\n    Integer(attrs.getValue(i)).intValue(); } else if\n    (aName.equals(\"load\")) { load = new\n    Integer(attrs.getValue(i)).intValue(); } } // if no load is\n    specified I assume 100% load // this should only be the case if\n    old files // were loaded. if (load == 0) { load = 100; }\n    GanttTask the_task = treePanel.getTask(taskId); HumanResource\n    user = peop.getUserByNumber(resourceId - 1); //\n    user.setLoad(load+user.getMaximumUnitsPerDay());\n    the_task.taskUser(peop.getUserByNumber(resourceId - 1), load); }\n     */\r\n    // int task_id = 0;\r\n    // GanttTask task = new GanttTask(new String(), new GanttCalendar(),\r\n    // 1);\r\n    // GanttTask task = myTaskManager.createTask();\r\n    // task.setLength(1);\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getLocalName(i);// Attr name\r\n\r\n            if (\"\".equals(aName)) {\r\n                aName = attrs.getQName(i);\r\n                // The project part\r\n            }\r\n            if ((eName.equals(\"project\")) && ((myTagStack.size()) == 1)) {\r\n                if (aName.equals(\"name\")) {\r\n                    myProjectInfo._sProjectName = attrs.getValue(i);\r\n                } else\r\n                    if (aName.equals(\"company\")) {\r\n                        myProjectInfo._sOrganization = attrs.getValue(i);\r\n                    } else\r\n                        if (aName.equals(\"webLink\")) {\r\n                            myProjectInfo._sWebLink = attrs.getValue(i);\r\n                        } else// TODO: 1.12 repair scrolling to the saved date\r\n\r\n                            if (aName.equals(\"view-date\")) {\r\n                                myUIFacade.getScrollingManager().scrollLeft(GanttCalendar.parseXMLDate(attrs.getValue(i)).getTime());\r\n                            } else\r\n                                if (aName.equals(\"view-index\")) {\r\n                                    viewIndex = new Integer(attrs.getValue(i)).hashCode();\r\n                                } else\r\n                                    if (aName.equals(\"gantt-divider-location\")) {\r\n                                        ganttDividerLocation = new Integer(attrs.getValue(i)).intValue();\r\n                                    } else\r\n                                        if (aName.equals(\"resource-divider-location\")) {\r\n                                            resourceDividerLocation = new Integer(attrs.getValue(i)).intValue();\r\n                                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            } else\r\n                if (eName.equals(\"tasks\")) {\r\n                    if (aName.equals(\"color\")) {\r\n                        myUIConfig.setProjectLevelTaskColor(determineColor(attrs.getValue(i)));\r\n                    }\r\n                }\r\n\r\n        }\r\n    }\r\n}'),(2550,'Attributes attrs','org.xml.sax.Attributes',0,449,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler',3511,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    indent += \"    \";\r\n    String eName = sName;// element name\r\n\r\n    if (\"\".equals(eName)) {\r\n        eName = qName;// not namespaceAware\r\n\r\n    }\r\n    if (eName.equals(\"description\")) {\r\n        myCharacterBuffer = new StringBuffer();\r\n        typeChar = 0;\r\n    }\r\n    if (eName.equals(\"notes\")) {\r\n        myCharacterBuffer = new StringBuffer();\r\n        typeChar = 1;\r\n        // barmeier: we know that this tag has only attibutes no nested\r\n        // tags\r\n        // we can do we need here.\r\n    }\r\n    /* if (eName.equals(\"allocation\")) { String aName; int taskId = 0;\n    int resourceId = 0; int load = 0; for (int i = 0; i <\n    attrs.getLength(); i++) { aName = attrs.getQName(i); if\n    (aName.equals(\"task-id\")) { taskId = new\n    Integer(attrs.getValue(i)).intValue(); } else if\n    (aName.equals(\"resource-id\")) { resourceId = new\n    Integer(attrs.getValue(i)).intValue(); } else if\n    (aName.equals(\"load\")) { load = new\n    Integer(attrs.getValue(i)).intValue(); } } // if no load is\n    specified I assume 100% load // this should only be the case if\n    old files // were loaded. if (load == 0) { load = 100; }\n    GanttTask the_task = treePanel.getTask(taskId); HumanResource\n    user = peop.getUserByNumber(resourceId - 1); //\n    user.setLoad(load+user.getMaximumUnitsPerDay());\n    the_task.taskUser(peop.getUserByNumber(resourceId - 1), load); }\n     */\r\n    // int task_id = 0;\r\n    // GanttTask task = new GanttTask(new String(), new GanttCalendar(),\r\n    // 1);\r\n    // GanttTask task = myTaskManager.createTask();\r\n    // task.setLength(1);\r\n    if (attrs != null) {\r\n        for (int i = 0; i < (attrs.getLength()); i++) {\r\n            String aName = attrs.getLocalName(i);// Attr name\r\n\r\n            if (\"\".equals(aName)) {\r\n                aName = attrs.getQName(i);\r\n                // The project part\r\n            }\r\n            if ((eName.equals(\"project\")) && ((myTagStack.size()) == 1)) {\r\n                if (aName.equals(\"name\")) {\r\n                    myProjectInfo._sProjectName = attrs.getValue(i);\r\n                } else\r\n                    if (aName.equals(\"company\")) {\r\n                        myProjectInfo._sOrganization = attrs.getValue(i);\r\n                    } else\r\n                        if (aName.equals(\"webLink\")) {\r\n                            myProjectInfo._sWebLink = attrs.getValue(i);\r\n                        } else// TODO: 1.12 repair scrolling to the saved date\r\n\r\n                            if (aName.equals(\"view-date\")) {\r\n                                myUIFacade.getScrollingManager().scrollLeft(GanttCalendar.parseXMLDate(attrs.getValue(i)).getTime());\r\n                            } else\r\n                                if (aName.equals(\"view-index\")) {\r\n                                    viewIndex = new Integer(attrs.getValue(i)).hashCode();\r\n                                } else\r\n                                    if (aName.equals(\"gantt-divider-location\")) {\r\n                                        ganttDividerLocation = new Integer(attrs.getValue(i)).intValue();\r\n                                    } else\r\n                                        if (aName.equals(\"resource-divider-location\")) {\r\n                                            resourceDividerLocation = new Integer(attrs.getValue(i)).intValue();\r\n                                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            } else\r\n                if (eName.equals(\"tasks\")) {\r\n                    if (aName.equals(\"color\")) {\r\n                        myUIConfig.setProjectLevelTaskColor(determineColor(attrs.getValue(i)));\r\n                    }\r\n                }\r\n\r\n        }\r\n    }\r\n}'),(2551,'String namespaceURI','java.lang.String',0,449,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler',3510,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    indent = indent.substring(0, ((indent.length()) - 4));\r\n    if (\"description\".equals(qName)) {\r\n        myProjectInfo._sDescription = getCorrectString(myCharacterBuffer.toString());\r\n    } else\r\n        if (\"notes\".equals(qName)) {\r\n            Task currentTask = myTaskManager.getTask(getContext().getTaskID());\r\n            currentTask.setNotes(getCorrectString(myCharacterBuffer.toString()));\r\n        }\r\n\r\n}'),(2552,'String sName','java.lang.String',0,449,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler',3510,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    indent = indent.substring(0, ((indent.length()) - 4));\r\n    if (\"description\".equals(qName)) {\r\n        myProjectInfo._sDescription = getCorrectString(myCharacterBuffer.toString());\r\n    } else\r\n        if (\"notes\".equals(qName)) {\r\n            Task currentTask = myTaskManager.getTask(getContext().getTaskID());\r\n            currentTask.setNotes(getCorrectString(myCharacterBuffer.toString()));\r\n        }\r\n\r\n}'),(2553,'String qName','java.lang.String',0,449,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler',3510,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    indent = indent.substring(0, ((indent.length()) - 4));\r\n    if (\"description\".equals(qName)) {\r\n        myProjectInfo._sDescription = getCorrectString(myCharacterBuffer.toString());\r\n    } else\r\n        if (\"notes\".equals(qName)) {\r\n            Task currentTask = myTaskManager.getTask(getContext().getTaskID());\r\n            currentTask.setNotes(getCorrectString(myCharacterBuffer.toString()));\r\n        }\r\n\r\n}'),(2554,'String hexString','java.lang.String',0,449,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler',3509,'net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler.determineColor(java.lang.String)',0,'private final Color determineColor(String hexString) {\r\n    if (!(Pattern.matches(\"#[0-9abcdefABCDEF]{6}+\", hexString))) {\r\n        return GanttGraphicArea.taskDefaultColor;\r\n    }\r\n    int r;\r\n    int g;\r\n    int b;\r\n    r = Integer.valueOf(hexString.substring(1, 3), 16).intValue();\r\n    g = Integer.valueOf(hexString.substring(3, 5), 16).intValue();\r\n    b = Integer.valueOf(hexString.substring(5, 7), 16).intValue();\r\n    return new Color(r, g, b);\r\n}'),(2555,'String s','java.lang.String',0,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3502,'net.sourceforge.ganttproject.io.GanttXMLOpen.getCorrectString(java.lang.String)',0,'private String getCorrectString(String s) {\r\n    // return s.replaceAll(\"\n\" + indent, \"\n\");\r\n    s = s.replaceAll((\"\n\" + (indent)), \"\n\");\r\n    s = s.replaceAll(marge, \"\");\r\n    while (s.startsWith(\"\n\")) {\r\n        s = s.substring(1, s.length());\r\n    } \r\n    while (s.endsWith(\"\n\")) {\r\n        s = s.substring(0, ((s.length()) - 1));\r\n    } \r\n    s = s.replaceAll(\"&#38;\", \"&\");\r\n    s = s.replaceAll(\"&#60;\", \"<\");\r\n    s = s.replaceAll(\"&#62;\", \">\");\r\n    s = s.replaceAll(\"&#47;\", \"/\");\r\n    s = s.replaceAll(\"&#34;\", \"\"\");\r\n    return s;\r\n}'),(2556,'boolean b','boolean',0,451,'net.sourceforge.ganttproject.io.GanttXMLOpen',3504,'net.sourceforge.ganttproject.io.GanttXMLOpen.isMerging(boolean)',0,'public void isMerging(boolean b) {\r\n    bMerge = b;\r\n}'),(2557,'String namespaceURI','java.lang.String',0,450,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser',3517,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    myTagStack.push(qName);\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        try {\r\n            next.startElement(namespaceURI, sName, qName, attrs);\r\n        } catch (FileFormatException e) {\r\n            System.err.println(e.getMessage());\r\n        }\r\n    }\r\n}'),(2558,'String sName','java.lang.String',0,450,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser',3517,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    myTagStack.push(qName);\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        try {\r\n            next.startElement(namespaceURI, sName, qName, attrs);\r\n        } catch (FileFormatException e) {\r\n            System.err.println(e.getMessage());\r\n        }\r\n    }\r\n}'),(2559,'// simple\r\n// name\r\nString qName','java.lang.String',0,450,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser',3517,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    myTagStack.push(qName);\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        try {\r\n            next.startElement(namespaceURI, sName, qName, attrs);\r\n        } catch (FileFormatException e) {\r\n            System.err.println(e.getMessage());\r\n        }\r\n    }\r\n}'),(2560,'// qualified name\r\nAttributes attrs','org.xml.sax.Attributes',0,450,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser',3517,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, // simple\r\n// name\r\nString qName, // qualified name\r\nAttributes attrs) throws SAXException {\r\n    myTagStack.push(qName);\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        try {\r\n            next.startElement(namespaceURI, sName, qName, attrs);\r\n        } catch (FileFormatException e) {\r\n            System.err.println(e.getMessage());\r\n        }\r\n    }\r\n}'),(2561,'String namespaceURI','java.lang.String',0,450,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser',3515,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) throws SAXException {\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        next.endElement(namespaceURI, sName, qName);\r\n    }\r\n    myTagStack.pop();\r\n}'),(2562,'String sName','java.lang.String',0,450,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser',3515,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) throws SAXException {\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        next.endElement(namespaceURI, sName, qName);\r\n    }\r\n    myTagStack.pop();\r\n}'),(2563,'String qName','java.lang.String',0,450,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser',3515,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) throws SAXException {\r\n    for (Iterator handlers = myTagHandlers.iterator(); handlers.hasNext();) {\r\n        TagHandler next = ((TagHandler) (handlers.next()));\r\n        next.endElement(namespaceURI, sName, qName);\r\n    }\r\n    myTagStack.pop();\r\n}'),(2564,'char[] buf','char[]',0,450,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser',3513,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser.characters(char[],int,int)',0,'public void characters(char[] buf, int offset, int len) throws SAXException {\r\n    // len=0;\r\n    // for(int i=0;i+offset<buf.length && buf[i+offset]!=<;i++,len++);\r\n    String s = new String(buf, offset, len);\r\n    if ((typeChar) >= 0) {\r\n        if (GanttXMLOpen.IGNORABLE_WHITESPACE.matcher(s).matches()) {\r\n            return;\r\n        }\r\n        s = s.replaceAll(\"^\\n\\x20*\", \"\n\");\r\n        myCharacterBuffer.append(s);\r\n    }\r\n}'),(2565,'int offset','int',0,450,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser',3513,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser.characters(char[],int,int)',0,'public void characters(char[] buf, int offset, int len) throws SAXException {\r\n    // len=0;\r\n    // for(int i=0;i+offset<buf.length && buf[i+offset]!=<;i++,len++);\r\n    String s = new String(buf, offset, len);\r\n    if ((typeChar) >= 0) {\r\n        if (GanttXMLOpen.IGNORABLE_WHITESPACE.matcher(s).matches()) {\r\n            return;\r\n        }\r\n        s = s.replaceAll(\"^\\n\\x20*\", \"\n\");\r\n        myCharacterBuffer.append(s);\r\n    }\r\n}'),(2566,'int len','int',0,450,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser',3513,'net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser.characters(char[],int,int)',0,'public void characters(char[] buf, int offset, int len) throws SAXException {\r\n    // len=0;\r\n    // for(int i=0;i+offset<buf.length && buf[i+offset]!=<;i++,len++);\r\n    String s = new String(buf, offset, len);\r\n    if ((typeChar) >= 0) {\r\n        if (GanttXMLOpen.IGNORABLE_WHITESPACE.matcher(s).matches()) {\r\n            return;\r\n        }\r\n        s = s.replaceAll(\"^\\n\\x20*\", \"\n\");\r\n        myCharacterBuffer.append(s);\r\n    }\r\n}'),(2567,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3518,'net.sourceforge.ganttproject.io.GanttXMLSaver.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttResourcePanel,net.sourceforge.ganttproject.GanttGraphicArea,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * The constructor\r\n */\r\npublic GanttXMLSaver(IGanttProject project, GanttTree2 tree, GanttResourcePanel peop, GanttGraphicArea area, UIFacade uiFacade) {\r\n    this.tree = tree;\r\n    this.area = area;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n}'),(2568,'GanttTree2 tree','net.sourceforge.ganttproject.GanttTree2',73,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3518,'net.sourceforge.ganttproject.io.GanttXMLSaver.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttResourcePanel,net.sourceforge.ganttproject.GanttGraphicArea,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * The constructor\r\n */\r\npublic GanttXMLSaver(IGanttProject project, GanttTree2 tree, GanttResourcePanel peop, GanttGraphicArea area, UIFacade uiFacade) {\r\n    this.tree = tree;\r\n    this.area = area;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n}'),(2569,'GanttResourcePanel peop','net.sourceforge.ganttproject.GanttResourcePanel',61,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3518,'net.sourceforge.ganttproject.io.GanttXMLSaver.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttResourcePanel,net.sourceforge.ganttproject.GanttGraphicArea,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * The constructor\r\n */\r\npublic GanttXMLSaver(IGanttProject project, GanttTree2 tree, GanttResourcePanel peop, GanttGraphicArea area, UIFacade uiFacade) {\r\n    this.tree = tree;\r\n    this.area = area;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n}'),(2570,'GanttGraphicArea area','net.sourceforge.ganttproject.GanttGraphicArea',45,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3518,'net.sourceforge.ganttproject.io.GanttXMLSaver.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttResourcePanel,net.sourceforge.ganttproject.GanttGraphicArea,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * The constructor\r\n */\r\npublic GanttXMLSaver(IGanttProject project, GanttTree2 tree, GanttResourcePanel peop, GanttGraphicArea area, UIFacade uiFacade) {\r\n    this.tree = tree;\r\n    this.area = area;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n}'),(2571,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3518,'net.sourceforge.ganttproject.io.GanttXMLSaver.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.GanttTree2,net.sourceforge.ganttproject.GanttResourcePanel,net.sourceforge.ganttproject.GanttGraphicArea,net.sourceforge.ganttproject.gui.UIFacade)',0,'/**\r\n * The constructor\r\n */\r\npublic GanttXMLSaver(IGanttProject project, GanttTree2 tree, GanttResourcePanel peop, GanttGraphicArea area, UIFacade uiFacade) {\r\n    this.tree = tree;\r\n    this.area = area;\r\n    myProject = project;\r\n    myUIFacade = uiFacade;\r\n}'),(2572,'OutputStream stream','java.io.OutputStream',0,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3521,'net.sourceforge.ganttproject.io.GanttXMLSaver.save(java.io.OutputStream)',0,'public void save(OutputStream stream) throws IOException {\r\n    try {\r\n        AttributesImpl attrs = new AttributesImpl();\r\n        StreamResult result = new StreamResult(stream);\r\n        SAXTransformerFactory factory = ((SAXTransformerFactory) (SAXTransformerFactory.newInstance()));\r\n        TransformerHandler handler = factory.newTransformerHandler();\r\n        Transformer serializer = handler.getTransformer();\r\n        serializer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\r\n        serializer.setOutputProperty(OutputKeys.INDENT, \"yes\");\r\n        serializer.setOutputProperty(OutputKeys.METHOD, \"xml\");\r\n        serializer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\r\n        handler.setResult(result);\r\n        handler.startDocument();\r\n        addAttribute(\"name\", getProject().getProjectName(), attrs);\r\n        addAttribute(\"company\", getProject().getOrganization(), attrs);\r\n        addAttribute(\"webLink\", getProject().getWebLink(), attrs);\r\n        addAttribute(\"view-date\", new GanttCalendar(area.getViewState().getStartDate()).toXMLString(), attrs);\r\n        addAttribute(\"view-index\", (\"\" + (myUIFacade.getViewIndex())), attrs);\r\n        // TODO for GP 2.0: move view configurations into <view> tag (see ViewSaver)\r\n        addAttribute(\"gantt-divider-location\", (\"\" + (myUIFacade.getGanttDividerLocation())), attrs);\r\n        addAttribute(\"resource-divider-location\", (\"\" + (myUIFacade.getResourceDividerLocation())), attrs);\r\n        addAttribute(\"version\", GanttXMLSaver.VERSION, attrs);\r\n        startElement(\"project\", attrs, handler);\r\n        // \r\n        cdataElement(\"description\", getProject().getDescription(), attrs, handler);\r\n        saveViews(handler);\r\n        emptyComment(handler);\r\n        saveCalendar(handler);\r\n        saveTasks(handler);\r\n        saveResources(handler);\r\n        saveAssignments(handler);\r\n        saveVacations(handler);\r\n        saveGanttChartView(handler);\r\n        saveHistory(handler);\r\n        saveRoles(handler);\r\n        endElement(\"project\", handler);\r\n        handler.endDocument();\r\n        stream.close();\r\n    } catch (Throwable e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n        IOException propagatedException = new IOException(\"Failed to save the project file\");\r\n        propagatedException.initCause(e);\r\n        throw propagatedException;\r\n    }\r\n}'),(2573,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3525,'net.sourceforge.ganttproject.io.GanttXMLSaver.saveHistory(javax.xml.transform.sax.TransformerHandler)',0,'private void saveHistory(TransformerHandler handler) throws IOException, ParserConfigurationException, SAXException {\r\n    List history = ((GanttProject) (myProject)).getPreviouStates();\r\n    new HistorySaver().save(history, handler);\r\n}'),(2574,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3524,'net.sourceforge.ganttproject.io.GanttXMLSaver.saveGanttChartView(javax.xml.transform.sax.TransformerHandler)',0,'private void saveGanttChartView(TransformerHandler handler) throws SAXException {\r\n    new GanttChartViewSaver().save(tree.getTreeTable(), handler);\r\n}'),(2575,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3529,'net.sourceforge.ganttproject.io.GanttXMLSaver.saveVacations(javax.xml.transform.sax.TransformerHandler)',0,'private void saveVacations(TransformerHandler handler) throws SAXException {\r\n    new VacationSaver().save(getProject(), handler);\r\n}'),(2576,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3526,'net.sourceforge.ganttproject.io.GanttXMLSaver.saveResources(javax.xml.transform.sax.TransformerHandler)',0,'private void saveResources(TransformerHandler handler) throws SAXException {\r\n    new ResourceSaver().save(getProject(), handler);\r\n}'),(2577,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3530,'net.sourceforge.ganttproject.io.GanttXMLSaver.saveViews(javax.xml.transform.sax.TransformerHandler)',0,'private void saveViews(TransformerHandler handler) throws SAXException {\r\n    new ViewSaver().save(getUIFacade(), handler);\r\n}'),(2578,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3523,'net.sourceforge.ganttproject.io.GanttXMLSaver.saveCalendar(javax.xml.transform.sax.TransformerHandler)',0,'private void saveCalendar(TransformerHandler handler) throws SAXException {\r\n    new CalendarSaver().save(getProject(), handler);\r\n}'),(2579,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3528,'net.sourceforge.ganttproject.io.GanttXMLSaver.saveTasks(javax.xml.transform.sax.TransformerHandler)',0,'private void saveTasks(TransformerHandler handler) throws IOException, SAXException {\r\n    new TaskSaver().save(getProject(), handler, area.getTaskColor());\r\n}'),(2580,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3522,'net.sourceforge.ganttproject.io.GanttXMLSaver.saveAssignments(javax.xml.transform.sax.TransformerHandler)',0,'private void saveAssignments(TransformerHandler handler) throws SAXException {\r\n    new AssignmentSaver().save(getProject(), handler);\r\n}'),(2581,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,452,'net.sourceforge.ganttproject.io.GanttXMLSaver',3527,'net.sourceforge.ganttproject.io.GanttXMLSaver.saveRoles(javax.xml.transform.sax.TransformerHandler)',0,'private void saveRoles(TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    RoleManager roleManager = getProject().getRoleManager();\r\n    RoleSet[] roleSets = roleManager.getRoleSets();\r\n    for (int i = 0; i < (roleSets.length); i++) {\r\n        RoleSet next = roleSets[i];\r\n        if (next.isEnabled()) {\r\n            addAttribute(\"roleset-name\", next.getName(), attrs);\r\n            emptyElement(\"roles\", attrs, handler);\r\n        }\r\n    }\r\n    // \r\n    RoleSet projectRoleSet = roleManager.getProjectRoleSet();\r\n    if (!(projectRoleSet.isEmpty())) {\r\n        startElement(\"roles\", attrs, handler);\r\n        Role[] projectRoles = projectRoleSet.getRoles();\r\n        for (int i = 0; i < (projectRoles.length); i++) {\r\n            Role next = projectRoles[i];\r\n            addAttribute(\"id\", next.getPersistentID(), attrs);\r\n            addAttribute(\"name\", next.getName(), attrs);\r\n            emptyElement(\"role\", attrs, handler);\r\n        }\r\n        endElement(\"roles\", handler);\r\n    }\r\n}'),(2582,'List history','java.util.List',0,453,'net.sourceforge.ganttproject.io.HistorySaver',3532,'net.sourceforge.ganttproject.io.HistorySaver.save(java.util.List,javax.xml.transform.sax.TransformerHandler)',0,'void save(List history, /* <GanttPreviousState */\r\nTransformerHandler handler) throws IOException, ParserConfigurationException, SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"previous\", handler);\r\n    for (int i = 0; i < (history.size()); i++) {\r\n        final GanttPreviousState nextState = ((GanttPreviousState) (history.get(i)));\r\n        /* <GanttPreviousStateTask> */\r\n        final List stateTasks = nextState.load();\r\n        addAttribute(\"name\", nextState.getName(), attrs);\r\n        startElement(\"previous-tasks\", attrs, handler);\r\n        // ArrayList list =\r\n        // ((GanttPreviousState)previous.get(i)).getTasks();\r\n        for (int j = 0; j < (stateTasks.size()); j++) {\r\n            GanttPreviousStateTask task = ((GanttPreviousStateTask) (stateTasks.get(j)));\r\n            addAttribute(\"id\", String.valueOf(task.getId()), attrs);\r\n            addAttribute(\"start\", task.getStart().toXMLString(), attrs);\r\n            addAttribute(\"duration\", String.valueOf(task.getDuration()), attrs);\r\n            addAttribute(\"meeting\", String.valueOf(task.isMilestone()), attrs);\r\n            addAttribute(\"super\", String.valueOf(task.hasNested()), attrs);\r\n            emptyElement(\"previous-task\", attrs, handler);\r\n        }\r\n        endElement(\"previous-tasks\", handler);\r\n    }\r\n    endElement(\"previous\", handler);\r\n}'),(2583,'/* <GanttPreviousState */\r\nTransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,453,'net.sourceforge.ganttproject.io.HistorySaver',3532,'net.sourceforge.ganttproject.io.HistorySaver.save(java.util.List,javax.xml.transform.sax.TransformerHandler)',0,'void save(List history, /* <GanttPreviousState */\r\nTransformerHandler handler) throws IOException, ParserConfigurationException, SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"previous\", handler);\r\n    for (int i = 0; i < (history.size()); i++) {\r\n        final GanttPreviousState nextState = ((GanttPreviousState) (history.get(i)));\r\n        /* <GanttPreviousStateTask> */\r\n        final List stateTasks = nextState.load();\r\n        addAttribute(\"name\", nextState.getName(), attrs);\r\n        startElement(\"previous-tasks\", attrs, handler);\r\n        // ArrayList list =\r\n        // ((GanttPreviousState)previous.get(i)).getTasks();\r\n        for (int j = 0; j < (stateTasks.size()); j++) {\r\n            GanttPreviousStateTask task = ((GanttPreviousStateTask) (stateTasks.get(j)));\r\n            addAttribute(\"id\", String.valueOf(task.getId()), attrs);\r\n            addAttribute(\"start\", task.getStart().toXMLString(), attrs);\r\n            addAttribute(\"duration\", String.valueOf(task.getDuration()), attrs);\r\n            addAttribute(\"meeting\", String.valueOf(task.isMilestone()), attrs);\r\n            addAttribute(\"super\", String.valueOf(task.hasNested()), attrs);\r\n            emptyElement(\"previous-task\", attrs, handler);\r\n        }\r\n        endElement(\"previous-tasks\", handler);\r\n    }\r\n    endElement(\"previous\", handler);\r\n}'),(2584,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,454,'net.sourceforge.ganttproject.io.ResourceSaver',3534,'net.sourceforge.ganttproject.io.ResourceSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler)',0,'void save(IGanttProject project, TransformerHandler handler) throws SAXException {\r\n    final AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"resources\", handler);\r\n    saveCustomColumnDefinitions(project, handler);\r\n    ProjectResource[] resources = project.getHumanResourceManager().getResourcesArray();\r\n    for (int i = 0; i < (resources.length); i++) {\r\n        HumanResource p = ((HumanResource) (resources[i]));\r\n        addAttribute(\"id\", String.valueOf(p.getId()), attrs);\r\n        addAttribute(\"name\", p.getName(), attrs);\r\n        addAttribute(\"function\", p.getRole().getPersistentID(), attrs);\r\n        addAttribute(\"contacts\", p.getMail(), attrs);\r\n        addAttribute(\"phone\", p.getPhone(), attrs);\r\n        startElement(\"resource\", attrs, handler);\r\n        {\r\n            saveCustomProperties(project, p, handler);\r\n        }\r\n        endElement(\"resource\", handler);\r\n    }\r\n    endElement(\"resources\", handler);\r\n}'),(2585,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,454,'net.sourceforge.ganttproject.io.ResourceSaver',3534,'net.sourceforge.ganttproject.io.ResourceSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler)',0,'void save(IGanttProject project, TransformerHandler handler) throws SAXException {\r\n    final AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"resources\", handler);\r\n    saveCustomColumnDefinitions(project, handler);\r\n    ProjectResource[] resources = project.getHumanResourceManager().getResourcesArray();\r\n    for (int i = 0; i < (resources.length); i++) {\r\n        HumanResource p = ((HumanResource) (resources[i]));\r\n        addAttribute(\"id\", String.valueOf(p.getId()), attrs);\r\n        addAttribute(\"name\", p.getName(), attrs);\r\n        addAttribute(\"function\", p.getRole().getPersistentID(), attrs);\r\n        addAttribute(\"contacts\", p.getMail(), attrs);\r\n        addAttribute(\"phone\", p.getPhone(), attrs);\r\n        startElement(\"resource\", attrs, handler);\r\n        {\r\n            saveCustomProperties(project, p, handler);\r\n        }\r\n        endElement(\"resource\", handler);\r\n    }\r\n    endElement(\"resources\", handler);\r\n}'),(2586,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,454,'net.sourceforge.ganttproject.io.ResourceSaver',3536,'net.sourceforge.ganttproject.io.ResourceSaver.saveCustomProperties(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.resource.HumanResource,javax.xml.transform.sax.TransformerHandler)',0,'private void saveCustomProperties(IGanttProject project, HumanResource resource, TransformerHandler handler) throws SAXException {\r\n    // CustomPropertyManager customPropsManager = project.getHumanResourceManager().getCustomPropertyManager();\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    List properties = resource.getCustomProperties();\r\n    for (int i = 0; i < (properties.size()); i++) {\r\n        CustomProperty nextProperty = ((CustomProperty) (properties.get(i)));\r\n        CustomPropertyDefinition nextDefinition = nextProperty.getDefinition();\r\n        if (((nextProperty.getValue()) != null) && (!(nextProperty.getValue().equals(nextDefinition.getDefaultValue())))) {\r\n            addAttribute(\"definition-id\", nextDefinition.getID(), attrs);\r\n            addAttribute(\"value\", nextProperty.getValueAsString(), attrs);\r\n            emptyElement(\"custom-property\", attrs, handler);\r\n        }\r\n    }\r\n}'),(2587,'HumanResource resource','net.sourceforge.ganttproject.resource.HumanResource',499,454,'net.sourceforge.ganttproject.io.ResourceSaver',3536,'net.sourceforge.ganttproject.io.ResourceSaver.saveCustomProperties(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.resource.HumanResource,javax.xml.transform.sax.TransformerHandler)',0,'private void saveCustomProperties(IGanttProject project, HumanResource resource, TransformerHandler handler) throws SAXException {\r\n    // CustomPropertyManager customPropsManager = project.getHumanResourceManager().getCustomPropertyManager();\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    List properties = resource.getCustomProperties();\r\n    for (int i = 0; i < (properties.size()); i++) {\r\n        CustomProperty nextProperty = ((CustomProperty) (properties.get(i)));\r\n        CustomPropertyDefinition nextDefinition = nextProperty.getDefinition();\r\n        if (((nextProperty.getValue()) != null) && (!(nextProperty.getValue().equals(nextDefinition.getDefaultValue())))) {\r\n            addAttribute(\"definition-id\", nextDefinition.getID(), attrs);\r\n            addAttribute(\"value\", nextProperty.getValueAsString(), attrs);\r\n            emptyElement(\"custom-property\", attrs, handler);\r\n        }\r\n    }\r\n}'),(2588,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,454,'net.sourceforge.ganttproject.io.ResourceSaver',3536,'net.sourceforge.ganttproject.io.ResourceSaver.saveCustomProperties(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.resource.HumanResource,javax.xml.transform.sax.TransformerHandler)',0,'private void saveCustomProperties(IGanttProject project, HumanResource resource, TransformerHandler handler) throws SAXException {\r\n    // CustomPropertyManager customPropsManager = project.getHumanResourceManager().getCustomPropertyManager();\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    List properties = resource.getCustomProperties();\r\n    for (int i = 0; i < (properties.size()); i++) {\r\n        CustomProperty nextProperty = ((CustomProperty) (properties.get(i)));\r\n        CustomPropertyDefinition nextDefinition = nextProperty.getDefinition();\r\n        if (((nextProperty.getValue()) != null) && (!(nextProperty.getValue().equals(nextDefinition.getDefaultValue())))) {\r\n            addAttribute(\"definition-id\", nextDefinition.getID(), attrs);\r\n            addAttribute(\"value\", nextProperty.getValueAsString(), attrs);\r\n            emptyElement(\"custom-property\", attrs, handler);\r\n        }\r\n    }\r\n}'),(2589,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,454,'net.sourceforge.ganttproject.io.ResourceSaver',3535,'net.sourceforge.ganttproject.io.ResourceSaver.saveCustomColumnDefinitions(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler)',0,'private void saveCustomColumnDefinitions(IGanttProject project, TransformerHandler handler) throws SAXException {\r\n    CustomPropertyManager customPropsManager = project.getHumanResourceManager().getCustomPropertyManager();\r\n    /* <CustomPropertyDefinition> */\r\n    List definitions = customPropsManager.getDefinitions();\r\n    // HumanResourceManager hrManager = (HumanResourceManager) project.getHumanResourceManager();\r\n    // Map customFields = hrManager.getCustomFields();\r\n    // if (customFields.size()==0) {\r\n    // return;\r\n    // }\r\n    final AttributesImpl attrs = new AttributesImpl();\r\n    // startElement(\"custom-properties-definition\", handler);\r\n    for (int i = 0; i < (definitions.size()); i++) {\r\n        // ResourceColumn nextField = (ResourceColumn) fields.next();\r\n        CustomPropertyDefinition nextDefinition = ((CustomPropertyDefinition) (definitions.get(i)));\r\n        addAttribute(\"id\", nextDefinition.getID(), attrs);\r\n        addAttribute(\"name\", nextDefinition.getName(), attrs);\r\n        addAttribute(\"type\", nextDefinition.getTypeAsString(), attrs);\r\n        addAttribute(\"default-value\", nextDefinition.getDefaultValueAsString(), attrs);\r\n        emptyElement(\"custom-property-definition\", attrs, handler);\r\n    }\r\n    // endElement(\"custom-properties-definition\", handler);\r\n}'),(2590,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,454,'net.sourceforge.ganttproject.io.ResourceSaver',3535,'net.sourceforge.ganttproject.io.ResourceSaver.saveCustomColumnDefinitions(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler)',0,'private void saveCustomColumnDefinitions(IGanttProject project, TransformerHandler handler) throws SAXException {\r\n    CustomPropertyManager customPropsManager = project.getHumanResourceManager().getCustomPropertyManager();\r\n    /* <CustomPropertyDefinition> */\r\n    List definitions = customPropsManager.getDefinitions();\r\n    // HumanResourceManager hrManager = (HumanResourceManager) project.getHumanResourceManager();\r\n    // Map customFields = hrManager.getCustomFields();\r\n    // if (customFields.size()==0) {\r\n    // return;\r\n    // }\r\n    final AttributesImpl attrs = new AttributesImpl();\r\n    // startElement(\"custom-properties-definition\", handler);\r\n    for (int i = 0; i < (definitions.size()); i++) {\r\n        // ResourceColumn nextField = (ResourceColumn) fields.next();\r\n        CustomPropertyDefinition nextDefinition = ((CustomPropertyDefinition) (definitions.get(i)));\r\n        addAttribute(\"id\", nextDefinition.getID(), attrs);\r\n        addAttribute(\"name\", nextDefinition.getName(), attrs);\r\n        addAttribute(\"type\", nextDefinition.getTypeAsString(), attrs);\r\n        addAttribute(\"default-value\", nextDefinition.getDefaultValueAsString(), attrs);\r\n        emptyElement(\"custom-property-definition\", attrs, handler);\r\n    }\r\n    // endElement(\"custom-properties-definition\", handler);\r\n}'),(2591,'String name','java.lang.String',0,455,'net.sourceforge.ganttproject.io.SaverBase',3544,'net.sourceforge.ganttproject.io.SaverBase.startElement(java.lang.String,javax.xml.transform.sax.TransformerHandler)',0,'protected void startElement(String name, TransformerHandler handler) throws SAXException {\r\n    startElement(name, SaverBase.ourEmptyAttributes, handler);\r\n}'),(2592,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,455,'net.sourceforge.ganttproject.io.SaverBase',3544,'net.sourceforge.ganttproject.io.SaverBase.startElement(java.lang.String,javax.xml.transform.sax.TransformerHandler)',0,'protected void startElement(String name, TransformerHandler handler) throws SAXException {\r\n    startElement(name, SaverBase.ourEmptyAttributes, handler);\r\n}'),(2593,'String name','java.lang.String',0,455,'net.sourceforge.ganttproject.io.SaverBase',3545,'net.sourceforge.ganttproject.io.SaverBase.startElement(java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'protected void startElement(String name, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    handler.startElement(\"\", name, name, attrs);\r\n    attrs.clear();\r\n}'),(2594,'AttributesImpl attrs','org.xml.sax.helpers.AttributesImpl',0,455,'net.sourceforge.ganttproject.io.SaverBase',3545,'net.sourceforge.ganttproject.io.SaverBase.startElement(java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'protected void startElement(String name, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    handler.startElement(\"\", name, name, attrs);\r\n    attrs.clear();\r\n}'),(2595,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,455,'net.sourceforge.ganttproject.io.SaverBase',3545,'net.sourceforge.ganttproject.io.SaverBase.startElement(java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'protected void startElement(String name, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    handler.startElement(\"\", name, name, attrs);\r\n    attrs.clear();\r\n}'),(2596,'String name','java.lang.String',0,455,'net.sourceforge.ganttproject.io.SaverBase',3543,'net.sourceforge.ganttproject.io.SaverBase.endElement(java.lang.String,javax.xml.transform.sax.TransformerHandler)',0,'protected void endElement(String name, TransformerHandler handler) throws SAXException {\r\n    handler.endElement(\"\", name, name);\r\n}'),(2597,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,455,'net.sourceforge.ganttproject.io.SaverBase',3543,'net.sourceforge.ganttproject.io.SaverBase.endElement(java.lang.String,javax.xml.transform.sax.TransformerHandler)',0,'protected void endElement(String name, TransformerHandler handler) throws SAXException {\r\n    handler.endElement(\"\", name, name);\r\n}'),(2598,'String name','java.lang.String',0,455,'net.sourceforge.ganttproject.io.SaverBase',3539,'net.sourceforge.ganttproject.io.SaverBase.addAttribute(java.lang.String,java.lang.String,org.xml.sax.helpers.AttributesImpl)',0,'protected void addAttribute(String name, String value, AttributesImpl attrs) {\r\n    if (value != null) {\r\n        attrs.addAttribute(\"\", name, name, \"CDATA\", value);\r\n    }\r\n}'),(2599,'String value','java.lang.String',0,455,'net.sourceforge.ganttproject.io.SaverBase',3539,'net.sourceforge.ganttproject.io.SaverBase.addAttribute(java.lang.String,java.lang.String,org.xml.sax.helpers.AttributesImpl)',0,'protected void addAttribute(String name, String value, AttributesImpl attrs) {\r\n    if (value != null) {\r\n        attrs.addAttribute(\"\", name, name, \"CDATA\", value);\r\n    }\r\n}'),(2600,'AttributesImpl attrs','org.xml.sax.helpers.AttributesImpl',0,455,'net.sourceforge.ganttproject.io.SaverBase',3539,'net.sourceforge.ganttproject.io.SaverBase.addAttribute(java.lang.String,java.lang.String,org.xml.sax.helpers.AttributesImpl)',0,'protected void addAttribute(String name, String value, AttributesImpl attrs) {\r\n    if (value != null) {\r\n        attrs.addAttribute(\"\", name, name, \"CDATA\", value);\r\n    }\r\n}'),(2601,'String name','java.lang.String',0,455,'net.sourceforge.ganttproject.io.SaverBase',3538,'net.sourceforge.ganttproject.io.SaverBase.addAttribute(java.lang.String,int,org.xml.sax.helpers.AttributesImpl)',0,'protected void addAttribute(String name, int value, AttributesImpl attrs) {\r\n    addAttribute(name, String.valueOf(value), attrs);\r\n}'),(2602,'int value','int',0,455,'net.sourceforge.ganttproject.io.SaverBase',3538,'net.sourceforge.ganttproject.io.SaverBase.addAttribute(java.lang.String,int,org.xml.sax.helpers.AttributesImpl)',0,'protected void addAttribute(String name, int value, AttributesImpl attrs) {\r\n    addAttribute(name, String.valueOf(value), attrs);\r\n}'),(2603,'AttributesImpl attrs','org.xml.sax.helpers.AttributesImpl',0,455,'net.sourceforge.ganttproject.io.SaverBase',3538,'net.sourceforge.ganttproject.io.SaverBase.addAttribute(java.lang.String,int,org.xml.sax.helpers.AttributesImpl)',0,'protected void addAttribute(String name, int value, AttributesImpl attrs) {\r\n    addAttribute(name, String.valueOf(value), attrs);\r\n}'),(2604,'String name','java.lang.String',0,455,'net.sourceforge.ganttproject.io.SaverBase',3542,'net.sourceforge.ganttproject.io.SaverBase.emptyElement(java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'protected void emptyElement(String name, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    startElement(name, attrs, handler);\r\n    endElement(name, handler);\r\n    attrs.clear();\r\n}'),(2605,'AttributesImpl attrs','org.xml.sax.helpers.AttributesImpl',0,455,'net.sourceforge.ganttproject.io.SaverBase',3542,'net.sourceforge.ganttproject.io.SaverBase.emptyElement(java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'protected void emptyElement(String name, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    startElement(name, attrs, handler);\r\n    endElement(name, handler);\r\n    attrs.clear();\r\n}'),(2606,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,455,'net.sourceforge.ganttproject.io.SaverBase',3542,'net.sourceforge.ganttproject.io.SaverBase.emptyElement(java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'protected void emptyElement(String name, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    startElement(name, attrs, handler);\r\n    endElement(name, handler);\r\n    attrs.clear();\r\n}'),(2607,'String name','java.lang.String',0,455,'net.sourceforge.ganttproject.io.SaverBase',3540,'net.sourceforge.ganttproject.io.SaverBase.cdataElement(java.lang.String,java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'protected void cdataElement(String name, String cdata, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    startElement(name, handler);\r\n    handler.startCDATA();\r\n    handler.characters(cdata.toCharArray(), 0, cdata.length());\r\n    handler.endCDATA();\r\n    endElement(name, handler);\r\n}'),(2608,'String cdata','java.lang.String',0,455,'net.sourceforge.ganttproject.io.SaverBase',3540,'net.sourceforge.ganttproject.io.SaverBase.cdataElement(java.lang.String,java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'protected void cdataElement(String name, String cdata, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    startElement(name, handler);\r\n    handler.startCDATA();\r\n    handler.characters(cdata.toCharArray(), 0, cdata.length());\r\n    handler.endCDATA();\r\n    endElement(name, handler);\r\n}'),(2609,'AttributesImpl attrs','org.xml.sax.helpers.AttributesImpl',0,455,'net.sourceforge.ganttproject.io.SaverBase',3540,'net.sourceforge.ganttproject.io.SaverBase.cdataElement(java.lang.String,java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'protected void cdataElement(String name, String cdata, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    startElement(name, handler);\r\n    handler.startCDATA();\r\n    handler.characters(cdata.toCharArray(), 0, cdata.length());\r\n    handler.endCDATA();\r\n    endElement(name, handler);\r\n}'),(2610,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,455,'net.sourceforge.ganttproject.io.SaverBase',3540,'net.sourceforge.ganttproject.io.SaverBase.cdataElement(java.lang.String,java.lang.String,org.xml.sax.helpers.AttributesImpl,javax.xml.transform.sax.TransformerHandler)',0,'protected void cdataElement(String name, String cdata, AttributesImpl attrs, TransformerHandler handler) throws SAXException {\r\n    startElement(name, handler);\r\n    handler.startCDATA();\r\n    handler.characters(cdata.toCharArray(), 0, cdata.length());\r\n    handler.endCDATA();\r\n    endElement(name, handler);\r\n}'),(2611,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,455,'net.sourceforge.ganttproject.io.SaverBase',3541,'net.sourceforge.ganttproject.io.SaverBase.emptyComment(javax.xml.transform.sax.TransformerHandler)',0,'protected void emptyComment(TransformerHandler handler) throws SAXException {\r\n    handler.comment(new char[]{   }, 0, 1);\r\n}'),(2612,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,456,'net.sourceforge.ganttproject.io.TaskSaver',3548,'net.sourceforge.ganttproject.io.TaskSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler,java.awt.Color)',0,'void save(IGanttProject project, TransformerHandler handler, Color defaultColor) throws IOException, SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    if (defaultColor != null) {\r\n        addAttribute(\"color\", ColorConvertion.getColor(defaultColor), attrs);\r\n    }\r\n    startElement(\"tasks\", attrs, handler);\r\n    startElement(\"taskproperties\", handler);\r\n    writeTaskProperties(handler, project.getCustomColumnsStorage());\r\n    endElement(\"taskproperties\", handler);\r\n    Task rootTask = project.getTaskManager().getTaskHierarchy().getRootTask();\r\n    Task[] tasks = project.getTaskManager().getTaskHierarchy().getNestedTasks(rootTask);\r\n    for (int i = 0; i < (tasks.length); i++) {\r\n        writeTask(handler, ((GanttTask) (tasks[i])), project.getCustomColumnsStorage());\r\n    }\r\n    endElement(\"tasks\", handler);\r\n}'),(2613,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3548,'net.sourceforge.ganttproject.io.TaskSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler,java.awt.Color)',0,'void save(IGanttProject project, TransformerHandler handler, Color defaultColor) throws IOException, SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    if (defaultColor != null) {\r\n        addAttribute(\"color\", ColorConvertion.getColor(defaultColor), attrs);\r\n    }\r\n    startElement(\"tasks\", attrs, handler);\r\n    startElement(\"taskproperties\", handler);\r\n    writeTaskProperties(handler, project.getCustomColumnsStorage());\r\n    endElement(\"taskproperties\", handler);\r\n    Task rootTask = project.getTaskManager().getTaskHierarchy().getRootTask();\r\n    Task[] tasks = project.getTaskManager().getTaskHierarchy().getNestedTasks(rootTask);\r\n    for (int i = 0; i < (tasks.length); i++) {\r\n        writeTask(handler, ((GanttTask) (tasks[i])), project.getCustomColumnsStorage());\r\n    }\r\n    endElement(\"tasks\", handler);\r\n}'),(2614,'Color defaultColor','java.awt.Color',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3548,'net.sourceforge.ganttproject.io.TaskSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler,java.awt.Color)',0,'void save(IGanttProject project, TransformerHandler handler, Color defaultColor) throws IOException, SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    if (defaultColor != null) {\r\n        addAttribute(\"color\", ColorConvertion.getColor(defaultColor), attrs);\r\n    }\r\n    startElement(\"tasks\", attrs, handler);\r\n    startElement(\"taskproperties\", handler);\r\n    writeTaskProperties(handler, project.getCustomColumnsStorage());\r\n    endElement(\"taskproperties\", handler);\r\n    Task rootTask = project.getTaskManager().getTaskHierarchy().getRootTask();\r\n    Task[] tasks = project.getTaskManager().getTaskHierarchy().getNestedTasks(rootTask);\r\n    for (int i = 0; i < (tasks.length); i++) {\r\n        writeTask(handler, ((GanttTask) (tasks[i])), project.getCustomColumnsStorage());\r\n    }\r\n    endElement(\"tasks\", handler);\r\n}'),(2615,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3549,'net.sourceforge.ganttproject.io.TaskSaver.writeTask(javax.xml.transform.sax.TransformerHandler,net.sourceforge.ganttproject.GanttTask,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'private void writeTask(TransformerHandler handler, GanttTask task, CustomColumnsStorage customColumns) throws IOException, SAXException {\r\n    if ((task.getTaskID()) == (-1)) {\r\n        throw new IllegalArgumentException((\"Is it a fake root task? Task=\" + task));\r\n    }\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"id\", String.valueOf(task.getTaskID()), attrs);\r\n    addAttribute(\"name\", task.getName(), attrs);\r\n    if (task.colorDefined()) {\r\n        addAttribute(\"color\", ColorConvertion.getColor(task.getColor()), attrs);\r\n    }\r\n    if (task.shapeDefined()) {\r\n        addAttribute(\"shape\", task.getShape().getArray(), attrs);\r\n    }\r\n    addAttribute(\"meeting\", Boolean.valueOf(task.isMilestone()).toString(), attrs);\r\n    if (task.isProjectTask()) {\r\n        addAttribute(\"project\", Boolean.TRUE.toString(), attrs);\r\n    }\r\n    addAttribute(\"start\", task.getStart().toXMLString(), attrs);\r\n    addAttribute(\"duration\", String.valueOf(task.getLength()), attrs);\r\n    addAttribute(\"complete\", String.valueOf(task.getCompletionPercentage()), attrs);\r\n    if ((task.getThird()) != null) {\r\n        addAttribute(\"thirdDate\", task.getThird().toXMLString(), attrs);\r\n        addAttribute(\"thirdDate-constraint\", String.valueOf(task.getThirdDateConstraint()), attrs);\r\n    }\r\n    addAttribute(\"priority\", String.valueOf(task.getPriority()), attrs);\r\n    final String sWebLink = task.getWebLink();\r\n    if (((sWebLink != null) && (!(sWebLink.equals(\"\")))) && (!(sWebLink.equals(\"http://\")))) {\r\n        addAttribute(\"webLink\", URLEncoder.encode(sWebLink, \"ISO-8859-1\"), attrs);\r\n    }\r\n    addAttribute(\"expand\", String.valueOf(task.getExpand()), attrs);\r\n    startElement(\"task\", attrs, handler);\r\n    if (((task.getNotes()) != null) && ((task.getNotes().length()) > 0)) {\r\n        cdataElement(\"notes\", task.getNotes(), attrs, handler);\r\n        // fout.write(space2 + \"<notes>\");\r\n        // fout.write(\"\n\"\r\n        // + space2\r\n        // + s\r\n        // + correct(replaceAll(task.getNotes(), \"\n\", \"\n\"\r\n        // + space2 + s)));\r\n        // fout.write(\"\n\" + space2 + \"</notes>\n\");\r\n    }\r\n    // use successors to write depends information\r\n    final TaskDependency[] depsAsDependee = task.getDependenciesAsDependee().toArray();\r\n    for (int i = 0; i < (depsAsDependee.length); i++) {\r\n        TaskDependency next = depsAsDependee[i];\r\n        addAttribute(\"id\", String.valueOf(next.getDependant().getTaskID()), attrs);\r\n        addAttribute(\"type\", String.valueOf(next.getConstraint().getID()), attrs);\r\n        addAttribute(\"difference\", String.valueOf(next.getDifference()), attrs);\r\n        addAttribute(\"hardness\", next.getHardness().getIdentifier(), attrs);\r\n        emptyElement(\"depend\", attrs, handler);\r\n    }\r\n    CustomColumnsValues ccv = task.getCustomValues();\r\n    for (/* <CustomColumn> */\r\n    Iterator it = customColumns.getCustomColums().iterator(); it.hasNext();) {\r\n        CustomColumn nextColumn = ((CustomColumn) (it.next()));\r\n        final String name = nextColumn.getName();\r\n        final String idc = nextColumn.getId();\r\n        Object value = ccv.getValue(name);\r\n        if ((GregorianCalendar.class.isAssignableFrom(nextColumn.getType())) && (value != null)) {\r\n            value = DateParser.getIsoDate(((GanttCalendar) (value)).getTime());\r\n        }\r\n        addAttribute(\"taskproperty-id\", idc, attrs);\r\n        addAttribute(\"value\", (value == null ? null : String.valueOf(value)), attrs);\r\n        emptyElement(\"customproperty\", attrs, handler);\r\n    }\r\n    // Write the child of the task\r\n    if (task.getManager().getTaskHierarchy().hasNestedTasks(task)) {\r\n        Task[] nestedTasks = task.getManager().getTaskHierarchy().getNestedTasks(task);\r\n        for (int i = 0; i < (nestedTasks.length); i++) {\r\n            writeTask(handler, ((GanttTask) (nestedTasks[i])), customColumns);\r\n        }\r\n    }\r\n    // end of task section\r\n    endElement(\"task\", handler);\r\n}'),(2616,'GanttTask task','net.sourceforge.ganttproject.GanttTask',63,456,'net.sourceforge.ganttproject.io.TaskSaver',3549,'net.sourceforge.ganttproject.io.TaskSaver.writeTask(javax.xml.transform.sax.TransformerHandler,net.sourceforge.ganttproject.GanttTask,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'private void writeTask(TransformerHandler handler, GanttTask task, CustomColumnsStorage customColumns) throws IOException, SAXException {\r\n    if ((task.getTaskID()) == (-1)) {\r\n        throw new IllegalArgumentException((\"Is it a fake root task? Task=\" + task));\r\n    }\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"id\", String.valueOf(task.getTaskID()), attrs);\r\n    addAttribute(\"name\", task.getName(), attrs);\r\n    if (task.colorDefined()) {\r\n        addAttribute(\"color\", ColorConvertion.getColor(task.getColor()), attrs);\r\n    }\r\n    if (task.shapeDefined()) {\r\n        addAttribute(\"shape\", task.getShape().getArray(), attrs);\r\n    }\r\n    addAttribute(\"meeting\", Boolean.valueOf(task.isMilestone()).toString(), attrs);\r\n    if (task.isProjectTask()) {\r\n        addAttribute(\"project\", Boolean.TRUE.toString(), attrs);\r\n    }\r\n    addAttribute(\"start\", task.getStart().toXMLString(), attrs);\r\n    addAttribute(\"duration\", String.valueOf(task.getLength()), attrs);\r\n    addAttribute(\"complete\", String.valueOf(task.getCompletionPercentage()), attrs);\r\n    if ((task.getThird()) != null) {\r\n        addAttribute(\"thirdDate\", task.getThird().toXMLString(), attrs);\r\n        addAttribute(\"thirdDate-constraint\", String.valueOf(task.getThirdDateConstraint()), attrs);\r\n    }\r\n    addAttribute(\"priority\", String.valueOf(task.getPriority()), attrs);\r\n    final String sWebLink = task.getWebLink();\r\n    if (((sWebLink != null) && (!(sWebLink.equals(\"\")))) && (!(sWebLink.equals(\"http://\")))) {\r\n        addAttribute(\"webLink\", URLEncoder.encode(sWebLink, \"ISO-8859-1\"), attrs);\r\n    }\r\n    addAttribute(\"expand\", String.valueOf(task.getExpand()), attrs);\r\n    startElement(\"task\", attrs, handler);\r\n    if (((task.getNotes()) != null) && ((task.getNotes().length()) > 0)) {\r\n        cdataElement(\"notes\", task.getNotes(), attrs, handler);\r\n        // fout.write(space2 + \"<notes>\");\r\n        // fout.write(\"\n\"\r\n        // + space2\r\n        // + s\r\n        // + correct(replaceAll(task.getNotes(), \"\n\", \"\n\"\r\n        // + space2 + s)));\r\n        // fout.write(\"\n\" + space2 + \"</notes>\n\");\r\n    }\r\n    // use successors to write depends information\r\n    final TaskDependency[] depsAsDependee = task.getDependenciesAsDependee().toArray();\r\n    for (int i = 0; i < (depsAsDependee.length); i++) {\r\n        TaskDependency next = depsAsDependee[i];\r\n        addAttribute(\"id\", String.valueOf(next.getDependant().getTaskID()), attrs);\r\n        addAttribute(\"type\", String.valueOf(next.getConstraint().getID()), attrs);\r\n        addAttribute(\"difference\", String.valueOf(next.getDifference()), attrs);\r\n        addAttribute(\"hardness\", next.getHardness().getIdentifier(), attrs);\r\n        emptyElement(\"depend\", attrs, handler);\r\n    }\r\n    CustomColumnsValues ccv = task.getCustomValues();\r\n    for (/* <CustomColumn> */\r\n    Iterator it = customColumns.getCustomColums().iterator(); it.hasNext();) {\r\n        CustomColumn nextColumn = ((CustomColumn) (it.next()));\r\n        final String name = nextColumn.getName();\r\n        final String idc = nextColumn.getId();\r\n        Object value = ccv.getValue(name);\r\n        if ((GregorianCalendar.class.isAssignableFrom(nextColumn.getType())) && (value != null)) {\r\n            value = DateParser.getIsoDate(((GanttCalendar) (value)).getTime());\r\n        }\r\n        addAttribute(\"taskproperty-id\", idc, attrs);\r\n        addAttribute(\"value\", (value == null ? null : String.valueOf(value)), attrs);\r\n        emptyElement(\"customproperty\", attrs, handler);\r\n    }\r\n    // Write the child of the task\r\n    if (task.getManager().getTaskHierarchy().hasNestedTasks(task)) {\r\n        Task[] nestedTasks = task.getManager().getTaskHierarchy().getNestedTasks(task);\r\n        for (int i = 0; i < (nestedTasks.length); i++) {\r\n            writeTask(handler, ((GanttTask) (nestedTasks[i])), customColumns);\r\n        }\r\n    }\r\n    // end of task section\r\n    endElement(\"task\", handler);\r\n}'),(2617,'CustomColumnsStorage customColumns','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,456,'net.sourceforge.ganttproject.io.TaskSaver',3549,'net.sourceforge.ganttproject.io.TaskSaver.writeTask(javax.xml.transform.sax.TransformerHandler,net.sourceforge.ganttproject.GanttTask,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'private void writeTask(TransformerHandler handler, GanttTask task, CustomColumnsStorage customColumns) throws IOException, SAXException {\r\n    if ((task.getTaskID()) == (-1)) {\r\n        throw new IllegalArgumentException((\"Is it a fake root task? Task=\" + task));\r\n    }\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"id\", String.valueOf(task.getTaskID()), attrs);\r\n    addAttribute(\"name\", task.getName(), attrs);\r\n    if (task.colorDefined()) {\r\n        addAttribute(\"color\", ColorConvertion.getColor(task.getColor()), attrs);\r\n    }\r\n    if (task.shapeDefined()) {\r\n        addAttribute(\"shape\", task.getShape().getArray(), attrs);\r\n    }\r\n    addAttribute(\"meeting\", Boolean.valueOf(task.isMilestone()).toString(), attrs);\r\n    if (task.isProjectTask()) {\r\n        addAttribute(\"project\", Boolean.TRUE.toString(), attrs);\r\n    }\r\n    addAttribute(\"start\", task.getStart().toXMLString(), attrs);\r\n    addAttribute(\"duration\", String.valueOf(task.getLength()), attrs);\r\n    addAttribute(\"complete\", String.valueOf(task.getCompletionPercentage()), attrs);\r\n    if ((task.getThird()) != null) {\r\n        addAttribute(\"thirdDate\", task.getThird().toXMLString(), attrs);\r\n        addAttribute(\"thirdDate-constraint\", String.valueOf(task.getThirdDateConstraint()), attrs);\r\n    }\r\n    addAttribute(\"priority\", String.valueOf(task.getPriority()), attrs);\r\n    final String sWebLink = task.getWebLink();\r\n    if (((sWebLink != null) && (!(sWebLink.equals(\"\")))) && (!(sWebLink.equals(\"http://\")))) {\r\n        addAttribute(\"webLink\", URLEncoder.encode(sWebLink, \"ISO-8859-1\"), attrs);\r\n    }\r\n    addAttribute(\"expand\", String.valueOf(task.getExpand()), attrs);\r\n    startElement(\"task\", attrs, handler);\r\n    if (((task.getNotes()) != null) && ((task.getNotes().length()) > 0)) {\r\n        cdataElement(\"notes\", task.getNotes(), attrs, handler);\r\n        // fout.write(space2 + \"<notes>\");\r\n        // fout.write(\"\n\"\r\n        // + space2\r\n        // + s\r\n        // + correct(replaceAll(task.getNotes(), \"\n\", \"\n\"\r\n        // + space2 + s)));\r\n        // fout.write(\"\n\" + space2 + \"</notes>\n\");\r\n    }\r\n    // use successors to write depends information\r\n    final TaskDependency[] depsAsDependee = task.getDependenciesAsDependee().toArray();\r\n    for (int i = 0; i < (depsAsDependee.length); i++) {\r\n        TaskDependency next = depsAsDependee[i];\r\n        addAttribute(\"id\", String.valueOf(next.getDependant().getTaskID()), attrs);\r\n        addAttribute(\"type\", String.valueOf(next.getConstraint().getID()), attrs);\r\n        addAttribute(\"difference\", String.valueOf(next.getDifference()), attrs);\r\n        addAttribute(\"hardness\", next.getHardness().getIdentifier(), attrs);\r\n        emptyElement(\"depend\", attrs, handler);\r\n    }\r\n    CustomColumnsValues ccv = task.getCustomValues();\r\n    for (/* <CustomColumn> */\r\n    Iterator it = customColumns.getCustomColums().iterator(); it.hasNext();) {\r\n        CustomColumn nextColumn = ((CustomColumn) (it.next()));\r\n        final String name = nextColumn.getName();\r\n        final String idc = nextColumn.getId();\r\n        Object value = ccv.getValue(name);\r\n        if ((GregorianCalendar.class.isAssignableFrom(nextColumn.getType())) && (value != null)) {\r\n            value = DateParser.getIsoDate(((GanttCalendar) (value)).getTime());\r\n        }\r\n        addAttribute(\"taskproperty-id\", idc, attrs);\r\n        addAttribute(\"value\", (value == null ? null : String.valueOf(value)), attrs);\r\n        emptyElement(\"customproperty\", attrs, handler);\r\n    }\r\n    // Write the child of the task\r\n    if (task.getManager().getTaskHierarchy().hasNestedTasks(task)) {\r\n        Task[] nestedTasks = task.getManager().getTaskHierarchy().getNestedTasks(task);\r\n        for (int i = 0; i < (nestedTasks.length); i++) {\r\n            writeTask(handler, ((GanttTask) (nestedTasks[i])), customColumns);\r\n        }\r\n    }\r\n    // end of task section\r\n    endElement(\"task\", handler);\r\n}'),(2618,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3551,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType) throws SAXException {\r\n    writeTaskProperty(handler, id, name, type, valueType, null);\r\n}'),(2619,'String id','java.lang.String',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3551,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType) throws SAXException {\r\n    writeTaskProperty(handler, id, name, type, valueType, null);\r\n}'),(2620,'String name','java.lang.String',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3551,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType) throws SAXException {\r\n    writeTaskProperty(handler, id, name, type, valueType, null);\r\n}'),(2621,'String type','java.lang.String',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3551,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType) throws SAXException {\r\n    writeTaskProperty(handler, id, name, type, valueType, null);\r\n}'),(2622,'String valueType','java.lang.String',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3551,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType) throws SAXException {\r\n    writeTaskProperty(handler, id, name, type, valueType, null);\r\n}'),(2623,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3552,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType, String defaultValue) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"id\", id, attrs);\r\n    addAttribute(\"name\", name, attrs);\r\n    addAttribute(\"type\", type, attrs);\r\n    addAttribute(\"valuetype\", valueType, attrs);\r\n    if (defaultValue != null) {\r\n        addAttribute(\"defaultvalue\", defaultValue, attrs);\r\n    }\r\n    emptyElement(\"taskproperty\", attrs, handler);\r\n}'),(2624,'String id','java.lang.String',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3552,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType, String defaultValue) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"id\", id, attrs);\r\n    addAttribute(\"name\", name, attrs);\r\n    addAttribute(\"type\", type, attrs);\r\n    addAttribute(\"valuetype\", valueType, attrs);\r\n    if (defaultValue != null) {\r\n        addAttribute(\"defaultvalue\", defaultValue, attrs);\r\n    }\r\n    emptyElement(\"taskproperty\", attrs, handler);\r\n}'),(2625,'String name','java.lang.String',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3552,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType, String defaultValue) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"id\", id, attrs);\r\n    addAttribute(\"name\", name, attrs);\r\n    addAttribute(\"type\", type, attrs);\r\n    addAttribute(\"valuetype\", valueType, attrs);\r\n    if (defaultValue != null) {\r\n        addAttribute(\"defaultvalue\", defaultValue, attrs);\r\n    }\r\n    emptyElement(\"taskproperty\", attrs, handler);\r\n}'),(2626,'String type','java.lang.String',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3552,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType, String defaultValue) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"id\", id, attrs);\r\n    addAttribute(\"name\", name, attrs);\r\n    addAttribute(\"type\", type, attrs);\r\n    addAttribute(\"valuetype\", valueType, attrs);\r\n    if (defaultValue != null) {\r\n        addAttribute(\"defaultvalue\", defaultValue, attrs);\r\n    }\r\n    emptyElement(\"taskproperty\", attrs, handler);\r\n}'),(2627,'String valueType','java.lang.String',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3552,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType, String defaultValue) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"id\", id, attrs);\r\n    addAttribute(\"name\", name, attrs);\r\n    addAttribute(\"type\", type, attrs);\r\n    addAttribute(\"valuetype\", valueType, attrs);\r\n    if (defaultValue != null) {\r\n        addAttribute(\"defaultvalue\", defaultValue, attrs);\r\n    }\r\n    emptyElement(\"taskproperty\", attrs, handler);\r\n}'),(2628,'String defaultValue','java.lang.String',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3552,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(javax.xml.transform.sax.TransformerHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'private void writeTaskProperty(TransformerHandler handler, String id, String name, String type, String valueType, String defaultValue) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"id\", id, attrs);\r\n    addAttribute(\"name\", name, attrs);\r\n    addAttribute(\"type\", type, attrs);\r\n    addAttribute(\"valuetype\", valueType, attrs);\r\n    if (defaultValue != null) {\r\n        addAttribute(\"defaultvalue\", defaultValue, attrs);\r\n    }\r\n    emptyElement(\"taskproperty\", attrs, handler);\r\n}'),(2629,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3550,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperties(javax.xml.transform.sax.TransformerHandler,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'private void writeTaskProperties(TransformerHandler handler, CustomColumnsStorage customCol) throws SAXException {\r\n    writeTaskProperty(handler, \"tpd0\", \"type\", \"default\", \"icon\");\r\n    writeTaskProperty(handler, \"tpd1\", \"priority\", \"default\", \"icon\");\r\n    writeTaskProperty(handler, \"tpd2\", \"info\", \"default\", \"icon\");\r\n    writeTaskProperty(handler, \"tpd3\", \"name\", \"default\", \"text\");\r\n    writeTaskProperty(handler, \"tpd4\", \"begindate\", \"default\", \"date\");\r\n    writeTaskProperty(handler, \"tpd5\", \"enddate\", \"default\", \"date\");\r\n    writeTaskProperty(handler, \"tpd6\", \"duration\", \"default\", \"int\");\r\n    writeTaskProperty(handler, \"tpd7\", \"completion\", \"default\", \"int\");\r\n    writeTaskProperty(handler, \"tpd8\", \"coordinator\", \"default\", \"text\");\r\n    writeTaskProperty(handler, \"tpd9\", \"predecessorsr\", \"default\", \"text\");\r\n    /* <CustomColumn> */\r\n    Iterator it = customCol.getCustomColums().iterator();\r\n    while (it.hasNext()) {\r\n        final CustomColumn cc = ((CustomColumn) (it.next()));\r\n        Object defVal = cc.getDefaultValue();\r\n        final Class cla = cc.getType();\r\n        final String valueType = TaskSaver.encodeFieldType(cla);\r\n        if (valueType == null) {\r\n            continue;\r\n        }\r\n        if ((\"date\".equals(valueType)) && (defVal != null)) {\r\n            assert defVal instanceof GanttCalendar;\r\n            defVal = DateParser.getIsoDate(((GanttCalendar) (defVal)).getTime());\r\n        }\r\n        String idcStr = cc.getId();\r\n        writeTaskProperty(handler, idcStr, cc.getName(), \"custom\", valueType, (defVal == null ? null : String.valueOf(defVal)));\r\n    } \r\n}'),(2630,'CustomColumnsStorage customCol','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,456,'net.sourceforge.ganttproject.io.TaskSaver',3550,'net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperties(javax.xml.transform.sax.TransformerHandler,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'private void writeTaskProperties(TransformerHandler handler, CustomColumnsStorage customCol) throws SAXException {\r\n    writeTaskProperty(handler, \"tpd0\", \"type\", \"default\", \"icon\");\r\n    writeTaskProperty(handler, \"tpd1\", \"priority\", \"default\", \"icon\");\r\n    writeTaskProperty(handler, \"tpd2\", \"info\", \"default\", \"icon\");\r\n    writeTaskProperty(handler, \"tpd3\", \"name\", \"default\", \"text\");\r\n    writeTaskProperty(handler, \"tpd4\", \"begindate\", \"default\", \"date\");\r\n    writeTaskProperty(handler, \"tpd5\", \"enddate\", \"default\", \"date\");\r\n    writeTaskProperty(handler, \"tpd6\", \"duration\", \"default\", \"int\");\r\n    writeTaskProperty(handler, \"tpd7\", \"completion\", \"default\", \"int\");\r\n    writeTaskProperty(handler, \"tpd8\", \"coordinator\", \"default\", \"text\");\r\n    writeTaskProperty(handler, \"tpd9\", \"predecessorsr\", \"default\", \"text\");\r\n    /* <CustomColumn> */\r\n    Iterator it = customCol.getCustomColums().iterator();\r\n    while (it.hasNext()) {\r\n        final CustomColumn cc = ((CustomColumn) (it.next()));\r\n        Object defVal = cc.getDefaultValue();\r\n        final Class cla = cc.getType();\r\n        final String valueType = TaskSaver.encodeFieldType(cla);\r\n        if (valueType == null) {\r\n            continue;\r\n        }\r\n        if ((\"date\".equals(valueType)) && (defVal != null)) {\r\n            assert defVal instanceof GanttCalendar;\r\n            defVal = DateParser.getIsoDate(((GanttCalendar) (defVal)).getTime());\r\n        }\r\n        String idcStr = cc.getId();\r\n        writeTaskProperty(handler, idcStr, cc.getName(), \"custom\", valueType, (defVal == null ? null : String.valueOf(defVal)));\r\n    } \r\n}'),(2631,'Class fieldType','java.lang.Class',0,456,'net.sourceforge.ganttproject.io.TaskSaver',3547,'net.sourceforge.ganttproject.io.TaskSaver.encodeFieldType(java.lang.Class)',0,'static String encodeFieldType(Class fieldType) {\r\n    return CustomPropertyManager.PropertyTypeEncoder.encodeFieldType(fieldType);\r\n}'),(2632,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,457,'net.sourceforge.ganttproject.io.VacationSaver',3554,'net.sourceforge.ganttproject.io.VacationSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler)',0,'void save(IGanttProject project, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"vacations\", handler);\r\n    ProjectResource[] resources = project.getHumanResourceManager().getResourcesArray();\r\n    for (int i = 0; i < (resources.length); i++) {\r\n        HumanResource p = ((HumanResource) (resources[i]));\r\n        if ((p.getDaysOff()) != null)\r\n            for (int j = 0; j < (p.getDaysOff().size()); j++) {\r\n                GanttDaysOff gdo = ((GanttDaysOff) (p.getDaysOff().getElementAt(j)));\r\n                addAttribute(\"start\", gdo.getStart().toXMLString(), attrs);\r\n                addAttribute(\"end\", gdo.getFinish().toXMLString(), attrs);\r\n                addAttribute(\"resourceid\", String.valueOf(p.getId()), attrs);\r\n                emptyElement(\"vacation\", attrs, handler);\r\n            }\r\n\r\n    }\r\n    endElement(\"vacations\", handler);\r\n}'),(2633,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,457,'net.sourceforge.ganttproject.io.VacationSaver',3554,'net.sourceforge.ganttproject.io.VacationSaver.save(net.sourceforge.ganttproject.IGanttProject,javax.xml.transform.sax.TransformerHandler)',0,'void save(IGanttProject project, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    startElement(\"vacations\", handler);\r\n    ProjectResource[] resources = project.getHumanResourceManager().getResourcesArray();\r\n    for (int i = 0; i < (resources.length); i++) {\r\n        HumanResource p = ((HumanResource) (resources[i]));\r\n        if ((p.getDaysOff()) != null)\r\n            for (int j = 0; j < (p.getDaysOff().size()); j++) {\r\n                GanttDaysOff gdo = ((GanttDaysOff) (p.getDaysOff().getElementAt(j)));\r\n                addAttribute(\"start\", gdo.getStart().toXMLString(), attrs);\r\n                addAttribute(\"end\", gdo.getFinish().toXMLString(), attrs);\r\n                addAttribute(\"resourceid\", String.valueOf(p.getId()), attrs);\r\n                emptyElement(\"vacation\", attrs, handler);\r\n            }\r\n\r\n    }\r\n    endElement(\"vacations\", handler);\r\n}'),(2634,'UIFacade facade','net.sourceforge.ganttproject.gui.UIFacade',337,458,'net.sourceforge.ganttproject.io.ViewSaver',3556,'net.sourceforge.ganttproject.io.ViewSaver.save(net.sourceforge.ganttproject.gui.UIFacade,javax.xml.transform.sax.TransformerHandler)',0,'public void save(UIFacade facade, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"zooming-state\", facade.getZoomManager().getZoomState().getPersistentName(), attrs);\r\n    addAttribute(\"id\", \"gantt-chart\", attrs);\r\n    emptyElement(\"view\", attrs, handler);\r\n    addAttribute(\"id\", \"resource-table\", attrs);\r\n    startElement(\"view\", attrs, handler);\r\n    writeColumns(facade.getResourceTree().getVisibleFields(), handler);\r\n    endElement(\"view\", handler);\r\n}'),(2635,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,458,'net.sourceforge.ganttproject.io.ViewSaver',3556,'net.sourceforge.ganttproject.io.ViewSaver.save(net.sourceforge.ganttproject.gui.UIFacade,javax.xml.transform.sax.TransformerHandler)',0,'public void save(UIFacade facade, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    addAttribute(\"zooming-state\", facade.getZoomManager().getZoomState().getPersistentName(), attrs);\r\n    addAttribute(\"id\", \"gantt-chart\", attrs);\r\n    emptyElement(\"view\", attrs, handler);\r\n    addAttribute(\"id\", \"resource-table\", attrs);\r\n    startElement(\"view\", attrs, handler);\r\n    writeColumns(facade.getResourceTree().getVisibleFields(), handler);\r\n    endElement(\"view\", handler);\r\n}'),(2636,'TableHeaderUIFacade visibleFields','net.sourceforge.ganttproject.gui.TableHeaderUIFacade',324,458,'net.sourceforge.ganttproject.io.ViewSaver',3557,'net.sourceforge.ganttproject.io.ViewSaver.writeColumns(net.sourceforge.ganttproject.gui.TableHeaderUIFacade,javax.xml.transform.sax.TransformerHandler)',0,'protected void writeColumns(TableHeaderUIFacade visibleFields, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    int totalWidth = 0;\r\n    for (int i = 0; i < (visibleFields.getSize()); i++) {\r\n        if (visibleFields.getField(i).isVisible()) {\r\n            totalWidth += visibleFields.getField(i).getWidth();\r\n        }\r\n    }\r\n    for (int i = 0; i < (visibleFields.getSize()); i++) {\r\n        TableHeaderUIFacade.Column field = visibleFields.getField(i);\r\n        if (field.isVisible()) {\r\n            addAttribute(\"id\", field.getID(), attrs);\r\n            addAttribute(\"name\", field.getName(), attrs);\r\n            addAttribute(\"width\", (((field.getWidth()) * 100) / totalWidth), attrs);\r\n            addAttribute(\"order\", field.getOrder(), attrs);\r\n            emptyElement(\"field\", attrs, handler);\r\n        }\r\n    }\r\n}'),(2637,'TransformerHandler handler','javax.xml.transform.sax.TransformerHandler',0,458,'net.sourceforge.ganttproject.io.ViewSaver',3557,'net.sourceforge.ganttproject.io.ViewSaver.writeColumns(net.sourceforge.ganttproject.gui.TableHeaderUIFacade,javax.xml.transform.sax.TransformerHandler)',0,'protected void writeColumns(TableHeaderUIFacade visibleFields, TransformerHandler handler) throws SAXException {\r\n    AttributesImpl attrs = new AttributesImpl();\r\n    int totalWidth = 0;\r\n    for (int i = 0; i < (visibleFields.getSize()); i++) {\r\n        if (visibleFields.getField(i).isVisible()) {\r\n            totalWidth += visibleFields.getField(i).getWidth();\r\n        }\r\n    }\r\n    for (int i = 0; i < (visibleFields.getSize()); i++) {\r\n        TableHeaderUIFacade.Column field = visibleFields.getField(i);\r\n        if (field.isVisible()) {\r\n            addAttribute(\"id\", field.getID(), attrs);\r\n            addAttribute(\"name\", field.getName(), attrs);\r\n            addAttribute(\"width\", (((field.getWidth()) * 100) / totalWidth), attrs);\r\n            addAttribute(\"order\", field.getOrder(), attrs);\r\n            emptyElement(\"field\", attrs, handler);\r\n        }\r\n    }\r\n}'),(2638,'GanttLanguage language','net.sourceforge.ganttproject.language.GanttLanguage',461,459,'net.sourceforge.ganttproject.language.GanttLanguage$Event',3581,'net.sourceforge.ganttproject.language.GanttLanguage$Event.-init-(net.sourceforge.ganttproject.language.GanttLanguage)',0,'public Event(GanttLanguage language) {\r\n    super(language);\r\n}'),(2639,'GanttLanguage.Event event','net.sourceforge.ganttproject.language.GanttLanguage$Event',459,460,'net.sourceforge.ganttproject.language.GanttLanguage$Listener',3583,'net.sourceforge.ganttproject.language.GanttLanguage$Listener.languageChanged(net.sourceforge.ganttproject.language.GanttLanguage$Event)',0,'public void languageChanged(GanttLanguage.Event event);'),(2640,'Locale locale','java.util.Locale',0,461,'net.sourceforge.ganttproject.language.GanttLanguage',3580,'net.sourceforge.ganttproject.language.GanttLanguage.setLocale(java.util.Locale)',0,'public void setLocale(Locale locale) {\r\n    currentLocale = locale;\r\n    Locale.setDefault(locale);\r\n    int defaultTimezoneOffset = (TimeZone.getDefault().getRawOffset()) + (TimeZone.getDefault().getDSTSavings());\r\n    TimeZone utc = TimeZone.getTimeZone(\"UTC\");\r\n    utc.setRawOffset(defaultTimezoneOffset);\r\n    TimeZone.setDefault(utc);\r\n    currentDateFormat = ((SimpleDateFormat) (DateFormat.getDateInstance(DateFormat.MEDIUM, currentLocale)));\r\n    shortCurrentDateFormat = ((SimpleDateFormat) (DateFormat.getDateInstance(DateFormat.SHORT, currentLocale)));\r\n    currentTimeFormat = DateFormat.getTimeInstance(DateFormat.MEDIUM, currentLocale);\r\n    myLongFormat = ((SimpleDateFormat) (DateFormat.getDateInstance(DateFormat.LONG, locale)));\r\n    UIManager.put(\"JXDatePicker.longFormat\", myLongFormat.toPattern());\r\n    UIManager.put(\"JXDatePicker.mediumFormat\", currentDateFormat.toPattern());\r\n    UIManager.put(\"JXDatePicker.shortFormat\", shortCurrentDateFormat.toPattern());\r\n    UIManager.put(\"JXDatePicker.numColumns\", new Integer(10));\r\n    String[] dayShortNames = new String[7];\r\n    for (int i = 0; i < 7; i++) {\r\n        dayShortNames[i] = getDay(i).substring(0, 1);\r\n    }\r\n    UIManager.put(\"JXMonthView.daysOfTheWeek\", dayShortNames);\r\n    String resourceBase = System.getProperty(\"org.ganttproject.resourcebase\", \"language/i18n\");\r\n    i18n = ResourceBundle.getBundle(resourceBase, currentLocale);\r\n    fireLanguageChanged();\r\n}'),(2641,'GanttCalendar date','net.sourceforge.ganttproject.GanttCalendar',24,461,'net.sourceforge.ganttproject.language.GanttLanguage',3564,'net.sourceforge.ganttproject.language.GanttLanguage.formatDate(net.sourceforge.ganttproject.GanttCalendar)',0,'public String formatDate(GanttCalendar date) {\r\n    return currentDateFormat.format(date.getTime());\r\n}'),(2642,'GanttCalendar date','net.sourceforge.ganttproject.GanttCalendar',24,461,'net.sourceforge.ganttproject.language.GanttLanguage',3565,'net.sourceforge.ganttproject.language.GanttLanguage.formatShortDate(net.sourceforge.ganttproject.GanttCalendar)',0,'public String formatShortDate(GanttCalendar date) {\r\n    return shortCurrentDateFormat.format(date.getTime());\r\n}'),(2643,'GanttCalendar date','net.sourceforge.ganttproject.GanttCalendar',24,461,'net.sourceforge.ganttproject.language.GanttLanguage',3566,'net.sourceforge.ganttproject.language.GanttLanguage.formatTime(net.sourceforge.ganttproject.GanttCalendar)',0,'public String formatTime(GanttCalendar date) {\r\n    return currentTimeFormat.format(date.getTime());\r\n}'),(2644,'String date','java.lang.String',0,461,'net.sourceforge.ganttproject.language.GanttLanguage',3578,'net.sourceforge.ganttproject.language.GanttLanguage.parseDate(java.lang.String)',0,'public GanttCalendar parseDate(String date) throws ParseException {\r\n    Calendar tmp = Calendar.getInstance(currentLocale);\r\n    tmp.setTime(currentDateFormat.parse(date));\r\n    return new GanttCalendar(tmp.get(Calendar.YEAR), tmp.get(Calendar.MONTH), tmp.get(Calendar.DATE));\r\n}'),(2645,'net.sourceforge.ganttproject.GanttCalendar','net.sourceforge.ganttproject.GanttCalendar',24,461,'net.sourceforge.ganttproject.language.GanttLanguage',3578,'net.sourceforge.ganttproject.language.GanttLanguage.parseDate(java.lang.String)',1,'public GanttCalendar parseDate(String date) throws ParseException {\r\n    Calendar tmp = Calendar.getInstance(currentLocale);\r\n    tmp.setTime(currentDateFormat.parse(date));\r\n    return new GanttCalendar(tmp.get(Calendar.YEAR), tmp.get(Calendar.MONTH), tmp.get(Calendar.DATE));\r\n}'),(2646,'int m','int',0,461,'net.sourceforge.ganttproject.language.GanttLanguage',3574,'net.sourceforge.ganttproject.language.GanttLanguage.getMonth(int)',0,'public String getMonth(int m) {\r\n    GregorianCalendar month = new GregorianCalendar(2000, m, 1);\r\n    SimpleDateFormat dateFormat = new SimpleDateFormat(\"MMMM\", this.currentLocale);\r\n    StringBuffer result = new StringBuffer();\r\n    result = dateFormat.format(month.getTime(), result, new FieldPosition(DateFormat.MONTH_FIELD));\r\n    return result.toString();\r\n}'),(2647,'int d','int',0,461,'net.sourceforge.ganttproject.language.GanttLanguage',3569,'net.sourceforge.ganttproject.language.GanttLanguage.getDay(int)',0,'public String getDay(int d) {\r\n    GregorianCalendar day = new GregorianCalendar(2000, 1, 1);\r\n    while ((day.get(Calendar.DAY_OF_WEEK)) != (Calendar.SUNDAY)) {\r\n        day.add(Calendar.DATE, 1);\r\n    } \r\n    day.add(Calendar.DATE, d);\r\n    SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE\", this.currentLocale);\r\n    StringBuffer result = new StringBuffer();\r\n    result = dateFormat.format(day.getTime(), result, new FieldPosition(DateFormat.DAY_OF_WEEK_FIELD));\r\n    return result.toString();\r\n}'),(2648,'String key','java.lang.String',0,461,'net.sourceforge.ganttproject.language.GanttLanguage',3576,'net.sourceforge.ganttproject.language.GanttLanguage.getText(java.lang.String)',0,'public String getText(String key) {\r\n    try {\r\n        return i18n.getString(key);\r\n    } catch (MissingResourceException e) {\r\n        return (((GanttLanguage.MISSING_RESOURCE) + \" \") + key) + \"\";\r\n    }\r\n}'),(2649,'GanttLanguage.Listener listener','net.sourceforge.ganttproject.language.GanttLanguage$Listener',460,461,'net.sourceforge.ganttproject.language.GanttLanguage',3560,'net.sourceforge.ganttproject.language.GanttLanguage.addListener(net.sourceforge.ganttproject.language.GanttLanguage$Listener)',0,'public void addListener(GanttLanguage.Listener listener) {\r\n    myListeners.add(listener);\r\n}'),(2650,'GanttLanguage.Listener listener','net.sourceforge.ganttproject.language.GanttLanguage$Listener',460,461,'net.sourceforge.ganttproject.language.GanttLanguage',3579,'net.sourceforge.ganttproject.language.GanttLanguage.removeListener(net.sourceforge.ganttproject.language.GanttLanguage$Listener)',0,'public void removeListener(GanttLanguage.Listener listener) {\r\n    myListeners.remove(listener);\r\n}'),(2651,'String string','java.lang.String',0,461,'net.sourceforge.ganttproject.language.GanttLanguage',3562,'net.sourceforge.ganttproject.language.GanttLanguage.createDateFormat(java.lang.String)',0,'public SimpleDateFormat createDateFormat(String string) {\r\n    return new SimpleDateFormat(string, currentLocale);\r\n}'),(2652,'String label','java.lang.String',0,461,'net.sourceforge.ganttproject.language.GanttLanguage',3561,'net.sourceforge.ganttproject.language.GanttLanguage.correctLabel(java.lang.String)',0,'public String correctLabel(String label) {\r\n    int index = label.indexOf($);\r\n    if ((index != (-1)) && (((label.length()) - index) > 1)) {\r\n        label = label.substring(0, index).concat(label.substring((++index)));\r\n    }\r\n    return label;\r\n}'),(2653,'ResourceManager resourceMgr','net.sourceforge.ganttproject.resource.ResourceManager',509,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3584,'net.sourceforge.ganttproject.parser.AllocationTagHandler.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.roles.RoleManager)',0,'public AllocationTagHandler(ResourceManager resourceMgr, TaskManager taskMgr, RoleManager roleMgr) {\r\n    myResourceManager = resourceMgr;\r\n    myTaskManager = taskMgr;\r\n    myRoleManager = roleMgr;\r\n}'),(2654,'TaskManager taskMgr','net.sourceforge.ganttproject.task.TaskManager',565,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3584,'net.sourceforge.ganttproject.parser.AllocationTagHandler.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.roles.RoleManager)',0,'public AllocationTagHandler(ResourceManager resourceMgr, TaskManager taskMgr, RoleManager roleMgr) {\r\n    myResourceManager = resourceMgr;\r\n    myTaskManager = taskMgr;\r\n    myRoleManager = roleMgr;\r\n}'),(2655,'RoleManager roleMgr','net.sourceforge.ganttproject.roles.RoleManager',517,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3584,'net.sourceforge.ganttproject.parser.AllocationTagHandler.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.roles.RoleManager)',0,'public AllocationTagHandler(ResourceManager resourceMgr, TaskManager taskMgr, RoleManager roleMgr) {\r\n    myResourceManager = resourceMgr;\r\n    myTaskManager = taskMgr;\r\n    myRoleManager = roleMgr;\r\n}'),(2656,'String namespaceURI','java.lang.String',0,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3592,'net.sourceforge.ganttproject.parser.AllocationTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#startElement(java.lang.String,\n     java.lang.String, java.lang.String, org.xml.sax.Attributes)\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"allocation\")) {\r\n        loadAllocation(attrs);\r\n    }\r\n}'),(2657,'String sName','java.lang.String',0,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3592,'net.sourceforge.ganttproject.parser.AllocationTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#startElement(java.lang.String,\n     java.lang.String, java.lang.String, org.xml.sax.Attributes)\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"allocation\")) {\r\n        loadAllocation(attrs);\r\n    }\r\n}'),(2658,'String qName','java.lang.String',0,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3592,'net.sourceforge.ganttproject.parser.AllocationTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#startElement(java.lang.String,\n     java.lang.String, java.lang.String, org.xml.sax.Attributes)\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"allocation\")) {\r\n        loadAllocation(attrs);\r\n    }\r\n}'),(2659,'Attributes attrs','org.xml.sax.Attributes',0,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3592,'net.sourceforge.ganttproject.parser.AllocationTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#startElement(java.lang.String,\n     java.lang.String, java.lang.String, org.xml.sax.Attributes)\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"allocation\")) {\r\n        loadAllocation(attrs);\r\n    }\r\n}'),(2660,'String namespaceURI','java.lang.String',0,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3585,'net.sourceforge.ganttproject.parser.AllocationTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#endElement(java.lang.String,\n     java.lang.String, java.lang.String)\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2661,'String sName','java.lang.String',0,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3585,'net.sourceforge.ganttproject.parser.AllocationTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#endElement(java.lang.String,\n     java.lang.String, java.lang.String)\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2662,'String qName','java.lang.String',0,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3585,'net.sourceforge.ganttproject.parser.AllocationTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#endElement(java.lang.String,\n     java.lang.String, java.lang.String)\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2663,'Attributes attrs','org.xml.sax.Attributes',0,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3589,'net.sourceforge.ganttproject.parser.AllocationTagHandler.loadAllocation(org.xml.sax.Attributes)',0,'private void loadAllocation(Attributes attrs) throws FileFormatException {\r\n    String aName;\r\n    int taskId = 0;\r\n    int resourceId = 0;\r\n    float load = 0;\r\n    boolean coordinator = false;\r\n    String taskIdAsString = attrs.getValue(\"task-id\");\r\n    String resourceIdAsString = attrs.getValue(\"resource-id\");\r\n    String loadAsString = attrs.getValue(\"load\");\r\n    String coordinatorAsString = attrs.getValue(\"responsible\");\r\n    String rolePersistendIDString = attrs.getValue(\"function\");\r\n    if ((taskIdAsString == null) || (resourceIdAsString == null)) {\r\n        throw new FileFormatException(\"Failed to load <allocation> tag: task or resource identifier is missing\");\r\n    }\r\n    try {\r\n        taskId = Integer.parseInt(taskIdAsString);\r\n        resourceId = Integer.parseInt(resourceIdAsString);\r\n        if (loadAsString != null) {\r\n            load = Float.parseFloat(loadAsString);\r\n        }\r\n        if (coordinatorAsString != null) {\r\n            coordinator = Boolean.valueOf(coordinatorAsString).booleanValue();\r\n        }\r\n    } catch (NumberFormatException e) {\r\n        throw new FileFormatException(\"Failed to load <allocation> tag: one of attribute values is invalid\", e);\r\n    }\r\n    // if no load is specified I assume 100% load\r\n    // this should only be the case if old files\r\n    // were loaded.\r\n    if (load == 0) {\r\n        load = 100;\r\n    }\r\n    HumanResource human = ((HumanResource) (getResourceManager().getById(resourceId)));\r\n    if (human == null) {\r\n        throw new FileFormatException(((\"Human resource with id=\" + resourceId) + \" not found\"));\r\n    }\r\n    Task task = getTaskManager().getTask(taskId);\r\n    if (task == null) {\r\n        throw new FileFormatException(((\"Task with id=\" + taskId) + \" not found\"));\r\n    }\r\n    // TaskMutator mutator = task.createMutator();\r\n    // ResourceAssignment assignment = mutator.addResource(human);\r\n    // assignment.setLoad(load);\r\n    // mutator.commit();\r\n    ResourceAssignment assignment = task.getAssignmentCollection().addAssignment(human);\r\n    try {\r\n        if (rolePersistendIDString != null)\r\n            myLateAssigmnent2roleBinding.put(assignment, rolePersistendIDString);\r\n\r\n    } catch (NumberFormatException e) {\r\n        System.out.println((\"ERROR in parsing XML File function id is not numeric: \" + (e.toString())));\r\n    }\r\n    assignment.setLoad(load);\r\n    assignment.setCoordinator(coordinator);\r\n}'),(2664,'String persistentIDasString','java.lang.String',0,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3586,'net.sourceforge.ganttproject.parser.AllocationTagHandler.findRole(java.lang.String)',0,'private Role findRole(String persistentIDasString) {\r\n    // \r\n    RolePersistentID persistentID = new RolePersistentID(persistentIDasString);\r\n    String rolesetName = persistentID.getRoleSetID();\r\n    int roleID = persistentID.getRoleID();\r\n    RoleSet roleSet;\r\n    if (rolesetName == null) {\r\n        roleSet = myRoleManager.getProjectRoleSet();\r\n        if ((roleSet.findRole(roleID)) == null) {\r\n            if ((roleID <= 10) && (roleID > 2)) {\r\n                roleSet = myRoleManager.getRoleSet(RoleSet.SOFTWARE_DEVELOPMENT);\r\n                roleSet.setEnabled(true);\r\n            } else\r\n                if (roleID <= 2) {\r\n                    roleSet = myRoleManager.getRoleSet(RoleSet.DEFAULT);\r\n                }\r\n\r\n        }\r\n    } else {\r\n        roleSet = myRoleManager.getRoleSet(rolesetName);\r\n    }\r\n    Role result = roleSet.findRole(roleID);\r\n    return result;\r\n}'),(2665,'net.sourceforge.ganttproject.roles.Role','net.sourceforge.ganttproject.roles.Role',512,462,'net.sourceforge.ganttproject.parser.AllocationTagHandler',3586,'net.sourceforge.ganttproject.parser.AllocationTagHandler.findRole(java.lang.String)',1,'private Role findRole(String persistentIDasString) {\r\n    // \r\n    RolePersistentID persistentID = new RolePersistentID(persistentIDasString);\r\n    String rolesetName = persistentID.getRoleSetID();\r\n    int roleID = persistentID.getRoleID();\r\n    RoleSet roleSet;\r\n    if (rolesetName == null) {\r\n        roleSet = myRoleManager.getProjectRoleSet();\r\n        if ((roleSet.findRole(roleID)) == null) {\r\n            if ((roleID <= 10) && (roleID > 2)) {\r\n                roleSet = myRoleManager.getRoleSet(RoleSet.SOFTWARE_DEVELOPMENT);\r\n                roleSet.setEnabled(true);\r\n            } else\r\n                if (roleID <= 2) {\r\n                    roleSet = myRoleManager.getRoleSet(RoleSet.DEFAULT);\r\n                }\r\n\r\n        }\r\n    } else {\r\n        roleSet = myRoleManager.getRoleSet(rolesetName);\r\n    }\r\n    Role result = roleSet.findRole(roleID);\r\n    return result;\r\n}'),(2666,'GanttChart chart','net.sourceforge.ganttproject.chart.GanttChart',185,463,'net.sourceforge.ganttproject.parser.BlankLineTagHandler',3593,'net.sourceforge.ganttproject.parser.BlankLineTagHandler.-init-(net.sourceforge.ganttproject.chart.GanttChart)',0,'public BlankLineTagHandler(GanttChart chart) {\r\n    myGanttChart = chart;\r\n}'),(2667,'String namespaceURI','java.lang.String',0,463,'net.sourceforge.ganttproject.parser.BlankLineTagHandler',3595,'net.sourceforge.ganttproject.parser.BlankLineTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"blankline\")) {\r\n        // myGanttChart.appendBlankRow();\r\n    }\r\n}'),(2668,'String sName','java.lang.String',0,463,'net.sourceforge.ganttproject.parser.BlankLineTagHandler',3595,'net.sourceforge.ganttproject.parser.BlankLineTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"blankline\")) {\r\n        // myGanttChart.appendBlankRow();\r\n    }\r\n}'),(2669,'String qName','java.lang.String',0,463,'net.sourceforge.ganttproject.parser.BlankLineTagHandler',3595,'net.sourceforge.ganttproject.parser.BlankLineTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"blankline\")) {\r\n        // myGanttChart.appendBlankRow();\r\n    }\r\n}'),(2670,'Attributes attrs','org.xml.sax.Attributes',0,463,'net.sourceforge.ganttproject.parser.BlankLineTagHandler',3595,'net.sourceforge.ganttproject.parser.BlankLineTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"blankline\")) {\r\n        // myGanttChart.appendBlankRow();\r\n    }\r\n}'),(2671,'String namespaceURI','java.lang.String',0,463,'net.sourceforge.ganttproject.parser.BlankLineTagHandler',3594,'net.sourceforge.ganttproject.parser.BlankLineTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2672,'String sName','java.lang.String',0,463,'net.sourceforge.ganttproject.parser.BlankLineTagHandler',3594,'net.sourceforge.ganttproject.parser.BlankLineTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2673,'String qName','java.lang.String',0,463,'net.sourceforge.ganttproject.parser.BlankLineTagHandler',3594,'net.sourceforge.ganttproject.parser.BlankLineTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2674,'String value','java.lang.String',0,464,'net.sourceforge.ganttproject.parser.ColorValueParser',3597,'net.sourceforge.ganttproject.parser.ColorValueParser.parseString(java.lang.String)',0,'public static Color parseString(String value) {\r\n    if (!(Pattern.matches(\"#[0-9abcdefABCDEF]{6}+\", value))) {\r\n        return GanttGraphicArea.taskDefaultColor;\r\n    }\r\n    int r;\r\n    int g;\r\n    int b;\r\n    r = Integer.valueOf(value.substring(1, 3), 16).intValue();\r\n    g = Integer.valueOf(value.substring(3, 5), 16).intValue();\r\n    b = Integer.valueOf(value.substring(5, 7), 16).intValue();\r\n    return new Color(r, g, b);\r\n}'),(2675,'ParsingContext context','net.sourceforge.ganttproject.parser.ParsingContext',476,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3598,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.-init-(net.sourceforge.ganttproject.parser.ParsingContext,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'public CustomPropertiesTagHandler(ParsingContext context, TaskManager taskManager, CustomColumnsStorage columnStorage) {\r\n    this.taskManager = taskManager;\r\n    this.parsingContext = context;\r\n    this.listStructure = new ArrayList();\r\n    myColumnStorage = columnStorage;\r\n}'),(2676,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3598,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.-init-(net.sourceforge.ganttproject.parser.ParsingContext,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'public CustomPropertiesTagHandler(ParsingContext context, TaskManager taskManager, CustomColumnsStorage columnStorage) {\r\n    this.taskManager = taskManager;\r\n    this.parsingContext = context;\r\n    this.listStructure = new ArrayList();\r\n    myColumnStorage = columnStorage;\r\n}'),(2677,'CustomColumnsStorage columnStorage','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3598,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.-init-(net.sourceforge.ganttproject.parser.ParsingContext,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'public CustomPropertiesTagHandler(ParsingContext context, TaskManager taskManager, CustomColumnsStorage columnStorage) {\r\n    this.taskManager = taskManager;\r\n    this.parsingContext = context;\r\n    this.listStructure = new ArrayList();\r\n    myColumnStorage = columnStorage;\r\n}'),(2678,'String namespaceURI','java.lang.String',0,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3604,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#startElement(java.lang.String,\n     java.lang.String, java.lang.String, org.xml.sax.Attributes)\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"customproperty\"))\r\n        loadProperty(attrs);\r\n\r\n}'),(2679,'String sName','java.lang.String',0,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3604,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#startElement(java.lang.String,\n     java.lang.String, java.lang.String, org.xml.sax.Attributes)\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"customproperty\"))\r\n        loadProperty(attrs);\r\n\r\n}'),(2680,'String qName','java.lang.String',0,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3604,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#startElement(java.lang.String,\n     java.lang.String, java.lang.String, org.xml.sax.Attributes)\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"customproperty\"))\r\n        loadProperty(attrs);\r\n\r\n}'),(2681,'Attributes attrs','org.xml.sax.Attributes',0,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3604,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.parser.TagHandler#startElement(java.lang.String,\n     java.lang.String, java.lang.String, org.xml.sax.Attributes)\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"customproperty\"))\r\n        loadProperty(attrs);\r\n\r\n}'),(2682,'String namespaceURI','java.lang.String',0,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3600,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(java.lang.String,\r\njava.lang.String, java.lang.String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    // nothing to do.\r\n}'),(2683,'String sName','java.lang.String',0,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3600,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(java.lang.String,\r\njava.lang.String, java.lang.String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    // nothing to do.\r\n}'),(2684,'String qName','java.lang.String',0,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3600,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(java.lang.String,\r\njava.lang.String, java.lang.String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    // nothing to do.\r\n}'),(2685,'Attributes attrs','org.xml.sax.Attributes',0,466,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler',3601,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.loadProperty(org.xml.sax.Attributes)',0,'private void loadProperty(Attributes attrs) {\r\n    if (attrs != null) {\r\n        // System.out.println(parsingContext.getTaskID());\r\n        CustomPropertiesTagHandler.CustomPropertiesStructure cps = new CustomPropertiesTagHandler.CustomPropertiesStructure();\r\n        cps.setTaskID(this.parsingContext.getTaskID());\r\n        cps.setTaskPropertyID(attrs.getValue(\"taskproperty-id\"));\r\n        cps.setValue(attrs.getValue(\"value\"));\r\n        this.listStructure.add(cps);\r\n    }\r\n}'),(2686,'int taskID','int',0,465,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler$CustomPropertiesStructure',3606,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler$CustomPropertiesStructure.setTaskID(int)',0,'public void setTaskID(int taskID) {\r\n    this.taskID = taskID;\r\n}'),(2687,'String propertyID','java.lang.String',0,465,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler$CustomPropertiesStructure',3607,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler$CustomPropertiesStructure.setTaskPropertyID(java.lang.String)',0,'public void setTaskPropertyID(String propertyID) {\r\n    this.taskPropertyID = propertyID;\r\n}'),(2688,'String val','java.lang.String',0,465,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler$CustomPropertiesStructure',3608,'net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler$CustomPropertiesStructure.setValue(java.lang.String)',0,'public void setValue(String val) {\r\n    this.value = val;\r\n}'),(2689,'String namespaceURI','java.lang.String',0,467,'net.sourceforge.ganttproject.parser.DayTypeTagHandler',3611,'net.sourceforge.ganttproject.parser.DayTypeTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    // TODO Auto-generated method stub\r\n}'),(2690,'String sName','java.lang.String',0,467,'net.sourceforge.ganttproject.parser.DayTypeTagHandler',3611,'net.sourceforge.ganttproject.parser.DayTypeTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    // TODO Auto-generated method stub\r\n}'),(2691,'String qName','java.lang.String',0,467,'net.sourceforge.ganttproject.parser.DayTypeTagHandler',3611,'net.sourceforge.ganttproject.parser.DayTypeTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    // TODO Auto-generated method stub\r\n}'),(2692,'Attributes attrs','org.xml.sax.Attributes',0,467,'net.sourceforge.ganttproject.parser.DayTypeTagHandler',3611,'net.sourceforge.ganttproject.parser.DayTypeTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    // TODO Auto-generated method stub\r\n}'),(2693,'String namespaceURI','java.lang.String',0,467,'net.sourceforge.ganttproject.parser.DayTypeTagHandler',3610,'net.sourceforge.ganttproject.parser.DayTypeTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2694,'String sName','java.lang.String',0,467,'net.sourceforge.ganttproject.parser.DayTypeTagHandler',3610,'net.sourceforge.ganttproject.parser.DayTypeTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2695,'String qName','java.lang.String',0,467,'net.sourceforge.ganttproject.parser.DayTypeTagHandler',3610,'net.sourceforge.ganttproject.parser.DayTypeTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2696,'GPCalendar calendar','net.sourceforge.ganttproject.calendar.GPCalendar',146,468,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler',3612,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.-init-(net.sourceforge.ganttproject.calendar.GPCalendar)',0,'public DefaultWeekTagHandler(GPCalendar calendar) {\r\n    myGPCalendar = calendar;\r\n    for (int i = 1; i <= 7; i++) {\r\n        myGPCalendar.setWeekDayType(i, GPCalendar.DayType.WORKING);\r\n    }\r\n}'),(2697,'String namespaceURI','java.lang.String',0,468,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler',3616,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (\"default-week\".equals(qName)) {\r\n        loadCalendar(attrs);\r\n    }\r\n}'),(2698,'String sName','java.lang.String',0,468,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler',3616,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (\"default-week\".equals(qName)) {\r\n        loadCalendar(attrs);\r\n    }\r\n}'),(2699,'String qName','java.lang.String',0,468,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler',3616,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (\"default-week\".equals(qName)) {\r\n        loadCalendar(attrs);\r\n    }\r\n}'),(2700,'Attributes attrs','org.xml.sax.Attributes',0,468,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler',3616,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (\"default-week\".equals(qName)) {\r\n        loadCalendar(attrs);\r\n    }\r\n}'),(2701,'Attributes attrs','org.xml.sax.Attributes',0,468,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler',3615,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.loadCalendar(org.xml.sax.Attributes)',0,'private void loadCalendar(Attributes attrs) {\r\n    for (int i = 1; i <= 7; i++) {\r\n        String nextDayName = getShortDayName(i);\r\n        String nextEncodedType = attrs.getValue(nextDayName);\r\n        if (\"1\".equals(nextEncodedType)) {\r\n            myGPCalendar.setWeekDayType(i, GPCalendar.DayType.WEEKEND);\r\n        }\r\n    }\r\n}'),(2702,'int i','int',0,468,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler',3614,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.getShortDayName(int)',0,'private String getShortDayName(int i) {\r\n    myCalendar.set(Calendar.DAY_OF_WEEK, i);\r\n    return myShortFormat.format(myCalendar.getTime()).toLowerCase();\r\n}'),(2703,'String namespaceURI','java.lang.String',0,468,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler',3613,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2704,'String sName','java.lang.String',0,468,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler',3613,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2705,'String qName','java.lang.String',0,468,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler',3613,'net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2706,'ParsingContext context','net.sourceforge.ganttproject.parser.ParsingContext',476,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3617,'net.sourceforge.ganttproject.parser.DependencyTagHandler.-init-(net.sourceforge.ganttproject.parser.ParsingContext,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public DependencyTagHandler(ParsingContext context, TaskManager taskManager, UIFacade uiFacade) {\r\n    myContext = context;\r\n    myTaskManager = taskManager;\r\n    myUIFacade = uiFacade;\r\n}'),(2707,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3617,'net.sourceforge.ganttproject.parser.DependencyTagHandler.-init-(net.sourceforge.ganttproject.parser.ParsingContext,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public DependencyTagHandler(ParsingContext context, TaskManager taskManager, UIFacade uiFacade) {\r\n    myContext = context;\r\n    myTaskManager = taskManager;\r\n    myUIFacade = uiFacade;\r\n}'),(2708,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3617,'net.sourceforge.ganttproject.parser.DependencyTagHandler.-init-(net.sourceforge.ganttproject.parser.ParsingContext,net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.gui.UIFacade)',0,'public DependencyTagHandler(ParsingContext context, TaskManager taskManager, UIFacade uiFacade) {\r\n    myContext = context;\r\n    myTaskManager = taskManager;\r\n    myUIFacade = uiFacade;\r\n}'),(2709,'int a','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3631,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.-init-(int,int)',0,'public GanttDependStructure(int a, int b) {\r\n    taskID = a;\r\n    successorTaskID = b;\r\n}'),(2710,'int b','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3631,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.-init-(int,int)',0,'public GanttDependStructure(int a, int b) {\r\n    taskID = a;\r\n    successorTaskID = b;\r\n}'),(2711,'int taskID','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3632,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.-init-(int,int,int)',0,'public GanttDependStructure(int taskID, int successorID, int relationType) {\r\n    this.taskID = taskID;\r\n    this.successorTaskID = successorID;\r\n    this.dependType = relationType;\r\n}'),(2712,'int successorID','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3632,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.-init-(int,int,int)',0,'public GanttDependStructure(int taskID, int successorID, int relationType) {\r\n    this.taskID = taskID;\r\n    this.successorTaskID = successorID;\r\n    this.dependType = relationType;\r\n}'),(2713,'int relationType','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3632,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.-init-(int,int,int)',0,'public GanttDependStructure(int taskID, int successorID, int relationType) {\r\n    this.taskID = taskID;\r\n    this.successorTaskID = successorID;\r\n    this.dependType = relationType;\r\n}'),(2714,'int taskID','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3633,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.-init-(int,int,int,int)',0,'public GanttDependStructure(int taskID, int successorID, int relationType, int difference) {\r\n    this.taskID = taskID;\r\n    this.successorTaskID = successorID;\r\n    this.dependType = relationType;\r\n    this.difference = difference;\r\n}'),(2715,'int successorID','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3633,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.-init-(int,int,int,int)',0,'public GanttDependStructure(int taskID, int successorID, int relationType, int difference) {\r\n    this.taskID = taskID;\r\n    this.successorTaskID = successorID;\r\n    this.dependType = relationType;\r\n    this.difference = difference;\r\n}'),(2716,'int relationType','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3633,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.-init-(int,int,int,int)',0,'public GanttDependStructure(int taskID, int successorID, int relationType, int difference) {\r\n    this.taskID = taskID;\r\n    this.successorTaskID = successorID;\r\n    this.dependType = relationType;\r\n    this.difference = difference;\r\n}'),(2717,'int difference','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3633,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.-init-(int,int,int,int)',0,'public GanttDependStructure(int taskID, int successorID, int relationType, int difference) {\r\n    this.taskID = taskID;\r\n    this.successorTaskID = successorID;\r\n    this.dependType = relationType;\r\n    this.difference = difference;\r\n}'),(2718,'String namespaceURI','java.lang.String',0,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3622,'net.sourceforge.ganttproject.parser.DependencyTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    /* if (\"dependencies\".equals (qName)) { myDependenciesSectionStarted =\n    false; }\n     */\r\n}'),(2719,'String sName','java.lang.String',0,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3622,'net.sourceforge.ganttproject.parser.DependencyTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    /* if (\"dependencies\".equals (qName)) { myDependenciesSectionStarted =\n    false; }\n     */\r\n}'),(2720,'String qName','java.lang.String',0,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3622,'net.sourceforge.ganttproject.parser.DependencyTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    /* if (\"dependencies\".equals (qName)) { myDependenciesSectionStarted =\n    false; }\n     */\r\n}'),(2721,'String namespaceURI','java.lang.String',0,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3630,'net.sourceforge.ganttproject.parser.DependencyTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    /* if (\"dependencies\".equals (qName)) { myDependenciesSectionStarted =\n    true; }\n     */\r\n    if (\"depend\".equals(qName)) {\r\n        /* if (!myDependenciesSectionStarted) { throw new\n        RuntimeException(\"Invalid file format. Found dependency tag\n        without prior dependencies tag\"); } else {\n         */\r\n        loadDependency(attrs);\r\n    }\r\n}'),(2722,'String sName','java.lang.String',0,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3630,'net.sourceforge.ganttproject.parser.DependencyTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    /* if (\"dependencies\".equals (qName)) { myDependenciesSectionStarted =\n    true; }\n     */\r\n    if (\"depend\".equals(qName)) {\r\n        /* if (!myDependenciesSectionStarted) { throw new\n        RuntimeException(\"Invalid file format. Found dependency tag\n        without prior dependencies tag\"); } else {\n         */\r\n        loadDependency(attrs);\r\n    }\r\n}'),(2723,'String qName','java.lang.String',0,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3630,'net.sourceforge.ganttproject.parser.DependencyTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    /* if (\"dependencies\".equals (qName)) { myDependenciesSectionStarted =\n    true; }\n     */\r\n    if (\"depend\".equals(qName)) {\r\n        /* if (!myDependenciesSectionStarted) { throw new\n        RuntimeException(\"Invalid file format. Found dependency tag\n        without prior dependencies tag\"); } else {\n         */\r\n        loadDependency(attrs);\r\n    }\r\n}'),(2724,'Attributes attrs','org.xml.sax.Attributes',0,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3630,'net.sourceforge.ganttproject.parser.DependencyTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    /* if (\"dependencies\".equals (qName)) { myDependenciesSectionStarted =\n    true; }\n     */\r\n    if (\"depend\".equals(qName)) {\r\n        /* if (!myDependenciesSectionStarted) { throw new\n        RuntimeException(\"Invalid file format. Found dependency tag\n        without prior dependencies tag\"); } else {\n         */\r\n        loadDependency(attrs);\r\n    }\r\n}'),(2725,'Attributes attrs','org.xml.sax.Attributes',0,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3627,'net.sourceforge.ganttproject.parser.DependencyTagHandler.loadDependency(org.xml.sax.Attributes)',0,'protected void loadDependency(Attributes attrs) {\r\n    if (attrs != null) {\r\n        DependencyTagHandler.GanttDependStructure gds = new DependencyTagHandler.GanttDependStructure();\r\n        gds.setTaskID(getDependencyAddressee());\r\n        gds.setDependTaskID(getDependencyAddresser(attrs));\r\n        String dependencyTypeAsString = attrs.getValue(\"type\");\r\n        String differenceAsString = attrs.getValue(\"difference\");\r\n        String hardnessAsString = attrs.getValue(\"hardness\");\r\n        if (dependencyTypeAsString != null) {\r\n            try {\r\n                int dependencyType = Integer.parseInt(dependencyTypeAsString);\r\n                gds.setDependType(dependencyType);\r\n            } catch (NumberFormatException e) {\r\n            }\r\n        }\r\n        if (differenceAsString != null) {\r\n            try {\r\n                int difference = Integer.parseInt(differenceAsString);\r\n                gds.setDifference(difference);\r\n            } catch (NumberFormatException e) {\r\n            }\r\n        }\r\n        if (hardnessAsString != null) {\r\n            TaskDependency.Hardness hardness = TaskDependency.Hardness.parse(hardnessAsString);\r\n            gds.setHardness(hardness);\r\n        }\r\n        getDependencies().add(gds);\r\n    }\r\n}'),(2726,'Attributes attrs','org.xml.sax.Attributes',0,470,'net.sourceforge.ganttproject.parser.DependencyTagHandler',3626,'net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencyAddresser(org.xml.sax.Attributes)',0,'protected int getDependencyAddresser(Attributes attrs) {\r\n    try {\r\n        return Integer.parseInt(attrs.getValue(\"id\"));\r\n    } catch (NumberFormatException e) {\r\n        throw new RuntimeException((\"Failed to parse depend tag. Attribute id seems to be invalid: \" + (attrs.getValue(\"id\"))), e);\r\n    }\r\n}'),(2727,'TaskDependency.Hardness hardness','net.sourceforge.ganttproject.task.dependency.TaskDependency$Hardness',597,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3638,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.setHardness(net.sourceforge.ganttproject.task.dependency.TaskDependency$Hardness)',0,'public void setHardness(TaskDependency.Hardness hardness) {\r\n    myHardness = hardness;\r\n}'),(2728,'int taskID','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3639,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.setTaskID(int)',0,'public void setTaskID(int taskID) {\r\n    this.taskID = taskID;\r\n}'),(2729,'int difference','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3637,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.setDifference(int)',0,'public void setDifference(int difference) {\r\n    this.difference = difference;\r\n}'),(2730,'int successorTaskID','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3635,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.setDependTaskID(int)',0,'public void setDependTaskID(int successorTaskID) {\r\n    this.successorTaskID = successorTaskID;\r\n}'),(2731,'int dependType','int',0,469,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure',3636,'net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure.setDependType(int)',0,'public void setDependType(int dependType) {\r\n    this.dependType = dependType;\r\n}'),(2732,'String message','java.lang.String',0,471,'net.sourceforge.ganttproject.parser.FileFormatException',3641,'net.sourceforge.ganttproject.parser.FileFormatException.-init-(java.lang.String)',0,'public FileFormatException(String message) {\r\n    super(message);\r\n}'),(2733,'String message','java.lang.String',0,471,'net.sourceforge.ganttproject.parser.FileFormatException',3642,'net.sourceforge.ganttproject.parser.FileFormatException.-init-(java.lang.String,java.lang.Throwable)',0,'public FileFormatException(String message, Throwable cause) {\r\n    super(message, cause);\r\n}'),(2734,'Throwable cause','java.lang.Throwable',0,471,'net.sourceforge.ganttproject.parser.FileFormatException',3642,'net.sourceforge.ganttproject.parser.FileFormatException.-init-(java.lang.String,java.lang.Throwable)',0,'public FileFormatException(String message, Throwable cause) {\r\n    super(message, cause);\r\n}'),(2735,'Throwable cause','java.lang.Throwable',0,471,'net.sourceforge.ganttproject.parser.FileFormatException',3643,'net.sourceforge.ganttproject.parser.FileFormatException.-init-(java.lang.Throwable)',0,'public FileFormatException(Throwable cause) {\r\n    super(cause);\r\n}'),(2736,'InputStream inStream','java.io.InputStream',0,472,'net.sourceforge.ganttproject.parser.GPParser',3648,'net.sourceforge.ganttproject.parser.GPParser.load(java.io.InputStream)',0,'boolean load(InputStream inStream) throws IOException;'),(2737,'TagHandler handler','net.sourceforge.ganttproject.parser.TagHandler',481,472,'net.sourceforge.ganttproject.parser.GPParser',3645,'net.sourceforge.ganttproject.parser.GPParser.addTagHandler(net.sourceforge.ganttproject.parser.TagHandler)',0,'void addTagHandler(TagHandler handler);'),(2738,'ParsingListener listener','net.sourceforge.ganttproject.parser.ParsingListener',477,472,'net.sourceforge.ganttproject.parser.GPParser',3644,'net.sourceforge.ganttproject.parser.GPParser.addParsingListener(net.sourceforge.ganttproject.parser.ParsingListener)',0,'void addParsingListener(ParsingListener listener);'),(2739,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,473,'net.sourceforge.ganttproject.parser.HolidayTagHandler',3649,'net.sourceforge.ganttproject.parser.HolidayTagHandler.-init-(net.sourceforge.ganttproject.IGanttProject)',0,'public HolidayTagHandler(IGanttProject project) {\r\n    this.project = project;\r\n    project.getActiveCalendar().getPublicHolidays().clear();\r\n}'),(2740,'String namespaceURI','java.lang.String',0,473,'net.sourceforge.ganttproject.parser.HolidayTagHandler',3650,'net.sourceforge.ganttproject.parser.HolidayTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2741,'String sName','java.lang.String',0,473,'net.sourceforge.ganttproject.parser.HolidayTagHandler',3650,'net.sourceforge.ganttproject.parser.HolidayTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2742,'String qName','java.lang.String',0,473,'net.sourceforge.ganttproject.parser.HolidayTagHandler',3650,'net.sourceforge.ganttproject.parser.HolidayTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2743,'String namespaceURI','java.lang.String',0,473,'net.sourceforge.ganttproject.parser.HolidayTagHandler',3654,'net.sourceforge.ganttproject.parser.HolidayTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"date\")) {\r\n        loadHoliday(attrs);\r\n    }\r\n}'),(2744,'String sName','java.lang.String',0,473,'net.sourceforge.ganttproject.parser.HolidayTagHandler',3654,'net.sourceforge.ganttproject.parser.HolidayTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"date\")) {\r\n        loadHoliday(attrs);\r\n    }\r\n}'),(2745,'String qName','java.lang.String',0,473,'net.sourceforge.ganttproject.parser.HolidayTagHandler',3654,'net.sourceforge.ganttproject.parser.HolidayTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"date\")) {\r\n        loadHoliday(attrs);\r\n    }\r\n}'),(2746,'Attributes attrs','org.xml.sax.Attributes',0,473,'net.sourceforge.ganttproject.parser.HolidayTagHandler',3654,'net.sourceforge.ganttproject.parser.HolidayTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"date\")) {\r\n        loadHoliday(attrs);\r\n    }\r\n}'),(2747,'Attributes atts','org.xml.sax.Attributes',0,473,'net.sourceforge.ganttproject.parser.HolidayTagHandler',3651,'net.sourceforge.ganttproject.parser.HolidayTagHandler.loadHoliday(org.xml.sax.Attributes)',0,'private void loadHoliday(Attributes atts) {\r\n    // HumanResource hr;\r\n    try {\r\n        String yearAsString = atts.getValue(\"year\");\r\n        if (yearAsString == null)\r\n            System.out.println(\"yearAsString==null\");\r\n\r\n        String monthAsString = atts.getValue(\"month\");\r\n        String dateAsString = atts.getValue(\"date\");\r\n        int month = Integer.parseInt(monthAsString);\r\n        int date = Integer.parseInt(dateAsString);\r\n        if (yearAsString.equals(\"\")) {\r\n            project.getActiveCalendar().setPublicHoliDayType(month, date);\r\n        } else {\r\n            int year = Integer.parseInt(yearAsString);\r\n            project.getActiveCalendar().setPublicHoliDayType(new GanttCalendar(year, (month - 1), date).getTime());\r\n        }\r\n    } catch (NumberFormatException e) {\r\n        System.out.println((\"ERROR in parsing XML File year is not numeric: \" + (e.toString())));\r\n        return;\r\n    }\r\n}'),(2748,'String namespaceURI','java.lang.String',0,474,'net.sourceforge.ganttproject.parser.IconPositionTagHandler',3663,'net.sourceforge.ganttproject.parser.IconPositionTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"positions\")) {\r\n        loadIcon(attrs);\r\n        loadDeletedIcon(attrs);\r\n    }\r\n}'),(2749,'String sName','java.lang.String',0,474,'net.sourceforge.ganttproject.parser.IconPositionTagHandler',3663,'net.sourceforge.ganttproject.parser.IconPositionTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"positions\")) {\r\n        loadIcon(attrs);\r\n        loadDeletedIcon(attrs);\r\n    }\r\n}'),(2750,'String qName','java.lang.String',0,474,'net.sourceforge.ganttproject.parser.IconPositionTagHandler',3663,'net.sourceforge.ganttproject.parser.IconPositionTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"positions\")) {\r\n        loadIcon(attrs);\r\n        loadDeletedIcon(attrs);\r\n    }\r\n}'),(2751,'Attributes attrs','org.xml.sax.Attributes',0,474,'net.sourceforge.ganttproject.parser.IconPositionTagHandler',3663,'net.sourceforge.ganttproject.parser.IconPositionTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(\"positions\")) {\r\n        loadIcon(attrs);\r\n        loadDeletedIcon(attrs);\r\n    }\r\n}'),(2752,'String namespaceURI','java.lang.String',0,474,'net.sourceforge.ganttproject.parser.IconPositionTagHandler',3656,'net.sourceforge.ganttproject.parser.IconPositionTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2753,'String sName','java.lang.String',0,474,'net.sourceforge.ganttproject.parser.IconPositionTagHandler',3656,'net.sourceforge.ganttproject.parser.IconPositionTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2754,'String qName','java.lang.String',0,474,'net.sourceforge.ganttproject.parser.IconPositionTagHandler',3656,'net.sourceforge.ganttproject.parser.IconPositionTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2755,'Attributes atts','org.xml.sax.Attributes',0,474,'net.sourceforge.ganttproject.parser.IconPositionTagHandler',3662,'net.sourceforge.ganttproject.parser.IconPositionTagHandler.loadIcon(org.xml.sax.Attributes)',0,'private void loadIcon(Attributes atts) {\r\n    myPositions = atts.getValue(\"icons-list\");\r\n    if (!(myPositions.equals(\"\"))) {\r\n        String[] positions = myPositions.split(\",\");\r\n        myList = new int[positions.length];\r\n        for (int i = 0; i < (positions.length); i++)\r\n            myList[i] = new Integer(positions[i]).intValue();\r\n\r\n    }\r\n}'),(2756,'Attributes atts','org.xml.sax.Attributes',0,474,'net.sourceforge.ganttproject.parser.IconPositionTagHandler',3661,'net.sourceforge.ganttproject.parser.IconPositionTagHandler.loadDeletedIcon(org.xml.sax.Attributes)',0,'private void loadDeletedIcon(Attributes atts) {\r\n    myDeletedPositions = atts.getValue(\"deletedIcons-list\");\r\n    if (((myDeletedPositions) != null) && (!(myDeletedPositions.equals(\"\")))) {\r\n        String[] positions = myDeletedPositions.split(\",\");\r\n        myDeletedList = new int[positions.length];\r\n        for (int i = 0; i < (positions.length); i++)\r\n            myDeletedList[i] = new Integer(positions[i]).intValue();\r\n\r\n    }\r\n}'),(2757,'int id','int',0,476,'net.sourceforge.ganttproject.parser.ParsingContext',3670,'net.sourceforge.ganttproject.parser.ParsingContext.setTaskID(int)',0,'public void setTaskID(int id) {\r\n    myTaskID = id;\r\n}'),(2758,'Task task','net.sourceforge.ganttproject.task.Task',548,476,'net.sourceforge.ganttproject.parser.ParsingContext',3667,'net.sourceforge.ganttproject.parser.ParsingContext.addTaskWithLegacyFixedStart(net.sourceforge.ganttproject.task.Task)',0,'void addTaskWithLegacyFixedStart(Task task) {\r\n    myFixedStartTasks.add(task);\r\n}'),(2759,'List previousStates','java.util.List',0,478,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler',3673,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.-init-(java.util.List)',0,'public PreviousStateTasksTagHandler(List previousStates) {\r\n    myPreviousStates = previousStates;\r\n}'),(2760,'String namespaceURI','java.lang.String',0,478,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler',3678,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"previous-tasks\")) {\r\n        setName(attrs.getValue(\"name\"));\r\n        tasks = new ArrayList();\r\n        if ((myPreviousStates) != null) {\r\n            try {\r\n                previousState = new GanttPreviousState(myName);\r\n                myPreviousStates.add(previousState);\r\n            } catch (IOException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n        }\r\n    } else\r\n        if (qName.equals(\"previous-task\")) {\r\n            // && (myPreviousStates\r\n            // != null)) {\r\n            writePreviousTask(attrs);\r\n        }\r\n\r\n}'),(2761,'String sName','java.lang.String',0,478,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler',3678,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"previous-tasks\")) {\r\n        setName(attrs.getValue(\"name\"));\r\n        tasks = new ArrayList();\r\n        if ((myPreviousStates) != null) {\r\n            try {\r\n                previousState = new GanttPreviousState(myName);\r\n                myPreviousStates.add(previousState);\r\n            } catch (IOException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n        }\r\n    } else\r\n        if (qName.equals(\"previous-task\")) {\r\n            // && (myPreviousStates\r\n            // != null)) {\r\n            writePreviousTask(attrs);\r\n        }\r\n\r\n}'),(2762,'String qName','java.lang.String',0,478,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler',3678,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"previous-tasks\")) {\r\n        setName(attrs.getValue(\"name\"));\r\n        tasks = new ArrayList();\r\n        if ((myPreviousStates) != null) {\r\n            try {\r\n                previousState = new GanttPreviousState(myName);\r\n                myPreviousStates.add(previousState);\r\n            } catch (IOException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n        }\r\n    } else\r\n        if (qName.equals(\"previous-task\")) {\r\n            // && (myPreviousStates\r\n            // != null)) {\r\n            writePreviousTask(attrs);\r\n        }\r\n\r\n}'),(2763,'Attributes attrs','org.xml.sax.Attributes',0,478,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler',3678,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"previous-tasks\")) {\r\n        setName(attrs.getValue(\"name\"));\r\n        tasks = new ArrayList();\r\n        if ((myPreviousStates) != null) {\r\n            try {\r\n                previousState = new GanttPreviousState(myName);\r\n                myPreviousStates.add(previousState);\r\n            } catch (IOException e) {\r\n                if (!(GPLogger.log(e))) {\r\n                    e.printStackTrace(System.err);\r\n                }\r\n            }\r\n        }\r\n    } else\r\n        if (qName.equals(\"previous-task\")) {\r\n            // && (myPreviousStates\r\n            // != null)) {\r\n            writePreviousTask(attrs);\r\n        }\r\n\r\n}'),(2764,'String namespaceURI','java.lang.String',0,478,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler',3674,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    if ((qName.equals(\"previous-tasks\")) && ((myPreviousStates) != null)) {\r\n        previousState.saveFilesFromLoaded(tasks);\r\n    }\r\n}'),(2765,'String sName','java.lang.String',0,478,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler',3674,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    if ((qName.equals(\"previous-tasks\")) && ((myPreviousStates) != null)) {\r\n        previousState.saveFilesFromLoaded(tasks);\r\n    }\r\n}'),(2766,'String qName','java.lang.String',0,478,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler',3674,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    if ((qName.equals(\"previous-tasks\")) && ((myPreviousStates) != null)) {\r\n        previousState.saveFilesFromLoaded(tasks);\r\n    }\r\n}'),(2767,'String name','java.lang.String',0,478,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler',3677,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.setName(java.lang.String)',0,'private void setName(String name) {\r\n    myName = name;\r\n}'),(2768,'Attributes attrs','org.xml.sax.Attributes',0,478,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler',3679,'net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.writePreviousTask(org.xml.sax.Attributes)',0,'private void writePreviousTask(Attributes attrs) {\r\n    String id = attrs.getValue(\"id\");\r\n    String meetingAsString = attrs.getValue(\"meeting\");\r\n    boolean meeting = false;\r\n    if (meetingAsString.equals(\"true\"))\r\n        meeting = true;\r\n\r\n    String start = attrs.getValue(\"start\");\r\n    String duration = attrs.getValue(\"duration\");\r\n    String nestedAsString = attrs.getValue(\"super\");\r\n    boolean nested = false;\r\n    if (nestedAsString.equals(\"true\"))\r\n        nested = true;\r\n\r\n    GanttPreviousStateTask task = new GanttPreviousStateTask(new Integer(id).intValue(), GanttCalendar.parseXMLDate(start), new Integer(duration).intValue(), meeting, nested);\r\n    tasks.add(task);\r\n}'),(2769,'ResourceManager resourceManager','net.sourceforge.ganttproject.resource.ResourceManager',509,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3680,'net.sourceforge.ganttproject.parser.ResourceTagHandler.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.CustomPropertyManager)',0,'public ResourceTagHandler(ResourceManager resourceManager, RoleManager roleManager, CustomPropertyManager resourceCustomPropertyManager) {\r\n    myResourceManager = ((HumanResourceManager) (resourceManager));\r\n    myCustomPropertyManager = resourceCustomPropertyManager;\r\n    // myResourceManager.clear(); //CleanUP the old stuff\r\n    myRoleManager = roleManager;\r\n}'),(2770,'RoleManager roleManager','net.sourceforge.ganttproject.roles.RoleManager',517,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3680,'net.sourceforge.ganttproject.parser.ResourceTagHandler.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.CustomPropertyManager)',0,'public ResourceTagHandler(ResourceManager resourceManager, RoleManager roleManager, CustomPropertyManager resourceCustomPropertyManager) {\r\n    myResourceManager = ((HumanResourceManager) (resourceManager));\r\n    myCustomPropertyManager = resourceCustomPropertyManager;\r\n    // myResourceManager.clear(); //CleanUP the old stuff\r\n    myRoleManager = roleManager;\r\n}'),(2771,'CustomPropertyManager resourceCustomPropertyManager','net.sourceforge.ganttproject.CustomPropertyManager',14,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3680,'net.sourceforge.ganttproject.parser.ResourceTagHandler.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.CustomPropertyManager)',0,'public ResourceTagHandler(ResourceManager resourceManager, RoleManager roleManager, CustomPropertyManager resourceCustomPropertyManager) {\r\n    myResourceManager = ((HumanResourceManager) (resourceManager));\r\n    myCustomPropertyManager = resourceCustomPropertyManager;\r\n    // myResourceManager.clear(); //CleanUP the old stuff\r\n    myRoleManager = roleManager;\r\n}'),(2772,'String namespaceURI','java.lang.String',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3681,'net.sourceforge.ganttproject.parser.ResourceTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2773,'String sName','java.lang.String',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3681,'net.sourceforge.ganttproject.parser.ResourceTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2774,'String qName','java.lang.String',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3681,'net.sourceforge.ganttproject.parser.ResourceTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2775,'String namespaceURI','java.lang.String',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3689,'net.sourceforge.ganttproject.parser.ResourceTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"resource\")) {\r\n        loadResource(attrs);\r\n    }\r\n    if (\"custom-property\".equals(qName)) {\r\n        assert (myCurrentResource) != null;\r\n        loadCustomProperty(attrs);\r\n    }\r\n    if (\"custom-property-definition\".equals(qName)) {\r\n        loadCustomPropertyDefinition(attrs);\r\n    }\r\n}'),(2776,'String sName','java.lang.String',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3689,'net.sourceforge.ganttproject.parser.ResourceTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"resource\")) {\r\n        loadResource(attrs);\r\n    }\r\n    if (\"custom-property\".equals(qName)) {\r\n        assert (myCurrentResource) != null;\r\n        loadCustomProperty(attrs);\r\n    }\r\n    if (\"custom-property-definition\".equals(qName)) {\r\n        loadCustomPropertyDefinition(attrs);\r\n    }\r\n}'),(2777,'String qName','java.lang.String',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3689,'net.sourceforge.ganttproject.parser.ResourceTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"resource\")) {\r\n        loadResource(attrs);\r\n    }\r\n    if (\"custom-property\".equals(qName)) {\r\n        assert (myCurrentResource) != null;\r\n        loadCustomProperty(attrs);\r\n    }\r\n    if (\"custom-property-definition\".equals(qName)) {\r\n        loadCustomPropertyDefinition(attrs);\r\n    }\r\n}'),(2778,'Attributes attrs','org.xml.sax.Attributes',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3689,'net.sourceforge.ganttproject.parser.ResourceTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"resource\")) {\r\n        loadResource(attrs);\r\n    }\r\n    if (\"custom-property\".equals(qName)) {\r\n        assert (myCurrentResource) != null;\r\n        loadCustomProperty(attrs);\r\n    }\r\n    if (\"custom-property-definition\".equals(qName)) {\r\n        loadCustomPropertyDefinition(attrs);\r\n    }\r\n}'),(2779,'Attributes attrs','org.xml.sax.Attributes',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3684,'net.sourceforge.ganttproject.parser.ResourceTagHandler.loadCustomProperty(org.xml.sax.Attributes)',0,'private void loadCustomProperty(Attributes attrs) {\r\n    String id = attrs.getValue(\"definition-id\");\r\n    String value = attrs.getValue(\"value\");\r\n    List definitions = myCustomPropertyManager.getDefinitions();\r\n    for (int i = 0; i < (definitions.size()); i++) {\r\n        CustomPropertyDefinition nextDefinition = ((CustomPropertyDefinition) (definitions.get(i)));\r\n        if (id.equals(nextDefinition.getID())) {\r\n            myCurrentResource.addCustomProperty(nextDefinition, value);\r\n            break;\r\n        }\r\n    }\r\n}'),(2780,'Attributes attrs','org.xml.sax.Attributes',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3685,'net.sourceforge.ganttproject.parser.ResourceTagHandler.loadCustomPropertyDefinition(org.xml.sax.Attributes)',0,'private void loadCustomPropertyDefinition(Attributes attrs) {\r\n    String id = attrs.getValue(\"id\");\r\n    String name = attrs.getValue(\"name\");\r\n    String type = attrs.getValue(\"type\");\r\n    String defaultValue = attrs.getValue(\"default-value\");\r\n    myCustomPropertyManager.createDefinition(id, type, name, defaultValue);\r\n}'),(2781,'Attributes atts','org.xml.sax.Attributes',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3686,'net.sourceforge.ganttproject.parser.ResourceTagHandler.loadResource(org.xml.sax.Attributes)',0,'/**\r\n * Las a resources\r\n */\r\nprivate void loadResource(Attributes atts) {\r\n    final HumanResource hr;\r\n    try {\r\n        String id = atts.getValue(\"id\");\r\n        if (id == null) {\r\n            hr = getResourceManager().newHumanResource();\r\n            hr.setName(atts.getValue(\"name\"));\r\n            getResourceManager().add(hr);\r\n        } else {\r\n            hr = ((HumanResource) (getResourceManager().create(atts.getValue(\"name\"), Integer.parseInt(id))));\r\n        }\r\n        myCurrentResource = hr;\r\n    } catch (NumberFormatException e) {\r\n        System.out.println((\"ERROR in parsing XML File id is not numeric: \" + (e.toString())));\r\n        return;\r\n    }\r\n    hr.setMail(atts.getValue(\"contacts\"));\r\n    hr.setPhone(atts.getValue(\"phone\"));\r\n    try {\r\n        String roleID = atts.getValue(\"function\");\r\n        myLateResource2roleBinding.put(hr, roleID);\r\n        // hr.setFunction(Integer.parseInt());\r\n    } catch (NumberFormatException e) {\r\n        System.out.println((\"ERROR in parsing XML File function id is not numeric: \" + (e.toString())));\r\n    }\r\n}'),(2782,'String persistentIDasString','java.lang.String',0,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3682,'net.sourceforge.ganttproject.parser.ResourceTagHandler.findRole(java.lang.String)',0,'// private GanttPeoplePanel myPeople;\r\nprivate Role findRole(String persistentIDasString) {\r\n    // \r\n    RolePersistentID persistentID = new RolePersistentID(persistentIDasString);\r\n    String rolesetName = persistentID.getRoleSetID();\r\n    int roleID = persistentID.getRoleID();\r\n    RoleSet roleSet;\r\n    if (rolesetName == null) {\r\n        roleSet = myRoleManager.getProjectRoleSet();\r\n        if ((roleSet.findRole(roleID)) == null) {\r\n            if ((roleID <= 10) && (roleID > 2)) {\r\n                roleSet = myRoleManager.getRoleSet(RoleSet.SOFTWARE_DEVELOPMENT);\r\n                roleSet.setEnabled(true);\r\n            } else\r\n                if (roleID <= 2) {\r\n                    roleSet = myRoleManager.getRoleSet(RoleSet.DEFAULT);\r\n                }\r\n\r\n        }\r\n    } else {\r\n        roleSet = myRoleManager.getRoleSet(rolesetName);\r\n    }\r\n    Role result = roleSet.findRole(roleID);\r\n    return result;\r\n}'),(2783,'net.sourceforge.ganttproject.roles.Role','net.sourceforge.ganttproject.roles.Role',512,479,'net.sourceforge.ganttproject.parser.ResourceTagHandler',3682,'net.sourceforge.ganttproject.parser.ResourceTagHandler.findRole(java.lang.String)',1,'// private GanttPeoplePanel myPeople;\r\nprivate Role findRole(String persistentIDasString) {\r\n    // \r\n    RolePersistentID persistentID = new RolePersistentID(persistentIDasString);\r\n    String rolesetName = persistentID.getRoleSetID();\r\n    int roleID = persistentID.getRoleID();\r\n    RoleSet roleSet;\r\n    if (rolesetName == null) {\r\n        roleSet = myRoleManager.getProjectRoleSet();\r\n        if ((roleSet.findRole(roleID)) == null) {\r\n            if ((roleID <= 10) && (roleID > 2)) {\r\n                roleSet = myRoleManager.getRoleSet(RoleSet.SOFTWARE_DEVELOPMENT);\r\n                roleSet.setEnabled(true);\r\n            } else\r\n                if (roleID <= 2) {\r\n                    roleSet = myRoleManager.getRoleSet(RoleSet.DEFAULT);\r\n                }\r\n\r\n        }\r\n    } else {\r\n        roleSet = myRoleManager.getRoleSet(rolesetName);\r\n    }\r\n    Role result = roleSet.findRole(roleID);\r\n    return result;\r\n}'),(2784,'RoleManager roleManager','net.sourceforge.ganttproject.roles.RoleManager',517,480,'net.sourceforge.ganttproject.parser.RoleTagHandler',3690,'net.sourceforge.ganttproject.parser.RoleTagHandler.-init-(net.sourceforge.ganttproject.roles.RoleManager)',0,'public RoleTagHandler(RoleManager roleManager) {\r\n    myRoleManager = roleManager;\r\n    myRoleManager.clear();// CleanUP the old stuff\r\n\r\n}'),(2785,'String namespaceURI','java.lang.String',0,480,'net.sourceforge.ganttproject.parser.RoleTagHandler',3692,'net.sourceforge.ganttproject.parser.RoleTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    if (qName.equals(\"roles\")) {\r\n        clearRoleSet();\r\n    }\r\n}'),(2786,'String sName','java.lang.String',0,480,'net.sourceforge.ganttproject.parser.RoleTagHandler',3692,'net.sourceforge.ganttproject.parser.RoleTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    if (qName.equals(\"roles\")) {\r\n        clearRoleSet();\r\n    }\r\n}'),(2787,'String qName','java.lang.String',0,480,'net.sourceforge.ganttproject.parser.RoleTagHandler',3692,'net.sourceforge.ganttproject.parser.RoleTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#endElement(String,\r\nString, String)\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    if (qName.equals(\"roles\")) {\r\n        clearRoleSet();\r\n    }\r\n}'),(2788,'String namespaceURI','java.lang.String',0,480,'net.sourceforge.ganttproject.parser.RoleTagHandler',3696,'net.sourceforge.ganttproject.parser.RoleTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"roles\")) {\r\n        findRoleSet(attrs.getValue(\"roleset-name\"));\r\n    } else\r\n        if (qName.equals(\"role\")) {\r\n            loadRoles(attrs);\r\n        }\r\n\r\n}'),(2789,'String sName','java.lang.String',0,480,'net.sourceforge.ganttproject.parser.RoleTagHandler',3696,'net.sourceforge.ganttproject.parser.RoleTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"roles\")) {\r\n        findRoleSet(attrs.getValue(\"roleset-name\"));\r\n    } else\r\n        if (qName.equals(\"role\")) {\r\n            loadRoles(attrs);\r\n        }\r\n\r\n}'),(2790,'String qName','java.lang.String',0,480,'net.sourceforge.ganttproject.parser.RoleTagHandler',3696,'net.sourceforge.ganttproject.parser.RoleTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"roles\")) {\r\n        findRoleSet(attrs.getValue(\"roleset-name\"));\r\n    } else\r\n        if (qName.equals(\"role\")) {\r\n            loadRoles(attrs);\r\n        }\r\n\r\n}'),(2791,'Attributes attrs','org.xml.sax.Attributes',0,480,'net.sourceforge.ganttproject.parser.RoleTagHandler',3696,'net.sourceforge.ganttproject.parser.RoleTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n *\r\n *\r\n * @see net.sourceforge.ganttproject.parser.TagHandler#startElement(String,\r\nString, String, Attributes)\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"roles\")) {\r\n        findRoleSet(attrs.getValue(\"roleset-name\"));\r\n    } else\r\n        if (qName.equals(\"role\")) {\r\n            loadRoles(attrs);\r\n        }\r\n\r\n}'),(2792,'String roleSetName','java.lang.String',0,480,'net.sourceforge.ganttproject.parser.RoleTagHandler',3693,'net.sourceforge.ganttproject.parser.RoleTagHandler.findRoleSet(java.lang.String)',0,'private void findRoleSet(String roleSetName) {\r\n    if (roleSetName == null) {\r\n        myRoleSet = myRoleManager.getProjectRoleSet();\r\n    } else {\r\n        myRoleSet = myRoleManager.getRoleSet(roleSetName);\r\n        if ((myRoleSet) == null) {\r\n            myRoleSet = myRoleManager.createRoleSet(roleSetName);\r\n        }\r\n        myRoleSet.setEnabled(true);\r\n    }\r\n}'),(2793,'Attributes atts','org.xml.sax.Attributes',0,480,'net.sourceforge.ganttproject.parser.RoleTagHandler',3695,'net.sourceforge.ganttproject.parser.RoleTagHandler.loadRoles(org.xml.sax.Attributes)',0,'/**\r\n * Las a role\r\n */\r\nprivate void loadRoles(Attributes atts) {\r\n    String roleName = atts.getValue(\"name\");\r\n    RolePersistentID persistentID = new RolePersistentID(atts.getValue(\"id\"));\r\n    Role existingRole = myRoleSet.findRole(persistentID.getRoleID());\r\n    if (existingRole == null) {\r\n        myRoleSet.createRole(roleName, persistentID.getRoleID());\r\n    }\r\n}'),(2794,'String namespaceURI','java.lang.String',0,481,'net.sourceforge.ganttproject.parser.TagHandler',3698,'net.sourceforge.ganttproject.parser.TagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n * Method when start to parse an attibute\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException;'),(2795,'String sName','java.lang.String',0,481,'net.sourceforge.ganttproject.parser.TagHandler',3698,'net.sourceforge.ganttproject.parser.TagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n * Method when start to parse an attibute\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException;'),(2796,'String qName','java.lang.String',0,481,'net.sourceforge.ganttproject.parser.TagHandler',3698,'net.sourceforge.ganttproject.parser.TagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n * Method when start to parse an attibute\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException;'),(2797,'Attributes attrs','org.xml.sax.Attributes',0,481,'net.sourceforge.ganttproject.parser.TagHandler',3698,'net.sourceforge.ganttproject.parser.TagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'/**\r\n * Method when start to parse an attibute\r\n */\r\npublic void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException;'),(2798,'String namespaceURI','java.lang.String',0,481,'net.sourceforge.ganttproject.parser.TagHandler',3697,'net.sourceforge.ganttproject.parser.TagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Method when finish to parse an attibute\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName);'),(2799,'String sName','java.lang.String',0,481,'net.sourceforge.ganttproject.parser.TagHandler',3697,'net.sourceforge.ganttproject.parser.TagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Method when finish to parse an attibute\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName);'),(2800,'String qName','java.lang.String',0,481,'net.sourceforge.ganttproject.parser.TagHandler',3697,'net.sourceforge.ganttproject.parser.TagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Method when finish to parse an attibute\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName);'),(2801,'TableHeaderUIFacade visibleFields','net.sourceforge.ganttproject.gui.TableHeaderUIFacade',324,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3699,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.-init-(net.sourceforge.ganttproject.gui.TableHeaderUIFacade)',0,'public TaskDisplayColumnsTagHandler(TableHeaderUIFacade visibleFields) {\r\n    this(visibleFields, \"displaycolumn\", \"property-id\", \"order\", \"width\");\r\n}'),(2802,'TableHeaderUIFacade visibleFields','net.sourceforge.ganttproject.gui.TableHeaderUIFacade',324,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3700,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.-init-(net.sourceforge.ganttproject.gui.TableHeaderUIFacade,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public TaskDisplayColumnsTagHandler(TableHeaderUIFacade visibleFields, String tagName, String idPropertyName, String orderPropertyName, String widthPropertyName) {\r\n    myVisibleFields = visibleFields;\r\n    myTagName = tagName;\r\n    myIDPropertyName = idPropertyName;\r\n    myOrderPropertyName = orderPropertyName;\r\n    myWidthPropertyName = widthPropertyName;\r\n}'),(2803,'String tagName','java.lang.String',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3700,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.-init-(net.sourceforge.ganttproject.gui.TableHeaderUIFacade,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public TaskDisplayColumnsTagHandler(TableHeaderUIFacade visibleFields, String tagName, String idPropertyName, String orderPropertyName, String widthPropertyName) {\r\n    myVisibleFields = visibleFields;\r\n    myTagName = tagName;\r\n    myIDPropertyName = idPropertyName;\r\n    myOrderPropertyName = orderPropertyName;\r\n    myWidthPropertyName = widthPropertyName;\r\n}'),(2804,'String idPropertyName','java.lang.String',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3700,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.-init-(net.sourceforge.ganttproject.gui.TableHeaderUIFacade,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public TaskDisplayColumnsTagHandler(TableHeaderUIFacade visibleFields, String tagName, String idPropertyName, String orderPropertyName, String widthPropertyName) {\r\n    myVisibleFields = visibleFields;\r\n    myTagName = tagName;\r\n    myIDPropertyName = idPropertyName;\r\n    myOrderPropertyName = orderPropertyName;\r\n    myWidthPropertyName = widthPropertyName;\r\n}'),(2805,'String orderPropertyName','java.lang.String',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3700,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.-init-(net.sourceforge.ganttproject.gui.TableHeaderUIFacade,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public TaskDisplayColumnsTagHandler(TableHeaderUIFacade visibleFields, String tagName, String idPropertyName, String orderPropertyName, String widthPropertyName) {\r\n    myVisibleFields = visibleFields;\r\n    myTagName = tagName;\r\n    myIDPropertyName = idPropertyName;\r\n    myOrderPropertyName = orderPropertyName;\r\n    myWidthPropertyName = widthPropertyName;\r\n}'),(2806,'String widthPropertyName','java.lang.String',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3700,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.-init-(net.sourceforge.ganttproject.gui.TableHeaderUIFacade,java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public TaskDisplayColumnsTagHandler(TableHeaderUIFacade visibleFields, String tagName, String idPropertyName, String orderPropertyName, String widthPropertyName) {\r\n    myVisibleFields = visibleFields;\r\n    myTagName = tagName;\r\n    myIDPropertyName = idPropertyName;\r\n    myOrderPropertyName = orderPropertyName;\r\n    myWidthPropertyName = widthPropertyName;\r\n}'),(2807,'String id','java.lang.String',0,482,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$TaskFieldImpl',3708,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$TaskFieldImpl.-init-(java.lang.String,int,int)',0,'TaskFieldImpl(String id, int order, int width) {\r\n    myID = id;\r\n    myOrder = order;\r\n    myWidth = width;\r\n}'),(2808,'int order','int',0,482,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$TaskFieldImpl',3708,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$TaskFieldImpl.-init-(java.lang.String,int,int)',0,'TaskFieldImpl(String id, int order, int width) {\r\n    myID = id;\r\n    myOrder = order;\r\n    myWidth = width;\r\n}'),(2809,'int width','int',0,482,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$TaskFieldImpl',3708,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$TaskFieldImpl.-init-(java.lang.String,int,int)',0,'TaskFieldImpl(String id, int order, int width) {\r\n    myID = id;\r\n    myOrder = order;\r\n    myWidth = width;\r\n}'),(2810,'String namespaceURI','java.lang.String',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3707,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(myTagName))\r\n        loadTaskDisplay(attrs);\r\n\r\n}'),(2811,'String sName','java.lang.String',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3707,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(myTagName))\r\n        loadTaskDisplay(attrs);\r\n\r\n}'),(2812,'String qName','java.lang.String',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3707,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(myTagName))\r\n        loadTaskDisplay(attrs);\r\n\r\n}'),(2813,'Attributes attrs','org.xml.sax.Attributes',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3707,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (qName.equals(myTagName))\r\n        loadTaskDisplay(attrs);\r\n\r\n}'),(2814,'String namespaceURI','java.lang.String',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3703,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2815,'String sName','java.lang.String',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3703,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2816,'String qName','java.lang.String',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3703,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2817,'Attributes atts','org.xml.sax.Attributes',0,484,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler',3704,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.loadTaskDisplay(org.xml.sax.Attributes)',0,'private void loadTaskDisplay(Attributes atts) {\r\n    String id = atts.getValue(myIDPropertyName);\r\n    String orderStr = atts.getValue(myOrderPropertyName);\r\n    if (orderStr == null) {\r\n        orderStr = String.valueOf(myBuffer.getSize());\r\n    }\r\n    String widthStr = atts.getValue(myWidthPropertyName);\r\n    int order = Integer.parseInt(orderStr);\r\n    int width = (widthStr == null) ? -1 : Integer.parseInt(widthStr);\r\n    myBuffer.add(id, order, width);\r\n}'),(2818,'String name','java.lang.String',0,483,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$VisibleFieldsImpl',3715,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$VisibleFieldsImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    myFields.add(new TaskDisplayColumnsTagHandler.TaskFieldImpl(name, order, width));\r\n}'),(2819,'int order','int',0,483,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$VisibleFieldsImpl',3715,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$VisibleFieldsImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    myFields.add(new TaskDisplayColumnsTagHandler.TaskFieldImpl(name, order, width));\r\n}'),(2820,'int width','int',0,483,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$VisibleFieldsImpl',3715,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$VisibleFieldsImpl.add(java.lang.String,int,int)',0,'public void add(String name, int order, int width) {\r\n    myFields.add(new TaskDisplayColumnsTagHandler.TaskFieldImpl(name, order, width));\r\n}'),(2821,'int index','int',0,483,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$VisibleFieldsImpl',3717,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$VisibleFieldsImpl.getField(int)',0,'public TableHeaderUIFacade.Column getField(int index) {\r\n    return ((TableHeaderUIFacade.Column) (myFields.get(index)));\r\n}'),(2822,'TableHeaderUIFacade source','net.sourceforge.ganttproject.gui.TableHeaderUIFacade',324,483,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$VisibleFieldsImpl',3719,'net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler$VisibleFieldsImpl.importData(net.sourceforge.ganttproject.gui.TableHeaderUIFacade)',0,'public void importData(TableHeaderUIFacade source) {\r\n    throw new UnsupportedOperationException();\r\n}'),(2823,'CustomColumnsStorage columnStorage','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,485,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler',3720,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.-init-(net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'public TaskPropertiesTagHandler(CustomColumnsStorage columnStorage) {\r\n    myColumnStorage = columnStorage;\r\n}'),(2824,'String namespaceURI','java.lang.String',0,485,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler',3725,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"taskproperty\"))\r\n        loadTaskProperty(attrs);\r\n\r\n}'),(2825,'String sName','java.lang.String',0,485,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler',3725,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"taskproperty\"))\r\n        loadTaskProperty(attrs);\r\n\r\n}'),(2826,'String qName','java.lang.String',0,485,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler',3725,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"taskproperty\"))\r\n        loadTaskProperty(attrs);\r\n\r\n}'),(2827,'Attributes attrs','org.xml.sax.Attributes',0,485,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler',3725,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"taskproperty\"))\r\n        loadTaskProperty(attrs);\r\n\r\n}'),(2828,'String namespaceURI','java.lang.String',0,485,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler',3721,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2829,'String sName','java.lang.String',0,485,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler',3721,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2830,'String qName','java.lang.String',0,485,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler',3721,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2831,'Attributes atts','org.xml.sax.Attributes',0,485,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler',3722,'net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.loadTaskProperty(org.xml.sax.Attributes)',0,'private void loadTaskProperty(Attributes atts) {\r\n    String name = atts.getValue(\"name\");\r\n    String id = atts.getValue(\"id\");\r\n    String type = atts.getValue(\"valuetype\");\r\n    if (atts.getValue(\"type\").equals(\"custom\")) {\r\n        CustomColumn cc;\r\n        String valueStr = atts.getValue(\"defaultvalue\");\r\n        CustomPropertyDefinition stubDefinition = net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(type, valueStr);\r\n        cc = new CustomColumn(name, stubDefinition.getType(), stubDefinition.getDefaultValue());\r\n        cc.setId(id);\r\n        myColumnStorage.addCustomColumn(cc);\r\n    }\r\n}'),(2832,'TaskManager mgr','net.sourceforge.ganttproject.task.TaskManager',565,486,'net.sourceforge.ganttproject.parser.TaskTagHandler',3726,'net.sourceforge.ganttproject.parser.TaskTagHandler.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.parser.ParsingContext)',0,'public TaskTagHandler(TaskManager mgr, ParsingContext context) {\r\n    myManager = mgr;\r\n    myContext = context;\r\n}'),(2833,'ParsingContext context','net.sourceforge.ganttproject.parser.ParsingContext',476,486,'net.sourceforge.ganttproject.parser.TaskTagHandler',3726,'net.sourceforge.ganttproject.parser.TaskTagHandler.-init-(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.parser.ParsingContext)',0,'public TaskTagHandler(TaskManager mgr, ParsingContext context) {\r\n    myManager = mgr;\r\n    myContext = context;\r\n}'),(2834,'String namespaceURI','java.lang.String',0,486,'net.sourceforge.ganttproject.parser.TaskTagHandler',3730,'net.sourceforge.ganttproject.parser.TaskTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"task\")) {\r\n        loadTask(attrs);\r\n    }\r\n}'),(2835,'String sName','java.lang.String',0,486,'net.sourceforge.ganttproject.parser.TaskTagHandler',3730,'net.sourceforge.ganttproject.parser.TaskTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"task\")) {\r\n        loadTask(attrs);\r\n    }\r\n}'),(2836,'String qName','java.lang.String',0,486,'net.sourceforge.ganttproject.parser.TaskTagHandler',3730,'net.sourceforge.ganttproject.parser.TaskTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"task\")) {\r\n        loadTask(attrs);\r\n    }\r\n}'),(2837,'Attributes attrs','org.xml.sax.Attributes',0,486,'net.sourceforge.ganttproject.parser.TaskTagHandler',3730,'net.sourceforge.ganttproject.parser.TaskTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"task\")) {\r\n        loadTask(attrs);\r\n    }\r\n}'),(2838,'String namespaceURI','java.lang.String',0,486,'net.sourceforge.ganttproject.parser.TaskTagHandler',3727,'net.sourceforge.ganttproject.parser.TaskTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Method when finish to parse an attibute\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    if (qName.equals(\"task\")) {\r\n        myStack.pop();\r\n    }\r\n}'),(2839,'String sName','java.lang.String',0,486,'net.sourceforge.ganttproject.parser.TaskTagHandler',3727,'net.sourceforge.ganttproject.parser.TaskTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Method when finish to parse an attibute\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    if (qName.equals(\"task\")) {\r\n        myStack.pop();\r\n    }\r\n}'),(2840,'String qName','java.lang.String',0,486,'net.sourceforge.ganttproject.parser.TaskTagHandler',3727,'net.sourceforge.ganttproject.parser.TaskTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'/**\r\n * Method when finish to parse an attibute\r\n */\r\npublic void endElement(String namespaceURI, String sName, String qName) {\r\n    if (qName.equals(\"task\")) {\r\n        myStack.pop();\r\n    }\r\n}'),(2841,'Attributes attrs','org.xml.sax.Attributes',0,486,'net.sourceforge.ganttproject.parser.TaskTagHandler',3729,'net.sourceforge.ganttproject.parser.TaskTagHandler.loadTask(org.xml.sax.Attributes)',0,'private void loadTask(Attributes attrs) {\r\n    String taskIdAsString = attrs.getValue(\"id\");\r\n    GanttTask task = null;\r\n    if (taskIdAsString == null) {\r\n        task = getManager().createTask();\r\n    } else {\r\n        int taskId;\r\n        try {\r\n            taskId = Integer.parseInt(taskIdAsString);\r\n        } catch (NumberFormatException e) {\r\n            throw new RuntimeException(((\"Failed to parse the value \" + taskIdAsString) + \" of attribute id of tag <task>\"), e);\r\n        }\r\n        task = getManager().createTask(taskId);\r\n    }\r\n    // \r\n    String taskName = attrs.getValue(\"name\");\r\n    if (taskName != null) {\r\n        task.setName(taskName);\r\n    }\r\n    String meeting = attrs.getValue(\"meeting\");\r\n    if (meeting != null) {\r\n        task.setMilestone(meeting.equals(\"true\"));\r\n    }\r\n    String project = attrs.getValue(\"project\");\r\n    if (project != null)\r\n        task.setProjectTask(true);\r\n\r\n    String start = attrs.getValue(\"start\");\r\n    if (start != null) {\r\n        task.setStart(GanttCalendar.parseXMLDate(start));\r\n    }\r\n    String duration = attrs.getValue(\"duration\");\r\n    if (duration != null) {\r\n        try {\r\n            int length = Integer.parseInt(duration);\r\n            if (length == 0) {\r\n                length = 1;\r\n            }\r\n            task.setLength(length);\r\n        } catch (NumberFormatException e) {\r\n            throw new RuntimeException(((\"Failed to parse the value \" + duration) + \" of attribute duration of tag <task>\"), e);\r\n        }\r\n    }\r\n    String complete = attrs.getValue(\"complete\");\r\n    if (complete != null) {\r\n        try {\r\n            task.setCompletionPercentage(Integer.parseInt(complete));\r\n        } catch (NumberFormatException e) {\r\n            throw new RuntimeException(((\"Failed to parse the value \" + complete) + \" of attribute complete of tag <task>\"), e);\r\n        }\r\n    }\r\n    String priority = attrs.getValue(\"priority\");\r\n    if (priority != null) {\r\n        try {\r\n            task.setPriority(Integer.parseInt(priority));\r\n        } catch (NumberFormatException e) {\r\n            throw new RuntimeException(((\"Failed to parse the value \" + priority) + \" of attribute priority of tag <task>\"), e);\r\n        }\r\n    }\r\n    String color = attrs.getValue(\"color\");\r\n    if (color != null) {\r\n        task.setColor(ColorValueParser.parseString(color));\r\n    }\r\n    String fixedStart = attrs.getValue(\"fixed-start\");\r\n    if (\"true\".equals(fixedStart)) {\r\n        myContext.addTaskWithLegacyFixedStart(task);\r\n    }\r\n    // String fixedFinish = attrs.getValue(\"fixed-finish\");\r\n    // if (\"true\".equals(fixedFinish)) {\r\n    // task.setFinishFixed(true);\r\n    // }\r\n    String third = attrs.getValue(\"thirdDate\");\r\n    if (third != null) {\r\n        task.setThirdDate(GanttCalendar.parseXMLDate(third));\r\n    }\r\n    String thirdConstraint = attrs.getValue(\"thirdDate-constraint\");\r\n    if (thirdConstraint != null) {\r\n        try {\r\n            task.setThirdDateConstraint(Integer.parseInt(thirdConstraint));\r\n        } catch (NumberFormatException e) {\r\n            throw new RuntimeException(((\"Failed to parse the value \" + thirdConstraint) + \" of attribute thirdDate-constraint of tag <task>\"), e);\r\n        }\r\n    }\r\n    String webLink_enc = attrs.getValue(\"webLink\");\r\n    String webLink = webLink_enc;\r\n    if (webLink_enc != null)\r\n        try {\r\n            webLink = URLDecoder.decode(webLink_enc, \"ISO-8859-1\");\r\n        } catch (UnsupportedEncodingException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n\r\n    if (webLink != null) {\r\n        task.setWebLink(webLink);\r\n    }\r\n    String expand = attrs.getValue(\"expand\");\r\n    if (expand != null) {\r\n        task.setExpand(\"true\".equals(expand));\r\n    }\r\n    String shape = attrs.getValue(\"shape\");\r\n    if (shape != null) {\r\n        StringTokenizer st1 = new StringTokenizer(shape, \",\");\r\n        int[] array = new int[]{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };\r\n        String token = \"\";\r\n        int count = 0;\r\n        while (st1.hasMoreTokens()) {\r\n            token = st1.nextToken();\r\n            array[count] = new Integer(token).intValue();\r\n            count++;\r\n        } \r\n        task.setShape(new ShapePaint(4, 4, array, Color.white, task.getColor()));\r\n    }\r\n    getManager().registerTask(task);\r\n    TaskContainmentHierarchyFacade taskHierarchy = getManager().getTaskHierarchy();\r\n    myContext.setTaskID(task.getTaskID());\r\n    Task lastTask = (myStack.isEmpty()) ? taskHierarchy.getRootTask() : ((Task) (myStack.peek()));\r\n    taskHierarchy.move(task, lastTask);\r\n    myStack.push(task);\r\n}'),(2842,'ResourceManager resourceManager','net.sourceforge.ganttproject.resource.ResourceManager',509,487,'net.sourceforge.ganttproject.parser.VacationTagHandler',3731,'net.sourceforge.ganttproject.parser.VacationTagHandler.-init-(net.sourceforge.ganttproject.resource.ResourceManager)',0,'public VacationTagHandler(ResourceManager resourceManager) {\r\n    myResourceManager = ((HumanResourceManager) (resourceManager));\r\n}'),(2843,'String namespaceURI','java.lang.String',0,487,'net.sourceforge.ganttproject.parser.VacationTagHandler',3736,'net.sourceforge.ganttproject.parser.VacationTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"vacation\")) {\r\n        loadResource(attrs);\r\n    }\r\n}'),(2844,'String sName','java.lang.String',0,487,'net.sourceforge.ganttproject.parser.VacationTagHandler',3736,'net.sourceforge.ganttproject.parser.VacationTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"vacation\")) {\r\n        loadResource(attrs);\r\n    }\r\n}'),(2845,'String qName','java.lang.String',0,487,'net.sourceforge.ganttproject.parser.VacationTagHandler',3736,'net.sourceforge.ganttproject.parser.VacationTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"vacation\")) {\r\n        loadResource(attrs);\r\n    }\r\n}'),(2846,'Attributes attrs','org.xml.sax.Attributes',0,487,'net.sourceforge.ganttproject.parser.VacationTagHandler',3736,'net.sourceforge.ganttproject.parser.VacationTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) {\r\n    if (qName.equals(\"vacation\")) {\r\n        loadResource(attrs);\r\n    }\r\n}'),(2847,'Attributes atts','org.xml.sax.Attributes',0,487,'net.sourceforge.ganttproject.parser.VacationTagHandler',3733,'net.sourceforge.ganttproject.parser.VacationTagHandler.loadResource(org.xml.sax.Attributes)',0,'private void loadResource(Attributes atts) {\r\n    try {\r\n        // <vacation start=\"2005-04-14\" end=\"2005-04-14\" resourceid=\"0\"/>\r\n        // GanttCalendar.parseXMLDate(attrs.getValue(i)).getTime()\r\n        String startAsString = atts.getValue(\"start\");\r\n        String endAsString = atts.getValue(\"end\");\r\n        String resourceIdAsString = atts.getValue(\"resourceid\");\r\n        HumanResource hr;\r\n        hr = ((HumanResource) (myResourceManager.getById(Integer.parseInt(resourceIdAsString))));\r\n        hr.addDaysOff(new GanttDaysOff(GanttCalendar.parseXMLDate(startAsString), GanttCalendar.parseXMLDate(endAsString)));\r\n    } catch (NumberFormatException e) {\r\n        System.out.println((\"ERROR in parsing XML File year is not numeric: \" + (e.toString())));\r\n        return;\r\n    }\r\n}'),(2848,'String namespaceURI','java.lang.String',0,487,'net.sourceforge.ganttproject.parser.VacationTagHandler',3732,'net.sourceforge.ganttproject.parser.VacationTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2849,'String sName','java.lang.String',0,487,'net.sourceforge.ganttproject.parser.VacationTagHandler',3732,'net.sourceforge.ganttproject.parser.VacationTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2850,'String qName','java.lang.String',0,487,'net.sourceforge.ganttproject.parser.VacationTagHandler',3732,'net.sourceforge.ganttproject.parser.VacationTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n    // TODO Auto-generated method stub\r\n}'),(2851,'UIFacade uiFacade','net.sourceforge.ganttproject.gui.UIFacade',337,488,'net.sourceforge.ganttproject.parser.ViewTagHandler',3737,'net.sourceforge.ganttproject.parser.ViewTagHandler.-init-(net.sourceforge.ganttproject.gui.UIFacade)',0,'public ViewTagHandler(UIFacade uiFacade) {\r\n    myUIFacade = uiFacade;\r\n}'),(2852,'String namespaceURI','java.lang.String',0,488,'net.sourceforge.ganttproject.parser.ViewTagHandler',3740,'net.sourceforge.ganttproject.parser.ViewTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (\"view\".equals(qName)) {\r\n        loadViewState(attrs);\r\n    }\r\n}'),(2853,'String sName','java.lang.String',0,488,'net.sourceforge.ganttproject.parser.ViewTagHandler',3740,'net.sourceforge.ganttproject.parser.ViewTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (\"view\".equals(qName)) {\r\n        loadViewState(attrs);\r\n    }\r\n}'),(2854,'String qName','java.lang.String',0,488,'net.sourceforge.ganttproject.parser.ViewTagHandler',3740,'net.sourceforge.ganttproject.parser.ViewTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (\"view\".equals(qName)) {\r\n        loadViewState(attrs);\r\n    }\r\n}'),(2855,'Attributes attrs','org.xml.sax.Attributes',0,488,'net.sourceforge.ganttproject.parser.ViewTagHandler',3740,'net.sourceforge.ganttproject.parser.ViewTagHandler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)',0,'public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws FileFormatException {\r\n    if (\"view\".equals(qName)) {\r\n        loadViewState(attrs);\r\n    }\r\n}'),(2856,'Attributes attrs','org.xml.sax.Attributes',0,488,'net.sourceforge.ganttproject.parser.ViewTagHandler',3739,'net.sourceforge.ganttproject.parser.ViewTagHandler.loadViewState(org.xml.sax.Attributes)',0,'private void loadViewState(Attributes attrs) {\r\n    myUIFacade.getZoomManager().setZoomState(attrs.getValue(\"zooming-state\"));\r\n}'),(2857,'String namespaceURI','java.lang.String',0,488,'net.sourceforge.ganttproject.parser.ViewTagHandler',3738,'net.sourceforge.ganttproject.parser.ViewTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2858,'String sName','java.lang.String',0,488,'net.sourceforge.ganttproject.parser.ViewTagHandler',3738,'net.sourceforge.ganttproject.parser.ViewTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2859,'String qName','java.lang.String',0,488,'net.sourceforge.ganttproject.parser.ViewTagHandler',3738,'net.sourceforge.ganttproject.parser.ViewTagHandler.endElement(java.lang.String,java.lang.String,java.lang.String)',0,'public void endElement(String namespaceURI, String sName, String qName) {\r\n}'),(2860,'Class extensionPointInterface','java.lang.Class',0,489,'net.sourceforge.ganttproject.plugins.PluginManager',3744,'net.sourceforge.ganttproject.plugins.PluginManager.getExtensions(java.lang.Class)',0,'public Object[] getExtensions(Class extensionPointInterface) {\r\n    String extensionPointID = extensionPointInterface.getName();\r\n    return getExtensions(extensionPointID, extensionPointInterface);\r\n}'),(2861,'String extensionPointID','java.lang.String',0,489,'net.sourceforge.ganttproject.plugins.PluginManager',3745,'net.sourceforge.ganttproject.plugins.PluginManager.getExtensions(java.lang.String,java.lang.Class)',0,'public Object[] getExtensions(String extensionPointID, Class extensionPointInterface) {\r\n    IExtensionRegistry extensionRegistry = Platform.getExtensionRegistry();\r\n    IConfigurationElement[] configElements = extensionRegistry.getConfigurationElementsFor(extensionPointID);\r\n    ArrayList extensions = new ArrayList();\r\n    for (int i = 0; i < (configElements.length); i++) {\r\n        try {\r\n            Object nextExtension = configElements[i].createExecutableExtension(\"class\");\r\n            assert (nextExtension != null) && (extensionPointInterface.isAssignableFrom(nextExtension.getClass()));\r\n            extensions.add(nextExtension);\r\n        } catch (CoreException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n    }\r\n    return extensions.toArray(((Object[]) (Array.newInstance(extensionPointInterface, 0))));\r\n}'),(2862,'Class extensionPointInterface','java.lang.Class',0,489,'net.sourceforge.ganttproject.plugins.PluginManager',3745,'net.sourceforge.ganttproject.plugins.PluginManager.getExtensions(java.lang.String,java.lang.Class)',0,'public Object[] getExtensions(String extensionPointID, Class extensionPointInterface) {\r\n    IExtensionRegistry extensionRegistry = Platform.getExtensionRegistry();\r\n    IConfigurationElement[] configElements = extensionRegistry.getConfigurationElementsFor(extensionPointID);\r\n    ArrayList extensions = new ArrayList();\r\n    for (int i = 0; i < (configElements.length); i++) {\r\n        try {\r\n            Object nextExtension = configElements[i].createExecutableExtension(\"class\");\r\n            assert (nextExtension != null) && (extensionPointInterface.isAssignableFrom(nextExtension.getClass()));\r\n            extensions.add(nextExtension);\r\n        } catch (CoreException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n    }\r\n    return extensions.toArray(((Object[]) (Array.newInstance(extensionPointInterface, 0))));\r\n}'),(2863,'BufferedImage image','java.awt.image.BufferedImage',0,490,'net.sourceforge.ganttproject.print.GanttPrintable',3746,'net.sourceforge.ganttproject.print.GanttPrintable.-init-(java.awt.image.BufferedImage,double)',0,'/**\r\n * Constructor\r\n *\r\n * @param reduceFactor\r\n * 		TODO\r\n */\r\npublic GanttPrintable(BufferedImage image, double reduceFactor) {\r\n    super();\r\n    this.image = image;\r\n    this.x = this.y = 0;\r\n    this.reduceFactor = (reduceFactor < 1.0) ? GanttPrintable.REDUCE_FACTOR_DEFAULT : reduceFactor;\r\n}'),(2864,'double reduceFactor','double',0,490,'net.sourceforge.ganttproject.print.GanttPrintable',3746,'net.sourceforge.ganttproject.print.GanttPrintable.-init-(java.awt.image.BufferedImage,double)',0,'/**\r\n * Constructor\r\n *\r\n * @param reduceFactor\r\n * 		TODO\r\n */\r\npublic GanttPrintable(BufferedImage image, double reduceFactor) {\r\n    super();\r\n    this.image = image;\r\n    this.x = this.y = 0;\r\n    this.reduceFactor = (reduceFactor < 1.0) ? GanttPrintable.REDUCE_FACTOR_DEFAULT : reduceFactor;\r\n}'),(2865,'Graphics graphics','java.awt.Graphics',0,490,'net.sourceforge.ganttproject.print.GanttPrintable',3747,'net.sourceforge.ganttproject.print.GanttPrintable.print(java.awt.Graphics,java.awt.print.PageFormat,int)',0,'/**\r\n * Print the page\r\n */\r\npublic int print(Graphics graphics, PageFormat pageFormat, int pageIndex) {\r\n    System.out.println(this.reduceFactor);\r\n    // search for the best possition of the x, y coordinates\r\n    // int i,j=0;\r\n    // int cpt=0;\r\n    // while(j<image.getHeight()) {\r\n    // i=0;\r\n    // while(i<image.getWidth()) {\r\n    // \r\n    // if(cpt==pageIndex) {\r\n    // x=i;\r\n    // y=j;\r\n    // }\r\n    // i+=(int) pageFormat.getImageableWidth();\r\n    // cpt++;\r\n    // }\r\n    // j+=(int) pageFormat.getImageableHeight();\r\n    // }\r\n    // \r\n    // if(cpt<=pageIndex) return Printable.NO_SUCH_PAGE;\r\n    // \r\n    // if(x>image.getWidth())x=0;\r\n    // if(y>image.getHeight())return Printable.NO_SUCH_PAGE;\r\n    // \r\n    // \r\n    System.err.println((((\"[GanttPrintable] print(): image: w=\" + (image.getWidth())) + \" h=\") + (image.getHeight())));\r\n    System.err.println((\"[GanttPrintable] print(): page=\" + pageIndex));\r\n    int pagesPerRow = ((int) ((((image.getWidth()) / (reduceFactor)) / (pageFormat.getImageableWidth())) + 1));\r\n    int numRows = ((int) ((((image.getHeight()) / (reduceFactor)) / (pageFormat.getImageableHeight())) + 1));\r\n    System.err.println((((\"[GanttPrintable] print(): numrows=\" + numRows) + \" pagesPerRow=\") + pagesPerRow));\r\n    int totalPages = pagesPerRow * numRows;\r\n    if (pageIndex >= totalPages) {\r\n        return Printable.NO_SUCH_PAGE;\r\n    }\r\n    // \r\n    int currentRow = pageIndex / pagesPerRow;\r\n    int currentColumn = pageIndex - (currentRow * pagesPerRow);\r\n    System.err.println((((\"[GanttPrintable] print(): curentpage=\" + currentColumn) + \" current row=\") + currentRow));\r\n    // \r\n    int leftx = ((int) ((currentColumn * (pageFormat.getImageableWidth())) * (reduceFactor)));\r\n    int topy = ((int) ((currentRow * (pageFormat.getImageableHeight())) * (reduceFactor)));\r\n    System.err.println((((\"[GanttPrintable] print(): leftx=\" + leftx) + \" topy=\") + topy));\r\n    // \r\n    int height = ((int) (((currentRow + 1) < numRows) ? (pageFormat.getImageableHeight()) * (reduceFactor) : (image.getHeight()) - (((pageFormat.getImageableHeight()) * (reduceFactor)) * (numRows - 1))));\r\n    int width = ((int) (((currentColumn + 1) < pagesPerRow) ? (pageFormat.getImageableWidth()) * (reduceFactor) : (image.getWidth()) - (((pageFormat.getImageableWidth()) * (reduceFactor)) * (pagesPerRow - 1))));\r\n    // \r\n    System.err.println((((\"[GanttPrintable] print(): height=\" + height) + \" width=\") + width));\r\n    Graphics2D g2d = ((Graphics2D) (graphics));\r\n    g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());\r\n    BufferedImage subimage = image.getSubimage(leftx, topy, width, height);\r\n    int h = ((int) ((subimage.getHeight()) / (reduceFactor)));\r\n    int w = ((int) ((subimage.getWidth()) / (reduceFactor)));\r\n    g2d.drawImage(subimage, 0, 0, w, h, null);\r\n    // int imgw = (int)pageFormat.getImageableWidth();\r\n    // int imgh = (int)pageFormat.getImageableHeight();\r\n    // \r\n    // int width=imgw+x<image.getWidth()?imgw:image.getWidth()-x;\r\n    // int height=imgh+y<image.getHeight()?imgh:image.getHeight()-y;\r\n    // \r\n    // g2d.drawImage(image.getSubimage(x,y,width,height),0,0,null);\r\n    // \r\n    // \r\n    // \r\n    return Printable.PAGE_EXISTS;\r\n}'),(2866,'PageFormat pageFormat','java.awt.print.PageFormat',0,490,'net.sourceforge.ganttproject.print.GanttPrintable',3747,'net.sourceforge.ganttproject.print.GanttPrintable.print(java.awt.Graphics,java.awt.print.PageFormat,int)',0,'/**\r\n * Print the page\r\n */\r\npublic int print(Graphics graphics, PageFormat pageFormat, int pageIndex) {\r\n    System.out.println(this.reduceFactor);\r\n    // search for the best possition of the x, y coordinates\r\n    // int i,j=0;\r\n    // int cpt=0;\r\n    // while(j<image.getHeight()) {\r\n    // i=0;\r\n    // while(i<image.getWidth()) {\r\n    // \r\n    // if(cpt==pageIndex) {\r\n    // x=i;\r\n    // y=j;\r\n    // }\r\n    // i+=(int) pageFormat.getImageableWidth();\r\n    // cpt++;\r\n    // }\r\n    // j+=(int) pageFormat.getImageableHeight();\r\n    // }\r\n    // \r\n    // if(cpt<=pageIndex) return Printable.NO_SUCH_PAGE;\r\n    // \r\n    // if(x>image.getWidth())x=0;\r\n    // if(y>image.getHeight())return Printable.NO_SUCH_PAGE;\r\n    // \r\n    // \r\n    System.err.println((((\"[GanttPrintable] print(): image: w=\" + (image.getWidth())) + \" h=\") + (image.getHeight())));\r\n    System.err.println((\"[GanttPrintable] print(): page=\" + pageIndex));\r\n    int pagesPerRow = ((int) ((((image.getWidth()) / (reduceFactor)) / (pageFormat.getImageableWidth())) + 1));\r\n    int numRows = ((int) ((((image.getHeight()) / (reduceFactor)) / (pageFormat.getImageableHeight())) + 1));\r\n    System.err.println((((\"[GanttPrintable] print(): numrows=\" + numRows) + \" pagesPerRow=\") + pagesPerRow));\r\n    int totalPages = pagesPerRow * numRows;\r\n    if (pageIndex >= totalPages) {\r\n        return Printable.NO_SUCH_PAGE;\r\n    }\r\n    // \r\n    int currentRow = pageIndex / pagesPerRow;\r\n    int currentColumn = pageIndex - (currentRow * pagesPerRow);\r\n    System.err.println((((\"[GanttPrintable] print(): curentpage=\" + currentColumn) + \" current row=\") + currentRow));\r\n    // \r\n    int leftx = ((int) ((currentColumn * (pageFormat.getImageableWidth())) * (reduceFactor)));\r\n    int topy = ((int) ((currentRow * (pageFormat.getImageableHeight())) * (reduceFactor)));\r\n    System.err.println((((\"[GanttPrintable] print(): leftx=\" + leftx) + \" topy=\") + topy));\r\n    // \r\n    int height = ((int) (((currentRow + 1) < numRows) ? (pageFormat.getImageableHeight()) * (reduceFactor) : (image.getHeight()) - (((pageFormat.getImageableHeight()) * (reduceFactor)) * (numRows - 1))));\r\n    int width = ((int) (((currentColumn + 1) < pagesPerRow) ? (pageFormat.getImageableWidth()) * (reduceFactor) : (image.getWidth()) - (((pageFormat.getImageableWidth()) * (reduceFactor)) * (pagesPerRow - 1))));\r\n    // \r\n    System.err.println((((\"[GanttPrintable] print(): height=\" + height) + \" width=\") + width));\r\n    Graphics2D g2d = ((Graphics2D) (graphics));\r\n    g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());\r\n    BufferedImage subimage = image.getSubimage(leftx, topy, width, height);\r\n    int h = ((int) ((subimage.getHeight()) / (reduceFactor)));\r\n    int w = ((int) ((subimage.getWidth()) / (reduceFactor)));\r\n    g2d.drawImage(subimage, 0, 0, w, h, null);\r\n    // int imgw = (int)pageFormat.getImageableWidth();\r\n    // int imgh = (int)pageFormat.getImageableHeight();\r\n    // \r\n    // int width=imgw+x<image.getWidth()?imgw:image.getWidth()-x;\r\n    // int height=imgh+y<image.getHeight()?imgh:image.getHeight()-y;\r\n    // \r\n    // g2d.drawImage(image.getSubimage(x,y,width,height),0,0,null);\r\n    // \r\n    // \r\n    // \r\n    return Printable.PAGE_EXISTS;\r\n}'),(2867,'int pageIndex','int',0,490,'net.sourceforge.ganttproject.print.GanttPrintable',3747,'net.sourceforge.ganttproject.print.GanttPrintable.print(java.awt.Graphics,java.awt.print.PageFormat,int)',0,'/**\r\n * Print the page\r\n */\r\npublic int print(Graphics graphics, PageFormat pageFormat, int pageIndex) {\r\n    System.out.println(this.reduceFactor);\r\n    // search for the best possition of the x, y coordinates\r\n    // int i,j=0;\r\n    // int cpt=0;\r\n    // while(j<image.getHeight()) {\r\n    // i=0;\r\n    // while(i<image.getWidth()) {\r\n    // \r\n    // if(cpt==pageIndex) {\r\n    // x=i;\r\n    // y=j;\r\n    // }\r\n    // i+=(int) pageFormat.getImageableWidth();\r\n    // cpt++;\r\n    // }\r\n    // j+=(int) pageFormat.getImageableHeight();\r\n    // }\r\n    // \r\n    // if(cpt<=pageIndex) return Printable.NO_SUCH_PAGE;\r\n    // \r\n    // if(x>image.getWidth())x=0;\r\n    // if(y>image.getHeight())return Printable.NO_SUCH_PAGE;\r\n    // \r\n    // \r\n    System.err.println((((\"[GanttPrintable] print(): image: w=\" + (image.getWidth())) + \" h=\") + (image.getHeight())));\r\n    System.err.println((\"[GanttPrintable] print(): page=\" + pageIndex));\r\n    int pagesPerRow = ((int) ((((image.getWidth()) / (reduceFactor)) / (pageFormat.getImageableWidth())) + 1));\r\n    int numRows = ((int) ((((image.getHeight()) / (reduceFactor)) / (pageFormat.getImageableHeight())) + 1));\r\n    System.err.println((((\"[GanttPrintable] print(): numrows=\" + numRows) + \" pagesPerRow=\") + pagesPerRow));\r\n    int totalPages = pagesPerRow * numRows;\r\n    if (pageIndex >= totalPages) {\r\n        return Printable.NO_SUCH_PAGE;\r\n    }\r\n    // \r\n    int currentRow = pageIndex / pagesPerRow;\r\n    int currentColumn = pageIndex - (currentRow * pagesPerRow);\r\n    System.err.println((((\"[GanttPrintable] print(): curentpage=\" + currentColumn) + \" current row=\") + currentRow));\r\n    // \r\n    int leftx = ((int) ((currentColumn * (pageFormat.getImageableWidth())) * (reduceFactor)));\r\n    int topy = ((int) ((currentRow * (pageFormat.getImageableHeight())) * (reduceFactor)));\r\n    System.err.println((((\"[GanttPrintable] print(): leftx=\" + leftx) + \" topy=\") + topy));\r\n    // \r\n    int height = ((int) (((currentRow + 1) < numRows) ? (pageFormat.getImageableHeight()) * (reduceFactor) : (image.getHeight()) - (((pageFormat.getImageableHeight()) * (reduceFactor)) * (numRows - 1))));\r\n    int width = ((int) (((currentColumn + 1) < pagesPerRow) ? (pageFormat.getImageableWidth()) * (reduceFactor) : (image.getWidth()) - (((pageFormat.getImageableWidth()) * (reduceFactor)) * (pagesPerRow - 1))));\r\n    // \r\n    System.err.println((((\"[GanttPrintable] print(): height=\" + height) + \" width=\") + width));\r\n    Graphics2D g2d = ((Graphics2D) (graphics));\r\n    g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());\r\n    BufferedImage subimage = image.getSubimage(leftx, topy, width, height);\r\n    int h = ((int) ((subimage.getHeight()) / (reduceFactor)));\r\n    int w = ((int) ((subimage.getWidth()) / (reduceFactor)));\r\n    g2d.drawImage(subimage, 0, 0, w, h, null);\r\n    // int imgw = (int)pageFormat.getImageableWidth();\r\n    // int imgh = (int)pageFormat.getImageableHeight();\r\n    // \r\n    // int width=imgw+x<image.getWidth()?imgw:image.getWidth()-x;\r\n    // int height=imgh+y<image.getHeight()?imgh:image.getHeight()-y;\r\n    // \r\n    // g2d.drawImage(image.getSubimage(x,y,width,height),0,0,null);\r\n    // \r\n    // \r\n    // \r\n    return Printable.PAGE_EXISTS;\r\n}'),(2868,'Chart chart','net.sourceforge.ganttproject.chart.Chart',159,491,'net.sourceforge.ganttproject.print.PrintManager',3749,'net.sourceforge.ganttproject.print.PrintManager.printChart(net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttExportSettings)',0,'public static void printChart(Chart chart, GanttExportSettings settings) {\r\n    BufferedImage image = chart.getChart(settings);\r\n    PrinterJob printJob = PrinterJob.getPrinterJob();\r\n    printJob.setPrintable(new GanttPrintable(image, GanttPrintable.REDUCE_FACTOR_DEFAULT));\r\n    PrintRequestAttributeSet attr = new HashPrintRequestAttributeSet();\r\n    attr.add(MediaSizeName.ISO_A4);\r\n    attr.add(OrientationRequested.LANDSCAPE);\r\n    if (printJob.printDialog(attr)) {\r\n        try {\r\n            printJob.print(attr);\r\n        } catch (Exception e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n    }\r\n}'),(2869,'GanttExportSettings settings','net.sourceforge.ganttproject.GanttExportSettings',27,491,'net.sourceforge.ganttproject.print.PrintManager',3749,'net.sourceforge.ganttproject.print.PrintManager.printChart(net.sourceforge.ganttproject.chart.Chart,net.sourceforge.ganttproject.GanttExportSettings)',0,'public static void printChart(Chart chart, GanttExportSettings settings) {\r\n    BufferedImage image = chart.getChart(settings);\r\n    PrinterJob printJob = PrinterJob.getPrinterJob();\r\n    printJob.setPrintable(new GanttPrintable(image, GanttPrintable.REDUCE_FACTOR_DEFAULT));\r\n    PrintRequestAttributeSet attr = new HashPrintRequestAttributeSet();\r\n    attr.add(MediaSizeName.ISO_A4);\r\n    attr.add(OrientationRequested.LANDSCAPE);\r\n    if (printJob.printDialog(attr)) {\r\n        try {\r\n            printJob.print(attr);\r\n        } catch (Exception e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n    }\r\n}'),(2870,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,495,'net.sourceforge.ganttproject.print.PrintPreview',3751,'net.sourceforge.ganttproject.print.PrintPreview.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.chart.Chart,java.util.Date,java.util.Date)',0,'public PrintPreview(IGanttProject project, UIFacade uifacade, Chart chart, Date start, Date end) {\r\n    super(uifacade.getMainFrame(), GanttLanguage.getInstance().getText(\"preview\"), false);\r\n    myProject = project;\r\n    myUIfacade = uifacade;\r\n    Dimension screenDim = Toolkit.getDefaultToolkit().getScreenSize();\r\n    setSize(((int) ((screenDim.width) * 0.75)), ((int) ((screenDim.height) * 0.75)));\r\n    setLocationRelativeTo(null);\r\n    myChart = chart;\r\n    if (start == null) {\r\n        start = myChart.getStartDate();\r\n    }\r\n    if (end == null) {\r\n        end = myChart.getEndDate();\r\n    }\r\n    // myStartDate = start;\r\n    // myEndDate = end;\r\n    myExportSettings = new GanttExportSettings();\r\n    // myExportSettings.setOnlySelectedItem(!Mediator\r\n    // .getTaskSelectionManager().getSelectedTasks().isEmpty());\r\n    // myExportSettings.setStartDate(myStartDate);\r\n    // myExportSettings.setEndDate(myEndDate);\r\n    myPrintable = new GanttPrintable(myChart.getChart(myExportSettings), GanttPrintable.REDUCE_FACTOR_DEFAULT);\r\n    JToolBar tb = new JToolBar();\r\n    JToolBar tb2 = new JToolBar();\r\n    JButton bPrint = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/print_16.gif\")));\r\n    bPrint.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            print();\r\n        }\r\n    });\r\n    JButton bClose = bClose = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/exit_16.gif\")));\r\n    bClose.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            setVisible(false);\r\n            dispose();\r\n        }\r\n    });\r\n    final JButton bPortrait = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/portrait_16.gif\")));\r\n    final JButton bLandscape = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/landscape_16.gif\")));\r\n    bPortrait.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changePageOrientation(PageFormat.PORTRAIT);\r\n                    bLandscape.setEnabled(true);\r\n                    bPortrait.setEnabled(false);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    bLandscape.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changePageOrientation(PageFormat.LANDSCAPE);\r\n                    bLandscape.setEnabled(false);\r\n                    bPortrait.setEnabled(true);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    bLandscape.setEnabled(false);\r\n    String[] scales = new String[]{ \"10 %\", \"25 %\", \"50 %\", \"100 %\" };\r\n    myComboScale = new JComboBox(scales);\r\n    myComboScale.setSelectedIndex(2);\r\n    myComboScale.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changeScale();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    myComboScale.addItemListener(new ItemListener() {\r\n        public void itemStateChanged(ItemEvent arg0) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changeScale();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Dimension dim = myComboScale.getPreferredSize();\r\n    dim.setSize(((dim.getWidth()) + 20), dim.getHeight());\r\n    myComboScale.setMaximumSize(dim);\r\n    myComboScale.setPreferredSize(dim);\r\n    myComboScale.setEditable(true);\r\n    boolean isDate = (start != null) && (end != null);\r\n    ImageIcon icon = new ImageIcon(getClass().getResource(\"/icons/calendar_16.gif\"));\r\n    myStart.lock();\r\n    myFinish.lock();\r\n    if (isDate) {\r\n        /* myStartDateButton = new JButton(new GanttCalendar(myStartDate)\n        .toString(), icon);\n        myStartDateButton.setHorizontalTextPosition(SwingConstants.RIGHT);\n        myStartDateButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        myStartDialogDate = new GanttDialogDate(new JDialog(),\n        new GanttCalendar(myStartDate), false);\n        myStartDialogDate.setVisible(true);\n        if (myStartDialogDate.getValue() == GanttDialogDate.OK) {\n        myStartDate = myStartDialogDate.getDate().getTime();\n        myStartDateButton\n        .setText(new GanttCalendar(myStartDate)\n        .toString());\n        myExportSettings.setStartDate(myStartDate);\n        updateSourceImage(myChart.getChart(myExportSettings));\n        }\n        }\n        });\n\n        myEndDateButton = new JButton(new GanttCalendar(myEndDate)\n        .toString(), icon);\n        myEndDateButton.setHorizontalTextPosition(SwingConstants.RIGHT);\n        myEndDateButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        myEndDialogDate = new GanttDialogDate(new JDialog(),\n        new GanttCalendar(myEndDate), false);\n        myEndDialogDate.setVisible(true);\n        if (myEndDialogDate.getValue() == GanttDialogDate.OK) {\n        myEndDate = myEndDialogDate.getDate().getTime();\n        myEndDateButton.setText(new GanttCalendar(myEndDate)\n        .toString());\n        myExportSettings.setEndDate(myEndDate);\n        updateSourceImage(myChart.getChart(myExportSettings));\n        }\n        }\n        });\n         */\r\n        myWholeProjectButton = new JButton(PrintPreview.language.getText(\"wholeProject\"));\r\n        myWholeProjectButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                myStart.setValue(myChart.getStartDate());\r\n                myFinish.setValue(myChart.getEndDate());\r\n                /* myStartDate = myChart.getStartDate();\n                myEndDate = myChart.getEndDate();\n                myExportSettings.setStartDate(myStartDate);\n                myExportSettings.setEndDate(myEndDate);\n\n                myEndDateButton.setText(new GanttCalendar(myExportSettings\n                .getEndDate()).toString());\n                myStartDateButton.setText(new GanttCalendar(\n                myExportSettings.getStartDate()).toString());\n                myEndDialogDate = new GanttDialogDate(new JDialog(),\n                new GanttCalendar(myEndDate), false);\n                myStartDialogDate = new GanttDialogDate(new JDialog(),\n                new GanttCalendar(myStartDate), false);\n                updateSourceImage(myChart.getChart(myExportSettings));\n                 */\r\n            }\r\n        });\r\n    }\r\n    Vector vMedia = new Vector();\r\n    // try {\r\n    // vMedia = getAllMediaSizeNameAvailable();\r\n    vMedia.add(MediaSizeName.ISO_A0);\r\n    vMedia.add(MediaSizeName.ISO_A1);\r\n    vMedia.add(MediaSizeName.ISO_A2);\r\n    vMedia.add(MediaSizeName.ISO_A3);\r\n    vMedia.add(MediaSizeName.ISO_A4);\r\n    vMedia.add(MediaSizeName.ISO_A5);\r\n    vMedia.add(MediaSizeName.ISO_A6);\r\n    // } catch (ClassNotFoundException e1) {\r\n    // // TODO Auto-generated catch block\r\n    // e1.printStackTrace();\r\n    // }\r\n    if (vMedia != null) {\r\n        myComboMediaSize = new JComboBox(vMedia);\r\n        dim = myComboMediaSize.getPreferredSize();\r\n        dim.setSize(((dim.getWidth()) + 20), dim.getHeight());\r\n        myComboMediaSize.setMaximumSize(dim);\r\n        myComboMediaSize.setPreferredSize(dim);\r\n        myComboMediaSize.addItemListener(new ItemListener() {\r\n            public void itemStateChanged(ItemEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        Object selectedItem = myComboMediaSize.getSelectedItem();\r\n                        if (selectedItem != null) {\r\n                            myMediaSizeName = ((MediaSizeName) (selectedItem));\r\n                            MediaSize ms = MediaSize.getMediaSizeForName(myMediaSizeName);\r\n                            Paper p = new Paper();\r\n                            float[] size = ms.getSize(MediaSize.INCH);\r\n                            p.setSize(((size[0]) * 72), ((size[1]) * 72));\r\n                            p.setImageableArea(72, 72, ((p.getWidth()) - (72 * 2)), ((p.getHeight()) - (72 * 2)));\r\n                            myPageFormat.setPaper(p);\r\n                            changePageOrientation(myOrientation);\r\n                            statusBar.setText1((((ms.getX(MediaSize.MM)) + \" x \") + (ms.getY(MediaSize.MM))));\r\n                            myPreviewContainer.repaint();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    bPrint.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"printProject\"))));\r\n    bPortrait.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"portrait\"))));\r\n    bLandscape.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"landscape\"))));\r\n    bClose.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"close\"))));\r\n    final JButton bZoomOut;\r\n    final JButton bZoomIn;\r\n    if (isDate) {\r\n        myWholeProjectButton.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"displayWholeProject\"))));\r\n        /* myStartDateButton.setToolTipText(GanttProject\n        .getToolTip(GanttProject.correctLabel(language\n        .getText(\"setStartDate\"))));\n        myEndDateButton.setToolTipText(GanttProject.getToolTip(GanttProject\n        .correctLabel(language.getText(\"setEndDate\"))));\n         */\r\n        // GanttProject gp = Mediator.getGanttProjectSingleton();\r\n        final ZoomManager zoomManager = myUIfacade.getZoomManager();\r\n        final Action zoomOut = new ZoomOutAction(zoomManager, \"16\");\r\n        final Action zoomIn = new ZoomInAction(zoomManager, \"16\");\r\n        bZoomOut = new JButton(((Icon) (zoomOut.getValue(Action.SMALL_ICON))));\r\n        bZoomIn = new JButton(((Icon) (zoomIn.getValue(Action.SMALL_ICON))));\r\n        bZoomOut.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        bZoomOut.setText(PrintPreview.language.getText(\"narrowChart\"));\r\n        bZoomOut.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        zoomOut.actionPerformed(null);\r\n                        updateSourceImage();\r\n                        bZoomOut.setEnabled(zoomManager.canZoomOut());\r\n                        bZoomIn.setEnabled(zoomManager.canZoomIn());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        bZoomIn.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        bZoomIn.setText(PrintPreview.language.getText(\"widenChart\"));\r\n        bZoomIn.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        zoomIn.actionPerformed(null);\r\n                        updateSourceImage();\r\n                        bZoomOut.setEnabled(zoomManager.canZoomOut());\r\n                        bZoomIn.setEnabled(zoomManager.canZoomIn());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    } else {\r\n        bZoomOut = null;\r\n        bZoomIn = null;\r\n    }\r\n    tb2.setFloatable(false);\r\n    tb.setFloatable(false);\r\n    tb.add(bClose);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(bPrint);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(bPortrait);\r\n    tb.add(bLandscape);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(new JLabel(((PrintPreview.language.getText(\"zoom\")) + \" \")));\r\n    tb.add(myComboScale);\r\n    if ((vMedia != null) && (!(vMedia.isEmpty()))) {\r\n        tb.addSeparator(new Dimension(16, 16));\r\n        tb.add(new JLabel(((PrintPreview.language.getText(\"choosePaperFormat\")) + \" \")));\r\n        tb.addSeparator(new Dimension(0, 10));\r\n        tb.add(myComboMediaSize);\r\n    }\r\n    if (isDate) {\r\n        tb2.add(bZoomOut);\r\n        tb2.addSeparator(new Dimension(5, 0));\r\n        tb2.add(bZoomIn);\r\n        tb2.addSeparator(new Dimension(20, 0));\r\n        tb2.add(myWholeProjectButton);\r\n        tb2.addSeparator(new Dimension(16, 16));\r\n        OptionsPageBuilder builder = new OptionsPageBuilder();\r\n        builder.setOptionKeyPrefix(\"\");\r\n        tb2.add(builder.createStandaloneOptionPanel(myStart));\r\n        URL iconArrow = this.getClass().getClassLoader().getResource(\"icons/fromto.gif\");\r\n        tb2.add(new JLabel(new ImageIcon(iconArrow)));\r\n        tb2.add(builder.createStandaloneOptionPanel(myFinish));\r\n    }\r\n    JPanel topPanel = new JPanel(new BorderLayout());\r\n    tb.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\r\n    tb2.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\r\n    topPanel.add(tb, BorderLayout.NORTH);\r\n    topPanel.add(tb2, BorderLayout.SOUTH);\r\n    getContentPane().add(topPanel, BorderLayout.NORTH);\r\n    statusBar = new PrintPreview.StatusBar();\r\n    statusBar.setLabel0(PrintPreview.language.getText(\"pageNumber\"));\r\n    statusBar.setLabel1(PrintPreview.language.getText(\"paperSize\"));\r\n    getContentPane().add(statusBar, BorderLayout.SOUTH);\r\n    myPreviewContainer = new PrintPreview.PreviewContainer();\r\n    PrinterJob prnJob = PrinterJob.getPrinterJob();\r\n    // --\r\n    myPageFormat = new PageFormat();\r\n    myPageFormat.setOrientation(myOrientation);\r\n    myMediaSizeName = PrintPreview.DEFAULT_MEDIA_SIZE_NAME;\r\n    MediaSize ms = MediaSize.getMediaSizeForName(myMediaSizeName);\r\n    Paper p = new Paper();\r\n    float[] size = ms.getSize(MediaSize.INCH);\r\n    p.setSize(((size[0]) * 72), ((size[1]) * 72));\r\n    p.setImageableArea(72, 72, ((p.getWidth()) - (72 * 2)), ((p.getHeight()) - (72 * 2)));\r\n    myPageFormat.setPaper(p);\r\n    // --\r\n    statusBar.setText1((((ms.getX(MediaSize.MM)) + \" x \") + (ms.getY(MediaSize.MM))));\r\n    if (((myPageFormat.getHeight()) == 0) || ((myPageFormat.getWidth()) == 0)) {\r\n        myUIfacade.showErrorDialog(\"Unable to determine default page size\");\r\n        return;\r\n    }\r\n    myPageWidth = ((int) (myPageFormat.getWidth()));\r\n    myPageHeight = ((int) (myPageFormat.getHeight()));\r\n    myScale = 50;\r\n    final int w = ((int) (((myPageWidth) * (myScale)) / 100));\r\n    final int h = ((int) (((myPageHeight) * (myScale)) / 100));\r\n    createPages();\r\n    JScrollPane ps = new JScrollPane(myPreviewContainer);\r\n    getContentPane().add(ps, BorderLayout.CENTER);\r\n    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\r\n    setVisible(true);\r\n    myComboMediaSize.setSelectedItem(myMediaSizeName);\r\n    myStart.setValue(start);\r\n    myFinish.setValue(end);\r\n}'),(2871,'UIFacade uifacade','net.sourceforge.ganttproject.gui.UIFacade',337,495,'net.sourceforge.ganttproject.print.PrintPreview',3751,'net.sourceforge.ganttproject.print.PrintPreview.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.chart.Chart,java.util.Date,java.util.Date)',0,'public PrintPreview(IGanttProject project, UIFacade uifacade, Chart chart, Date start, Date end) {\r\n    super(uifacade.getMainFrame(), GanttLanguage.getInstance().getText(\"preview\"), false);\r\n    myProject = project;\r\n    myUIfacade = uifacade;\r\n    Dimension screenDim = Toolkit.getDefaultToolkit().getScreenSize();\r\n    setSize(((int) ((screenDim.width) * 0.75)), ((int) ((screenDim.height) * 0.75)));\r\n    setLocationRelativeTo(null);\r\n    myChart = chart;\r\n    if (start == null) {\r\n        start = myChart.getStartDate();\r\n    }\r\n    if (end == null) {\r\n        end = myChart.getEndDate();\r\n    }\r\n    // myStartDate = start;\r\n    // myEndDate = end;\r\n    myExportSettings = new GanttExportSettings();\r\n    // myExportSettings.setOnlySelectedItem(!Mediator\r\n    // .getTaskSelectionManager().getSelectedTasks().isEmpty());\r\n    // myExportSettings.setStartDate(myStartDate);\r\n    // myExportSettings.setEndDate(myEndDate);\r\n    myPrintable = new GanttPrintable(myChart.getChart(myExportSettings), GanttPrintable.REDUCE_FACTOR_DEFAULT);\r\n    JToolBar tb = new JToolBar();\r\n    JToolBar tb2 = new JToolBar();\r\n    JButton bPrint = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/print_16.gif\")));\r\n    bPrint.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            print();\r\n        }\r\n    });\r\n    JButton bClose = bClose = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/exit_16.gif\")));\r\n    bClose.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            setVisible(false);\r\n            dispose();\r\n        }\r\n    });\r\n    final JButton bPortrait = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/portrait_16.gif\")));\r\n    final JButton bLandscape = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/landscape_16.gif\")));\r\n    bPortrait.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changePageOrientation(PageFormat.PORTRAIT);\r\n                    bLandscape.setEnabled(true);\r\n                    bPortrait.setEnabled(false);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    bLandscape.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changePageOrientation(PageFormat.LANDSCAPE);\r\n                    bLandscape.setEnabled(false);\r\n                    bPortrait.setEnabled(true);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    bLandscape.setEnabled(false);\r\n    String[] scales = new String[]{ \"10 %\", \"25 %\", \"50 %\", \"100 %\" };\r\n    myComboScale = new JComboBox(scales);\r\n    myComboScale.setSelectedIndex(2);\r\n    myComboScale.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changeScale();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    myComboScale.addItemListener(new ItemListener() {\r\n        public void itemStateChanged(ItemEvent arg0) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changeScale();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Dimension dim = myComboScale.getPreferredSize();\r\n    dim.setSize(((dim.getWidth()) + 20), dim.getHeight());\r\n    myComboScale.setMaximumSize(dim);\r\n    myComboScale.setPreferredSize(dim);\r\n    myComboScale.setEditable(true);\r\n    boolean isDate = (start != null) && (end != null);\r\n    ImageIcon icon = new ImageIcon(getClass().getResource(\"/icons/calendar_16.gif\"));\r\n    myStart.lock();\r\n    myFinish.lock();\r\n    if (isDate) {\r\n        /* myStartDateButton = new JButton(new GanttCalendar(myStartDate)\n        .toString(), icon);\n        myStartDateButton.setHorizontalTextPosition(SwingConstants.RIGHT);\n        myStartDateButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        myStartDialogDate = new GanttDialogDate(new JDialog(),\n        new GanttCalendar(myStartDate), false);\n        myStartDialogDate.setVisible(true);\n        if (myStartDialogDate.getValue() == GanttDialogDate.OK) {\n        myStartDate = myStartDialogDate.getDate().getTime();\n        myStartDateButton\n        .setText(new GanttCalendar(myStartDate)\n        .toString());\n        myExportSettings.setStartDate(myStartDate);\n        updateSourceImage(myChart.getChart(myExportSettings));\n        }\n        }\n        });\n\n        myEndDateButton = new JButton(new GanttCalendar(myEndDate)\n        .toString(), icon);\n        myEndDateButton.setHorizontalTextPosition(SwingConstants.RIGHT);\n        myEndDateButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        myEndDialogDate = new GanttDialogDate(new JDialog(),\n        new GanttCalendar(myEndDate), false);\n        myEndDialogDate.setVisible(true);\n        if (myEndDialogDate.getValue() == GanttDialogDate.OK) {\n        myEndDate = myEndDialogDate.getDate().getTime();\n        myEndDateButton.setText(new GanttCalendar(myEndDate)\n        .toString());\n        myExportSettings.setEndDate(myEndDate);\n        updateSourceImage(myChart.getChart(myExportSettings));\n        }\n        }\n        });\n         */\r\n        myWholeProjectButton = new JButton(PrintPreview.language.getText(\"wholeProject\"));\r\n        myWholeProjectButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                myStart.setValue(myChart.getStartDate());\r\n                myFinish.setValue(myChart.getEndDate());\r\n                /* myStartDate = myChart.getStartDate();\n                myEndDate = myChart.getEndDate();\n                myExportSettings.setStartDate(myStartDate);\n                myExportSettings.setEndDate(myEndDate);\n\n                myEndDateButton.setText(new GanttCalendar(myExportSettings\n                .getEndDate()).toString());\n                myStartDateButton.setText(new GanttCalendar(\n                myExportSettings.getStartDate()).toString());\n                myEndDialogDate = new GanttDialogDate(new JDialog(),\n                new GanttCalendar(myEndDate), false);\n                myStartDialogDate = new GanttDialogDate(new JDialog(),\n                new GanttCalendar(myStartDate), false);\n                updateSourceImage(myChart.getChart(myExportSettings));\n                 */\r\n            }\r\n        });\r\n    }\r\n    Vector vMedia = new Vector();\r\n    // try {\r\n    // vMedia = getAllMediaSizeNameAvailable();\r\n    vMedia.add(MediaSizeName.ISO_A0);\r\n    vMedia.add(MediaSizeName.ISO_A1);\r\n    vMedia.add(MediaSizeName.ISO_A2);\r\n    vMedia.add(MediaSizeName.ISO_A3);\r\n    vMedia.add(MediaSizeName.ISO_A4);\r\n    vMedia.add(MediaSizeName.ISO_A5);\r\n    vMedia.add(MediaSizeName.ISO_A6);\r\n    // } catch (ClassNotFoundException e1) {\r\n    // // TODO Auto-generated catch block\r\n    // e1.printStackTrace();\r\n    // }\r\n    if (vMedia != null) {\r\n        myComboMediaSize = new JComboBox(vMedia);\r\n        dim = myComboMediaSize.getPreferredSize();\r\n        dim.setSize(((dim.getWidth()) + 20), dim.getHeight());\r\n        myComboMediaSize.setMaximumSize(dim);\r\n        myComboMediaSize.setPreferredSize(dim);\r\n        myComboMediaSize.addItemListener(new ItemListener() {\r\n            public void itemStateChanged(ItemEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        Object selectedItem = myComboMediaSize.getSelectedItem();\r\n                        if (selectedItem != null) {\r\n                            myMediaSizeName = ((MediaSizeName) (selectedItem));\r\n                            MediaSize ms = MediaSize.getMediaSizeForName(myMediaSizeName);\r\n                            Paper p = new Paper();\r\n                            float[] size = ms.getSize(MediaSize.INCH);\r\n                            p.setSize(((size[0]) * 72), ((size[1]) * 72));\r\n                            p.setImageableArea(72, 72, ((p.getWidth()) - (72 * 2)), ((p.getHeight()) - (72 * 2)));\r\n                            myPageFormat.setPaper(p);\r\n                            changePageOrientation(myOrientation);\r\n                            statusBar.setText1((((ms.getX(MediaSize.MM)) + \" x \") + (ms.getY(MediaSize.MM))));\r\n                            myPreviewContainer.repaint();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    bPrint.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"printProject\"))));\r\n    bPortrait.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"portrait\"))));\r\n    bLandscape.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"landscape\"))));\r\n    bClose.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"close\"))));\r\n    final JButton bZoomOut;\r\n    final JButton bZoomIn;\r\n    if (isDate) {\r\n        myWholeProjectButton.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"displayWholeProject\"))));\r\n        /* myStartDateButton.setToolTipText(GanttProject\n        .getToolTip(GanttProject.correctLabel(language\n        .getText(\"setStartDate\"))));\n        myEndDateButton.setToolTipText(GanttProject.getToolTip(GanttProject\n        .correctLabel(language.getText(\"setEndDate\"))));\n         */\r\n        // GanttProject gp = Mediator.getGanttProjectSingleton();\r\n        final ZoomManager zoomManager = myUIfacade.getZoomManager();\r\n        final Action zoomOut = new ZoomOutAction(zoomManager, \"16\");\r\n        final Action zoomIn = new ZoomInAction(zoomManager, \"16\");\r\n        bZoomOut = new JButton(((Icon) (zoomOut.getValue(Action.SMALL_ICON))));\r\n        bZoomIn = new JButton(((Icon) (zoomIn.getValue(Action.SMALL_ICON))));\r\n        bZoomOut.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        bZoomOut.setText(PrintPreview.language.getText(\"narrowChart\"));\r\n        bZoomOut.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        zoomOut.actionPerformed(null);\r\n                        updateSourceImage();\r\n                        bZoomOut.setEnabled(zoomManager.canZoomOut());\r\n                        bZoomIn.setEnabled(zoomManager.canZoomIn());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        bZoomIn.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        bZoomIn.setText(PrintPreview.language.getText(\"widenChart\"));\r\n        bZoomIn.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        zoomIn.actionPerformed(null);\r\n                        updateSourceImage();\r\n                        bZoomOut.setEnabled(zoomManager.canZoomOut());\r\n                        bZoomIn.setEnabled(zoomManager.canZoomIn());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    } else {\r\n        bZoomOut = null;\r\n        bZoomIn = null;\r\n    }\r\n    tb2.setFloatable(false);\r\n    tb.setFloatable(false);\r\n    tb.add(bClose);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(bPrint);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(bPortrait);\r\n    tb.add(bLandscape);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(new JLabel(((PrintPreview.language.getText(\"zoom\")) + \" \")));\r\n    tb.add(myComboScale);\r\n    if ((vMedia != null) && (!(vMedia.isEmpty()))) {\r\n        tb.addSeparator(new Dimension(16, 16));\r\n        tb.add(new JLabel(((PrintPreview.language.getText(\"choosePaperFormat\")) + \" \")));\r\n        tb.addSeparator(new Dimension(0, 10));\r\n        tb.add(myComboMediaSize);\r\n    }\r\n    if (isDate) {\r\n        tb2.add(bZoomOut);\r\n        tb2.addSeparator(new Dimension(5, 0));\r\n        tb2.add(bZoomIn);\r\n        tb2.addSeparator(new Dimension(20, 0));\r\n        tb2.add(myWholeProjectButton);\r\n        tb2.addSeparator(new Dimension(16, 16));\r\n        OptionsPageBuilder builder = new OptionsPageBuilder();\r\n        builder.setOptionKeyPrefix(\"\");\r\n        tb2.add(builder.createStandaloneOptionPanel(myStart));\r\n        URL iconArrow = this.getClass().getClassLoader().getResource(\"icons/fromto.gif\");\r\n        tb2.add(new JLabel(new ImageIcon(iconArrow)));\r\n        tb2.add(builder.createStandaloneOptionPanel(myFinish));\r\n    }\r\n    JPanel topPanel = new JPanel(new BorderLayout());\r\n    tb.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\r\n    tb2.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\r\n    topPanel.add(tb, BorderLayout.NORTH);\r\n    topPanel.add(tb2, BorderLayout.SOUTH);\r\n    getContentPane().add(topPanel, BorderLayout.NORTH);\r\n    statusBar = new PrintPreview.StatusBar();\r\n    statusBar.setLabel0(PrintPreview.language.getText(\"pageNumber\"));\r\n    statusBar.setLabel1(PrintPreview.language.getText(\"paperSize\"));\r\n    getContentPane().add(statusBar, BorderLayout.SOUTH);\r\n    myPreviewContainer = new PrintPreview.PreviewContainer();\r\n    PrinterJob prnJob = PrinterJob.getPrinterJob();\r\n    // --\r\n    myPageFormat = new PageFormat();\r\n    myPageFormat.setOrientation(myOrientation);\r\n    myMediaSizeName = PrintPreview.DEFAULT_MEDIA_SIZE_NAME;\r\n    MediaSize ms = MediaSize.getMediaSizeForName(myMediaSizeName);\r\n    Paper p = new Paper();\r\n    float[] size = ms.getSize(MediaSize.INCH);\r\n    p.setSize(((size[0]) * 72), ((size[1]) * 72));\r\n    p.setImageableArea(72, 72, ((p.getWidth()) - (72 * 2)), ((p.getHeight()) - (72 * 2)));\r\n    myPageFormat.setPaper(p);\r\n    // --\r\n    statusBar.setText1((((ms.getX(MediaSize.MM)) + \" x \") + (ms.getY(MediaSize.MM))));\r\n    if (((myPageFormat.getHeight()) == 0) || ((myPageFormat.getWidth()) == 0)) {\r\n        myUIfacade.showErrorDialog(\"Unable to determine default page size\");\r\n        return;\r\n    }\r\n    myPageWidth = ((int) (myPageFormat.getWidth()));\r\n    myPageHeight = ((int) (myPageFormat.getHeight()));\r\n    myScale = 50;\r\n    final int w = ((int) (((myPageWidth) * (myScale)) / 100));\r\n    final int h = ((int) (((myPageHeight) * (myScale)) / 100));\r\n    createPages();\r\n    JScrollPane ps = new JScrollPane(myPreviewContainer);\r\n    getContentPane().add(ps, BorderLayout.CENTER);\r\n    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\r\n    setVisible(true);\r\n    myComboMediaSize.setSelectedItem(myMediaSizeName);\r\n    myStart.setValue(start);\r\n    myFinish.setValue(end);\r\n}'),(2872,'Chart chart','net.sourceforge.ganttproject.chart.Chart',159,495,'net.sourceforge.ganttproject.print.PrintPreview',3751,'net.sourceforge.ganttproject.print.PrintPreview.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.chart.Chart,java.util.Date,java.util.Date)',0,'public PrintPreview(IGanttProject project, UIFacade uifacade, Chart chart, Date start, Date end) {\r\n    super(uifacade.getMainFrame(), GanttLanguage.getInstance().getText(\"preview\"), false);\r\n    myProject = project;\r\n    myUIfacade = uifacade;\r\n    Dimension screenDim = Toolkit.getDefaultToolkit().getScreenSize();\r\n    setSize(((int) ((screenDim.width) * 0.75)), ((int) ((screenDim.height) * 0.75)));\r\n    setLocationRelativeTo(null);\r\n    myChart = chart;\r\n    if (start == null) {\r\n        start = myChart.getStartDate();\r\n    }\r\n    if (end == null) {\r\n        end = myChart.getEndDate();\r\n    }\r\n    // myStartDate = start;\r\n    // myEndDate = end;\r\n    myExportSettings = new GanttExportSettings();\r\n    // myExportSettings.setOnlySelectedItem(!Mediator\r\n    // .getTaskSelectionManager().getSelectedTasks().isEmpty());\r\n    // myExportSettings.setStartDate(myStartDate);\r\n    // myExportSettings.setEndDate(myEndDate);\r\n    myPrintable = new GanttPrintable(myChart.getChart(myExportSettings), GanttPrintable.REDUCE_FACTOR_DEFAULT);\r\n    JToolBar tb = new JToolBar();\r\n    JToolBar tb2 = new JToolBar();\r\n    JButton bPrint = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/print_16.gif\")));\r\n    bPrint.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            print();\r\n        }\r\n    });\r\n    JButton bClose = bClose = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/exit_16.gif\")));\r\n    bClose.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            setVisible(false);\r\n            dispose();\r\n        }\r\n    });\r\n    final JButton bPortrait = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/portrait_16.gif\")));\r\n    final JButton bLandscape = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/landscape_16.gif\")));\r\n    bPortrait.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changePageOrientation(PageFormat.PORTRAIT);\r\n                    bLandscape.setEnabled(true);\r\n                    bPortrait.setEnabled(false);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    bLandscape.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changePageOrientation(PageFormat.LANDSCAPE);\r\n                    bLandscape.setEnabled(false);\r\n                    bPortrait.setEnabled(true);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    bLandscape.setEnabled(false);\r\n    String[] scales = new String[]{ \"10 %\", \"25 %\", \"50 %\", \"100 %\" };\r\n    myComboScale = new JComboBox(scales);\r\n    myComboScale.setSelectedIndex(2);\r\n    myComboScale.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changeScale();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    myComboScale.addItemListener(new ItemListener() {\r\n        public void itemStateChanged(ItemEvent arg0) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changeScale();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Dimension dim = myComboScale.getPreferredSize();\r\n    dim.setSize(((dim.getWidth()) + 20), dim.getHeight());\r\n    myComboScale.setMaximumSize(dim);\r\n    myComboScale.setPreferredSize(dim);\r\n    myComboScale.setEditable(true);\r\n    boolean isDate = (start != null) && (end != null);\r\n    ImageIcon icon = new ImageIcon(getClass().getResource(\"/icons/calendar_16.gif\"));\r\n    myStart.lock();\r\n    myFinish.lock();\r\n    if (isDate) {\r\n        /* myStartDateButton = new JButton(new GanttCalendar(myStartDate)\n        .toString(), icon);\n        myStartDateButton.setHorizontalTextPosition(SwingConstants.RIGHT);\n        myStartDateButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        myStartDialogDate = new GanttDialogDate(new JDialog(),\n        new GanttCalendar(myStartDate), false);\n        myStartDialogDate.setVisible(true);\n        if (myStartDialogDate.getValue() == GanttDialogDate.OK) {\n        myStartDate = myStartDialogDate.getDate().getTime();\n        myStartDateButton\n        .setText(new GanttCalendar(myStartDate)\n        .toString());\n        myExportSettings.setStartDate(myStartDate);\n        updateSourceImage(myChart.getChart(myExportSettings));\n        }\n        }\n        });\n\n        myEndDateButton = new JButton(new GanttCalendar(myEndDate)\n        .toString(), icon);\n        myEndDateButton.setHorizontalTextPosition(SwingConstants.RIGHT);\n        myEndDateButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        myEndDialogDate = new GanttDialogDate(new JDialog(),\n        new GanttCalendar(myEndDate), false);\n        myEndDialogDate.setVisible(true);\n        if (myEndDialogDate.getValue() == GanttDialogDate.OK) {\n        myEndDate = myEndDialogDate.getDate().getTime();\n        myEndDateButton.setText(new GanttCalendar(myEndDate)\n        .toString());\n        myExportSettings.setEndDate(myEndDate);\n        updateSourceImage(myChart.getChart(myExportSettings));\n        }\n        }\n        });\n         */\r\n        myWholeProjectButton = new JButton(PrintPreview.language.getText(\"wholeProject\"));\r\n        myWholeProjectButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                myStart.setValue(myChart.getStartDate());\r\n                myFinish.setValue(myChart.getEndDate());\r\n                /* myStartDate = myChart.getStartDate();\n                myEndDate = myChart.getEndDate();\n                myExportSettings.setStartDate(myStartDate);\n                myExportSettings.setEndDate(myEndDate);\n\n                myEndDateButton.setText(new GanttCalendar(myExportSettings\n                .getEndDate()).toString());\n                myStartDateButton.setText(new GanttCalendar(\n                myExportSettings.getStartDate()).toString());\n                myEndDialogDate = new GanttDialogDate(new JDialog(),\n                new GanttCalendar(myEndDate), false);\n                myStartDialogDate = new GanttDialogDate(new JDialog(),\n                new GanttCalendar(myStartDate), false);\n                updateSourceImage(myChart.getChart(myExportSettings));\n                 */\r\n            }\r\n        });\r\n    }\r\n    Vector vMedia = new Vector();\r\n    // try {\r\n    // vMedia = getAllMediaSizeNameAvailable();\r\n    vMedia.add(MediaSizeName.ISO_A0);\r\n    vMedia.add(MediaSizeName.ISO_A1);\r\n    vMedia.add(MediaSizeName.ISO_A2);\r\n    vMedia.add(MediaSizeName.ISO_A3);\r\n    vMedia.add(MediaSizeName.ISO_A4);\r\n    vMedia.add(MediaSizeName.ISO_A5);\r\n    vMedia.add(MediaSizeName.ISO_A6);\r\n    // } catch (ClassNotFoundException e1) {\r\n    // // TODO Auto-generated catch block\r\n    // e1.printStackTrace();\r\n    // }\r\n    if (vMedia != null) {\r\n        myComboMediaSize = new JComboBox(vMedia);\r\n        dim = myComboMediaSize.getPreferredSize();\r\n        dim.setSize(((dim.getWidth()) + 20), dim.getHeight());\r\n        myComboMediaSize.setMaximumSize(dim);\r\n        myComboMediaSize.setPreferredSize(dim);\r\n        myComboMediaSize.addItemListener(new ItemListener() {\r\n            public void itemStateChanged(ItemEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        Object selectedItem = myComboMediaSize.getSelectedItem();\r\n                        if (selectedItem != null) {\r\n                            myMediaSizeName = ((MediaSizeName) (selectedItem));\r\n                            MediaSize ms = MediaSize.getMediaSizeForName(myMediaSizeName);\r\n                            Paper p = new Paper();\r\n                            float[] size = ms.getSize(MediaSize.INCH);\r\n                            p.setSize(((size[0]) * 72), ((size[1]) * 72));\r\n                            p.setImageableArea(72, 72, ((p.getWidth()) - (72 * 2)), ((p.getHeight()) - (72 * 2)));\r\n                            myPageFormat.setPaper(p);\r\n                            changePageOrientation(myOrientation);\r\n                            statusBar.setText1((((ms.getX(MediaSize.MM)) + \" x \") + (ms.getY(MediaSize.MM))));\r\n                            myPreviewContainer.repaint();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    bPrint.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"printProject\"))));\r\n    bPortrait.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"portrait\"))));\r\n    bLandscape.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"landscape\"))));\r\n    bClose.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"close\"))));\r\n    final JButton bZoomOut;\r\n    final JButton bZoomIn;\r\n    if (isDate) {\r\n        myWholeProjectButton.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"displayWholeProject\"))));\r\n        /* myStartDateButton.setToolTipText(GanttProject\n        .getToolTip(GanttProject.correctLabel(language\n        .getText(\"setStartDate\"))));\n        myEndDateButton.setToolTipText(GanttProject.getToolTip(GanttProject\n        .correctLabel(language.getText(\"setEndDate\"))));\n         */\r\n        // GanttProject gp = Mediator.getGanttProjectSingleton();\r\n        final ZoomManager zoomManager = myUIfacade.getZoomManager();\r\n        final Action zoomOut = new ZoomOutAction(zoomManager, \"16\");\r\n        final Action zoomIn = new ZoomInAction(zoomManager, \"16\");\r\n        bZoomOut = new JButton(((Icon) (zoomOut.getValue(Action.SMALL_ICON))));\r\n        bZoomIn = new JButton(((Icon) (zoomIn.getValue(Action.SMALL_ICON))));\r\n        bZoomOut.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        bZoomOut.setText(PrintPreview.language.getText(\"narrowChart\"));\r\n        bZoomOut.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        zoomOut.actionPerformed(null);\r\n                        updateSourceImage();\r\n                        bZoomOut.setEnabled(zoomManager.canZoomOut());\r\n                        bZoomIn.setEnabled(zoomManager.canZoomIn());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        bZoomIn.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        bZoomIn.setText(PrintPreview.language.getText(\"widenChart\"));\r\n        bZoomIn.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        zoomIn.actionPerformed(null);\r\n                        updateSourceImage();\r\n                        bZoomOut.setEnabled(zoomManager.canZoomOut());\r\n                        bZoomIn.setEnabled(zoomManager.canZoomIn());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    } else {\r\n        bZoomOut = null;\r\n        bZoomIn = null;\r\n    }\r\n    tb2.setFloatable(false);\r\n    tb.setFloatable(false);\r\n    tb.add(bClose);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(bPrint);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(bPortrait);\r\n    tb.add(bLandscape);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(new JLabel(((PrintPreview.language.getText(\"zoom\")) + \" \")));\r\n    tb.add(myComboScale);\r\n    if ((vMedia != null) && (!(vMedia.isEmpty()))) {\r\n        tb.addSeparator(new Dimension(16, 16));\r\n        tb.add(new JLabel(((PrintPreview.language.getText(\"choosePaperFormat\")) + \" \")));\r\n        tb.addSeparator(new Dimension(0, 10));\r\n        tb.add(myComboMediaSize);\r\n    }\r\n    if (isDate) {\r\n        tb2.add(bZoomOut);\r\n        tb2.addSeparator(new Dimension(5, 0));\r\n        tb2.add(bZoomIn);\r\n        tb2.addSeparator(new Dimension(20, 0));\r\n        tb2.add(myWholeProjectButton);\r\n        tb2.addSeparator(new Dimension(16, 16));\r\n        OptionsPageBuilder builder = new OptionsPageBuilder();\r\n        builder.setOptionKeyPrefix(\"\");\r\n        tb2.add(builder.createStandaloneOptionPanel(myStart));\r\n        URL iconArrow = this.getClass().getClassLoader().getResource(\"icons/fromto.gif\");\r\n        tb2.add(new JLabel(new ImageIcon(iconArrow)));\r\n        tb2.add(builder.createStandaloneOptionPanel(myFinish));\r\n    }\r\n    JPanel topPanel = new JPanel(new BorderLayout());\r\n    tb.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\r\n    tb2.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\r\n    topPanel.add(tb, BorderLayout.NORTH);\r\n    topPanel.add(tb2, BorderLayout.SOUTH);\r\n    getContentPane().add(topPanel, BorderLayout.NORTH);\r\n    statusBar = new PrintPreview.StatusBar();\r\n    statusBar.setLabel0(PrintPreview.language.getText(\"pageNumber\"));\r\n    statusBar.setLabel1(PrintPreview.language.getText(\"paperSize\"));\r\n    getContentPane().add(statusBar, BorderLayout.SOUTH);\r\n    myPreviewContainer = new PrintPreview.PreviewContainer();\r\n    PrinterJob prnJob = PrinterJob.getPrinterJob();\r\n    // --\r\n    myPageFormat = new PageFormat();\r\n    myPageFormat.setOrientation(myOrientation);\r\n    myMediaSizeName = PrintPreview.DEFAULT_MEDIA_SIZE_NAME;\r\n    MediaSize ms = MediaSize.getMediaSizeForName(myMediaSizeName);\r\n    Paper p = new Paper();\r\n    float[] size = ms.getSize(MediaSize.INCH);\r\n    p.setSize(((size[0]) * 72), ((size[1]) * 72));\r\n    p.setImageableArea(72, 72, ((p.getWidth()) - (72 * 2)), ((p.getHeight()) - (72 * 2)));\r\n    myPageFormat.setPaper(p);\r\n    // --\r\n    statusBar.setText1((((ms.getX(MediaSize.MM)) + \" x \") + (ms.getY(MediaSize.MM))));\r\n    if (((myPageFormat.getHeight()) == 0) || ((myPageFormat.getWidth()) == 0)) {\r\n        myUIfacade.showErrorDialog(\"Unable to determine default page size\");\r\n        return;\r\n    }\r\n    myPageWidth = ((int) (myPageFormat.getWidth()));\r\n    myPageHeight = ((int) (myPageFormat.getHeight()));\r\n    myScale = 50;\r\n    final int w = ((int) (((myPageWidth) * (myScale)) / 100));\r\n    final int h = ((int) (((myPageHeight) * (myScale)) / 100));\r\n    createPages();\r\n    JScrollPane ps = new JScrollPane(myPreviewContainer);\r\n    getContentPane().add(ps, BorderLayout.CENTER);\r\n    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\r\n    setVisible(true);\r\n    myComboMediaSize.setSelectedItem(myMediaSizeName);\r\n    myStart.setValue(start);\r\n    myFinish.setValue(end);\r\n}'),(2873,'Date start','java.util.Date',0,495,'net.sourceforge.ganttproject.print.PrintPreview',3751,'net.sourceforge.ganttproject.print.PrintPreview.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.chart.Chart,java.util.Date,java.util.Date)',0,'public PrintPreview(IGanttProject project, UIFacade uifacade, Chart chart, Date start, Date end) {\r\n    super(uifacade.getMainFrame(), GanttLanguage.getInstance().getText(\"preview\"), false);\r\n    myProject = project;\r\n    myUIfacade = uifacade;\r\n    Dimension screenDim = Toolkit.getDefaultToolkit().getScreenSize();\r\n    setSize(((int) ((screenDim.width) * 0.75)), ((int) ((screenDim.height) * 0.75)));\r\n    setLocationRelativeTo(null);\r\n    myChart = chart;\r\n    if (start == null) {\r\n        start = myChart.getStartDate();\r\n    }\r\n    if (end == null) {\r\n        end = myChart.getEndDate();\r\n    }\r\n    // myStartDate = start;\r\n    // myEndDate = end;\r\n    myExportSettings = new GanttExportSettings();\r\n    // myExportSettings.setOnlySelectedItem(!Mediator\r\n    // .getTaskSelectionManager().getSelectedTasks().isEmpty());\r\n    // myExportSettings.setStartDate(myStartDate);\r\n    // myExportSettings.setEndDate(myEndDate);\r\n    myPrintable = new GanttPrintable(myChart.getChart(myExportSettings), GanttPrintable.REDUCE_FACTOR_DEFAULT);\r\n    JToolBar tb = new JToolBar();\r\n    JToolBar tb2 = new JToolBar();\r\n    JButton bPrint = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/print_16.gif\")));\r\n    bPrint.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            print();\r\n        }\r\n    });\r\n    JButton bClose = bClose = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/exit_16.gif\")));\r\n    bClose.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            setVisible(false);\r\n            dispose();\r\n        }\r\n    });\r\n    final JButton bPortrait = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/portrait_16.gif\")));\r\n    final JButton bLandscape = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/landscape_16.gif\")));\r\n    bPortrait.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changePageOrientation(PageFormat.PORTRAIT);\r\n                    bLandscape.setEnabled(true);\r\n                    bPortrait.setEnabled(false);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    bLandscape.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changePageOrientation(PageFormat.LANDSCAPE);\r\n                    bLandscape.setEnabled(false);\r\n                    bPortrait.setEnabled(true);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    bLandscape.setEnabled(false);\r\n    String[] scales = new String[]{ \"10 %\", \"25 %\", \"50 %\", \"100 %\" };\r\n    myComboScale = new JComboBox(scales);\r\n    myComboScale.setSelectedIndex(2);\r\n    myComboScale.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changeScale();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    myComboScale.addItemListener(new ItemListener() {\r\n        public void itemStateChanged(ItemEvent arg0) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changeScale();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Dimension dim = myComboScale.getPreferredSize();\r\n    dim.setSize(((dim.getWidth()) + 20), dim.getHeight());\r\n    myComboScale.setMaximumSize(dim);\r\n    myComboScale.setPreferredSize(dim);\r\n    myComboScale.setEditable(true);\r\n    boolean isDate = (start != null) && (end != null);\r\n    ImageIcon icon = new ImageIcon(getClass().getResource(\"/icons/calendar_16.gif\"));\r\n    myStart.lock();\r\n    myFinish.lock();\r\n    if (isDate) {\r\n        /* myStartDateButton = new JButton(new GanttCalendar(myStartDate)\n        .toString(), icon);\n        myStartDateButton.setHorizontalTextPosition(SwingConstants.RIGHT);\n        myStartDateButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        myStartDialogDate = new GanttDialogDate(new JDialog(),\n        new GanttCalendar(myStartDate), false);\n        myStartDialogDate.setVisible(true);\n        if (myStartDialogDate.getValue() == GanttDialogDate.OK) {\n        myStartDate = myStartDialogDate.getDate().getTime();\n        myStartDateButton\n        .setText(new GanttCalendar(myStartDate)\n        .toString());\n        myExportSettings.setStartDate(myStartDate);\n        updateSourceImage(myChart.getChart(myExportSettings));\n        }\n        }\n        });\n\n        myEndDateButton = new JButton(new GanttCalendar(myEndDate)\n        .toString(), icon);\n        myEndDateButton.setHorizontalTextPosition(SwingConstants.RIGHT);\n        myEndDateButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        myEndDialogDate = new GanttDialogDate(new JDialog(),\n        new GanttCalendar(myEndDate), false);\n        myEndDialogDate.setVisible(true);\n        if (myEndDialogDate.getValue() == GanttDialogDate.OK) {\n        myEndDate = myEndDialogDate.getDate().getTime();\n        myEndDateButton.setText(new GanttCalendar(myEndDate)\n        .toString());\n        myExportSettings.setEndDate(myEndDate);\n        updateSourceImage(myChart.getChart(myExportSettings));\n        }\n        }\n        });\n         */\r\n        myWholeProjectButton = new JButton(PrintPreview.language.getText(\"wholeProject\"));\r\n        myWholeProjectButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                myStart.setValue(myChart.getStartDate());\r\n                myFinish.setValue(myChart.getEndDate());\r\n                /* myStartDate = myChart.getStartDate();\n                myEndDate = myChart.getEndDate();\n                myExportSettings.setStartDate(myStartDate);\n                myExportSettings.setEndDate(myEndDate);\n\n                myEndDateButton.setText(new GanttCalendar(myExportSettings\n                .getEndDate()).toString());\n                myStartDateButton.setText(new GanttCalendar(\n                myExportSettings.getStartDate()).toString());\n                myEndDialogDate = new GanttDialogDate(new JDialog(),\n                new GanttCalendar(myEndDate), false);\n                myStartDialogDate = new GanttDialogDate(new JDialog(),\n                new GanttCalendar(myStartDate), false);\n                updateSourceImage(myChart.getChart(myExportSettings));\n                 */\r\n            }\r\n        });\r\n    }\r\n    Vector vMedia = new Vector();\r\n    // try {\r\n    // vMedia = getAllMediaSizeNameAvailable();\r\n    vMedia.add(MediaSizeName.ISO_A0);\r\n    vMedia.add(MediaSizeName.ISO_A1);\r\n    vMedia.add(MediaSizeName.ISO_A2);\r\n    vMedia.add(MediaSizeName.ISO_A3);\r\n    vMedia.add(MediaSizeName.ISO_A4);\r\n    vMedia.add(MediaSizeName.ISO_A5);\r\n    vMedia.add(MediaSizeName.ISO_A6);\r\n    // } catch (ClassNotFoundException e1) {\r\n    // // TODO Auto-generated catch block\r\n    // e1.printStackTrace();\r\n    // }\r\n    if (vMedia != null) {\r\n        myComboMediaSize = new JComboBox(vMedia);\r\n        dim = myComboMediaSize.getPreferredSize();\r\n        dim.setSize(((dim.getWidth()) + 20), dim.getHeight());\r\n        myComboMediaSize.setMaximumSize(dim);\r\n        myComboMediaSize.setPreferredSize(dim);\r\n        myComboMediaSize.addItemListener(new ItemListener() {\r\n            public void itemStateChanged(ItemEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        Object selectedItem = myComboMediaSize.getSelectedItem();\r\n                        if (selectedItem != null) {\r\n                            myMediaSizeName = ((MediaSizeName) (selectedItem));\r\n                            MediaSize ms = MediaSize.getMediaSizeForName(myMediaSizeName);\r\n                            Paper p = new Paper();\r\n                            float[] size = ms.getSize(MediaSize.INCH);\r\n                            p.setSize(((size[0]) * 72), ((size[1]) * 72));\r\n                            p.setImageableArea(72, 72, ((p.getWidth()) - (72 * 2)), ((p.getHeight()) - (72 * 2)));\r\n                            myPageFormat.setPaper(p);\r\n                            changePageOrientation(myOrientation);\r\n                            statusBar.setText1((((ms.getX(MediaSize.MM)) + \" x \") + (ms.getY(MediaSize.MM))));\r\n                            myPreviewContainer.repaint();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    bPrint.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"printProject\"))));\r\n    bPortrait.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"portrait\"))));\r\n    bLandscape.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"landscape\"))));\r\n    bClose.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"close\"))));\r\n    final JButton bZoomOut;\r\n    final JButton bZoomIn;\r\n    if (isDate) {\r\n        myWholeProjectButton.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"displayWholeProject\"))));\r\n        /* myStartDateButton.setToolTipText(GanttProject\n        .getToolTip(GanttProject.correctLabel(language\n        .getText(\"setStartDate\"))));\n        myEndDateButton.setToolTipText(GanttProject.getToolTip(GanttProject\n        .correctLabel(language.getText(\"setEndDate\"))));\n         */\r\n        // GanttProject gp = Mediator.getGanttProjectSingleton();\r\n        final ZoomManager zoomManager = myUIfacade.getZoomManager();\r\n        final Action zoomOut = new ZoomOutAction(zoomManager, \"16\");\r\n        final Action zoomIn = new ZoomInAction(zoomManager, \"16\");\r\n        bZoomOut = new JButton(((Icon) (zoomOut.getValue(Action.SMALL_ICON))));\r\n        bZoomIn = new JButton(((Icon) (zoomIn.getValue(Action.SMALL_ICON))));\r\n        bZoomOut.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        bZoomOut.setText(PrintPreview.language.getText(\"narrowChart\"));\r\n        bZoomOut.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        zoomOut.actionPerformed(null);\r\n                        updateSourceImage();\r\n                        bZoomOut.setEnabled(zoomManager.canZoomOut());\r\n                        bZoomIn.setEnabled(zoomManager.canZoomIn());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        bZoomIn.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        bZoomIn.setText(PrintPreview.language.getText(\"widenChart\"));\r\n        bZoomIn.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        zoomIn.actionPerformed(null);\r\n                        updateSourceImage();\r\n                        bZoomOut.setEnabled(zoomManager.canZoomOut());\r\n                        bZoomIn.setEnabled(zoomManager.canZoomIn());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    } else {\r\n        bZoomOut = null;\r\n        bZoomIn = null;\r\n    }\r\n    tb2.setFloatable(false);\r\n    tb.setFloatable(false);\r\n    tb.add(bClose);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(bPrint);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(bPortrait);\r\n    tb.add(bLandscape);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(new JLabel(((PrintPreview.language.getText(\"zoom\")) + \" \")));\r\n    tb.add(myComboScale);\r\n    if ((vMedia != null) && (!(vMedia.isEmpty()))) {\r\n        tb.addSeparator(new Dimension(16, 16));\r\n        tb.add(new JLabel(((PrintPreview.language.getText(\"choosePaperFormat\")) + \" \")));\r\n        tb.addSeparator(new Dimension(0, 10));\r\n        tb.add(myComboMediaSize);\r\n    }\r\n    if (isDate) {\r\n        tb2.add(bZoomOut);\r\n        tb2.addSeparator(new Dimension(5, 0));\r\n        tb2.add(bZoomIn);\r\n        tb2.addSeparator(new Dimension(20, 0));\r\n        tb2.add(myWholeProjectButton);\r\n        tb2.addSeparator(new Dimension(16, 16));\r\n        OptionsPageBuilder builder = new OptionsPageBuilder();\r\n        builder.setOptionKeyPrefix(\"\");\r\n        tb2.add(builder.createStandaloneOptionPanel(myStart));\r\n        URL iconArrow = this.getClass().getClassLoader().getResource(\"icons/fromto.gif\");\r\n        tb2.add(new JLabel(new ImageIcon(iconArrow)));\r\n        tb2.add(builder.createStandaloneOptionPanel(myFinish));\r\n    }\r\n    JPanel topPanel = new JPanel(new BorderLayout());\r\n    tb.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\r\n    tb2.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\r\n    topPanel.add(tb, BorderLayout.NORTH);\r\n    topPanel.add(tb2, BorderLayout.SOUTH);\r\n    getContentPane().add(topPanel, BorderLayout.NORTH);\r\n    statusBar = new PrintPreview.StatusBar();\r\n    statusBar.setLabel0(PrintPreview.language.getText(\"pageNumber\"));\r\n    statusBar.setLabel1(PrintPreview.language.getText(\"paperSize\"));\r\n    getContentPane().add(statusBar, BorderLayout.SOUTH);\r\n    myPreviewContainer = new PrintPreview.PreviewContainer();\r\n    PrinterJob prnJob = PrinterJob.getPrinterJob();\r\n    // --\r\n    myPageFormat = new PageFormat();\r\n    myPageFormat.setOrientation(myOrientation);\r\n    myMediaSizeName = PrintPreview.DEFAULT_MEDIA_SIZE_NAME;\r\n    MediaSize ms = MediaSize.getMediaSizeForName(myMediaSizeName);\r\n    Paper p = new Paper();\r\n    float[] size = ms.getSize(MediaSize.INCH);\r\n    p.setSize(((size[0]) * 72), ((size[1]) * 72));\r\n    p.setImageableArea(72, 72, ((p.getWidth()) - (72 * 2)), ((p.getHeight()) - (72 * 2)));\r\n    myPageFormat.setPaper(p);\r\n    // --\r\n    statusBar.setText1((((ms.getX(MediaSize.MM)) + \" x \") + (ms.getY(MediaSize.MM))));\r\n    if (((myPageFormat.getHeight()) == 0) || ((myPageFormat.getWidth()) == 0)) {\r\n        myUIfacade.showErrorDialog(\"Unable to determine default page size\");\r\n        return;\r\n    }\r\n    myPageWidth = ((int) (myPageFormat.getWidth()));\r\n    myPageHeight = ((int) (myPageFormat.getHeight()));\r\n    myScale = 50;\r\n    final int w = ((int) (((myPageWidth) * (myScale)) / 100));\r\n    final int h = ((int) (((myPageHeight) * (myScale)) / 100));\r\n    createPages();\r\n    JScrollPane ps = new JScrollPane(myPreviewContainer);\r\n    getContentPane().add(ps, BorderLayout.CENTER);\r\n    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\r\n    setVisible(true);\r\n    myComboMediaSize.setSelectedItem(myMediaSizeName);\r\n    myStart.setValue(start);\r\n    myFinish.setValue(end);\r\n}'),(2874,'Date end','java.util.Date',0,495,'net.sourceforge.ganttproject.print.PrintPreview',3751,'net.sourceforge.ganttproject.print.PrintPreview.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.gui.UIFacade,net.sourceforge.ganttproject.chart.Chart,java.util.Date,java.util.Date)',0,'public PrintPreview(IGanttProject project, UIFacade uifacade, Chart chart, Date start, Date end) {\r\n    super(uifacade.getMainFrame(), GanttLanguage.getInstance().getText(\"preview\"), false);\r\n    myProject = project;\r\n    myUIfacade = uifacade;\r\n    Dimension screenDim = Toolkit.getDefaultToolkit().getScreenSize();\r\n    setSize(((int) ((screenDim.width) * 0.75)), ((int) ((screenDim.height) * 0.75)));\r\n    setLocationRelativeTo(null);\r\n    myChart = chart;\r\n    if (start == null) {\r\n        start = myChart.getStartDate();\r\n    }\r\n    if (end == null) {\r\n        end = myChart.getEndDate();\r\n    }\r\n    // myStartDate = start;\r\n    // myEndDate = end;\r\n    myExportSettings = new GanttExportSettings();\r\n    // myExportSettings.setOnlySelectedItem(!Mediator\r\n    // .getTaskSelectionManager().getSelectedTasks().isEmpty());\r\n    // myExportSettings.setStartDate(myStartDate);\r\n    // myExportSettings.setEndDate(myEndDate);\r\n    myPrintable = new GanttPrintable(myChart.getChart(myExportSettings), GanttPrintable.REDUCE_FACTOR_DEFAULT);\r\n    JToolBar tb = new JToolBar();\r\n    JToolBar tb2 = new JToolBar();\r\n    JButton bPrint = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/print_16.gif\")));\r\n    bPrint.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            print();\r\n        }\r\n    });\r\n    JButton bClose = bClose = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/exit_16.gif\")));\r\n    bClose.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            setVisible(false);\r\n            dispose();\r\n        }\r\n    });\r\n    final JButton bPortrait = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/portrait_16.gif\")));\r\n    final JButton bLandscape = new TestGanttRolloverButton(new ImageIcon(getClass().getResource(\"/icons/landscape_16.gif\")));\r\n    bPortrait.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changePageOrientation(PageFormat.PORTRAIT);\r\n                    bLandscape.setEnabled(true);\r\n                    bPortrait.setEnabled(false);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    bLandscape.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changePageOrientation(PageFormat.LANDSCAPE);\r\n                    bLandscape.setEnabled(false);\r\n                    bPortrait.setEnabled(true);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    bLandscape.setEnabled(false);\r\n    String[] scales = new String[]{ \"10 %\", \"25 %\", \"50 %\", \"100 %\" };\r\n    myComboScale = new JComboBox(scales);\r\n    myComboScale.setSelectedIndex(2);\r\n    myComboScale.addActionListener(new ActionListener() {\r\n        public void actionPerformed(ActionEvent e) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changeScale();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    myComboScale.addItemListener(new ItemListener() {\r\n        public void itemStateChanged(ItemEvent arg0) {\r\n            run(new Runnable() {\r\n                public void run() {\r\n                    changeScale();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Dimension dim = myComboScale.getPreferredSize();\r\n    dim.setSize(((dim.getWidth()) + 20), dim.getHeight());\r\n    myComboScale.setMaximumSize(dim);\r\n    myComboScale.setPreferredSize(dim);\r\n    myComboScale.setEditable(true);\r\n    boolean isDate = (start != null) && (end != null);\r\n    ImageIcon icon = new ImageIcon(getClass().getResource(\"/icons/calendar_16.gif\"));\r\n    myStart.lock();\r\n    myFinish.lock();\r\n    if (isDate) {\r\n        /* myStartDateButton = new JButton(new GanttCalendar(myStartDate)\n        .toString(), icon);\n        myStartDateButton.setHorizontalTextPosition(SwingConstants.RIGHT);\n        myStartDateButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        myStartDialogDate = new GanttDialogDate(new JDialog(),\n        new GanttCalendar(myStartDate), false);\n        myStartDialogDate.setVisible(true);\n        if (myStartDialogDate.getValue() == GanttDialogDate.OK) {\n        myStartDate = myStartDialogDate.getDate().getTime();\n        myStartDateButton\n        .setText(new GanttCalendar(myStartDate)\n        .toString());\n        myExportSettings.setStartDate(myStartDate);\n        updateSourceImage(myChart.getChart(myExportSettings));\n        }\n        }\n        });\n\n        myEndDateButton = new JButton(new GanttCalendar(myEndDate)\n        .toString(), icon);\n        myEndDateButton.setHorizontalTextPosition(SwingConstants.RIGHT);\n        myEndDateButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        myEndDialogDate = new GanttDialogDate(new JDialog(),\n        new GanttCalendar(myEndDate), false);\n        myEndDialogDate.setVisible(true);\n        if (myEndDialogDate.getValue() == GanttDialogDate.OK) {\n        myEndDate = myEndDialogDate.getDate().getTime();\n        myEndDateButton.setText(new GanttCalendar(myEndDate)\n        .toString());\n        myExportSettings.setEndDate(myEndDate);\n        updateSourceImage(myChart.getChart(myExportSettings));\n        }\n        }\n        });\n         */\r\n        myWholeProjectButton = new JButton(PrintPreview.language.getText(\"wholeProject\"));\r\n        myWholeProjectButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                myStart.setValue(myChart.getStartDate());\r\n                myFinish.setValue(myChart.getEndDate());\r\n                /* myStartDate = myChart.getStartDate();\n                myEndDate = myChart.getEndDate();\n                myExportSettings.setStartDate(myStartDate);\n                myExportSettings.setEndDate(myEndDate);\n\n                myEndDateButton.setText(new GanttCalendar(myExportSettings\n                .getEndDate()).toString());\n                myStartDateButton.setText(new GanttCalendar(\n                myExportSettings.getStartDate()).toString());\n                myEndDialogDate = new GanttDialogDate(new JDialog(),\n                new GanttCalendar(myEndDate), false);\n                myStartDialogDate = new GanttDialogDate(new JDialog(),\n                new GanttCalendar(myStartDate), false);\n                updateSourceImage(myChart.getChart(myExportSettings));\n                 */\r\n            }\r\n        });\r\n    }\r\n    Vector vMedia = new Vector();\r\n    // try {\r\n    // vMedia = getAllMediaSizeNameAvailable();\r\n    vMedia.add(MediaSizeName.ISO_A0);\r\n    vMedia.add(MediaSizeName.ISO_A1);\r\n    vMedia.add(MediaSizeName.ISO_A2);\r\n    vMedia.add(MediaSizeName.ISO_A3);\r\n    vMedia.add(MediaSizeName.ISO_A4);\r\n    vMedia.add(MediaSizeName.ISO_A5);\r\n    vMedia.add(MediaSizeName.ISO_A6);\r\n    // } catch (ClassNotFoundException e1) {\r\n    // // TODO Auto-generated catch block\r\n    // e1.printStackTrace();\r\n    // }\r\n    if (vMedia != null) {\r\n        myComboMediaSize = new JComboBox(vMedia);\r\n        dim = myComboMediaSize.getPreferredSize();\r\n        dim.setSize(((dim.getWidth()) + 20), dim.getHeight());\r\n        myComboMediaSize.setMaximumSize(dim);\r\n        myComboMediaSize.setPreferredSize(dim);\r\n        myComboMediaSize.addItemListener(new ItemListener() {\r\n            public void itemStateChanged(ItemEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        Object selectedItem = myComboMediaSize.getSelectedItem();\r\n                        if (selectedItem != null) {\r\n                            myMediaSizeName = ((MediaSizeName) (selectedItem));\r\n                            MediaSize ms = MediaSize.getMediaSizeForName(myMediaSizeName);\r\n                            Paper p = new Paper();\r\n                            float[] size = ms.getSize(MediaSize.INCH);\r\n                            p.setSize(((size[0]) * 72), ((size[1]) * 72));\r\n                            p.setImageableArea(72, 72, ((p.getWidth()) - (72 * 2)), ((p.getHeight()) - (72 * 2)));\r\n                            myPageFormat.setPaper(p);\r\n                            changePageOrientation(myOrientation);\r\n                            statusBar.setText1((((ms.getX(MediaSize.MM)) + \" x \") + (ms.getY(MediaSize.MM))));\r\n                            myPreviewContainer.repaint();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    bPrint.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"printProject\"))));\r\n    bPortrait.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"portrait\"))));\r\n    bLandscape.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"landscape\"))));\r\n    bClose.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"close\"))));\r\n    final JButton bZoomOut;\r\n    final JButton bZoomIn;\r\n    if (isDate) {\r\n        myWholeProjectButton.setToolTipText(GanttProject.getToolTip(GanttProject.correctLabel(PrintPreview.language.getText(\"displayWholeProject\"))));\r\n        /* myStartDateButton.setToolTipText(GanttProject\n        .getToolTip(GanttProject.correctLabel(language\n        .getText(\"setStartDate\"))));\n        myEndDateButton.setToolTipText(GanttProject.getToolTip(GanttProject\n        .correctLabel(language.getText(\"setEndDate\"))));\n         */\r\n        // GanttProject gp = Mediator.getGanttProjectSingleton();\r\n        final ZoomManager zoomManager = myUIfacade.getZoomManager();\r\n        final Action zoomOut = new ZoomOutAction(zoomManager, \"16\");\r\n        final Action zoomIn = new ZoomInAction(zoomManager, \"16\");\r\n        bZoomOut = new JButton(((Icon) (zoomOut.getValue(Action.SMALL_ICON))));\r\n        bZoomIn = new JButton(((Icon) (zoomIn.getValue(Action.SMALL_ICON))));\r\n        bZoomOut.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        bZoomOut.setText(PrintPreview.language.getText(\"narrowChart\"));\r\n        bZoomOut.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        zoomOut.actionPerformed(null);\r\n                        updateSourceImage();\r\n                        bZoomOut.setEnabled(zoomManager.canZoomOut());\r\n                        bZoomIn.setEnabled(zoomManager.canZoomIn());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        bZoomIn.setHorizontalTextPosition(SwingConstants.RIGHT);\r\n        bZoomIn.setText(PrintPreview.language.getText(\"widenChart\"));\r\n        bZoomIn.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                run(new Runnable() {\r\n                    public void run() {\r\n                        zoomIn.actionPerformed(null);\r\n                        updateSourceImage();\r\n                        bZoomOut.setEnabled(zoomManager.canZoomOut());\r\n                        bZoomIn.setEnabled(zoomManager.canZoomIn());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    } else {\r\n        bZoomOut = null;\r\n        bZoomIn = null;\r\n    }\r\n    tb2.setFloatable(false);\r\n    tb.setFloatable(false);\r\n    tb.add(bClose);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(bPrint);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(bPortrait);\r\n    tb.add(bLandscape);\r\n    tb.addSeparator(new Dimension(16, 16));\r\n    tb.add(new JLabel(((PrintPreview.language.getText(\"zoom\")) + \" \")));\r\n    tb.add(myComboScale);\r\n    if ((vMedia != null) && (!(vMedia.isEmpty()))) {\r\n        tb.addSeparator(new Dimension(16, 16));\r\n        tb.add(new JLabel(((PrintPreview.language.getText(\"choosePaperFormat\")) + \" \")));\r\n        tb.addSeparator(new Dimension(0, 10));\r\n        tb.add(myComboMediaSize);\r\n    }\r\n    if (isDate) {\r\n        tb2.add(bZoomOut);\r\n        tb2.addSeparator(new Dimension(5, 0));\r\n        tb2.add(bZoomIn);\r\n        tb2.addSeparator(new Dimension(20, 0));\r\n        tb2.add(myWholeProjectButton);\r\n        tb2.addSeparator(new Dimension(16, 16));\r\n        OptionsPageBuilder builder = new OptionsPageBuilder();\r\n        builder.setOptionKeyPrefix(\"\");\r\n        tb2.add(builder.createStandaloneOptionPanel(myStart));\r\n        URL iconArrow = this.getClass().getClassLoader().getResource(\"icons/fromto.gif\");\r\n        tb2.add(new JLabel(new ImageIcon(iconArrow)));\r\n        tb2.add(builder.createStandaloneOptionPanel(myFinish));\r\n    }\r\n    JPanel topPanel = new JPanel(new BorderLayout());\r\n    tb.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\r\n    tb2.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));\r\n    topPanel.add(tb, BorderLayout.NORTH);\r\n    topPanel.add(tb2, BorderLayout.SOUTH);\r\n    getContentPane().add(topPanel, BorderLayout.NORTH);\r\n    statusBar = new PrintPreview.StatusBar();\r\n    statusBar.setLabel0(PrintPreview.language.getText(\"pageNumber\"));\r\n    statusBar.setLabel1(PrintPreview.language.getText(\"paperSize\"));\r\n    getContentPane().add(statusBar, BorderLayout.SOUTH);\r\n    myPreviewContainer = new PrintPreview.PreviewContainer();\r\n    PrinterJob prnJob = PrinterJob.getPrinterJob();\r\n    // --\r\n    myPageFormat = new PageFormat();\r\n    myPageFormat.setOrientation(myOrientation);\r\n    myMediaSizeName = PrintPreview.DEFAULT_MEDIA_SIZE_NAME;\r\n    MediaSize ms = MediaSize.getMediaSizeForName(myMediaSizeName);\r\n    Paper p = new Paper();\r\n    float[] size = ms.getSize(MediaSize.INCH);\r\n    p.setSize(((size[0]) * 72), ((size[1]) * 72));\r\n    p.setImageableArea(72, 72, ((p.getWidth()) - (72 * 2)), ((p.getHeight()) - (72 * 2)));\r\n    myPageFormat.setPaper(p);\r\n    // --\r\n    statusBar.setText1((((ms.getX(MediaSize.MM)) + \" x \") + (ms.getY(MediaSize.MM))));\r\n    if (((myPageFormat.getHeight()) == 0) || ((myPageFormat.getWidth()) == 0)) {\r\n        myUIfacade.showErrorDialog(\"Unable to determine default page size\");\r\n        return;\r\n    }\r\n    myPageWidth = ((int) (myPageFormat.getWidth()));\r\n    myPageHeight = ((int) (myPageFormat.getHeight()));\r\n    myScale = 50;\r\n    final int w = ((int) (((myPageWidth) * (myScale)) / 100));\r\n    final int h = ((int) (((myPageHeight) * (myScale)) / 100));\r\n    createPages();\r\n    JScrollPane ps = new JScrollPane(myPreviewContainer);\r\n    getContentPane().add(ps, BorderLayout.CENTER);\r\n    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\r\n    setVisible(true);\r\n    myComboMediaSize.setSelectedItem(myMediaSizeName);\r\n    myStart.setValue(start);\r\n    myFinish.setValue(end);\r\n}'),(2875,'int pageIndex','int',0,492,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview',3761,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview.-init-(int,java.awt.print.PageFormat,java.awt.print.Printable,int)',0,'public PagePreview(int pageIndex, PageFormat pageFormat, Printable chart, int scalePercents) {\r\n    myScalePercents = scalePercents;\r\n    myPageIndex = pageIndex;\r\n    myPageFormat = pageFormat;\r\n    myChart = chart;\r\n    setBackground(Color.white);\r\n    setBorder(new MatteBorder(1, 1, 2, 2, Color.black));\r\n}'),(2876,'PageFormat pageFormat','java.awt.print.PageFormat',0,492,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview',3761,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview.-init-(int,java.awt.print.PageFormat,java.awt.print.Printable,int)',0,'public PagePreview(int pageIndex, PageFormat pageFormat, Printable chart, int scalePercents) {\r\n    myScalePercents = scalePercents;\r\n    myPageIndex = pageIndex;\r\n    myPageFormat = pageFormat;\r\n    myChart = chart;\r\n    setBackground(Color.white);\r\n    setBorder(new MatteBorder(1, 1, 2, 2, Color.black));\r\n}'),(2877,'Printable chart','java.awt.print.Printable',0,492,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview',3761,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview.-init-(int,java.awt.print.PageFormat,java.awt.print.Printable,int)',0,'public PagePreview(int pageIndex, PageFormat pageFormat, Printable chart, int scalePercents) {\r\n    myScalePercents = scalePercents;\r\n    myPageIndex = pageIndex;\r\n    myPageFormat = pageFormat;\r\n    myChart = chart;\r\n    setBackground(Color.white);\r\n    setBorder(new MatteBorder(1, 1, 2, 2, Color.black));\r\n}'),(2878,'int scalePercents','int',0,492,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview',3761,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview.-init-(int,java.awt.print.PageFormat,java.awt.print.Printable,int)',0,'public PagePreview(int pageIndex, PageFormat pageFormat, Printable chart, int scalePercents) {\r\n    myScalePercents = scalePercents;\r\n    myPageIndex = pageIndex;\r\n    myPageFormat = pageFormat;\r\n    myChart = chart;\r\n    setBackground(Color.white);\r\n    setBorder(new MatteBorder(1, 1, 2, 2, Color.black));\r\n}'),(2879,'Runnable runnable','java.lang.Runnable',0,495,'net.sourceforge.ganttproject.print.PrintPreview',3759,'net.sourceforge.ganttproject.print.PrintPreview.run(java.lang.Runnable)',0,'private void run(Runnable runnable) {\r\n    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));\r\n    runnable.run();\r\n    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\r\n}'),(2880,'int newOrientation','int',0,495,'net.sourceforge.ganttproject.print.PrintPreview',3754,'net.sourceforge.ganttproject.print.PrintPreview.changePageOrientation(int)',0,'private void changePageOrientation(int newOrientation) {\r\n    myOrientation = newOrientation;\r\n    myPageFormat.setOrientation(myOrientation);\r\n    myPageWidth = ((int) (myPageFormat.getWidth()));\r\n    myPageHeight = ((int) (myPageFormat.getHeight()));\r\n    myPreviewContainer.removeAll();\r\n    myPreviewContainer.repaint();\r\n    createPages();\r\n    myPreviewContainer.doLayout();\r\n    myPreviewContainer.getParent().getParent().validate();\r\n    myPreviewContainer.validate();\r\n}'),(2881,'int scale','int',0,492,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview',3768,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview.setScale(int)',0,'void setScale(int scale) {\r\n    myScalePercents = scale;\r\n    repaint();\r\n}'),(2882,'Graphics g','java.awt.Graphics',0,492,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview',3767,'net.sourceforge.ganttproject.print.PrintPreview$PagePreview.paintComponent(java.awt.Graphics)',0,'protected void paintComponent(Graphics g) {\r\n    super.paintComponent(g);\r\n    BufferedImage bufferImage = ((BufferedImage) (PrintPreview.PagePreview.ourImageCache.get(new Integer(myPageIndex))));\r\n    if (bufferImage == null) {\r\n        bufferImage = new BufferedImage(((int) (myPageFormat.getWidth())), ((int) (myPageFormat.getHeight())), BufferedImage.TYPE_INT_RGB);\r\n        if ((PrintPreview.PagePreview.ourImageCache.size()) >= 4) {\r\n            PrintPreview.PagePreview.ourImageCache.remove(PrintPreview.PagePreview.ourImageCache.firstKey());\r\n        }\r\n        PrintPreview.PagePreview.ourImageCache.put(new Integer(myPageIndex), bufferImage);\r\n    }\r\n    Graphics bufferGraphics = bufferImage.getGraphics();\r\n    {\r\n        bufferGraphics.setColor(Color.white);\r\n        bufferGraphics.fillRect(0, 0, bufferImage.getWidth(), bufferImage.getHeight());\r\n        try {\r\n            myChart.print(bufferGraphics, myPageFormat, myPageIndex);\r\n        } catch (PrinterException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n    }\r\n    Image scaledImage = bufferImage.getScaledInstance(getScaledWidth(), getScaledHeight(), Image.SCALE_SMOOTH);\r\n    g.setColor(getBackground());\r\n    g.fillRect(0, 0, getWidth(), getHeight());\r\n    g.drawImage(scaledImage, 0, 0, null);\r\n}'),(2883,'String label','java.lang.String',0,494,'net.sourceforge.ganttproject.print.PrintPreview$StatusBar',3775,'net.sourceforge.ganttproject.print.PrintPreview$StatusBar.setLabel0(java.lang.String)',0,'public void setLabel0(String label) {\r\n    label0.setText(label);\r\n}'),(2884,'String text','java.lang.String',0,494,'net.sourceforge.ganttproject.print.PrintPreview$StatusBar',3777,'net.sourceforge.ganttproject.print.PrintPreview$StatusBar.setText0(java.lang.String)',0,'public void setText0(String text) {\r\n    message0.setText(text);\r\n}'),(2885,'String label','java.lang.String',0,494,'net.sourceforge.ganttproject.print.PrintPreview$StatusBar',3776,'net.sourceforge.ganttproject.print.PrintPreview$StatusBar.setLabel1(java.lang.String)',0,'public void setLabel1(String label) {\r\n    label1.setText(label);\r\n}'),(2886,'String text','java.lang.String',0,494,'net.sourceforge.ganttproject.print.PrintPreview$StatusBar',3778,'net.sourceforge.ganttproject.print.PrintPreview$StatusBar.setText1(java.lang.String)',0,'public void setText1(String text) {\r\n    message1.setText(text);\r\n}'),(2887,'ResourceAssignment res','net.sourceforge.ganttproject.task.ResourceAssignment',540,497,'net.sourceforge.ganttproject.resource.AssignmentNode',3780,'net.sourceforge.ganttproject.resource.AssignmentNode.-init-(net.sourceforge.ganttproject.task.ResourceAssignment)',0,'public AssignmentNode(ResourceAssignment res) {\r\n    super(res);\r\n    resourceAssignment = res;\r\n}'),(2888,'Role role','net.sourceforge.ganttproject.roles.Role',512,497,'net.sourceforge.ganttproject.resource.AssignmentNode',3783,'net.sourceforge.ganttproject.resource.AssignmentNode.setRoleForAssigment(net.sourceforge.ganttproject.roles.Role)',0,'public void setRoleForAssigment(Role role) {\r\n    resourceAssignment.setRoleForAssignment(role);\r\n}'),(2889,'HumanResourceManager manager','net.sourceforge.ganttproject.resource.HumanResourceManager',501,499,'net.sourceforge.ganttproject.resource.HumanResource',3785,'net.sourceforge.ganttproject.resource.HumanResource.-init-(net.sourceforge.ganttproject.resource.HumanResourceManager)',0,'HumanResource(HumanResourceManager manager) {\r\n    this.name = \"\";\r\n    customFields = new HashMap();\r\n    myManager = manager;\r\n    // added\r\n}'),(2890,'String name','java.lang.String',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3786,'net.sourceforge.ganttproject.resource.HumanResource.-init-(java.lang.String,int,net.sourceforge.ganttproject.resource.HumanResourceManager)',0,'/**\r\n * Creates a new instance of HumanResource\r\n */\r\nHumanResource(String name, int id, HumanResourceManager manager) {\r\n    super(id);\r\n    this.name = name;\r\n    customFields = new HashMap();\r\n    myManager = manager;\r\n}'),(2891,'int id','int',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3786,'net.sourceforge.ganttproject.resource.HumanResource.-init-(java.lang.String,int,net.sourceforge.ganttproject.resource.HumanResourceManager)',0,'/**\r\n * Creates a new instance of HumanResource\r\n */\r\nHumanResource(String name, int id, HumanResourceManager manager) {\r\n    super(id);\r\n    this.name = name;\r\n    customFields = new HashMap();\r\n    myManager = manager;\r\n}'),(2892,'HumanResourceManager manager','net.sourceforge.ganttproject.resource.HumanResourceManager',501,499,'net.sourceforge.ganttproject.resource.HumanResource',3786,'net.sourceforge.ganttproject.resource.HumanResource.-init-(java.lang.String,int,net.sourceforge.ganttproject.resource.HumanResourceManager)',0,'/**\r\n * Creates a new instance of HumanResource\r\n */\r\nHumanResource(String name, int id, HumanResourceManager manager) {\r\n    super(id);\r\n    this.name = name;\r\n    customFields = new HashMap();\r\n    myManager = manager;\r\n}'),(2893,'HumanResource copy','net.sourceforge.ganttproject.resource.HumanResource',499,499,'net.sourceforge.ganttproject.resource.HumanResource',3787,'net.sourceforge.ganttproject.resource.HumanResource.-init-(net.sourceforge.ganttproject.resource.HumanResource)',0,'private HumanResource(HumanResource copy) {\r\n    areEventsEnabled = false;\r\n    setId((-1));\r\n    setName((((GanttLanguage.getInstance().getText(\"copy2\")) + \"_\") + (copy.getName())));\r\n    setCostsPerUnit(copy.getCostsPerUnit());\r\n    setDescription(copy.getDescription());\r\n    setMaximumUnitsPerDay(copy.getMaximumUnitsPerDay());\r\n    setUnitMeasure(copy.getUnitMeasure());\r\n    setMail(copy.getMail());\r\n    setPhone(copy.getPhone());\r\n    setRole(copy.getRole());\r\n    myManager = copy.myManager;\r\n    DefaultListModel copyDaysOff = copy.getDaysOff();\r\n    for (int i = 0; i < (copyDaysOff.getSize()); i++) {\r\n        myDaysOffList.addElement(copyDaysOff.get(i));\r\n    }\r\n    customFields = new HashMap(copy.customFields);\r\n    areEventsEnabled = true;\r\n}'),(2894,'CustomPropertyDefinition definition','net.sourceforge.ganttproject.CustomPropertyDefinition',11,498,'net.sourceforge.ganttproject.resource.HumanResource$CustomPropertyImpl',3809,'net.sourceforge.ganttproject.resource.HumanResource$CustomPropertyImpl.-init-(net.sourceforge.ganttproject.CustomPropertyDefinition,java.lang.Object)',0,'public CustomPropertyImpl(CustomPropertyDefinition definition, Object value) {\r\n    myDefinition = definition;\r\n    myValue = value;\r\n}'),(2895,'Object value','java.lang.Object',0,498,'net.sourceforge.ganttproject.resource.HumanResource$CustomPropertyImpl',3809,'net.sourceforge.ganttproject.resource.HumanResource$CustomPropertyImpl.-init-(net.sourceforge.ganttproject.CustomPropertyDefinition,java.lang.Object)',0,'public CustomPropertyImpl(CustomPropertyDefinition definition, Object value) {\r\n    myDefinition = definition;\r\n    myValue = value;\r\n}'),(2896,'String email','java.lang.String',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3805,'net.sourceforge.ganttproject.resource.HumanResource.setMail(java.lang.String)',0,'public void setMail(String email) {\r\n    if (email == null) {\r\n        return;\r\n    }\r\n    this.email = email;\r\n    fireResourceChanged();\r\n}'),(2897,'String phone','java.lang.String',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3806,'net.sourceforge.ganttproject.resource.HumanResource.setPhone(java.lang.String)',0,'public void setPhone(String phone) {\r\n    if (phone == null) {\r\n        return;\r\n    }\r\n    this.phone = phone;\r\n    fireResourceChanged();\r\n}'),(2898,'Role role','net.sourceforge.ganttproject.roles.Role',512,499,'net.sourceforge.ganttproject.resource.HumanResource',3807,'net.sourceforge.ganttproject.resource.HumanResource.setRole(net.sourceforge.ganttproject.roles.Role)',0,'// public void setFunction (int function) {\r\n// this.function=function;\r\n// }\r\n// public int getFunction () {\r\n// return myRole==null ? 0 : myRole.getID();\r\n// }\r\npublic void setRole(Role role) {\r\n    myRole = role;\r\n    fireResourceChanged();\r\n}'),(2899,'GanttDaysOff gdo','net.sourceforge.ganttproject.calendar.GanttDaysOff',149,499,'net.sourceforge.ganttproject.resource.HumanResource',3791,'net.sourceforge.ganttproject.resource.HumanResource.addDaysOff(net.sourceforge.ganttproject.calendar.GanttDaysOff)',0,'public void addDaysOff(GanttDaysOff gdo) {\r\n    myDaysOffList.addElement(gdo);\r\n    fireResourceChanged();\r\n}'),(2900,'String title','java.lang.String',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3789,'net.sourceforge.ganttproject.resource.HumanResource.addCustomField(java.lang.String,java.lang.Object)',0,'public void addCustomField(String title, Object value) {\r\n    this.customFields.put(title, value);\r\n}'),(2901,'Object value','java.lang.Object',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3789,'net.sourceforge.ganttproject.resource.HumanResource.addCustomField(java.lang.String,java.lang.Object)',0,'public void addCustomField(String title, Object value) {\r\n    this.customFields.put(title, value);\r\n}'),(2902,'String title','java.lang.String',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3803,'net.sourceforge.ganttproject.resource.HumanResource.removeCustomField(java.lang.String)',0,'public void removeCustomField(String title) {\r\n    this.customFields.remove(title);\r\n}'),(2903,'String title','java.lang.String',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3796,'net.sourceforge.ganttproject.resource.HumanResource.getCustomFieldVal(java.lang.String)',0,'public Object getCustomFieldVal(String title) {\r\n    return customFields.get(title);\r\n}'),(2904,'String title','java.lang.String',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3804,'net.sourceforge.ganttproject.resource.HumanResource.setCustomFieldVal(java.lang.String,java.lang.Object)',0,'public void setCustomFieldVal(String title, Object val) {\r\n    this.customFields.put(title, val);\r\n}'),(2905,'Object val','java.lang.Object',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3804,'net.sourceforge.ganttproject.resource.HumanResource.setCustomFieldVal(java.lang.String,java.lang.Object)',0,'public void setCustomFieldVal(String title, Object val) {\r\n    this.customFields.put(title, val);\r\n}'),(2906,'ResourceAssignment assignmentToTask','net.sourceforge.ganttproject.task.ResourceAssignment',540,499,'net.sourceforge.ganttproject.resource.HumanResource',3792,'net.sourceforge.ganttproject.resource.HumanResource.createAssignment(net.sourceforge.ganttproject.task.ResourceAssignment)',0,'public ResourceAssignment createAssignment(ResourceAssignment assignmentToTask) {\r\n    ResourceAssignment result = super.createAssignment(assignmentToTask);\r\n    fireAssignmentsChanged();\r\n    return result;\r\n}'),(2907,'net.sourceforge.ganttproject.task.ResourceAssignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,499,'net.sourceforge.ganttproject.resource.HumanResource',3792,'net.sourceforge.ganttproject.resource.HumanResource.createAssignment(net.sourceforge.ganttproject.task.ResourceAssignment)',1,'public ResourceAssignment createAssignment(ResourceAssignment assignmentToTask) {\r\n    ResourceAssignment result = super.createAssignment(assignmentToTask);\r\n    fireAssignmentsChanged();\r\n    return result;\r\n}'),(2908,'CustomPropertyDefinition definition','net.sourceforge.ganttproject.CustomPropertyDefinition',11,499,'net.sourceforge.ganttproject.resource.HumanResource',3790,'net.sourceforge.ganttproject.resource.HumanResource.addCustomProperty(net.sourceforge.ganttproject.CustomPropertyDefinition,java.lang.String)',0,'public CustomProperty addCustomProperty(CustomPropertyDefinition definition, String valueAsString) {\r\n    final CustomPropertyDefinition stubDefinition = net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(definition.getTypeAsString(), valueAsString);\r\n    addCustomField(definition.getName(), stubDefinition.getDefaultValue());\r\n    return new HumanResource.CustomPropertyImpl(definition, stubDefinition.getDefaultValue());\r\n}'),(2909,'net.sourceforge.ganttproject.CustomProperty','net.sourceforge.ganttproject.CustomProperty',10,499,'net.sourceforge.ganttproject.resource.HumanResource',3790,'net.sourceforge.ganttproject.resource.HumanResource.addCustomProperty(net.sourceforge.ganttproject.CustomPropertyDefinition,java.lang.String)',1,'public CustomProperty addCustomProperty(CustomPropertyDefinition definition, String valueAsString) {\r\n    final CustomPropertyDefinition stubDefinition = net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(definition.getTypeAsString(), valueAsString);\r\n    addCustomField(definition.getName(), stubDefinition.getDefaultValue());\r\n    return new HumanResource.CustomPropertyImpl(definition, stubDefinition.getDefaultValue());\r\n}'),(2910,'String valueAsString','java.lang.String',0,499,'net.sourceforge.ganttproject.resource.HumanResource',3790,'net.sourceforge.ganttproject.resource.HumanResource.addCustomProperty(net.sourceforge.ganttproject.CustomPropertyDefinition,java.lang.String)',0,'public CustomProperty addCustomProperty(CustomPropertyDefinition definition, String valueAsString) {\r\n    final CustomPropertyDefinition stubDefinition = net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(definition.getTypeAsString(), valueAsString);\r\n    addCustomField(definition.getName(), stubDefinition.getDefaultValue());\r\n    return new HumanResource.CustomPropertyImpl(definition, stubDefinition.getDefaultValue());\r\n}'),(2911,'Role defaultRole','net.sourceforge.ganttproject.roles.Role',512,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3813,'net.sourceforge.ganttproject.resource.HumanResourceManager.-init-(net.sourceforge.ganttproject.roles.Role)',0,'public HumanResourceManager(Role defaultRole) {\r\n    myDefaultRole = defaultRole;\r\n}'),(2912,'String name','java.lang.String',0,500,'net.sourceforge.ganttproject.resource.HumanResourceManager$CustomPropertyDefinitionImpl',3845,'net.sourceforge.ganttproject.resource.HumanResourceManager$CustomPropertyDefinitionImpl.-init-(java.lang.String,java.lang.String,net.sourceforge.ganttproject.CustomPropertyDefinition)',0,'CustomPropertyDefinitionImpl(String name, String id, CustomPropertyDefinition stub) {\r\n    myName = name;\r\n    myID = id;\r\n    myDefaultValue = stub.getDefaultValue();\r\n    myDefaultValueAsString = stub.getDefaultValueAsString();\r\n    myType = stub.getType();\r\n    myTypeAsString = stub.getTypeAsString();\r\n}'),(2913,'String id','java.lang.String',0,500,'net.sourceforge.ganttproject.resource.HumanResourceManager$CustomPropertyDefinitionImpl',3845,'net.sourceforge.ganttproject.resource.HumanResourceManager$CustomPropertyDefinitionImpl.-init-(java.lang.String,java.lang.String,net.sourceforge.ganttproject.CustomPropertyDefinition)',0,'CustomPropertyDefinitionImpl(String name, String id, CustomPropertyDefinition stub) {\r\n    myName = name;\r\n    myID = id;\r\n    myDefaultValue = stub.getDefaultValue();\r\n    myDefaultValueAsString = stub.getDefaultValueAsString();\r\n    myType = stub.getType();\r\n    myTypeAsString = stub.getTypeAsString();\r\n}'),(2914,'CustomPropertyDefinition stub','net.sourceforge.ganttproject.CustomPropertyDefinition',11,500,'net.sourceforge.ganttproject.resource.HumanResourceManager$CustomPropertyDefinitionImpl',3845,'net.sourceforge.ganttproject.resource.HumanResourceManager$CustomPropertyDefinitionImpl.-init-(java.lang.String,java.lang.String,net.sourceforge.ganttproject.CustomPropertyDefinition)',0,'CustomPropertyDefinitionImpl(String name, String id, CustomPropertyDefinition stub) {\r\n    myName = name;\r\n    myID = id;\r\n    myDefaultValue = stub.getDefaultValue();\r\n    myDefaultValueAsString = stub.getDefaultValueAsString();\r\n    myType = stub.getType();\r\n    myTypeAsString = stub.getTypeAsString();\r\n}'),(2915,'String name','java.lang.String',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3821,'net.sourceforge.ganttproject.resource.HumanResourceManager.create(java.lang.String,int)',0,'public ProjectResource create(String name, int i) {\r\n    HumanResource hr = new HumanResource(name, i, this);\r\n    hr.setRole(myDefaultRole);\r\n    add(hr);\r\n    return hr;\r\n}'),(2916,'net.sourceforge.ganttproject.resource.ProjectResource','net.sourceforge.ganttproject.resource.ProjectResource',505,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3821,'net.sourceforge.ganttproject.resource.HumanResourceManager.create(java.lang.String,int)',1,'public ProjectResource create(String name, int i) {\r\n    HumanResource hr = new HumanResource(name, i, this);\r\n    hr.setRole(myDefaultRole);\r\n    add(hr);\r\n    return hr;\r\n}'),(2917,'int i','int',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3821,'net.sourceforge.ganttproject.resource.HumanResourceManager.create(java.lang.String,int)',0,'public ProjectResource create(String name, int i) {\r\n    HumanResource hr = new HumanResource(name, i, this);\r\n    hr.setRole(myDefaultRole);\r\n    add(hr);\r\n    return hr;\r\n}'),(2918,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3816,'net.sourceforge.ganttproject.resource.HumanResourceManager.add(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public void add(ProjectResource resource) {\r\n    if ((resource.getId()) == (-1)) {\r\n        resource.setId(nextFreeId);\r\n    }\r\n    if ((resource.getId()) >= (nextFreeId)) {\r\n        nextFreeId = (resource.getId()) + 1;\r\n    }\r\n    resources.add(resource);\r\n    fireResourceAdded(resource);\r\n}'),(2919,'CustomPropertyDefinition definition','net.sourceforge.ganttproject.CustomPropertyDefinition',11,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3817,'net.sourceforge.ganttproject.resource.HumanResourceManager.addCustomField(net.sourceforge.ganttproject.CustomPropertyDefinition)',0,'public void addCustomField(CustomPropertyDefinition definition) {\r\n    customFields.put(definition.getName(), definition);\r\n    /* all the existant resources are added the new property field */\r\n    Iterator it = resources.iterator();\r\n    while (it.hasNext()) {\r\n        ((HumanResource) (it.next())).addCustomField(definition.getName(), definition.getDefaultValue());\r\n    } \r\n}'),(2920,'String title','java.lang.String',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3819,'net.sourceforge.ganttproject.resource.HumanResourceManager.checkCustomField(java.lang.String)',0,'public boolean checkCustomField(String title) {\r\n    return customFields.containsKey(title);\r\n}'),(2921,'String title','java.lang.String',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3842,'net.sourceforge.ganttproject.resource.HumanResourceManager.removeCustomField(java.lang.String)',0,'public void removeCustomField(String title) {\r\n    customFields.remove(title);\r\n    /* the property field is removed from all the existant resources */\r\n    Iterator it = resources.iterator();\r\n    while (it.hasNext()) {\r\n        ((HumanResource) (it.next())).removeCustomField(title);\r\n    } \r\n}'),(2922,'int id','int',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3829,'net.sourceforge.ganttproject.resource.HumanResourceManager.getById(int)',0,'public ProjectResource getById(int id) {\r\n    // Linear search is not really efficent, but we dont have so many\r\n    // resources !?\r\n    ProjectResource pr = null;\r\n    for (int i = 0; i < (resources.size()); i++)\r\n        if ((((ProjectResource) (resources.get(i))).getId()) == id) {\r\n            pr = ((ProjectResource) (resources.get(i)));\r\n            break;\r\n        }\r\n\r\n    return pr;\r\n}'),(2923,'net.sourceforge.ganttproject.resource.ProjectResource','net.sourceforge.ganttproject.resource.ProjectResource',505,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3829,'net.sourceforge.ganttproject.resource.HumanResourceManager.getById(int)',1,'public ProjectResource getById(int id) {\r\n    // Linear search is not really efficent, but we dont have so many\r\n    // resources !?\r\n    ProjectResource pr = null;\r\n    for (int i = 0; i < (resources.size()); i++)\r\n        if ((((ProjectResource) (resources.get(i))).getId()) == id) {\r\n            pr = ((ProjectResource) (resources.get(i)));\r\n            break;\r\n        }\r\n\r\n    return pr;\r\n}'),(2924,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3840,'net.sourceforge.ganttproject.resource.HumanResourceManager.remove(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public void remove(ProjectResource resource) {\r\n    fireResourcesRemoved(new ProjectResource[]{ resource });\r\n    resources.remove(resource);\r\n}'),(2925,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3841,'net.sourceforge.ganttproject.resource.HumanResourceManager.remove(net.sourceforge.ganttproject.resource.ProjectResource,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'public void remove(ProjectResource resource, GPUndoManager myUndoManager) {\r\n    final ProjectResource res = resource;\r\n    myUndoManager.undoableEdit(\"Delete Human OK\", new Runnable() {\r\n        public void run() {\r\n            fireResourcesRemoved(new ProjectResource[]{ res });\r\n            resources.remove(res);\r\n        }\r\n    });\r\n}'),(2926,'GPUndoManager myUndoManager','net.sourceforge.ganttproject.undo.GPUndoManager',657,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3841,'net.sourceforge.ganttproject.resource.HumanResourceManager.remove(net.sourceforge.ganttproject.resource.ProjectResource,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'public void remove(ProjectResource resource, GPUndoManager myUndoManager) {\r\n    final ProjectResource res = resource;\r\n    myUndoManager.undoableEdit(\"Delete Human OK\", new Runnable() {\r\n        public void run() {\r\n            fireResourcesRemoved(new ProjectResource[]{ res });\r\n            resources.remove(res);\r\n        }\r\n    });\r\n}'),(2927,'OutputStream target','java.io.OutputStream',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3843,'net.sourceforge.ganttproject.resource.HumanResourceManager.save(java.io.OutputStream)',0,'public void save(OutputStream target) {\r\n}'),(2928,'ResourceView view','net.sourceforge.ganttproject.resource.ResourceView',511,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3818,'net.sourceforge.ganttproject.resource.HumanResourceManager.addView(net.sourceforge.ganttproject.resource.ResourceView)',0,'public void addView(ResourceView view) {\r\n    myViews.add(view);\r\n}'),(2929,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3826,'net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourceAdded(net.sourceforge.ganttproject.resource.ProjectResource)',0,'private void fireResourceAdded(ProjectResource resource) {\r\n    ResourceEvent e = new ResourceEvent(this, resource);\r\n    for (Iterator i = myViews.iterator(); i.hasNext();) {\r\n        ResourceView nextView = ((ResourceView) (i.next()));\r\n        nextView.resourceAdded(e);\r\n    }\r\n}'),(2930,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3827,'net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourceChanged(net.sourceforge.ganttproject.resource.ProjectResource)',0,'void fireResourceChanged(ProjectResource resource) {\r\n    ResourceEvent e = new ResourceEvent(this, resource);\r\n    for (Iterator i = myViews.iterator(); i.hasNext();) {\r\n        ResourceView nextView = ((ResourceView) (i.next()));\r\n        nextView.resourceChanged(e);\r\n    }\r\n}'),(2931,'ProjectResource[] resources','net.sourceforge.ganttproject.resource.ProjectResource[]',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3828,'net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourcesRemoved(net.sourceforge.ganttproject.resource.ProjectResource[])',0,'private void fireResourcesRemoved(ProjectResource[] resources) {\r\n    ResourceEvent e = new ResourceEvent(this, resources);\r\n    for (int i = 0; i < (myViews.size()); i++) {\r\n        ResourceView nextView = ((ResourceView) (myViews.get(i)));\r\n        nextView.resourcesRemoved(e);\r\n    }\r\n}'),(2932,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3824,'net.sourceforge.ganttproject.resource.HumanResourceManager.fireAssignmentsChanged(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public void fireAssignmentsChanged(ProjectResource resource) {\r\n    ResourceEvent e = new ResourceEvent(this, resource);\r\n    for (Iterator i = myViews.iterator(); i.hasNext();) {\r\n        ResourceView nextView = ((ResourceView) (i.next()));\r\n        nextView.resourceAssignmentsChanged(e);\r\n    }\r\n}'),(2933,'HumanResource hr','net.sourceforge.ganttproject.resource.HumanResource',499,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3844,'net.sourceforge.ganttproject.resource.HumanResourceManager.up(net.sourceforge.ganttproject.resource.HumanResource)',0,'/**\r\n * Move up the resource number index\r\n */\r\npublic void up(HumanResource hr) {\r\n    int index = resources.indexOf(hr);\r\n    assert index >= 0;\r\n    resources.remove(index);\r\n    resources.add((index - 1), hr);\r\n    fireResourceChanged(hr);\r\n}'),(2934,'HumanResource hr','net.sourceforge.ganttproject.resource.HumanResource',499,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3823,'net.sourceforge.ganttproject.resource.HumanResourceManager.down(net.sourceforge.ganttproject.resource.HumanResource)',0,'/**\r\n * Move down the resource number index\r\n */\r\npublic void down(HumanResource hr) {\r\n    int index = resources.indexOf(hr);\r\n    assert index >= 0;\r\n    resources.remove(index);\r\n    resources.add((index + 1), hr);\r\n    fireResourceChanged(hr);\r\n}'),(2935,'ResourceManager resourceManager','net.sourceforge.ganttproject.resource.ResourceManager',509,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3838,'net.sourceforge.ganttproject.resource.HumanResourceManager.importData(net.sourceforge.ganttproject.resource.ResourceManager)',0,'public Map importData(ResourceManager resourceManager) {\r\n    Map original2imported = new HashMap();\r\n    if ((resourceManager instanceof HumanResourceManager) == false) {\r\n        throw new IllegalArgumentException(\"I expect resource manager to be HumanResourceManager\");\r\n    }\r\n    HumanResourceManager hrManager = ((HumanResourceManager) (resourceManager));\r\n    List resources = hrManager.getResources();\r\n    for (int i = 0; i < (resources.size()); i++) {\r\n        HumanResource next = ((HumanResource) (resources.get(i)));\r\n        importData(next, original2imported);\r\n    }\r\n    return original2imported;\r\n}'),(2936,'HumanResource next','net.sourceforge.ganttproject.resource.HumanResource',499,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3837,'net.sourceforge.ganttproject.resource.HumanResourceManager.importData(net.sourceforge.ganttproject.resource.HumanResource,java.util.Map)',0,'private void importData(HumanResource next, Map original2imported) {\r\n    HumanResource imported = ((HumanResource) (create(next.getName(), nextFreeId)));\r\n    if ((next.getDaysOff()) != null)\r\n        for (int i = 0; i < (next.getDaysOff().size()); i++)\r\n            imported.addDaysOff(((GanttDaysOff) (((GanttDaysOff) (next.getDaysOff().get(i))).clone())));\r\n\r\n\r\n    imported.setName(next.getName());\r\n    imported.setDescription(next.getDescription());\r\n    imported.setMail(next.getMail());\r\n    imported.setPhone(next.getPhone());\r\n    imported.setRole(next.getRole());\r\n    /* <CustomProperty> */\r\n    List customProperties = next.getCustomProperties();\r\n    for (int i = 0; i < (customProperties.size()); i++) {\r\n        CustomProperty nextProperty = ((CustomProperty) (customProperties.get(i)));\r\n        imported.addCustomProperty(nextProperty.getDefinition(), nextProperty.getValueAsString());\r\n    }\r\n    original2imported.put(next, imported);\r\n}'),(2937,'Map original2imported','java.util.Map',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3837,'net.sourceforge.ganttproject.resource.HumanResourceManager.importData(net.sourceforge.ganttproject.resource.HumanResource,java.util.Map)',0,'private void importData(HumanResource next, Map original2imported) {\r\n    HumanResource imported = ((HumanResource) (create(next.getName(), nextFreeId)));\r\n    if ((next.getDaysOff()) != null)\r\n        for (int i = 0; i < (next.getDaysOff().size()); i++)\r\n            imported.addDaysOff(((GanttDaysOff) (((GanttDaysOff) (next.getDaysOff().get(i))).clone())));\r\n\r\n\r\n    imported.setName(next.getName());\r\n    imported.setDescription(next.getDescription());\r\n    imported.setMail(next.getMail());\r\n    imported.setPhone(next.getPhone());\r\n    imported.setRole(next.getRole());\r\n    /* <CustomProperty> */\r\n    List customProperties = next.getCustomProperties();\r\n    for (int i = 0; i < (customProperties.size()); i++) {\r\n        CustomProperty nextProperty = ((CustomProperty) (customProperties.get(i)));\r\n        imported.addCustomProperty(nextProperty.getDefinition(), nextProperty.getValueAsString());\r\n    }\r\n    original2imported.put(next, imported);\r\n}'),(2938,'String nextName','java.lang.String',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3830,'net.sourceforge.ganttproject.resource.HumanResourceManager.getCustomPropertyDefinition(java.lang.String)',0,'CustomPropertyDefinition getCustomPropertyDefinition(String nextName) {\r\n    return ((CustomPropertyDefinition) (customFields.get(nextName)));\r\n}'),(2939,'net.sourceforge.ganttproject.CustomPropertyDefinition','net.sourceforge.ganttproject.CustomPropertyDefinition',11,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3830,'net.sourceforge.ganttproject.resource.HumanResourceManager.getCustomPropertyDefinition(java.lang.String)',1,'CustomPropertyDefinition getCustomPropertyDefinition(String nextName) {\r\n    return ((CustomPropertyDefinition) (customFields.get(nextName)));\r\n}'),(2940,'Object value','java.lang.Object',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3835,'net.sourceforge.ganttproject.resource.HumanResourceManager.getValueAsString(java.lang.Object)',0,'static String getValueAsString(Object value) {\r\n    final String result;\r\n    if (value != null) {\r\n        if (value instanceof GanttCalendar) {\r\n            result = ((GanttCalendar) (value)).toXMLString();\r\n        } else {\r\n            result = String.valueOf(value);\r\n        }\r\n    } else {\r\n        result = null;\r\n    }\r\n    return result;\r\n}'),(2941,'String id','java.lang.String',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3822,'net.sourceforge.ganttproject.resource.HumanResourceManager.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString) {\r\n    final CustomPropertyDefinition stubDefinition = net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(typeAsString, defaultValueAsString);\r\n    CustomPropertyDefinition result = new HumanResourceManager.CustomPropertyDefinitionImpl(name, id, stubDefinition);\r\n    addCustomField(result);\r\n    return result;\r\n}'),(2942,'net.sourceforge.ganttproject.CustomPropertyDefinition','net.sourceforge.ganttproject.CustomPropertyDefinition',11,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3822,'net.sourceforge.ganttproject.resource.HumanResourceManager.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',1,'public CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString) {\r\n    final CustomPropertyDefinition stubDefinition = net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(typeAsString, defaultValueAsString);\r\n    CustomPropertyDefinition result = new HumanResourceManager.CustomPropertyDefinitionImpl(name, id, stubDefinition);\r\n    addCustomField(result);\r\n    return result;\r\n}'),(2943,'String typeAsString','java.lang.String',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3822,'net.sourceforge.ganttproject.resource.HumanResourceManager.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString) {\r\n    final CustomPropertyDefinition stubDefinition = net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(typeAsString, defaultValueAsString);\r\n    CustomPropertyDefinition result = new HumanResourceManager.CustomPropertyDefinitionImpl(name, id, stubDefinition);\r\n    addCustomField(result);\r\n    return result;\r\n}'),(2944,'String name','java.lang.String',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3822,'net.sourceforge.ganttproject.resource.HumanResourceManager.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString) {\r\n    final CustomPropertyDefinition stubDefinition = net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(typeAsString, defaultValueAsString);\r\n    CustomPropertyDefinition result = new HumanResourceManager.CustomPropertyDefinitionImpl(name, id, stubDefinition);\r\n    addCustomField(result);\r\n    return result;\r\n}'),(2945,'String defaultValueAsString','java.lang.String',0,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3822,'net.sourceforge.ganttproject.resource.HumanResourceManager.createDefinition(java.lang.String,java.lang.String,java.lang.String,java.lang.String)',0,'public CustomPropertyDefinition createDefinition(String id, String typeAsString, String name, String defaultValueAsString) {\r\n    final CustomPropertyDefinition stubDefinition = net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(typeAsString, defaultValueAsString);\r\n    CustomPropertyDefinition result = new HumanResourceManager.CustomPropertyDefinitionImpl(name, id, stubDefinition);\r\n    addCustomField(result);\r\n    return result;\r\n}'),(2946,'CustomPropertyManager source','net.sourceforge.ganttproject.CustomPropertyManager',14,501,'net.sourceforge.ganttproject.resource.HumanResourceManager',3836,'net.sourceforge.ganttproject.resource.HumanResourceManager.importData(net.sourceforge.ganttproject.CustomPropertyManager)',0,'public void importData(CustomPropertyManager source) {\r\n    // TODO Auto-generated method stub\r\n}'),(2947,'Date startDate','java.util.Date',0,502,'net.sourceforge.ganttproject.resource.LoadDistribution$Load',3864,'net.sourceforge.ganttproject.resource.LoadDistribution$Load.-init-(java.util.Date,java.util.Date,float,net.sourceforge.ganttproject.task.Task)',0,'Load(Date startDate, Date endDate, float load, Task ref) {\r\n    this.load = load;\r\n    this.refTask = ref;\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n}'),(2948,'Date endDate','java.util.Date',0,502,'net.sourceforge.ganttproject.resource.LoadDistribution$Load',3864,'net.sourceforge.ganttproject.resource.LoadDistribution$Load.-init-(java.util.Date,java.util.Date,float,net.sourceforge.ganttproject.task.Task)',0,'Load(Date startDate, Date endDate, float load, Task ref) {\r\n    this.load = load;\r\n    this.refTask = ref;\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n}'),(2949,'float load','float',0,502,'net.sourceforge.ganttproject.resource.LoadDistribution$Load',3864,'net.sourceforge.ganttproject.resource.LoadDistribution$Load.-init-(java.util.Date,java.util.Date,float,net.sourceforge.ganttproject.task.Task)',0,'Load(Date startDate, Date endDate, float load, Task ref) {\r\n    this.load = load;\r\n    this.refTask = ref;\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n}'),(2950,'Task ref','net.sourceforge.ganttproject.task.Task',548,502,'net.sourceforge.ganttproject.resource.LoadDistribution$Load',3864,'net.sourceforge.ganttproject.resource.LoadDistribution$Load.-init-(java.util.Date,java.util.Date,float,net.sourceforge.ganttproject.task.Task)',0,'Load(Date startDate, Date endDate, float load, Task ref) {\r\n    this.load = load;\r\n    this.refTask = ref;\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n}'),(2951,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3853,'net.sourceforge.ganttproject.resource.LoadDistribution.-init-(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public LoadDistribution(ProjectResource resource) {\r\n    myLoads.add(new LoadDistribution.Load(null, null, 0, null));\r\n    myDaysOff.add(new LoadDistribution.Load(null, null, 0, null));\r\n    myResource = resource;\r\n    ResourceAssignment[] assignments = myResource.getAssignments();\r\n    for (int j = 0; j < (assignments.length); j++) {\r\n        processAssignment(assignments[j]);\r\n    }\r\n    processDaysOff(myResource);\r\n}'),(2952,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3863,'net.sourceforge.ganttproject.resource.LoadDistribution.processDaysOff(net.sourceforge.ganttproject.resource.ProjectResource)',0,'private void processDaysOff(ProjectResource resource) {\r\n    HumanResource hr = ((HumanResource) (resource));\r\n    DefaultListModel daysOff = hr.getDaysOff();\r\n    if (daysOff != null) {\r\n        for (int l = 0; l < (daysOff.size()); l++) {\r\n            processDayOff(((GanttDaysOff) (daysOff.get(l))));\r\n        }\r\n    }\r\n}'),(2953,'GanttDaysOff dayOff','net.sourceforge.ganttproject.calendar.GanttDaysOff',149,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3862,'net.sourceforge.ganttproject.resource.LoadDistribution.processDayOff(net.sourceforge.ganttproject.calendar.GanttDaysOff)',0,'private void processDayOff(GanttDaysOff dayOff) {\r\n    Date dayOffEnd = dayOff.getFinish().getTime();\r\n    addLoad(dayOff.getStart().getTime(), dayOffEnd, (-1), myDaysOff, null);\r\n}'),(2954,'ResourceAssignment assignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3861,'net.sourceforge.ganttproject.resource.LoadDistribution.processAssignment(net.sourceforge.ganttproject.task.ResourceAssignment)',0,'private void processAssignment(ResourceAssignment assignment) {\r\n    Task task = assignment.getTask();\r\n    TaskActivity[] activities = task.getActivities();\r\n    for (int i = 0; i < (activities.length); i++) {\r\n        processActivity(activities[i], assignment.getLoad());\r\n    }\r\n}'),(2955,'TaskActivity activity','net.sourceforge.ganttproject.task.TaskActivity',549,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3860,'net.sourceforge.ganttproject.resource.LoadDistribution.processActivity(net.sourceforge.ganttproject.task.TaskActivity,float)',0,'private void processActivity(TaskActivity activity, float load) {\r\n    if ((activity.getIntensity()) == 0) {\r\n        return;\r\n    }\r\n    addLoad(activity.getStart(), activity.getEnd(), load, myLoads, activity.getTask());\r\n}'),(2956,'float load','float',0,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3860,'net.sourceforge.ganttproject.resource.LoadDistribution.processActivity(net.sourceforge.ganttproject.task.TaskActivity,float)',0,'private void processActivity(TaskActivity activity, float load) {\r\n    if ((activity.getIntensity()) == 0) {\r\n        return;\r\n    }\r\n    addLoad(activity.getStart(), activity.getEnd(), load, myLoads, activity.getTask());\r\n}'),(2957,'Date startDate','java.util.Date',0,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3854,'net.sourceforge.ganttproject.resource.LoadDistribution.addLoad(java.util.Date,java.util.Date,float,java.util.List,net.sourceforge.ganttproject.task.Task)',0,'private void addLoad(Date startDate, Date endDate, float load, List loads, /* <Load> */\r\nTask t) {\r\n    LoadDistribution.Load taskLoad = new LoadDistribution.Load(startDate, endDate, load, t);\r\n    myTasksLoads.add(taskLoad);\r\n    int idxStart = -1;\r\n    float currentLoad = 0;\r\n    if (startDate == null) {\r\n        idxStart = 0;\r\n    } else {\r\n        for (int i = 1; i < (loads.size()); i++) {\r\n            LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.get(i)));\r\n            if ((startDate.compareTo(nextLoad.startDate)) >= 0) {\r\n                currentLoad = ((LoadDistribution.Load) (loads.get(i))).load;\r\n            }\r\n            if ((startDate.compareTo(nextLoad.startDate)) > 0) {\r\n                continue;\r\n            }\r\n            idxStart = i;\r\n            if ((startDate.compareTo(nextLoad.startDate)) < 0) {\r\n                loads.add(i, new LoadDistribution.Load(startDate, null, currentLoad, null));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (idxStart == (-1)) {\r\n        idxStart = loads.size();\r\n        loads.add(new LoadDistribution.Load(startDate, null, 0, t));\r\n    }\r\n    int idxEnd = -1;\r\n    if (endDate == null) {\r\n        idxEnd = (loads.size()) - 1;\r\n    } else {\r\n        for (int i = idxStart; i < (loads.size()); i++) {\r\n            LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.get(i)));\r\n            if ((endDate.compareTo(nextLoad.startDate)) > 0) {\r\n                nextLoad.load += load;\r\n                continue;\r\n            }\r\n            idxEnd = i;\r\n            if ((endDate.compareTo(nextLoad.startDate)) < 0) {\r\n                LoadDistribution.Load prevLoad = ((LoadDistribution.Load) (loads.get((i - 1))));\r\n                loads.add(i, new LoadDistribution.Load(endDate, null, ((prevLoad.load) - load), null));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (idxEnd == (-1)) {\r\n        idxEnd = loads.size();\r\n        loads.add(new LoadDistribution.Load(endDate, null, 0, t));\r\n    }\r\n}'),(2958,'Date endDate','java.util.Date',0,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3854,'net.sourceforge.ganttproject.resource.LoadDistribution.addLoad(java.util.Date,java.util.Date,float,java.util.List,net.sourceforge.ganttproject.task.Task)',0,'private void addLoad(Date startDate, Date endDate, float load, List loads, /* <Load> */\r\nTask t) {\r\n    LoadDistribution.Load taskLoad = new LoadDistribution.Load(startDate, endDate, load, t);\r\n    myTasksLoads.add(taskLoad);\r\n    int idxStart = -1;\r\n    float currentLoad = 0;\r\n    if (startDate == null) {\r\n        idxStart = 0;\r\n    } else {\r\n        for (int i = 1; i < (loads.size()); i++) {\r\n            LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.get(i)));\r\n            if ((startDate.compareTo(nextLoad.startDate)) >= 0) {\r\n                currentLoad = ((LoadDistribution.Load) (loads.get(i))).load;\r\n            }\r\n            if ((startDate.compareTo(nextLoad.startDate)) > 0) {\r\n                continue;\r\n            }\r\n            idxStart = i;\r\n            if ((startDate.compareTo(nextLoad.startDate)) < 0) {\r\n                loads.add(i, new LoadDistribution.Load(startDate, null, currentLoad, null));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (idxStart == (-1)) {\r\n        idxStart = loads.size();\r\n        loads.add(new LoadDistribution.Load(startDate, null, 0, t));\r\n    }\r\n    int idxEnd = -1;\r\n    if (endDate == null) {\r\n        idxEnd = (loads.size()) - 1;\r\n    } else {\r\n        for (int i = idxStart; i < (loads.size()); i++) {\r\n            LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.get(i)));\r\n            if ((endDate.compareTo(nextLoad.startDate)) > 0) {\r\n                nextLoad.load += load;\r\n                continue;\r\n            }\r\n            idxEnd = i;\r\n            if ((endDate.compareTo(nextLoad.startDate)) < 0) {\r\n                LoadDistribution.Load prevLoad = ((LoadDistribution.Load) (loads.get((i - 1))));\r\n                loads.add(i, new LoadDistribution.Load(endDate, null, ((prevLoad.load) - load), null));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (idxEnd == (-1)) {\r\n        idxEnd = loads.size();\r\n        loads.add(new LoadDistribution.Load(endDate, null, 0, t));\r\n    }\r\n}'),(2959,'float load','float',0,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3854,'net.sourceforge.ganttproject.resource.LoadDistribution.addLoad(java.util.Date,java.util.Date,float,java.util.List,net.sourceforge.ganttproject.task.Task)',0,'private void addLoad(Date startDate, Date endDate, float load, List loads, /* <Load> */\r\nTask t) {\r\n    LoadDistribution.Load taskLoad = new LoadDistribution.Load(startDate, endDate, load, t);\r\n    myTasksLoads.add(taskLoad);\r\n    int idxStart = -1;\r\n    float currentLoad = 0;\r\n    if (startDate == null) {\r\n        idxStart = 0;\r\n    } else {\r\n        for (int i = 1; i < (loads.size()); i++) {\r\n            LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.get(i)));\r\n            if ((startDate.compareTo(nextLoad.startDate)) >= 0) {\r\n                currentLoad = ((LoadDistribution.Load) (loads.get(i))).load;\r\n            }\r\n            if ((startDate.compareTo(nextLoad.startDate)) > 0) {\r\n                continue;\r\n            }\r\n            idxStart = i;\r\n            if ((startDate.compareTo(nextLoad.startDate)) < 0) {\r\n                loads.add(i, new LoadDistribution.Load(startDate, null, currentLoad, null));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (idxStart == (-1)) {\r\n        idxStart = loads.size();\r\n        loads.add(new LoadDistribution.Load(startDate, null, 0, t));\r\n    }\r\n    int idxEnd = -1;\r\n    if (endDate == null) {\r\n        idxEnd = (loads.size()) - 1;\r\n    } else {\r\n        for (int i = idxStart; i < (loads.size()); i++) {\r\n            LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.get(i)));\r\n            if ((endDate.compareTo(nextLoad.startDate)) > 0) {\r\n                nextLoad.load += load;\r\n                continue;\r\n            }\r\n            idxEnd = i;\r\n            if ((endDate.compareTo(nextLoad.startDate)) < 0) {\r\n                LoadDistribution.Load prevLoad = ((LoadDistribution.Load) (loads.get((i - 1))));\r\n                loads.add(i, new LoadDistribution.Load(endDate, null, ((prevLoad.load) - load), null));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (idxEnd == (-1)) {\r\n        idxEnd = loads.size();\r\n        loads.add(new LoadDistribution.Load(endDate, null, 0, t));\r\n    }\r\n}'),(2960,'List loads','java.util.List',0,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3854,'net.sourceforge.ganttproject.resource.LoadDistribution.addLoad(java.util.Date,java.util.Date,float,java.util.List,net.sourceforge.ganttproject.task.Task)',0,'private void addLoad(Date startDate, Date endDate, float load, List loads, /* <Load> */\r\nTask t) {\r\n    LoadDistribution.Load taskLoad = new LoadDistribution.Load(startDate, endDate, load, t);\r\n    myTasksLoads.add(taskLoad);\r\n    int idxStart = -1;\r\n    float currentLoad = 0;\r\n    if (startDate == null) {\r\n        idxStart = 0;\r\n    } else {\r\n        for (int i = 1; i < (loads.size()); i++) {\r\n            LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.get(i)));\r\n            if ((startDate.compareTo(nextLoad.startDate)) >= 0) {\r\n                currentLoad = ((LoadDistribution.Load) (loads.get(i))).load;\r\n            }\r\n            if ((startDate.compareTo(nextLoad.startDate)) > 0) {\r\n                continue;\r\n            }\r\n            idxStart = i;\r\n            if ((startDate.compareTo(nextLoad.startDate)) < 0) {\r\n                loads.add(i, new LoadDistribution.Load(startDate, null, currentLoad, null));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (idxStart == (-1)) {\r\n        idxStart = loads.size();\r\n        loads.add(new LoadDistribution.Load(startDate, null, 0, t));\r\n    }\r\n    int idxEnd = -1;\r\n    if (endDate == null) {\r\n        idxEnd = (loads.size()) - 1;\r\n    } else {\r\n        for (int i = idxStart; i < (loads.size()); i++) {\r\n            LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.get(i)));\r\n            if ((endDate.compareTo(nextLoad.startDate)) > 0) {\r\n                nextLoad.load += load;\r\n                continue;\r\n            }\r\n            idxEnd = i;\r\n            if ((endDate.compareTo(nextLoad.startDate)) < 0) {\r\n                LoadDistribution.Load prevLoad = ((LoadDistribution.Load) (loads.get((i - 1))));\r\n                loads.add(i, new LoadDistribution.Load(endDate, null, ((prevLoad.load) - load), null));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (idxEnd == (-1)) {\r\n        idxEnd = loads.size();\r\n        loads.add(new LoadDistribution.Load(endDate, null, 0, t));\r\n    }\r\n}'),(2961,'/* <Load> */\r\nTask t','net.sourceforge.ganttproject.task.Task',548,503,'net.sourceforge.ganttproject.resource.LoadDistribution',3854,'net.sourceforge.ganttproject.resource.LoadDistribution.addLoad(java.util.Date,java.util.Date,float,java.util.List,net.sourceforge.ganttproject.task.Task)',0,'private void addLoad(Date startDate, Date endDate, float load, List loads, /* <Load> */\r\nTask t) {\r\n    LoadDistribution.Load taskLoad = new LoadDistribution.Load(startDate, endDate, load, t);\r\n    myTasksLoads.add(taskLoad);\r\n    int idxStart = -1;\r\n    float currentLoad = 0;\r\n    if (startDate == null) {\r\n        idxStart = 0;\r\n    } else {\r\n        for (int i = 1; i < (loads.size()); i++) {\r\n            LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.get(i)));\r\n            if ((startDate.compareTo(nextLoad.startDate)) >= 0) {\r\n                currentLoad = ((LoadDistribution.Load) (loads.get(i))).load;\r\n            }\r\n            if ((startDate.compareTo(nextLoad.startDate)) > 0) {\r\n                continue;\r\n            }\r\n            idxStart = i;\r\n            if ((startDate.compareTo(nextLoad.startDate)) < 0) {\r\n                loads.add(i, new LoadDistribution.Load(startDate, null, currentLoad, null));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (idxStart == (-1)) {\r\n        idxStart = loads.size();\r\n        loads.add(new LoadDistribution.Load(startDate, null, 0, t));\r\n    }\r\n    int idxEnd = -1;\r\n    if (endDate == null) {\r\n        idxEnd = (loads.size()) - 1;\r\n    } else {\r\n        for (int i = idxStart; i < (loads.size()); i++) {\r\n            LoadDistribution.Load nextLoad = ((LoadDistribution.Load) (loads.get(i)));\r\n            if ((endDate.compareTo(nextLoad.startDate)) > 0) {\r\n                nextLoad.load += load;\r\n                continue;\r\n            }\r\n            idxEnd = i;\r\n            if ((endDate.compareTo(nextLoad.startDate)) < 0) {\r\n                LoadDistribution.Load prevLoad = ((LoadDistribution.Load) (loads.get((i - 1))));\r\n                loads.add(i, new LoadDistribution.Load(endDate, null, ((prevLoad.load) - load), null));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if (idxEnd == (-1)) {\r\n        idxEnd = loads.size();\r\n        loads.add(new LoadDistribution.Load(endDate, null, 0, t));\r\n    }\r\n}'),(2962,'int id','int',0,505,'net.sourceforge.ganttproject.resource.ProjectResource',3868,'net.sourceforge.ganttproject.resource.ProjectResource.-init-(int)',0,'protected ProjectResource(int id) {\r\n    this.id = id;\r\n}'),(2963,'ResourceAssignment assignmentToTask','net.sourceforge.ganttproject.task.ResourceAssignment',540,504,'net.sourceforge.ganttproject.resource.ProjectResource$ResourceAssignmentImpl',3893,'net.sourceforge.ganttproject.resource.ProjectResource$ResourceAssignmentImpl.-init-(net.sourceforge.ganttproject.task.ResourceAssignment)',0,'private ResourceAssignmentImpl(ResourceAssignment assignmentToTask) {\r\n    myAssignmentToTask = assignmentToTask;\r\n}'),(2964,'String name','java.lang.String',0,505,'net.sourceforge.ganttproject.resource.ProjectResource',3889,'net.sourceforge.ganttproject.resource.ProjectResource.setName(java.lang.String)',0,'public void setName(String name) {\r\n    this.name = name;\r\n}'),(2965,'String description','java.lang.String',0,505,'net.sourceforge.ganttproject.resource.ProjectResource',3886,'net.sourceforge.ganttproject.resource.ProjectResource.setDescription(java.lang.String)',0,'public void setDescription(String description) {\r\n    this.description = description;\r\n}'),(2966,'String unitMeasure','java.lang.String',0,505,'net.sourceforge.ganttproject.resource.ProjectResource',3890,'net.sourceforge.ganttproject.resource.ProjectResource.setUnitMeasure(java.lang.String)',0,'public void setUnitMeasure(String unitMeasure) {\r\n    this.unitMeasure = unitMeasure;\r\n}'),(2967,'double costsPerUnit','double',0,505,'net.sourceforge.ganttproject.resource.ProjectResource',3885,'net.sourceforge.ganttproject.resource.ProjectResource.setCostsPerUnit(double)',0,'public void setCostsPerUnit(double costsPerUnit) {\r\n    this.costsPerUnit = costsPerUnit;\r\n}'),(2968,'int maximumUnitsPerDay','int',0,505,'net.sourceforge.ganttproject.resource.ProjectResource',3888,'net.sourceforge.ganttproject.resource.ProjectResource.setMaximumUnitsPerDay(int)',0,'public void setMaximumUnitsPerDay(int maximumUnitsPerDay) {\r\n    this.maximumUnitsPerDay = maximumUnitsPerDay;\r\n}'),(2969,'int id','int',0,505,'net.sourceforge.ganttproject.resource.ProjectResource',3887,'net.sourceforge.ganttproject.resource.ProjectResource.setId(int)',0,'public void setId(int id) {\r\n    // setting the id is only allowed when id is not\r\n    // assigned\r\n    if ((this.id) == (-1))\r\n        this.id = id;\r\n\r\n}'),(2970,'Object obj','java.lang.Object',0,505,'net.sourceforge.ganttproject.resource.ProjectResource',3872,'net.sourceforge.ganttproject.resource.ProjectResource.equals(java.lang.Object)',0,'public boolean equals(Object obj) {\r\n    boolean res = false;\r\n    if (obj instanceof ProjectResource) {\r\n        ProjectResource pr = ((ProjectResource) (obj));\r\n        res = (pr.id) == (id);\r\n    }\r\n    return res;\r\n}'),(2971,'ResourceAssignment assignmentToTask','net.sourceforge.ganttproject.task.ResourceAssignment',540,505,'net.sourceforge.ganttproject.resource.ProjectResource',3870,'net.sourceforge.ganttproject.resource.ProjectResource.createAssignment(net.sourceforge.ganttproject.task.ResourceAssignment)',0,'public ResourceAssignment createAssignment(ResourceAssignment assignmentToTask) {\r\n    for (int i = 0; i < (myAssignments.size()); i++) {\r\n        if (((ResourceAssignment) (myAssignments.get(i))).getTask().equals(assignmentToTask.getTask())) {\r\n            // throw new IllegalStateException(\"An attemp to assign resource\r\n            // to the same task twice\");\r\n        }\r\n    }\r\n    ResourceAssignment result = new ProjectResource.ResourceAssignmentImpl(assignmentToTask);\r\n    myAssignments.add(result);\r\n    resetLoads();\r\n    return result;\r\n}'),(2972,'net.sourceforge.ganttproject.task.ResourceAssignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,505,'net.sourceforge.ganttproject.resource.ProjectResource',3870,'net.sourceforge.ganttproject.resource.ProjectResource.createAssignment(net.sourceforge.ganttproject.task.ResourceAssignment)',1,'public ResourceAssignment createAssignment(ResourceAssignment assignmentToTask) {\r\n    for (int i = 0; i < (myAssignments.size()); i++) {\r\n        if (((ResourceAssignment) (myAssignments.get(i))).getTask().equals(assignmentToTask.getTask())) {\r\n            // throw new IllegalStateException(\"An attemp to assign resource\r\n            // to the same task twice\");\r\n        }\r\n    }\r\n    ResourceAssignment result = new ProjectResource.ResourceAssignmentImpl(assignmentToTask);\r\n    myAssignments.add(result);\r\n    resetLoads();\r\n    return result;\r\n}'),(2973,'float load','float',0,504,'net.sourceforge.ganttproject.resource.ProjectResource$ResourceAssignmentImpl',3901,'net.sourceforge.ganttproject.resource.ProjectResource$ResourceAssignmentImpl.setLoad(float)',0,'public void setLoad(float load) {\r\n    myLoad = load;\r\n    this.fireAssignmentChanged(this);\r\n}'),(2974,'boolean responsible','boolean',0,504,'net.sourceforge.ganttproject.resource.ProjectResource$ResourceAssignmentImpl',3900,'net.sourceforge.ganttproject.resource.ProjectResource$ResourceAssignmentImpl.setCoordinator(boolean)',0,'public void setCoordinator(boolean responsible) {\r\n    myCoordinator = responsible;\r\n}'),(2975,'Role role','net.sourceforge.ganttproject.roles.Role',512,504,'net.sourceforge.ganttproject.resource.ProjectResource$ResourceAssignmentImpl',3902,'net.sourceforge.ganttproject.resource.ProjectResource$ResourceAssignmentImpl.setRoleForAssignment(net.sourceforge.ganttproject.roles.Role)',0,'public void setRoleForAssignment(Role role) {\r\n    myRoleForAssignment = role;\r\n}'),(2976,'ProjectResource.ResourceAssignmentImpl resourceAssignmentImpl','net.sourceforge.ganttproject.resource.ProjectResource$ResourceAssignmentImpl',504,505,'net.sourceforge.ganttproject.resource.ProjectResource',3873,'net.sourceforge.ganttproject.resource.ProjectResource.fireAssignmentChanged(net.sourceforge.ganttproject.resource.ProjectResource$ResourceAssignmentImpl)',0,'private void fireAssignmentChanged(ProjectResource.ResourceAssignmentImpl resourceAssignmentImpl) {\r\n    resetLoads();\r\n    fireAssignmentsChanged();\r\n}'),(2977,'TableColumnExt col','org.jdesktop.swing.table.TableColumnExt',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3904,'net.sourceforge.ganttproject.resource.ResourceColumn.-init-(org.jdesktop.swing.table.TableColumnExt,int)',0,'// public ResourceColumn(String name, int index, Class type) {\r\n// column = new TableColumnExt(index);\r\n// this.type = type;\r\n// this.setTitle(name);\r\n// defaultIndex = index;\r\n// }\r\n// \r\npublic ResourceColumn(TableColumnExt col, int index) {\r\n    this(col, index, String.class);\r\n}'),(2978,'int index','int',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3904,'net.sourceforge.ganttproject.resource.ResourceColumn.-init-(org.jdesktop.swing.table.TableColumnExt,int)',0,'// public ResourceColumn(String name, int index, Class type) {\r\n// column = new TableColumnExt(index);\r\n// this.type = type;\r\n// this.setTitle(name);\r\n// defaultIndex = index;\r\n// }\r\n// \r\npublic ResourceColumn(TableColumnExt col, int index) {\r\n    this(col, index, String.class);\r\n}'),(2979,'TableColumnExt col','org.jdesktop.swing.table.TableColumnExt',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3905,'net.sourceforge.ganttproject.resource.ResourceColumn.-init-(org.jdesktop.swing.table.TableColumnExt,int,java.lang.Class)',0,'public ResourceColumn(TableColumnExt col, int index, Class type) {\r\n    column = col;\r\n    this.type = type;\r\n    defaultIndex = index;\r\n    visible = true;\r\n}'),(2980,'int index','int',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3905,'net.sourceforge.ganttproject.resource.ResourceColumn.-init-(org.jdesktop.swing.table.TableColumnExt,int,java.lang.Class)',0,'public ResourceColumn(TableColumnExt col, int index, Class type) {\r\n    column = col;\r\n    this.type = type;\r\n    defaultIndex = index;\r\n    visible = true;\r\n}'),(2981,'Class type','java.lang.Class',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3905,'net.sourceforge.ganttproject.resource.ResourceColumn.-init-(org.jdesktop.swing.table.TableColumnExt,int,java.lang.Class)',0,'public ResourceColumn(TableColumnExt col, int index, Class type) {\r\n    column = col;\r\n    this.type = type;\r\n    defaultIndex = index;\r\n    visible = true;\r\n}'),(2982,'String name','java.lang.String',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3919,'net.sourceforge.ganttproject.resource.ResourceColumn.nameCmp(java.lang.String)',0,'// public ResourceColumn(TableColumnExt col, int index, Class type, Object def) {\r\n// column = col;\r\n// defaultIndex = index;\r\n// visible = true;\r\n// this.type = type;\r\n// defaultVal = def;\r\n// }\r\npublic boolean nameCmp(String name) {\r\n    System.out.println(((((\"comparing: \" + name) + \" - \") + (column.getTitle())) + \" \"));\r\n    return column.getTitle().equals(name);\r\n}'),(2983,'String title','java.lang.String',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3922,'net.sourceforge.ganttproject.resource.ResourceColumn.setTitle(java.lang.String)',0,'public void setTitle(String title) {\r\n    column.setTitle(title);\r\n}'),(2984,'boolean vis','boolean',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3924,'net.sourceforge.ganttproject.resource.ResourceColumn.setVisible(boolean)',0,'public void setVisible(boolean vis) {\r\n    visible = vis;\r\n}'),(2985,'Object defaultVal','java.lang.Object',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3920,'net.sourceforge.ganttproject.resource.ResourceColumn.setDefaultVal(java.lang.Object)',0,'public void setDefaultVal(Object defaultVal) {\r\n    this.defaultVal = defaultVal;\r\n}'),(2986,'Class type','java.lang.Class',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3923,'net.sourceforge.ganttproject.resource.ResourceColumn.setType(java.lang.Class)',0,'public void setType(Class type) {\r\n    this.type = type;\r\n}'),(2987,'int width','int',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3925,'net.sourceforge.ganttproject.resource.ResourceColumn.setWidth(int)',0,'public void setWidth(int width) {\r\n    column.setWidth(width);\r\n}'),(2988,'int order','int',0,506,'net.sourceforge.ganttproject.resource.ResourceColumn',3921,'net.sourceforge.ganttproject.resource.ResourceColumn.setOrder(int)',0,'public void setOrder(int order) {\r\n    myOrder = order;\r\n}'),(2989,'ResourceManager mgr','net.sourceforge.ganttproject.resource.ResourceManager',509,508,'net.sourceforge.ganttproject.resource.ResourceEvent',3927,'net.sourceforge.ganttproject.resource.ResourceEvent.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.ProjectResource)',0,'/**\r\n *\r\n *\r\n * @param source\r\n * 		\r\n */\r\npublic ResourceEvent(ResourceManager mgr, ProjectResource resource) {\r\n    super(mgr);\r\n    myManager = mgr;\r\n    myResource = resource;\r\n    myResources = new ProjectResource[]{ myResource };\r\n}'),(2990,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,508,'net.sourceforge.ganttproject.resource.ResourceEvent',3927,'net.sourceforge.ganttproject.resource.ResourceEvent.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.ProjectResource)',0,'/**\r\n *\r\n *\r\n * @param source\r\n * 		\r\n */\r\npublic ResourceEvent(ResourceManager mgr, ProjectResource resource) {\r\n    super(mgr);\r\n    myManager = mgr;\r\n    myResource = resource;\r\n    myResources = new ProjectResource[]{ myResource };\r\n}'),(2991,'ResourceManager mgr','net.sourceforge.ganttproject.resource.ResourceManager',509,508,'net.sourceforge.ganttproject.resource.ResourceEvent',3928,'net.sourceforge.ganttproject.resource.ResourceEvent.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.ProjectResource[])',0,'public ResourceEvent(ResourceManager mgr, ProjectResource[] resources) {\r\n    super(mgr);\r\n    myManager = mgr;\r\n    myResources = resources;\r\n    myResource = ((resources.length) > 0) ? resources[0] : null;\r\n}'),(2992,'ProjectResource[] resources','net.sourceforge.ganttproject.resource.ProjectResource[]',0,508,'net.sourceforge.ganttproject.resource.ResourceEvent',3928,'net.sourceforge.ganttproject.resource.ResourceEvent.-init-(net.sourceforge.ganttproject.resource.ResourceManager,net.sourceforge.ganttproject.resource.ProjectResource[])',0,'public ResourceEvent(ResourceManager mgr, ProjectResource[] resources) {\r\n    super(mgr);\r\n    myManager = mgr;\r\n    myResources = resources;\r\n    myResource = ((resources.length) > 0) ? resources[0] : null;\r\n}'),(2993,'String name','java.lang.String',0,509,'net.sourceforge.ganttproject.resource.ResourceManager',3935,'net.sourceforge.ganttproject.resource.ResourceManager.create(java.lang.String,int)',0,'public ProjectResource create(String name, int i);'),(2994,'net.sourceforge.ganttproject.resource.ProjectResource','net.sourceforge.ganttproject.resource.ProjectResource',505,509,'net.sourceforge.ganttproject.resource.ResourceManager',3935,'net.sourceforge.ganttproject.resource.ResourceManager.create(java.lang.String,int)',1,'public ProjectResource create(String name, int i);'),(2995,'int i','int',0,509,'net.sourceforge.ganttproject.resource.ResourceManager',3935,'net.sourceforge.ganttproject.resource.ResourceManager.create(java.lang.String,int)',0,'public ProjectResource create(String name, int i);'),(2996,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,509,'net.sourceforge.ganttproject.resource.ResourceManager',3932,'net.sourceforge.ganttproject.resource.ResourceManager.add(net.sourceforge.ganttproject.resource.ProjectResource)',0,'/**\r\n * Adds the resource to the internal list of available resources.\r\n *\r\n * @param resource\r\n * 		The resource that should be added to the list.\r\n */\r\npublic void add(ProjectResource resource);'),(2997,'int id','int',0,509,'net.sourceforge.ganttproject.resource.ResourceManager',3936,'net.sourceforge.ganttproject.resource.ResourceManager.getById(int)',0,'/**\r\n * Retrieves an ancestor of ProjectResource identified by an identity value.\r\n *\r\n * @param id\r\n * 		The id is an integer value that is unique for every resource.\r\n * @return Ancestor of ProjectResource containing the requested resource.\r\n * @see ProjectResource\r\n */\r\npublic ProjectResource getById(int id);'),(2998,'net.sourceforge.ganttproject.resource.ProjectResource','net.sourceforge.ganttproject.resource.ProjectResource',505,509,'net.sourceforge.ganttproject.resource.ResourceManager',3936,'net.sourceforge.ganttproject.resource.ResourceManager.getById(int)',1,'/**\r\n * Retrieves an ancestor of ProjectResource identified by an identity value.\r\n *\r\n * @param id\r\n * 		The id is an integer value that is unique for every resource.\r\n * @return Ancestor of ProjectResource containing the requested resource.\r\n * @see ProjectResource\r\n */\r\npublic ProjectResource getById(int id);'),(2999,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,509,'net.sourceforge.ganttproject.resource.ResourceManager',3941,'net.sourceforge.ganttproject.resource.ResourceManager.remove(net.sourceforge.ganttproject.resource.ProjectResource)',0,'/**\r\n * Removes the resource.\r\n *\r\n * @param resource\r\n * 		The resource to remove.\r\n */\r\npublic void remove(ProjectResource resource);'),(3000,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,509,'net.sourceforge.ganttproject.resource.ResourceManager',3942,'net.sourceforge.ganttproject.resource.ResourceManager.remove(net.sourceforge.ganttproject.resource.ProjectResource,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'/**\r\n * Removes the resource by its id.\r\n *\r\n * @param Id\r\n * 		Id of the resource to remove.\r\n */\r\npublic void remove(ProjectResource resource, GPUndoManager myUndoManager);'),(3001,'GPUndoManager myUndoManager','net.sourceforge.ganttproject.undo.GPUndoManager',657,509,'net.sourceforge.ganttproject.resource.ResourceManager',3942,'net.sourceforge.ganttproject.resource.ResourceManager.remove(net.sourceforge.ganttproject.resource.ProjectResource,net.sourceforge.ganttproject.undo.GPUndoManager)',0,'/**\r\n * Removes the resource by its id.\r\n *\r\n * @param Id\r\n * 		Id of the resource to remove.\r\n */\r\npublic void remove(ProjectResource resource, GPUndoManager myUndoManager);'),(3002,'OutputStream target','java.io.OutputStream',0,509,'net.sourceforge.ganttproject.resource.ResourceManager',3943,'net.sourceforge.ganttproject.resource.ResourceManager.save(java.io.OutputStream)',0,'/**\r\n * Loads resources from the InputStreamReader. All resources already stored\r\n * in the Resourcemanager are lost and will be replace with the resources\r\n * loaded from the stream.\r\n *\r\n * @return The ArrayLisr returned contains all ProjectResource ancestor that\r\nwere read from the InputStreamReader.\r\n * @param source\r\n * 		The InputStreamReader from which the data will be read. The\r\n * 		format and kind of data read is subject of the class\r\n * 		implementing this interface.\r\n */\r\n// public ArrayList load (InputStream source);\r\n/**\r\n * Writes all resources stored in the OutputStreamWriter. The format and\r\n * kind of data written in the stream are subject of the class that\r\n * implements this interface.\r\n *\r\n * @param target\r\n * 		Stream to write the data to.\r\n */\r\npublic void save(OutputStream target);'),(3003,'ResourceView view','net.sourceforge.ganttproject.resource.ResourceView',511,509,'net.sourceforge.ganttproject.resource.ResourceManager',3933,'net.sourceforge.ganttproject.resource.ResourceManager.addView(net.sourceforge.ganttproject.resource.ResourceView)',0,'/**\r\n * Adds a new view of this manager\r\n *\r\n * @param view\r\n * 		\r\n */\r\npublic void addView(ResourceView view);'),(3004,'ResourceManager resourceManager','net.sourceforge.ganttproject.resource.ResourceManager',509,509,'net.sourceforge.ganttproject.resource.ResourceManager',3940,'net.sourceforge.ganttproject.resource.ResourceManager.importData(net.sourceforge.ganttproject.resource.ResourceManager)',0,'public Map importData(ResourceManager resourceManager);'),(3005,'ProjectResource res','net.sourceforge.ganttproject.resource.ProjectResource',505,510,'net.sourceforge.ganttproject.resource.ResourceNode',3944,'net.sourceforge.ganttproject.resource.ResourceNode.-init-(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public ResourceNode(ProjectResource res) {\r\n    super(res);\r\n    resource = res;\r\n}'),(3006,'String name','java.lang.String',0,510,'net.sourceforge.ganttproject.resource.ResourceNode',3955,'net.sourceforge.ganttproject.resource.ResourceNode.setName(java.lang.String)',0,'public void setName(String name) {\r\n    resource.setName(name);\r\n}'),(3007,'String phoneNumber','java.lang.String',0,510,'net.sourceforge.ganttproject.resource.ResourceNode',3956,'net.sourceforge.ganttproject.resource.ResourceNode.setPhone(java.lang.String)',0,'public void setPhone(String phoneNumber) {\r\n    if ((resource) instanceof HumanResource)\r\n        ((HumanResource) (resource)).setPhone(phoneNumber);\r\n\r\n}'),(3008,'String email','java.lang.String',0,510,'net.sourceforge.ganttproject.resource.ResourceNode',3954,'net.sourceforge.ganttproject.resource.ResourceNode.setEMail(java.lang.String)',0,'public void setEMail(String email) {\r\n    if ((resource) instanceof HumanResource)\r\n        ((HumanResource) (resource)).setMail(email);\r\n\r\n}'),(3009,'Role defRole','net.sourceforge.ganttproject.roles.Role',512,510,'net.sourceforge.ganttproject.resource.ResourceNode',3953,'net.sourceforge.ganttproject.resource.ResourceNode.setDefaultRole(net.sourceforge.ganttproject.roles.Role)',0,'public void setDefaultRole(Role defRole) {\r\n    if ((resource) instanceof HumanResource)\r\n        ((HumanResource) (resource)).setRole(defRole);\r\n\r\n}'),(3010,'String title','java.lang.String',0,510,'net.sourceforge.ganttproject.resource.ResourceNode',3946,'net.sourceforge.ganttproject.resource.ResourceNode.getCustomField(java.lang.String)',0,'/* gets the value of a custom field referenced by its title */\r\npublic Object getCustomField(String title) {\r\n    if ((resource) instanceof HumanResource)\r\n        return ((HumanResource) (resource)).getCustomFieldVal(title);\r\n\r\n    return null;\r\n}'),(3011,'String title','java.lang.String',0,510,'net.sourceforge.ganttproject.resource.ResourceNode',3952,'net.sourceforge.ganttproject.resource.ResourceNode.setCustomField(java.lang.String,java.lang.Object)',0,'/* gets the new value to the custom field referenced by its title */\r\npublic void setCustomField(String title, Object val) {\r\n    if ((resource) instanceof HumanResource)\r\n        ((HumanResource) (resource)).setCustomFieldVal(title, val);\r\n\r\n}'),(3012,'Object val','java.lang.Object',0,510,'net.sourceforge.ganttproject.resource.ResourceNode',3952,'net.sourceforge.ganttproject.resource.ResourceNode.setCustomField(java.lang.String,java.lang.Object)',0,'/* gets the new value to the custom field referenced by its title */\r\npublic void setCustomField(String title, Object val) {\r\n    if ((resource) instanceof HumanResource)\r\n        ((HumanResource) (resource)).setCustomFieldVal(title, val);\r\n\r\n}'),(3013,'Object obj','java.lang.Object',0,510,'net.sourceforge.ganttproject.resource.ResourceNode',3945,'net.sourceforge.ganttproject.resource.ResourceNode.equals(java.lang.Object)',0,'public boolean equals(Object obj) {\r\n    boolean res = false;\r\n    if ((this) == obj)\r\n        return true;\r\n\r\n    if (obj instanceof ResourceNode) {\r\n        ResourceNode rn = ((ResourceNode) (obj));\r\n        res = ((rn.getUserObject()) != null) && (rn.getUserObject().equals(this.getUserObject()));\r\n    }\r\n    return res;\r\n}'),(3014,'ResourceEvent event','net.sourceforge.ganttproject.resource.ResourceEvent',508,511,'net.sourceforge.ganttproject.resource.ResourceView',3958,'net.sourceforge.ganttproject.resource.ResourceView.resourceAdded(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'/**\r\n * This method is called whenever new resource appears in the resource\r\n * manager\r\n *\r\n * @param event\r\n * 		Resource event object\r\n */\r\npublic void resourceAdded(ResourceEvent event);'),(3015,'ResourceEvent event','net.sourceforge.ganttproject.resource.ResourceEvent',508,511,'net.sourceforge.ganttproject.resource.ResourceView',3961,'net.sourceforge.ganttproject.resource.ResourceView.resourcesRemoved(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'public void resourcesRemoved(ResourceEvent event);'),(3016,'ResourceEvent e','net.sourceforge.ganttproject.resource.ResourceEvent',508,511,'net.sourceforge.ganttproject.resource.ResourceView',3960,'net.sourceforge.ganttproject.resource.ResourceView.resourceChanged(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'public void resourceChanged(ResourceEvent e);'),(3017,'ResourceEvent e','net.sourceforge.ganttproject.resource.ResourceEvent',508,511,'net.sourceforge.ganttproject.resource.ResourceView',3959,'net.sourceforge.ganttproject.resource.ResourceView.resourceAssignmentsChanged(net.sourceforge.ganttproject.resource.ResourceEvent)',0,'public void resourceAssignmentsChanged(ResourceEvent e);'),(3018,'String name','java.lang.String',0,512,'net.sourceforge.ganttproject.roles.Role',3965,'net.sourceforge.ganttproject.roles.Role.setName(java.lang.String)',0,'void setName(String name);'),(3019,'int id','int',0,513,'net.sourceforge.ganttproject.roles.RoleImpl',3966,'net.sourceforge.ganttproject.roles.RoleImpl.-init-(int,java.lang.String,net.sourceforge.ganttproject.roles.RoleSet)',0,'public RoleImpl(int id, String name, RoleSet roleSet) {\r\n    myID = id;\r\n    myName = name;\r\n    myRoleSet = roleSet;\r\n    GanttLanguage.getInstance().addListener(new GanttLanguage.Listener() {\r\n        public void languageChanged(GanttLanguage.Event event) {\r\n            Role role = myRoleSet.findRole(myID);\r\n            if (role != null) {\r\n                myName = role.getName();\r\n            }\r\n        }\r\n    });\r\n}'),(3020,'String name','java.lang.String',0,513,'net.sourceforge.ganttproject.roles.RoleImpl',3966,'net.sourceforge.ganttproject.roles.RoleImpl.-init-(int,java.lang.String,net.sourceforge.ganttproject.roles.RoleSet)',0,'public RoleImpl(int id, String name, RoleSet roleSet) {\r\n    myID = id;\r\n    myName = name;\r\n    myRoleSet = roleSet;\r\n    GanttLanguage.getInstance().addListener(new GanttLanguage.Listener() {\r\n        public void languageChanged(GanttLanguage.Event event) {\r\n            Role role = myRoleSet.findRole(myID);\r\n            if (role != null) {\r\n                myName = role.getName();\r\n            }\r\n        }\r\n    });\r\n}'),(3021,'RoleSet roleSet','net.sourceforge.ganttproject.roles.RoleSet',520,513,'net.sourceforge.ganttproject.roles.RoleImpl',3966,'net.sourceforge.ganttproject.roles.RoleImpl.-init-(int,java.lang.String,net.sourceforge.ganttproject.roles.RoleSet)',0,'public RoleImpl(int id, String name, RoleSet roleSet) {\r\n    myID = id;\r\n    myName = name;\r\n    myRoleSet = roleSet;\r\n    GanttLanguage.getInstance().addListener(new GanttLanguage.Listener() {\r\n        public void languageChanged(GanttLanguage.Event event) {\r\n            Role role = myRoleSet.findRole(myID);\r\n            if (role != null) {\r\n                myName = role.getName();\r\n            }\r\n        }\r\n    });\r\n}'),(3022,'String name','java.lang.String',0,513,'net.sourceforge.ganttproject.roles.RoleImpl',3971,'net.sourceforge.ganttproject.roles.RoleImpl.setName(java.lang.String)',0,'public void setName(String name) {\r\n    myName = name;\r\n}'),(3023,'RoleManager source','net.sourceforge.ganttproject.roles.RoleManager',517,516,'net.sourceforge.ganttproject.roles.RoleManager$RoleEvent',3990,'net.sourceforge.ganttproject.roles.RoleManager$RoleEvent.-init-(net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.roles.RoleSet)',0,'public RoleEvent(RoleManager source, RoleSet changedRoleSet) {\r\n    super(source);\r\n    myChangedRoleSet = changedRoleSet;\r\n}'),(3024,'RoleSet changedRoleSet','net.sourceforge.ganttproject.roles.RoleSet',520,516,'net.sourceforge.ganttproject.roles.RoleManager$RoleEvent',3990,'net.sourceforge.ganttproject.roles.RoleManager$RoleEvent.-init-(net.sourceforge.ganttproject.roles.RoleManager,net.sourceforge.ganttproject.roles.RoleSet)',0,'public RoleEvent(RoleManager source, RoleSet changedRoleSet) {\r\n    super(source);\r\n    myChangedRoleSet = changedRoleSet;\r\n}'),(3025,'String name','java.lang.String',0,517,'net.sourceforge.ganttproject.roles.RoleManager',3978,'net.sourceforge.ganttproject.roles.RoleManager.createRoleSet(java.lang.String)',0,'public RoleSet createRoleSet(String name);'),(3026,'net.sourceforge.ganttproject.roles.RoleSet','net.sourceforge.ganttproject.roles.RoleSet',520,517,'net.sourceforge.ganttproject.roles.RoleManager',3978,'net.sourceforge.ganttproject.roles.RoleManager.createRoleSet(java.lang.String)',1,'public RoleSet createRoleSet(String name);'),(3027,'int ID','int',0,517,'net.sourceforge.ganttproject.roles.RoleManager',3975,'net.sourceforge.ganttproject.roles.RoleManager.add(int,java.lang.String)',0,'/**\r\n * Load roles from the file\r\n */\r\n/**\r\n * Add a role on the list\r\n */\r\npublic void add(int ID, String role);'),(3028,'String role','java.lang.String',0,517,'net.sourceforge.ganttproject.roles.RoleManager',3975,'net.sourceforge.ganttproject.roles.RoleManager.add(int,java.lang.String)',0,'/**\r\n * Load roles from the file\r\n */\r\n/**\r\n * Add a role on the list\r\n */\r\npublic void add(int ID, String role);'),(3029,'String rolesetName','java.lang.String',0,517,'net.sourceforge.ganttproject.roles.RoleManager',3983,'net.sourceforge.ganttproject.roles.RoleManager.getRoleSet(java.lang.String)',0,'public RoleSet getRoleSet(String rolesetName);'),(3030,'net.sourceforge.ganttproject.roles.RoleSet','net.sourceforge.ganttproject.roles.RoleSet',520,517,'net.sourceforge.ganttproject.roles.RoleManager',3983,'net.sourceforge.ganttproject.roles.RoleManager.getRoleSet(java.lang.String)',1,'public RoleSet getRoleSet(String rolesetName);'),(3031,'RoleManager roleManager','net.sourceforge.ganttproject.roles.RoleManager',517,517,'net.sourceforge.ganttproject.roles.RoleManager',3985,'net.sourceforge.ganttproject.roles.RoleManager.importData(net.sourceforge.ganttproject.roles.RoleManager)',0,'public void importData(RoleManager roleManager);'),(3032,'RoleManager.Listener listener','net.sourceforge.ganttproject.roles.RoleManager$Listener',515,517,'net.sourceforge.ganttproject.roles.RoleManager',3976,'net.sourceforge.ganttproject.roles.RoleManager.addRoleListener(net.sourceforge.ganttproject.roles.RoleManager$Listener)',0,'public void addRoleListener(RoleManager.Listener listener);'),(3033,'RoleManager.Listener listener','net.sourceforge.ganttproject.roles.RoleManager$Listener',515,517,'net.sourceforge.ganttproject.roles.RoleManager',3986,'net.sourceforge.ganttproject.roles.RoleManager.removeRoleListener(net.sourceforge.ganttproject.roles.RoleManager$Listener)',0,'public void removeRoleListener(RoleManager.Listener listener);'),(3034,'RoleManager.RoleEvent e','net.sourceforge.ganttproject.roles.RoleManager$RoleEvent',516,515,'net.sourceforge.ganttproject.roles.RoleManager$Listener',3989,'net.sourceforge.ganttproject.roles.RoleManager$Listener.rolesChanged(net.sourceforge.ganttproject.roles.RoleManager$RoleEvent)',0,'public void rolesChanged(RoleManager.RoleEvent e);'),(3035,'int ID','int',0,518,'net.sourceforge.ganttproject.roles.RoleManagerImpl',3993,'net.sourceforge.ganttproject.roles.RoleManagerImpl.add(int,java.lang.String)',0,'/**\r\n * Add a role on the list\r\n */\r\npublic void add(int ID, String roleName) {\r\n    // myProjectLevelRoles.add(newRole(ID, role));\r\n    myProjectRoleSet.createRole(roleName, ID);\r\n}'),(3036,'String roleName','java.lang.String',0,518,'net.sourceforge.ganttproject.roles.RoleManagerImpl',3993,'net.sourceforge.ganttproject.roles.RoleManagerImpl.add(int,java.lang.String)',0,'/**\r\n * Add a role on the list\r\n */\r\npublic void add(int ID, String roleName) {\r\n    // myProjectLevelRoles.add(newRole(ID, role));\r\n    myProjectRoleSet.createRole(roleName, ID);\r\n}'),(3037,'String name','java.lang.String',0,518,'net.sourceforge.ganttproject.roles.RoleManagerImpl',3998,'net.sourceforge.ganttproject.roles.RoleManagerImpl.createRoleSet(java.lang.String)',0,'public RoleSet createRoleSet(String name) {\r\n    RoleSet result = new RoleSetImpl(name, this);\r\n    myRoleSets.add(result);\r\n    // System.err.println(\"[RoleManagerImpl] createRoleSet():\r\n    // created:\"+name);\r\n    return result;\r\n}'),(3038,'net.sourceforge.ganttproject.roles.RoleSet','net.sourceforge.ganttproject.roles.RoleSet',520,518,'net.sourceforge.ganttproject.roles.RoleManagerImpl',3998,'net.sourceforge.ganttproject.roles.RoleManagerImpl.createRoleSet(java.lang.String)',1,'public RoleSet createRoleSet(String name) {\r\n    RoleSet result = new RoleSetImpl(name, this);\r\n    myRoleSets.add(result);\r\n    // System.err.println(\"[RoleManagerImpl] createRoleSet():\r\n    // created:\"+name);\r\n    return result;\r\n}'),(3039,'String rolesetName','java.lang.String',0,518,'net.sourceforge.ganttproject.roles.RoleManagerImpl',4004,'net.sourceforge.ganttproject.roles.RoleManagerImpl.getRoleSet(java.lang.String)',0,'public RoleSet getRoleSet(String rolesetName) {\r\n    RoleSet result = null;\r\n    RoleSet[] roleSets = getRoleSets();\r\n    for (int i = 0; i < (roleSets.length); i++) {\r\n        if (roleSets[i].getName().equals(rolesetName)) {\r\n            result = roleSets[i];\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(3040,'net.sourceforge.ganttproject.roles.RoleSet','net.sourceforge.ganttproject.roles.RoleSet',520,518,'net.sourceforge.ganttproject.roles.RoleManagerImpl',4004,'net.sourceforge.ganttproject.roles.RoleManagerImpl.getRoleSet(java.lang.String)',1,'public RoleSet getRoleSet(String rolesetName) {\r\n    RoleSet result = null;\r\n    RoleSet[] roleSets = getRoleSets();\r\n    for (int i = 0; i < (roleSets.length); i++) {\r\n        if (roleSets[i].getName().equals(rolesetName)) {\r\n            result = roleSets[i];\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(3041,'RoleManager original','net.sourceforge.ganttproject.roles.RoleManager',517,518,'net.sourceforge.ganttproject.roles.RoleManagerImpl',4006,'net.sourceforge.ganttproject.roles.RoleManagerImpl.importData(net.sourceforge.ganttproject.roles.RoleManager)',0,'public void importData(RoleManager original) {\r\n    myProjectRoleSet.importData(original.getProjectRoleSet());\r\n    RoleSet[] originalRoleSets = original.getRoleSets();\r\n    HashSet thisNames = new HashSet();\r\n    for (int i = 0; i < (myRoleSets.size()); i++) {\r\n        RoleSet next = ((RoleSet) (myRoleSets.get(i)));\r\n        thisNames.add(next.getName());\r\n    }\r\n    for (int i = 0; i < (originalRoleSets.length); i++) {\r\n        RoleSet next = originalRoleSets[i];\r\n        if (!(thisNames.contains(next.getName()))) {\r\n            myRoleSets.add(next);\r\n        }\r\n    }\r\n    // myRoleSets.addAll(Arrays.asList(originalRoleSets));\r\n}'),(3042,'RoleManager.Listener listener','net.sourceforge.ganttproject.roles.RoleManager$Listener',515,518,'net.sourceforge.ganttproject.roles.RoleManagerImpl',3994,'net.sourceforge.ganttproject.roles.RoleManagerImpl.addRoleListener(net.sourceforge.ganttproject.roles.RoleManager$Listener)',0,'public void addRoleListener(RoleManager.Listener listener) {\r\n    myListeners.add(listener);\r\n}'),(3043,'RoleManager.Listener listener','net.sourceforge.ganttproject.roles.RoleManager$Listener',515,518,'net.sourceforge.ganttproject.roles.RoleManagerImpl',4007,'net.sourceforge.ganttproject.roles.RoleManagerImpl.removeRoleListener(net.sourceforge.ganttproject.roles.RoleManager$Listener)',0,'public void removeRoleListener(RoleManager.Listener listener) {\r\n    myListeners.remove(listener);\r\n}'),(3044,'RoleSet changedRoleSet','net.sourceforge.ganttproject.roles.RoleSet',520,518,'net.sourceforge.ganttproject.roles.RoleManagerImpl',3999,'net.sourceforge.ganttproject.roles.RoleManagerImpl.fireRolesChanged(net.sourceforge.ganttproject.roles.RoleSet)',0,'void fireRolesChanged(RoleSet changedRoleSet) {\r\n    RoleManager.RoleEvent event = new RoleManager.RoleEvent(this, changedRoleSet);\r\n    for (int i = 0; i < (myListeners.size()); i++) {\r\n        RoleManager.Listener next = ((RoleManager.Listener) (myListeners.get(i)));\r\n        next.rolesChanged(event);\r\n    }\r\n}'),(3045,'String persistentID','java.lang.String',0,519,'net.sourceforge.ganttproject.roles.RolePersistentID',4008,'net.sourceforge.ganttproject.roles.RolePersistentID.-init-(java.lang.String)',0,'public RolePersistentID(String persistentID) {\r\n    int posDelimiter = persistentID.lastIndexOf(RolePersistentID.ROLESET_DELIMITER);\r\n    String rolesetName = (posDelimiter == (-1)) ? null : persistentID.substring(0, posDelimiter);\r\n    String roleIDasString = (posDelimiter == (-1)) ? persistentID : persistentID.substring((posDelimiter + 1));\r\n    int roleID;\r\n    try {\r\n        roleID = Integer.parseInt(roleIDasString);\r\n    } catch (NumberFormatException e) {\r\n        roleID = 0;\r\n    }\r\n    myRoleID = roleID;\r\n    myRoleSetID = rolesetName;\r\n}'),(3046,'String name','java.lang.String',0,520,'net.sourceforge.ganttproject.roles.RoleSet',4014,'net.sourceforge.ganttproject.roles.RoleSet.createRole(java.lang.String,int)',0,'Role createRole(String name, int persistentID);'),(3047,'net.sourceforge.ganttproject.roles.Role','net.sourceforge.ganttproject.roles.Role',512,520,'net.sourceforge.ganttproject.roles.RoleSet',4014,'net.sourceforge.ganttproject.roles.RoleSet.createRole(java.lang.String,int)',1,'Role createRole(String name, int persistentID);'),(3048,'int persistentID','int',0,520,'net.sourceforge.ganttproject.roles.RoleSet',4014,'net.sourceforge.ganttproject.roles.RoleSet.createRole(java.lang.String,int)',0,'Role createRole(String name, int persistentID);'),(3049,'Role role','net.sourceforge.ganttproject.roles.Role',512,520,'net.sourceforge.ganttproject.roles.RoleSet',4015,'net.sourceforge.ganttproject.roles.RoleSet.deleteRole(net.sourceforge.ganttproject.roles.Role)',0,'void deleteRole(Role role);'),(3050,'String name','java.lang.String',0,520,'net.sourceforge.ganttproject.roles.RoleSet',4012,'net.sourceforge.ganttproject.roles.RoleSet.changeRole(java.lang.String,int)',0,'void changeRole(String name, int roleID);'),(3051,'int roleID','int',0,520,'net.sourceforge.ganttproject.roles.RoleSet',4012,'net.sourceforge.ganttproject.roles.RoleSet.changeRole(java.lang.String,int)',0,'void changeRole(String name, int roleID);'),(3052,'int roleID','int',0,520,'net.sourceforge.ganttproject.roles.RoleSet',4016,'net.sourceforge.ganttproject.roles.RoleSet.findRole(int)',0,'Role findRole(int roleID);'),(3053,'net.sourceforge.ganttproject.roles.Role','net.sourceforge.ganttproject.roles.Role',512,520,'net.sourceforge.ganttproject.roles.RoleSet',4016,'net.sourceforge.ganttproject.roles.RoleSet.findRole(int)',1,'Role findRole(int roleID);'),(3054,'boolean isEnabled','boolean',0,520,'net.sourceforge.ganttproject.roles.RoleSet',4021,'net.sourceforge.ganttproject.roles.RoleSet.setEnabled(boolean)',0,'void setEnabled(boolean isEnabled);'),(3055,'String name','java.lang.String',0,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4022,'net.sourceforge.ganttproject.roles.RoleSetImpl.-init-(java.lang.String,net.sourceforge.ganttproject.roles.RoleManagerImpl)',0,'RoleSetImpl(String name, RoleManagerImpl roleManager) {\r\n    myName = name;\r\n    myRoleManager = roleManager;\r\n}'),(3056,'RoleManagerImpl roleManager','net.sourceforge.ganttproject.roles.RoleManagerImpl',518,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4022,'net.sourceforge.ganttproject.roles.RoleSetImpl.-init-(java.lang.String,net.sourceforge.ganttproject.roles.RoleManagerImpl)',0,'RoleSetImpl(String name, RoleManagerImpl roleManager) {\r\n    myName = name;\r\n    myRoleManager = roleManager;\r\n}'),(3057,'String name','java.lang.String',0,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4025,'net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(java.lang.String,int)',0,'public Role createRole(String name, int persistentID) {\r\n    RoleImpl result = new RoleImpl(persistentID, name, this);\r\n    myRoles.add(result);\r\n    myRoleManager.fireRolesChanged(this);\r\n    return result;\r\n}'),(3058,'net.sourceforge.ganttproject.roles.Role','net.sourceforge.ganttproject.roles.Role',512,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4025,'net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(java.lang.String,int)',1,'public Role createRole(String name, int persistentID) {\r\n    RoleImpl result = new RoleImpl(persistentID, name, this);\r\n    myRoles.add(result);\r\n    myRoleManager.fireRolesChanged(this);\r\n    return result;\r\n}'),(3059,'int persistentID','int',0,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4025,'net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(java.lang.String,int)',0,'public Role createRole(String name, int persistentID) {\r\n    RoleImpl result = new RoleImpl(persistentID, name, this);\r\n    myRoles.add(result);\r\n    myRoleManager.fireRolesChanged(this);\r\n    return result;\r\n}'),(3060,'Role role','net.sourceforge.ganttproject.roles.Role',512,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4026,'net.sourceforge.ganttproject.roles.RoleSetImpl.deleteRole(net.sourceforge.ganttproject.roles.Role)',0,'public void deleteRole(Role role) {\r\n    myRoles.remove(role);\r\n    myRoleManager.fireRolesChanged(this);\r\n}'),(3061,'String name','java.lang.String',0,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4023,'net.sourceforge.ganttproject.roles.RoleSetImpl.changeRole(java.lang.String,int)',0,'public void changeRole(String name, int roleID) {\r\n    Role role = findRole(roleID);\r\n    if (role != null) {\r\n        role.setName(name);\r\n    }\r\n}'),(3062,'int roleID','int',0,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4023,'net.sourceforge.ganttproject.roles.RoleSetImpl.changeRole(java.lang.String,int)',0,'public void changeRole(String name, int roleID) {\r\n    Role role = findRole(roleID);\r\n    if (role != null) {\r\n        role.setName(name);\r\n    }\r\n}'),(3063,'int roleID','int',0,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4027,'net.sourceforge.ganttproject.roles.RoleSetImpl.findRole(int)',0,'public Role findRole(int roleID) {\r\n    Role result = null;\r\n    for (int i = 0; i < (myRoles.size()); i++) {\r\n        Role next = ((Role) (myRoles.get(i)));\r\n        if ((next.getID()) == roleID) {\r\n            result = next;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(3064,'net.sourceforge.ganttproject.roles.Role','net.sourceforge.ganttproject.roles.Role',512,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4027,'net.sourceforge.ganttproject.roles.RoleSetImpl.findRole(int)',1,'public Role findRole(int roleID) {\r\n    Role result = null;\r\n    for (int i = 0; i < (myRoles.size()); i++) {\r\n        Role next = ((Role) (myRoles.get(i)));\r\n        if ((next.getID()) == roleID) {\r\n            result = next;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(3065,'boolean isEnabled','boolean',0,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4033,'net.sourceforge.ganttproject.roles.RoleSetImpl.setEnabled(boolean)',0,'public void setEnabled(boolean isEnabled) {\r\n    this.isEnabled = isEnabled;\r\n    myRoleManager.fireRolesChanged(this);\r\n}'),(3066,'RoleSet original','net.sourceforge.ganttproject.roles.RoleSet',520,521,'net.sourceforge.ganttproject.roles.RoleSetImpl',4030,'net.sourceforge.ganttproject.roles.RoleSetImpl.importData(net.sourceforge.ganttproject.roles.RoleSet)',0,'void importData(RoleSet original) {\r\n    Role[] originalRoles = original.getRoles();\r\n    for (int i = 0; i < (originalRoles.length); i++) {\r\n        Role nextRole = originalRoles[i];\r\n        createRole(nextRole.getName(), nextRole.getID());\r\n    }\r\n}'),(3067,'Paint[] list','java.awt.Paint[]',0,523,'net.sourceforge.ganttproject.shape.JPaintCombo',4036,'net.sourceforge.ganttproject.shape.JPaintCombo.-init-(java.awt.Paint[])',0,'public JPaintCombo(Paint[] list) {\r\n    super(list);\r\n    myList = list;\r\n    setRenderer(new PaintCellRenderer());\r\n}'),(3068,'Paint[] list','java.awt.Paint[]',0,524,'net.sourceforge.ganttproject.shape.JPaintList',4038,'net.sourceforge.ganttproject.shape.JPaintList.-init-(java.awt.Paint[])',0,'public JPaintList(Paint[] list) {\r\n    super(list);\r\n    setCellRenderer(new PaintCellRenderer());\r\n    setSelectedIndex(0);\r\n}'),(3069,'Graphics gc','java.awt.Graphics',0,525,'net.sourceforge.ganttproject.shape.PaintCellRenderer',4042,'net.sourceforge.ganttproject.shape.PaintCellRenderer.paintComponent(java.awt.Graphics)',0,'public void paintComponent(Graphics gc) {\r\n    Graphics2D g = ((Graphics2D) (gc));\r\n    int w = getSize().width;\r\n    int h = getSize().height;\r\n    Insets insets = getInsets();\r\n    Rectangle rect = new Rectangle(insets.left, insets.top, (w - ((insets.left) + (insets.right))), (h - ((insets.top) + (insets.bottom))));\r\n    g.setPaint(paint);\r\n    g.fill(rect);\r\n}'),(3070,'JList list','javax.swing.JList',0,525,'net.sourceforge.ganttproject.shape.PaintCellRenderer',4041,'net.sourceforge.ganttproject.shape.PaintCellRenderer.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean hasFocus) {\r\n    Border border = (isSelected) ? selectBorder : normalBorder;\r\n    setBorder((hasFocus ? focusBorder : border));\r\n    if (value instanceof Paint) {\r\n        paint = ((Paint) (value));\r\n    }\r\n    return this;\r\n}'),(3071,'Object value','java.lang.Object',0,525,'net.sourceforge.ganttproject.shape.PaintCellRenderer',4041,'net.sourceforge.ganttproject.shape.PaintCellRenderer.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean hasFocus) {\r\n    Border border = (isSelected) ? selectBorder : normalBorder;\r\n    setBorder((hasFocus ? focusBorder : border));\r\n    if (value instanceof Paint) {\r\n        paint = ((Paint) (value));\r\n    }\r\n    return this;\r\n}'),(3072,'int index','int',0,525,'net.sourceforge.ganttproject.shape.PaintCellRenderer',4041,'net.sourceforge.ganttproject.shape.PaintCellRenderer.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean hasFocus) {\r\n    Border border = (isSelected) ? selectBorder : normalBorder;\r\n    setBorder((hasFocus ? focusBorder : border));\r\n    if (value instanceof Paint) {\r\n        paint = ((Paint) (value));\r\n    }\r\n    return this;\r\n}'),(3073,'boolean isSelected','boolean',0,525,'net.sourceforge.ganttproject.shape.PaintCellRenderer',4041,'net.sourceforge.ganttproject.shape.PaintCellRenderer.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean hasFocus) {\r\n    Border border = (isSelected) ? selectBorder : normalBorder;\r\n    setBorder((hasFocus ? focusBorder : border));\r\n    if (value instanceof Paint) {\r\n        paint = ((Paint) (value));\r\n    }\r\n    return this;\r\n}'),(3074,'boolean hasFocus','boolean',0,525,'net.sourceforge.ganttproject.shape.PaintCellRenderer',4041,'net.sourceforge.ganttproject.shape.PaintCellRenderer.getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)',0,'public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean hasFocus) {\r\n    Border border = (isSelected) ? selectBorder : normalBorder;\r\n    setBorder((hasFocus ? focusBorder : border));\r\n    if (value instanceof Paint) {\r\n        paint = ((Paint) (value));\r\n    }\r\n    return this;\r\n}'),(3075,'ShapePaint pattern','net.sourceforge.ganttproject.shape.ShapePaint',529,526,'net.sourceforge.ganttproject.shape.PreviewPanel',4046,'net.sourceforge.ganttproject.shape.PreviewPanel.setPattern(net.sourceforge.ganttproject.shape.ShapePaint)',0,'public void setPattern(ShapePaint pattern) {\r\n    this.pattern = pattern;\r\n}'),(3076,'Graphics gc','java.awt.Graphics',0,526,'net.sourceforge.ganttproject.shape.PreviewPanel',4045,'net.sourceforge.ganttproject.shape.PreviewPanel.paintComponent(java.awt.Graphics)',0,'public void paintComponent(Graphics gc) {\r\n    Graphics2D g = ((Graphics2D) (gc));\r\n    int w = getSize().width;\r\n    int h = getSize().height;\r\n    g.setColor(getParent().getBackground());\r\n    g.fillRect(0, 0, w, h);\r\n    if ((pattern) == null)\r\n        return;\r\n\r\n    Insets insets = getInsets();\r\n    Rectangle rect = new Rectangle(insets.left, insets.top, (w - ((insets.left) + (insets.right))), (h - ((insets.top) + (insets.bottom))));\r\n    g.setPaint(new ShapePaint(pattern, getForeground(), getBackground()));\r\n    g.fill(rect);\r\n}'),(3077,'boolean compactDisplay','boolean',0,527,'net.sourceforge.ganttproject.shape.Shape',4047,'net.sourceforge.ganttproject.shape.Shape.-init-(boolean)',0,'public Shape(boolean compactDisplay) {\r\n    this.compactDisplay = compactDisplay;\r\n    JPanel choicePanel = new JPanel(new BorderLayout(4, 4));\r\n    preview = new PreviewPanel();\r\n    if (compactDisplay) {\r\n        JPanel prompts = new JPanel(new GridLayout(3, 1, 4, 4));\r\n        prompts.add(new JLabel(\"Pattern:\", JLabel.RIGHT));\r\n        prompts.add(new JLabel(\"Foreground:\", JLabel.RIGHT));\r\n        prompts.add(new JLabel(\"Background:\", JLabel.RIGHT));\r\n        JPanel menus = new JPanel(new GridLayout(3, 1, 4, 4));\r\n        menus.add((patternCombo = new JPaintCombo(ShapeConstants.PATTERN_LIST)));\r\n        menus.add((foregroundCombo = new JPaintCombo(ColorConstants.SHORT_LIST)));\r\n        menus.add((backgroundCombo = new JPaintCombo(ColorConstants.SHORT_LIST)));\r\n        patternCombo.addActionListener(this);\r\n        foregroundCombo.addActionListener(this);\r\n        backgroundCombo.addActionListener(this);\r\n        choicePanel.add(BorderLayout.WEST, prompts);\r\n        choicePanel.add(BorderLayout.CENTER, menus);\r\n        preview.setPattern(((ShapePaint) (patternCombo.getSelectedPaint())));\r\n    } else {\r\n        JPanel labels = new JPanel(new GridLayout(1, 3, 4, 4));\r\n        labels.add(new JLabel(\"Pattern:\"));\r\n        labels.add(new JLabel(\"Foreground:\"));\r\n        labels.add(new JLabel(\"Background:\"));\r\n        patternList = new JPaintList(ShapeConstants.PATTERN_LIST);\r\n        foregroundList = new JPaintList(ColorConstants.SHORT_LIST);\r\n        backgroundList = new JPaintList(ColorConstants.SHORT_LIST);\r\n        JPanel lists = new JPanel(new GridLayout(1, 3, 4, 4));\r\n        lists.add(new JScrollPane(patternList, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER));\r\n        lists.add(new JScrollPane(foregroundList, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER));\r\n        lists.add(new JScrollPane(backgroundList, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER));\r\n        patternList.addListSelectionListener(this);\r\n        foregroundList.addListSelectionListener(this);\r\n        backgroundList.addListSelectionListener(this);\r\n        choicePanel.add(BorderLayout.NORTH, labels);\r\n        choicePanel.add(BorderLayout.CENTER, lists);\r\n        preview.setPattern(((ShapePaint) (patternList.getSelectedPaint())));\r\n    }\r\n    setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));\r\n    setLayout(new BorderLayout(8, 8));\r\n    add(BorderLayout.NORTH, choicePanel);\r\n    add(BorderLayout.CENTER, preview);\r\n}'),(3078,'ActionEvent event','java.awt.event.ActionEvent',0,527,'net.sourceforge.ganttproject.shape.Shape',4048,'net.sourceforge.ganttproject.shape.Shape.actionPerformed(java.awt.event.ActionEvent)',0,'public void actionPerformed(ActionEvent event) {\r\n    Object source = event.getSource();\r\n    if (source == (patternCombo)) {\r\n        preview.setPattern(((ShapePaint) (patternCombo.getSelectedPaint())));\r\n    }\r\n    if (source == (foregroundCombo)) {\r\n        preview.setForeground(((Color) (foregroundCombo.getSelectedPaint())));\r\n    }\r\n    if (source == (backgroundCombo)) {\r\n        preview.setBackground(((Color) (backgroundCombo.getSelectedPaint())));\r\n    }\r\n    fireActionEvent();\r\n    preview.repaint();\r\n}'),(3079,'ListSelectionEvent event','javax.swing.event.ListSelectionEvent',0,527,'net.sourceforge.ganttproject.shape.Shape',4054,'net.sourceforge.ganttproject.shape.Shape.valueChanged(javax.swing.event.ListSelectionEvent)',0,'public void valueChanged(ListSelectionEvent event) {\r\n    if (event.getValueIsAdjusting())\r\n        return;\r\n\r\n    Object source = event.getSource();\r\n    if (source == (patternList)) {\r\n        preview.setPattern(((ShapePaint) (patternList.getSelectedPaint())));\r\n    }\r\n    if (source == (foregroundList)) {\r\n        preview.setForeground(((Color) (foregroundList.getSelectedPaint())));\r\n    }\r\n    if (source == (backgroundList)) {\r\n        preview.setBackground(((Color) (backgroundList.getSelectedPaint())));\r\n    }\r\n    fireActionEvent();\r\n    preview.repaint();\r\n}'),(3080,'ShapePaint pattern','net.sourceforge.ganttproject.shape.ShapePaint',529,527,'net.sourceforge.ganttproject.shape.Shape',4053,'net.sourceforge.ganttproject.shape.Shape.setPattern(net.sourceforge.ganttproject.shape.ShapePaint)',0,'public void setPattern(ShapePaint pattern) {\r\n    preview.setPattern(pattern);\r\n    if (compactDisplay) {\r\n        patternCombo.setSelectedItem(new ShapePaint(pattern, Color.black, Color.white));\r\n        foregroundCombo.setSelectedItem(pattern.foreground);\r\n        backgroundCombo.setSelectedItem(pattern.background);\r\n    } else {\r\n        patternList.setSelectedValue(new ShapePaint(pattern, Color.black, Color.white), true);\r\n        foregroundList.setSelectedValue(pattern.foreground, true);\r\n        backgroundList.setSelectedValue(pattern.background, true);\r\n    }\r\n    fireActionEvent();\r\n}'),(3081,'ActionListener listener','java.awt.event.ActionListener',0,527,'net.sourceforge.ganttproject.shape.Shape',4049,'net.sourceforge.ganttproject.shape.Shape.addActionListener(java.awt.event.ActionListener)',0,'public void addActionListener(ActionListener listener) {\r\n    listeners.add(listener);\r\n}'),(3082,'ActionListener listener','java.awt.event.ActionListener',0,527,'net.sourceforge.ganttproject.shape.Shape',4052,'net.sourceforge.ganttproject.shape.Shape.removeActionListener(java.awt.event.ActionListener)',0,'public void removeActionListener(ActionListener listener) {\r\n    listeners.remove(listener);\r\n}'),(3083,'ShapePaint pattern','net.sourceforge.ganttproject.shape.ShapePaint',529,529,'net.sourceforge.ganttproject.shape.ShapePaint',4056,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(net.sourceforge.ganttproject.shape.ShapePaint)',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(ShapePaint pattern) {\r\n    this(pattern.width, pattern.height, pattern.array, pattern.foreground, pattern.background);\r\n}'),(3084,'ShapePaint pattern','net.sourceforge.ganttproject.shape.ShapePaint',529,529,'net.sourceforge.ganttproject.shape.ShapePaint',4057,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(net.sourceforge.ganttproject.shape.ShapePaint,java.awt.Color,java.awt.Color)',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(ShapePaint pattern, Color foreground, Color background) {\r\n    this(pattern.width, pattern.height, pattern.array, foreground, background);\r\n}'),(3085,'Color foreground','java.awt.Color',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4057,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(net.sourceforge.ganttproject.shape.ShapePaint,java.awt.Color,java.awt.Color)',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(ShapePaint pattern, Color foreground, Color background) {\r\n    this(pattern.width, pattern.height, pattern.array, foreground, background);\r\n}'),(3086,'Color background','java.awt.Color',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4057,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(net.sourceforge.ganttproject.shape.ShapePaint,java.awt.Color,java.awt.Color)',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(ShapePaint pattern, Color foreground, Color background) {\r\n    this(pattern.width, pattern.height, pattern.array, foreground, background);\r\n}'),(3087,'int width','int',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4058,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(int,int,int[])',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(int width, int height, int[] array) {\r\n    this(width, height, array, Color.black, Color.white);\r\n}'),(3088,'int height','int',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4058,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(int,int,int[])',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(int width, int height, int[] array) {\r\n    this(width, height, array, Color.black, Color.white);\r\n}'),(3089,'int[] array','int[]',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4058,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(int,int,int[])',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(int width, int height, int[] array) {\r\n    this(width, height, array, Color.black, Color.white);\r\n}'),(3090,'int width','int',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4059,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(int,int,int[],java.awt.Color,java.awt.Color)',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(int width, int height, int[] array, Color foreground, Color background) {\r\n    super(ShapePaint.createTexture(width, height, array, foreground, background), new Rectangle(0, 0, width, height));\r\n    this.width = width;\r\n    this.height = height;\r\n    this.array = array;\r\n    this.foreground = foreground;\r\n    this.background = background;\r\n}'),(3091,'int height','int',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4059,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(int,int,int[],java.awt.Color,java.awt.Color)',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(int width, int height, int[] array, Color foreground, Color background) {\r\n    super(ShapePaint.createTexture(width, height, array, foreground, background), new Rectangle(0, 0, width, height));\r\n    this.width = width;\r\n    this.height = height;\r\n    this.array = array;\r\n    this.foreground = foreground;\r\n    this.background = background;\r\n}'),(3092,'int[] array','int[]',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4059,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(int,int,int[],java.awt.Color,java.awt.Color)',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(int width, int height, int[] array, Color foreground, Color background) {\r\n    super(ShapePaint.createTexture(width, height, array, foreground, background), new Rectangle(0, 0, width, height));\r\n    this.width = width;\r\n    this.height = height;\r\n    this.array = array;\r\n    this.foreground = foreground;\r\n    this.background = background;\r\n}'),(3093,'Color foreground','java.awt.Color',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4059,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(int,int,int[],java.awt.Color,java.awt.Color)',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(int width, int height, int[] array, Color foreground, Color background) {\r\n    super(ShapePaint.createTexture(width, height, array, foreground, background), new Rectangle(0, 0, width, height));\r\n    this.width = width;\r\n    this.height = height;\r\n    this.array = array;\r\n    this.foreground = foreground;\r\n    this.background = background;\r\n}'),(3094,'Color background','java.awt.Color',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4059,'net.sourceforge.ganttproject.shape.ShapePaint.-init-(int,int,int[],java.awt.Color,java.awt.Color)',0,'/**\r\n * Constructor\r\n */\r\npublic ShapePaint(int width, int height, int[] array, Color foreground, Color background) {\r\n    super(ShapePaint.createTexture(width, height, array, foreground, background), new Rectangle(0, 0, width, height));\r\n    this.width = width;\r\n    this.height = height;\r\n    this.array = array;\r\n    this.foreground = foreground;\r\n    this.background = background;\r\n}'),(3095,'int width','int',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4060,'net.sourceforge.ganttproject.shape.ShapePaint.createTexture(int,int,int[],java.awt.Color,java.awt.Color)',0,'private static BufferedImage createTexture(int width, int height, int[] array, Color foreground, Color background) {\r\n    BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);\r\n    for (int x = 0; x < width; x++) {\r\n        for (int y = 0; y < height; y++) {\r\n            image.setRGB(x, y, ((array[(x + (y * width))]) > 0 ? foreground.getRGB() : background.getRGB()));\r\n        }\r\n    }\r\n    return image;\r\n}'),(3096,'int height','int',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4060,'net.sourceforge.ganttproject.shape.ShapePaint.createTexture(int,int,int[],java.awt.Color,java.awt.Color)',0,'private static BufferedImage createTexture(int width, int height, int[] array, Color foreground, Color background) {\r\n    BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);\r\n    for (int x = 0; x < width; x++) {\r\n        for (int y = 0; y < height; y++) {\r\n            image.setRGB(x, y, ((array[(x + (y * width))]) > 0 ? foreground.getRGB() : background.getRGB()));\r\n        }\r\n    }\r\n    return image;\r\n}'),(3097,'int[] array','int[]',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4060,'net.sourceforge.ganttproject.shape.ShapePaint.createTexture(int,int,int[],java.awt.Color,java.awt.Color)',0,'private static BufferedImage createTexture(int width, int height, int[] array, Color foreground, Color background) {\r\n    BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);\r\n    for (int x = 0; x < width; x++) {\r\n        for (int y = 0; y < height; y++) {\r\n            image.setRGB(x, y, ((array[(x + (y * width))]) > 0 ? foreground.getRGB() : background.getRGB()));\r\n        }\r\n    }\r\n    return image;\r\n}'),(3098,'Color foreground','java.awt.Color',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4060,'net.sourceforge.ganttproject.shape.ShapePaint.createTexture(int,int,int[],java.awt.Color,java.awt.Color)',0,'private static BufferedImage createTexture(int width, int height, int[] array, Color foreground, Color background) {\r\n    BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);\r\n    for (int x = 0; x < width; x++) {\r\n        for (int y = 0; y < height; y++) {\r\n            image.setRGB(x, y, ((array[(x + (y * width))]) > 0 ? foreground.getRGB() : background.getRGB()));\r\n        }\r\n    }\r\n    return image;\r\n}'),(3099,'Color background','java.awt.Color',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4060,'net.sourceforge.ganttproject.shape.ShapePaint.createTexture(int,int,int[],java.awt.Color,java.awt.Color)',0,'private static BufferedImage createTexture(int width, int height, int[] array, Color foreground, Color background) {\r\n    BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);\r\n    for (int x = 0; x < width; x++) {\r\n        for (int y = 0; y < height; y++) {\r\n            image.setRGB(x, y, ((array[(x + (y * width))]) > 0 ? foreground.getRGB() : background.getRGB()));\r\n        }\r\n    }\r\n    return image;\r\n}'),(3100,'Object obj','java.lang.Object',0,529,'net.sourceforge.ganttproject.shape.ShapePaint',4061,'net.sourceforge.ganttproject.shape.ShapePaint.equals(java.lang.Object)',0,'/**\r\n * Return true if the two shape are the same\r\n */\r\npublic boolean equals(Object obj) {\r\n    if (obj instanceof ShapePaint) {\r\n        ShapePaint paint = ((ShapePaint) (obj));\r\n        if ((array.length) != (paint.array.length))\r\n            return false;\r\n\r\n        for (int i = 0; i < (array.length); i++)\r\n            if ((array[i]) != (paint.array[i]))\r\n                return false;\r\n\r\n\r\n        // paint.array.equals(array) &&\r\n        return ((paint.width) == (width)) && ((paint.height) == (height));\r\n    }\r\n    return false;\r\n}'),(3101,'int type','int',0,531,'net.sourceforge.ganttproject.task.CustomColumEvent',4067,'net.sourceforge.ganttproject.task.CustomColumEvent.-init-(int,java.lang.String)',0,'public CustomColumEvent(int type, String colName) {\r\n    myType = type;\r\n    myColName = colName;\r\n    myColumn = null;\r\n    myOldName = colName;\r\n}'),(3102,'String colName','java.lang.String',0,531,'net.sourceforge.ganttproject.task.CustomColumEvent',4067,'net.sourceforge.ganttproject.task.CustomColumEvent.-init-(int,java.lang.String)',0,'public CustomColumEvent(int type, String colName) {\r\n    myType = type;\r\n    myColName = colName;\r\n    myColumn = null;\r\n    myOldName = colName;\r\n}'),(3103,'int type','int',0,531,'net.sourceforge.ganttproject.task.CustomColumEvent',4068,'net.sourceforge.ganttproject.task.CustomColumEvent.-init-(int,net.sourceforge.ganttproject.task.CustomColumn)',0,'public CustomColumEvent(int type, CustomColumn column) {\r\n    myType = type;\r\n    myColumn = column;\r\n    myColName = column.getName();\r\n    myOldName = myColName;\r\n}'),(3104,'CustomColumn column','net.sourceforge.ganttproject.task.CustomColumn',532,531,'net.sourceforge.ganttproject.task.CustomColumEvent',4068,'net.sourceforge.ganttproject.task.CustomColumEvent.-init-(int,net.sourceforge.ganttproject.task.CustomColumn)',0,'public CustomColumEvent(int type, CustomColumn column) {\r\n    myType = type;\r\n    myColumn = column;\r\n    myColName = column.getName();\r\n    myOldName = myColName;\r\n}'),(3105,'String oldName','java.lang.String',0,531,'net.sourceforge.ganttproject.task.CustomColumEvent',4069,'net.sourceforge.ganttproject.task.CustomColumEvent.-init-(java.lang.String,net.sourceforge.ganttproject.task.CustomColumn)',0,'CustomColumEvent(String oldName, CustomColumn column) {\r\n    myOldName = oldName;\r\n    myType = CustomColumEvent.EVENT_RENAME;\r\n    myColName = column.getName();\r\n    myColumn = column;\r\n}'),(3106,'CustomColumn column','net.sourceforge.ganttproject.task.CustomColumn',532,531,'net.sourceforge.ganttproject.task.CustomColumEvent',4069,'net.sourceforge.ganttproject.task.CustomColumEvent.-init-(java.lang.String,net.sourceforge.ganttproject.task.CustomColumn)',0,'CustomColumEvent(String oldName, CustomColumn column) {\r\n    myOldName = oldName;\r\n    myType = CustomColumEvent.EVENT_RENAME;\r\n    myColName = column.getName();\r\n    myColumn = column;\r\n}'),(3107,'String colName','java.lang.String',0,532,'net.sourceforge.ganttproject.task.CustomColumn',4075,'net.sourceforge.ganttproject.task.CustomColumn.-init-(java.lang.String,java.lang.Class,java.lang.Object)',0,'/**\r\n * Creates an instance of CustomColmn with a name, a type (class) and a\r\n * default value.\r\n *\r\n * @param colName\r\n * 		The column name.\r\n * @param colType\r\n * 		The colmun type.\r\n * @param colDefaultValue\r\n * 		The default value.\r\n */\r\npublic CustomColumn(String colName, Class colType, Object colDefaultValue) {\r\n    name = colName;\r\n    type = colType;\r\n    defaultValue = colDefaultValue;\r\n}'),(3108,'Class colType','java.lang.Class',0,532,'net.sourceforge.ganttproject.task.CustomColumn',4075,'net.sourceforge.ganttproject.task.CustomColumn.-init-(java.lang.String,java.lang.Class,java.lang.Object)',0,'/**\r\n * Creates an instance of CustomColmn with a name, a type (class) and a\r\n * default value.\r\n *\r\n * @param colName\r\n * 		The column name.\r\n * @param colType\r\n * 		The colmun type.\r\n * @param colDefaultValue\r\n * 		The default value.\r\n */\r\npublic CustomColumn(String colName, Class colType, Object colDefaultValue) {\r\n    name = colName;\r\n    type = colType;\r\n    defaultValue = colDefaultValue;\r\n}'),(3109,'Object colDefaultValue','java.lang.Object',0,532,'net.sourceforge.ganttproject.task.CustomColumn',4075,'net.sourceforge.ganttproject.task.CustomColumn.-init-(java.lang.String,java.lang.Class,java.lang.Object)',0,'/**\r\n * Creates an instance of CustomColmn with a name, a type (class) and a\r\n * default value.\r\n *\r\n * @param colName\r\n * 		The column name.\r\n * @param colType\r\n * 		The colmun type.\r\n * @param colDefaultValue\r\n * 		The default value.\r\n */\r\npublic CustomColumn(String colName, Class colType, Object colDefaultValue) {\r\n    name = colName;\r\n    type = colType;\r\n    defaultValue = colDefaultValue;\r\n}'),(3110,'String colName','java.lang.String',0,532,'net.sourceforge.ganttproject.task.CustomColumn',4076,'net.sourceforge.ganttproject.task.CustomColumn.-init-(java.lang.String)',0,'/**\r\n * Creates an instance of CustomColmn. The type is String and the default\r\n * value is en empty String.\r\n *\r\n * @param colName\r\n * 		The column name.\r\n */\r\npublic CustomColumn(String colName) {\r\n    name = colName;\r\n    type = String.class;\r\n    defaultValue = \"\";\r\n}'),(3111,'String newId','java.lang.String',0,532,'net.sourceforge.ganttproject.task.CustomColumn',4082,'net.sourceforge.ganttproject.task.CustomColumn.setId(java.lang.String)',0,'public void setId(String newId) {\r\n    id = newId;\r\n}'),(3112,'Object defaultValue','java.lang.Object',0,532,'net.sourceforge.ganttproject.task.CustomColumn',4081,'net.sourceforge.ganttproject.task.CustomColumn.setDefaultValue(java.lang.Object)',0,'/**\r\n * Sets the default value.\r\n *\r\n * @param defaultValue\r\n * 		The default value to be set.\r\n */\r\npublic void setDefaultValue(Object defaultValue) {\r\n    this.defaultValue = defaultValue;\r\n}'),(3113,'String name','java.lang.String',0,532,'net.sourceforge.ganttproject.task.CustomColumn',4083,'net.sourceforge.ganttproject.task.CustomColumn.setName(java.lang.String)',0,'/**\r\n * Sets the column name.\r\n *\r\n * @param name\r\n * 		The column name to be set.\r\n */\r\npublic void setName(String name) {\r\n    this.name = name;\r\n}'),(3114,'Class type','java.lang.Class',0,532,'net.sourceforge.ganttproject.task.CustomColumn',4084,'net.sourceforge.ganttproject.task.CustomColumn.setType(java.lang.Class)',0,'/**\r\n * Sets the column type.\r\n *\r\n * @param type\r\n * 		The column type to be set.\r\n */\r\npublic void setType(Class type) {\r\n    this.type = type;\r\n}'),(3115,'int type','int',0,533,'net.sourceforge.ganttproject.task.CustomColumnsException',4086,'net.sourceforge.ganttproject.task.CustomColumnsException.-init-(int,java.lang.String)',0,'public CustomColumnsException(int type, String message) {\r\n    super(message);\r\n    this.type = type;\r\n}'),(3116,'String message','java.lang.String',0,533,'net.sourceforge.ganttproject.task.CustomColumnsException',4086,'net.sourceforge.ganttproject.task.CustomColumnsException.-init-(int,java.lang.String)',0,'public CustomColumnsException(int type, String message) {\r\n    super(message);\r\n    this.type = type;\r\n}'),(3117,'Throwable cause','java.lang.Throwable',0,533,'net.sourceforge.ganttproject.task.CustomColumnsException',4087,'net.sourceforge.ganttproject.task.CustomColumnsException.-init-(java.lang.Throwable)',0,'public CustomColumnsException(Throwable cause) {\r\n    super(cause);\r\n}'),(3118,'CustomColumnsStorage storage','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,534,'net.sourceforge.ganttproject.task.CustomColumnsManager',4089,'net.sourceforge.ganttproject.task.CustomColumnsManager.-init-(net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'/**\r\n * Creates an instance of CustomColumnsManager for the given treetable.\r\n *\r\n * @param treetable\r\n * 		\r\n */\r\npublic CustomColumnsManager(CustomColumnsStorage storage) {\r\n    myListeners = new ArrayList();\r\n    myStorage = storage;\r\n}'),(3119,'CustomColumn customColumn','net.sourceforge.ganttproject.task.CustomColumn',532,534,'net.sourceforge.ganttproject.task.CustomColumnsManager',4091,'net.sourceforge.ganttproject.task.CustomColumnsManager.addNewCustomColumn(net.sourceforge.ganttproject.task.CustomColumn)',0,'/**\r\n * Add a new custom column to the treetable.\r\n */\r\npublic void addNewCustomColumn(CustomColumn customColumn) {\r\n    assert customColumn != null;\r\n    myStorage.addCustomColumn(customColumn);\r\n}'),(3120,'String name','java.lang.String',0,534,'net.sourceforge.ganttproject.task.CustomColumnsManager',4094,'net.sourceforge.ganttproject.task.CustomColumnsManager.deleteCustomColumn(java.lang.String)',0,'/**\r\n * Delete the custom column whose name is given in parameter from the\r\n * treetable.\r\n *\r\n * @param name\r\n * 		Name of the column to delete.\r\n */\r\npublic void deleteCustomColumn(String name) {\r\n    myStorage.removeCustomColumn(name);\r\n}'),(3121,'String oldName','java.lang.String',0,534,'net.sourceforge.ganttproject.task.CustomColumnsManager',4093,'net.sourceforge.ganttproject.task.CustomColumnsManager.changeCustomColumnName(java.lang.String,java.lang.String)',0,'public void changeCustomColumnName(String oldName, String newName) {\r\n    // ganttTreeTable.renameCustomcolumn(oldName, newName);\r\n    myStorage.renameCustomColumn(oldName, newName);\r\n}'),(3122,'String newName','java.lang.String',0,534,'net.sourceforge.ganttproject.task.CustomColumnsManager',4093,'net.sourceforge.ganttproject.task.CustomColumnsManager.changeCustomColumnName(java.lang.String,java.lang.String)',0,'public void changeCustomColumnName(String oldName, String newName) {\r\n    // ganttTreeTable.renameCustomcolumn(oldName, newName);\r\n    myStorage.renameCustomColumn(oldName, newName);\r\n}'),(3123,'String colName','java.lang.String',0,534,'net.sourceforge.ganttproject.task.CustomColumnsManager',4092,'net.sourceforge.ganttproject.task.CustomColumnsManager.changeCustomColumnDefaultValue(java.lang.String,java.lang.Object)',0,'public void changeCustomColumnDefaultValue(String colName, Object newDefaultValue) throws CustomColumnsException {\r\n    // ganttTreeTable.changeDefaultValue(colName, newDefaultValue);\r\n    myStorage.changeDefaultValue(colName, newDefaultValue);\r\n}'),(3124,'Object newDefaultValue','java.lang.Object',0,534,'net.sourceforge.ganttproject.task.CustomColumnsManager',4092,'net.sourceforge.ganttproject.task.CustomColumnsManager.changeCustomColumnDefaultValue(java.lang.String,java.lang.Object)',0,'public void changeCustomColumnDefaultValue(String colName, Object newDefaultValue) throws CustomColumnsException {\r\n    // ganttTreeTable.changeDefaultValue(colName, newDefaultValue);\r\n    myStorage.changeDefaultValue(colName, newDefaultValue);\r\n}'),(3125,'CustomColumsListener listener','net.sourceforge.ganttproject.task.CustomColumsListener',537,534,'net.sourceforge.ganttproject.task.CustomColumnsManager',4090,'net.sourceforge.ganttproject.task.CustomColumnsManager.addCustomColumnsListener(net.sourceforge.ganttproject.task.CustomColumsListener)',0,'public void addCustomColumnsListener(CustomColumsListener listener) {\r\n    myStorage.addCustomColumnsListener(listener);\r\n}'),(3126,'GanttLanguage lang','net.sourceforge.ganttproject.language.GanttLanguage',461,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4099,'net.sourceforge.ganttproject.task.CustomColumnsStorage.changeLanguage(net.sourceforge.ganttproject.language.GanttLanguage)',0,'/**\r\n * Changes the language of the available types.\r\n *\r\n * @param lang\r\n * 		New language.\r\n */\r\npublic static void changeLanguage(GanttLanguage lang) {\r\n    CustomColumnsStorage.language = lang;\r\n    CustomColumnsStorage.initTypes();\r\n}'),(3127,'CustomColumn col','net.sourceforge.ganttproject.task.CustomColumn',532,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4096,'net.sourceforge.ganttproject.task.CustomColumnsStorage.addCustomColumn(net.sourceforge.ganttproject.task.CustomColumn)',0,'/**\r\n * Add a custom column.\r\n *\r\n * @param col\r\n * 		CustomColumn to be added.\r\n * @throws CustomColumnsException\r\n * 		A CustomColumnsException of type\r\n * 		CustomColumnsException.ALREADY_EXIST could be thrown if the\r\n * 		CustomColumn that should be added has a name that already\r\n * 		exists.\r\n */\r\npublic void addCustomColumn(CustomColumn col) {\r\n    if (getCustomColumnsNames().contains(col.getName())) {\r\n        return;\r\n    }\r\n    String id = col.getId();\r\n    while (id == null) {\r\n        id = (CustomColumnsStorage.ID_PREFIX) + ((CustomColumnsStorage.nextId)++);\r\n        if (existsForID(id))\r\n            id = null;\r\n\r\n    } \r\n    mapIdCustomColum.put(id, col);\r\n    col.setId(id);\r\n    CustomColumEvent event = new CustomColumEvent(CustomColumEvent.EVENT_ADD, col);\r\n    fireCustomColumnsChange(event);\r\n}'),(3128,'String name','java.lang.String',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4113,'net.sourceforge.ganttproject.task.CustomColumnsStorage.removeCustomColumn(java.lang.String)',0,'void removeCustomColumn(String name) {\r\n    CustomColumn column = getCustomColumn(name);\r\n    if (column != null) {\r\n        removeCustomColumn(column);\r\n    }\r\n}'),(3129,'CustomColumn column','net.sourceforge.ganttproject.task.CustomColumn',532,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4114,'net.sourceforge.ganttproject.task.CustomColumnsStorage.removeCustomColumn(net.sourceforge.ganttproject.task.CustomColumn)',0,'/**\r\n * Removes the CustomColumn whose name is given in parameter. If the column\r\n * name does not exist, nothing is done.\r\n *\r\n * @param name\r\n * 		Name of the column to remove.\r\n */\r\npublic void removeCustomColumn(CustomColumn column) {\r\n    CustomColumEvent event = new CustomColumEvent(CustomColumEvent.EVENT_REMOVE, column);\r\n    fireCustomColumnsChange(event);\r\n    mapIdCustomColum.remove(column.getId());\r\n}'),(3130,'String name','java.lang.String',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4103,'net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumn(java.lang.String)',0,'/**\r\n *\r\n *\r\n * @param name\r\n * 		\r\n * @return \r\n * @throws CustomColumnsException\r\n * 		\r\n */\r\npublic CustomColumn getCustomColumn(String name) {\r\n    // if (!exists(name))\r\n    // throw new CustomColumnsException(CustomColumnsException.DO_NOT_EXIST,\r\n    // name);\r\n    // return (CustomColumn) customColumns.get(name);\r\n    String id = getIdFromName(name);\r\n    if (id == null) {\r\n        return null;\r\n    }\r\n    return ((CustomColumn) (mapIdCustomColum.get(id)));\r\n}'),(3131,'net.sourceforge.ganttproject.task.CustomColumn','net.sourceforge.ganttproject.task.CustomColumn',532,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4103,'net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumn(java.lang.String)',1,'/**\r\n *\r\n *\r\n * @param name\r\n * 		\r\n * @return \r\n * @throws CustomColumnsException\r\n * 		\r\n */\r\npublic CustomColumn getCustomColumn(String name) {\r\n    // if (!exists(name))\r\n    // throw new CustomColumnsException(CustomColumnsException.DO_NOT_EXIST,\r\n    // name);\r\n    // return (CustomColumn) customColumns.get(name);\r\n    String id = getIdFromName(name);\r\n    if (id == null) {\r\n        return null;\r\n    }\r\n    return ((CustomColumn) (mapIdCustomColum.get(id)));\r\n}'),(3132,'String id','java.lang.String',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4104,'net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumnByID(java.lang.String)',0,'public CustomColumn getCustomColumnByID(String id) {\r\n    return ((CustomColumn) (mapIdCustomColum.get(id)));\r\n}'),(3133,'net.sourceforge.ganttproject.task.CustomColumn','net.sourceforge.ganttproject.task.CustomColumn',532,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4104,'net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumnByID(java.lang.String)',1,'public CustomColumn getCustomColumnByID(String id) {\r\n    return ((CustomColumn) (mapIdCustomColum.get(id)));\r\n}'),(3134,'String colName','java.lang.String',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4100,'net.sourceforge.ganttproject.task.CustomColumnsStorage.exists(java.lang.String)',0,'/**\r\n * Returns true if a custom column has the same name that the one given in\r\n * parameter, false otherwise.\r\n *\r\n * @param colName\r\n * 		The name of the column to check the existence.\r\n * @return True if a custom column has the same name that the one given in\r\nparameter, false otherwise.\r\n */\r\npublic boolean exists(String colName) {\r\n    return (getIdFromName(colName)) != null;\r\n}'),(3135,'String id','java.lang.String',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4101,'net.sourceforge.ganttproject.task.CustomColumnsStorage.existsForID(java.lang.String)',0,'public boolean existsForID(String id) {\r\n    return this.mapIdCustomColum.keySet().contains(id);\r\n}'),(3136,'String name','java.lang.String',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4115,'net.sourceforge.ganttproject.task.CustomColumnsStorage.renameCustomColumn(java.lang.String,java.lang.String)',0,'public void renameCustomColumn(String name, String newName) {\r\n    // if (customColumns.containsKey(name))\r\n    // {\r\n    // CustomColumn cc = (CustomColumn) customColumns.get(name);\r\n    // cc.setName(newName);\r\n    // customColumns.put(newName, cc);\r\n    // customColumns.remove(name);\r\n    // ((CustomColumn) mapIdCustomColum.get(cc.getId())).setName(newName);\r\n    // }\r\n    String id = getIdFromName(name);\r\n    if (id != null) {\r\n        CustomColumn cc = ((CustomColumn) (mapIdCustomColum.get(id)));\r\n        cc.setName(newName);\r\n        CustomColumEvent event = new CustomColumEvent(name, cc);\r\n        fireCustomColumnsChange(event);\r\n    }\r\n}'),(3137,'String newName','java.lang.String',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4115,'net.sourceforge.ganttproject.task.CustomColumnsStorage.renameCustomColumn(java.lang.String,java.lang.String)',0,'public void renameCustomColumn(String name, String newName) {\r\n    // if (customColumns.containsKey(name))\r\n    // {\r\n    // CustomColumn cc = (CustomColumn) customColumns.get(name);\r\n    // cc.setName(newName);\r\n    // customColumns.put(newName, cc);\r\n    // customColumns.remove(name);\r\n    // ((CustomColumn) mapIdCustomColum.get(cc.getId())).setName(newName);\r\n    // }\r\n    String id = getIdFromName(name);\r\n    if (id != null) {\r\n        CustomColumn cc = ((CustomColumn) (mapIdCustomColum.get(id)));\r\n        cc.setName(newName);\r\n        CustomColumEvent event = new CustomColumEvent(name, cc);\r\n        fireCustomColumnsChange(event);\r\n    }\r\n}'),(3138,'String colName','java.lang.String',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4098,'net.sourceforge.ganttproject.task.CustomColumnsStorage.changeDefaultValue(java.lang.String,java.lang.Object)',0,'public void changeDefaultValue(String colName, Object newDefaultValue) throws CustomColumnsException {\r\n    // if (customColumns.containsKey(colName))\r\n    // {\r\n    // CustomColumn cc = (CustomColumn) customColumns.get(colName);\r\n    // cc.setDefaultValue(newDefaultValue);\r\n    // ((CustomColumn)\r\n    // mapIdCustomColum.get(cc.getId())).setDefaultValue(newDefaultValue);\r\n    // }\r\n    String id = getIdFromName(colName);\r\n    if (id != null) {\r\n        CustomColumn cc = ((CustomColumn) (mapIdCustomColum.get(id)));\r\n        if (newDefaultValue.getClass().isAssignableFrom(cc.getType()))\r\n            cc.setDefaultValue(newDefaultValue);\r\n        else {\r\n            try {\r\n                if (cc.getType().equals(Boolean.class))\r\n                    cc.setDefaultValue(Boolean.valueOf(newDefaultValue.toString()));\r\n                else\r\n                    if (cc.getType().equals(Integer.class)) {\r\n                        try {\r\n                            cc.setDefaultValue(Integer.valueOf(newDefaultValue.toString()));\r\n                        } catch (NumberFormatException e) {\r\n                            cc.setDefaultValue(null);\r\n                        }\r\n                    } else\r\n                        if (cc.getType().equals(Double.class)) {\r\n                            try {\r\n                                cc.setDefaultValue(Double.valueOf(newDefaultValue.toString()));\r\n                            } catch (NumberFormatException e) {\r\n                                cc.setDefaultValue(null);\r\n                            }\r\n                        } else\r\n                            if (GregorianCalendar.class.isAssignableFrom(cc.getType())) {\r\n                                try {\r\n                                    Date dateValue = DateUtils.parseDate(newDefaultValue.toString());\r\n                                    cc.setDefaultValue(new GanttCalendar(dateValue));\r\n                                } catch (ParseException e) {\r\n                                    cc.setDefaultValue(null);\r\n                                }\r\n                            }\r\n\r\n\r\n\r\n            } catch (Exception ee) {\r\n                throw new CustomColumnsException(ee);\r\n            }\r\n        }\r\n    }\r\n}'),(3139,'Object newDefaultValue','java.lang.Object',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4098,'net.sourceforge.ganttproject.task.CustomColumnsStorage.changeDefaultValue(java.lang.String,java.lang.Object)',0,'public void changeDefaultValue(String colName, Object newDefaultValue) throws CustomColumnsException {\r\n    // if (customColumns.containsKey(colName))\r\n    // {\r\n    // CustomColumn cc = (CustomColumn) customColumns.get(colName);\r\n    // cc.setDefaultValue(newDefaultValue);\r\n    // ((CustomColumn)\r\n    // mapIdCustomColum.get(cc.getId())).setDefaultValue(newDefaultValue);\r\n    // }\r\n    String id = getIdFromName(colName);\r\n    if (id != null) {\r\n        CustomColumn cc = ((CustomColumn) (mapIdCustomColum.get(id)));\r\n        if (newDefaultValue.getClass().isAssignableFrom(cc.getType()))\r\n            cc.setDefaultValue(newDefaultValue);\r\n        else {\r\n            try {\r\n                if (cc.getType().equals(Boolean.class))\r\n                    cc.setDefaultValue(Boolean.valueOf(newDefaultValue.toString()));\r\n                else\r\n                    if (cc.getType().equals(Integer.class)) {\r\n                        try {\r\n                            cc.setDefaultValue(Integer.valueOf(newDefaultValue.toString()));\r\n                        } catch (NumberFormatException e) {\r\n                            cc.setDefaultValue(null);\r\n                        }\r\n                    } else\r\n                        if (cc.getType().equals(Double.class)) {\r\n                            try {\r\n                                cc.setDefaultValue(Double.valueOf(newDefaultValue.toString()));\r\n                            } catch (NumberFormatException e) {\r\n                                cc.setDefaultValue(null);\r\n                            }\r\n                        } else\r\n                            if (GregorianCalendar.class.isAssignableFrom(cc.getType())) {\r\n                                try {\r\n                                    Date dateValue = DateUtils.parseDate(newDefaultValue.toString());\r\n                                    cc.setDefaultValue(new GanttCalendar(dateValue));\r\n                                } catch (ParseException e) {\r\n                                    cc.setDefaultValue(null);\r\n                                }\r\n                            }\r\n\r\n\r\n\r\n            } catch (Exception ee) {\r\n                throw new CustomColumnsException(ee);\r\n            }\r\n        }\r\n    }\r\n}'),(3140,'String name','java.lang.String',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4108,'net.sourceforge.ganttproject.task.CustomColumnsStorage.getIdFromName(java.lang.String)',0,'public String getIdFromName(String name) {\r\n    String id = null;\r\n    Iterator it = mapIdCustomColum.values().iterator();\r\n    while (it.hasNext()) {\r\n        CustomColumn cc = ((CustomColumn) (it.next()));\r\n        if (cc.getName().equals(name)) {\r\n            id = cc.getId();\r\n            break;\r\n        }\r\n    } \r\n    return id;\r\n}'),(3141,'String id','java.lang.String',0,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4109,'net.sourceforge.ganttproject.task.CustomColumnsStorage.getNameFromId(java.lang.String)',0,'public String getNameFromId(String id) {\r\n    return ((CustomColumn) (mapIdCustomColum.get(id))).getName();\r\n}'),(3142,'Task task','net.sourceforge.ganttproject.task.Task',548,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4112,'net.sourceforge.ganttproject.task.CustomColumnsStorage.processNewTask(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * Add all stored custom column to the given task. All custom column will\r\n * have the default value.\r\n *\r\n * @param task\r\n * 		The task to process.\r\n */\r\npublic void processNewTask(Task task) {\r\n    Iterator it = mapIdCustomColum.values().iterator();\r\n    while (it.hasNext()) {\r\n        CustomColumn cc = ((CustomColumn) (it.next()));\r\n        try {\r\n            task.getCustomValues().setValue(cc.getName(), cc.getDefaultValue());\r\n        } catch (CustomColumnsException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n    } \r\n}'),(3143,'CustomColumnsStorage source','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4110,'net.sourceforge.ganttproject.task.CustomColumnsStorage.importData(net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'public void importData(CustomColumnsStorage source) {\r\n    for (Iterator columns = source.getCustomColums().iterator(); columns.hasNext();) {\r\n        CustomColumn nextColumn = ((CustomColumn) (columns.next()));\r\n        if (!(exists(nextColumn.getName()))) {\r\n            addCustomColumn(nextColumn);\r\n        }\r\n    }\r\n}'),(3144,'CustomColumsListener listener','net.sourceforge.ganttproject.task.CustomColumsListener',537,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4097,'net.sourceforge.ganttproject.task.CustomColumnsStorage.addCustomColumnsListener(net.sourceforge.ganttproject.task.CustomColumsListener)',0,'void addCustomColumnsListener(CustomColumsListener listener) {\r\n    myListeners.add(listener);\r\n}'),(3145,'CustomColumEvent event','net.sourceforge.ganttproject.task.CustomColumEvent',531,535,'net.sourceforge.ganttproject.task.CustomColumnsStorage',4102,'net.sourceforge.ganttproject.task.CustomColumnsStorage.fireCustomColumnsChange(net.sourceforge.ganttproject.task.CustomColumEvent)',0,'private void fireCustomColumnsChange(CustomColumEvent event) {\r\n    Iterator it = myListeners.iterator();\r\n    while (it.hasNext()) {\r\n        CustomColumsListener listener = ((CustomColumsListener) (it.next()));\r\n        listener.customColumsChange(event);\r\n    } \r\n}'),(3146,'CustomColumnsStorage columnStorage','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,536,'net.sourceforge.ganttproject.task.CustomColumnsValues',4118,'net.sourceforge.ganttproject.task.CustomColumnsValues.-init-(net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'/**\r\n * Creates an instance of CustomColumnsValues.\r\n */\r\npublic CustomColumnsValues(CustomColumnsStorage columnStorage) {\r\n    myColumnStorage = columnStorage;\r\n}'),(3147,'String customColName','java.lang.String',0,536,'net.sourceforge.ganttproject.task.CustomColumnsValues',4123,'net.sourceforge.ganttproject.task.CustomColumnsValues.setValue(java.lang.String,java.lang.Object)',0,'/**\r\n * Set the value for the customColumn whose name is given.\r\n *\r\n * @param customColName\r\n * 		The name of the CustomColumn.\r\n * @param value\r\n * 		The associated value.\r\n * @throws CustomColumnsException\r\n * 		Throws if <code>customColName</code> does not exist or\r\n * 		<code>value</code> class does not match the CustomColum\r\n * 		class.\r\n */\r\npublic void setValue(String customColName, Object value) throws CustomColumnsException {\r\n    if (!(myColumnStorage.exists(customColName)))\r\n        throw new CustomColumnsException(CustomColumnsException.DO_NOT_EXIST, customColName);\r\n\r\n    Class c1 = myColumnStorage.getCustomColumn(customColName).getType();\r\n    if (value == null) {\r\n        mapCustomColumnValue.remove(customColName);\r\n        return;\r\n    }\r\n    Class c2 = value.getClass();\r\n    // System.out.println(c1 +\" - \" + c2);\r\n    if ((value != null) && (!(c1.isAssignableFrom(c2))))\r\n        throw new CustomColumnsException(CustomColumnsException.CLASS_MISMATCH, null);\r\n    else\r\n        mapCustomColumnValue.put(customColName, value);\r\n\r\n}'),(3148,'Object value','java.lang.Object',0,536,'net.sourceforge.ganttproject.task.CustomColumnsValues',4123,'net.sourceforge.ganttproject.task.CustomColumnsValues.setValue(java.lang.String,java.lang.Object)',0,'/**\r\n * Set the value for the customColumn whose name is given.\r\n *\r\n * @param customColName\r\n * 		The name of the CustomColumn.\r\n * @param value\r\n * 		The associated value.\r\n * @throws CustomColumnsException\r\n * 		Throws if <code>customColName</code> does not exist or\r\n * 		<code>value</code> class does not match the CustomColum\r\n * 		class.\r\n */\r\npublic void setValue(String customColName, Object value) throws CustomColumnsException {\r\n    if (!(myColumnStorage.exists(customColName)))\r\n        throw new CustomColumnsException(CustomColumnsException.DO_NOT_EXIST, customColName);\r\n\r\n    Class c1 = myColumnStorage.getCustomColumn(customColName).getType();\r\n    if (value == null) {\r\n        mapCustomColumnValue.remove(customColName);\r\n        return;\r\n    }\r\n    Class c2 = value.getClass();\r\n    // System.out.println(c1 +\" - \" + c2);\r\n    if ((value != null) && (!(c1.isAssignableFrom(c2))))\r\n        throw new CustomColumnsException(CustomColumnsException.CLASS_MISMATCH, null);\r\n    else\r\n        mapCustomColumnValue.put(customColName, value);\r\n\r\n}'),(3149,'String customColName','java.lang.String',0,536,'net.sourceforge.ganttproject.task.CustomColumnsValues',4120,'net.sourceforge.ganttproject.task.CustomColumnsValues.getValue(java.lang.String)',0,'/**\r\n * Returns the value for the given customColName.\r\n *\r\n * @param customColName\r\n * 		The name of the custom column we want to get the value.\r\n * @return The value for the given customColName.\r\n */\r\npublic Object getValue(String customColName) {\r\n    return mapCustomColumnValue.get(customColName);\r\n}'),(3150,'String colName','java.lang.String',0,536,'net.sourceforge.ganttproject.task.CustomColumnsValues',4121,'net.sourceforge.ganttproject.task.CustomColumnsValues.removeCustomColumn(java.lang.String)',0,'/**\r\n * Remove the custom column (and also its value) from this\r\n * CustomColumnValues.\r\n *\r\n * @param colName\r\n * 		Name of the column to remove.\r\n */\r\npublic void removeCustomColumn(String colName) {\r\n    mapCustomColumnValue.remove(colName);\r\n}'),(3151,'String oldName','java.lang.String',0,536,'net.sourceforge.ganttproject.task.CustomColumnsValues',4122,'net.sourceforge.ganttproject.task.CustomColumnsValues.renameCustomColumn(java.lang.String,java.lang.String)',0,'public void renameCustomColumn(String oldName, String newName) {\r\n    Object o = mapCustomColumnValue.get(oldName);\r\n    mapCustomColumnValue.put(newName, o);\r\n    mapCustomColumnValue.remove(oldName);\r\n}'),(3152,'String newName','java.lang.String',0,536,'net.sourceforge.ganttproject.task.CustomColumnsValues',4122,'net.sourceforge.ganttproject.task.CustomColumnsValues.renameCustomColumn(java.lang.String,java.lang.String)',0,'public void renameCustomColumn(String oldName, String newName) {\r\n    Object o = mapCustomColumnValue.get(oldName);\r\n    mapCustomColumnValue.put(newName, o);\r\n    mapCustomColumnValue.remove(oldName);\r\n}'),(3153,'CustomColumEvent event','net.sourceforge.ganttproject.task.CustomColumEvent',531,537,'net.sourceforge.ganttproject.task.CustomColumsListener',4125,'net.sourceforge.ganttproject.task.CustomColumsListener.customColumsChange(net.sourceforge.ganttproject.task.CustomColumEvent)',0,'public void customColumsChange(CustomColumEvent event);'),(3154,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,538,'net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection',4126,'net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection.addAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',0,'ResourceAssignment addAssignment(ProjectResource resource);'),(3155,'net.sourceforge.ganttproject.task.ResourceAssignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,538,'net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection',4126,'net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection.addAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',1,'ResourceAssignment addAssignment(ProjectResource resource);'),(3156,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,538,'net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection',4127,'net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection.deleteAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',0,'void deleteAssignment(ProjectResource resource);'),(3157,'String name','java.lang.String',0,539,'net.sourceforge.ganttproject.task.MutableTask',4136,'net.sourceforge.ganttproject.task.MutableTask.setName(java.lang.String)',0,'void setName(String name);'),(3158,'boolean isMilestone','boolean',0,539,'net.sourceforge.ganttproject.task.MutableTask',4135,'net.sourceforge.ganttproject.task.MutableTask.setMilestone(boolean)',0,'void setMilestone(boolean isMilestone);'),(3159,'int priority','int',0,539,'net.sourceforge.ganttproject.task.MutableTask',4138,'net.sourceforge.ganttproject.task.MutableTask.setPriority(int)',0,'void setPriority(int priority);'),(3160,'GanttCalendar start','net.sourceforge.ganttproject.GanttCalendar',24,539,'net.sourceforge.ganttproject.task.MutableTask',4141,'net.sourceforge.ganttproject.task.MutableTask.setStart(net.sourceforge.ganttproject.GanttCalendar)',0,'void setStart(GanttCalendar start);'),(3161,'GanttCalendar end','net.sourceforge.ganttproject.GanttCalendar',24,539,'net.sourceforge.ganttproject.task.MutableTask',4133,'net.sourceforge.ganttproject.task.MutableTask.setEnd(net.sourceforge.ganttproject.GanttCalendar)',0,'void setEnd(GanttCalendar end);'),(3162,'TaskLength length','net.sourceforge.ganttproject.task.TaskLength',562,539,'net.sourceforge.ganttproject.task.MutableTask',4132,'net.sourceforge.ganttproject.task.MutableTask.setDuration(net.sourceforge.ganttproject.task.TaskLength)',0,'void setDuration(TaskLength length);'),(3163,'TaskLength shift','net.sourceforge.ganttproject.task.TaskLength',562,539,'net.sourceforge.ganttproject.task.MutableTask',4143,'net.sourceforge.ganttproject.task.MutableTask.shift(net.sourceforge.ganttproject.task.TaskLength)',0,'void shift(TaskLength shift);'),(3164,'int percentage','int',0,539,'net.sourceforge.ganttproject.task.MutableTask',4130,'net.sourceforge.ganttproject.task.MutableTask.setCompletionPercentage(int)',0,'void setCompletionPercentage(int percentage);'),(3165,'ShapePaint shape','net.sourceforge.ganttproject.shape.ShapePaint',529,539,'net.sourceforge.ganttproject.task.MutableTask',4140,'net.sourceforge.ganttproject.task.MutableTask.setShape(net.sourceforge.ganttproject.shape.ShapePaint)',0,'// void setStartFixed(boolean isFixed);\r\n// void setFinishFixed(boolean isFixed);\r\nvoid setShape(ShapePaint shape);'),(3166,'Color color','java.awt.Color',0,539,'net.sourceforge.ganttproject.task.MutableTask',4129,'net.sourceforge.ganttproject.task.MutableTask.setColor(java.awt.Color)',0,'void setColor(Color color);'),(3167,'String notes','java.lang.String',0,539,'net.sourceforge.ganttproject.task.MutableTask',4137,'net.sourceforge.ganttproject.task.MutableTask.setNotes(java.lang.String)',0,'void setNotes(String notes);'),(3168,'String notes','java.lang.String',0,539,'net.sourceforge.ganttproject.task.MutableTask',4128,'net.sourceforge.ganttproject.task.MutableTask.addNotes(java.lang.String)',0,'void addNotes(String notes);'),(3169,'boolean expand','boolean',0,539,'net.sourceforge.ganttproject.task.MutableTask',4134,'net.sourceforge.ganttproject.task.MutableTask.setExpand(boolean)',0,'void setExpand(boolean expand);'),(3170,'boolean critical','boolean',0,539,'net.sourceforge.ganttproject.task.MutableTask',4131,'net.sourceforge.ganttproject.task.MutableTask.setCritical(boolean)',0,'/**\r\n * Sets the task as critical or not. The method is used be TaskManager after\r\n * having run a CriticalPathAlgorithm to set the critical tasks. When\r\n * painted, the tasks are rendered as critical using Task.isCritical(). So,\r\n * a task is set as critical only if critical path is displayed.\r\n *\r\n * @param critical\r\n * 		<code>true</code> if this is critical, <code>false</code>\r\n * 		otherwise.\r\n */\r\nvoid setCritical(boolean critical);'),(3171,'TaskInfo taskInfo','net.sourceforge.ganttproject.task.TaskInfo',561,539,'net.sourceforge.ganttproject.task.MutableTask',4142,'net.sourceforge.ganttproject.task.MutableTask.setTaskInfo(net.sourceforge.ganttproject.task.TaskInfo)',0,'void setTaskInfo(TaskInfo taskInfo);'),(3172,'boolean projectTask','boolean',0,539,'net.sourceforge.ganttproject.task.MutableTask',4139,'net.sourceforge.ganttproject.task.MutableTask.setProjectTask(boolean)',0,'void setProjectTask(boolean projectTask);'),(3173,'float load','float',0,540,'net.sourceforge.ganttproject.task.ResourceAssignment',4151,'net.sourceforge.ganttproject.task.ResourceAssignment.setLoad(float)',0,'void setLoad(float load);'),(3174,'boolean responsible','boolean',0,540,'net.sourceforge.ganttproject.task.ResourceAssignment',4150,'net.sourceforge.ganttproject.task.ResourceAssignment.setCoordinator(boolean)',0,'void setCoordinator(boolean responsible);'),(3175,'Role role','net.sourceforge.ganttproject.roles.Role',512,540,'net.sourceforge.ganttproject.task.ResourceAssignment',4152,'net.sourceforge.ganttproject.task.ResourceAssignment.setRoleForAssignment(net.sourceforge.ganttproject.roles.Role)',0,'void setRoleForAssignment(Role role);'),(3176,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,541,'net.sourceforge.ganttproject.task.ResourceAssignmentCollection',4155,'net.sourceforge.ganttproject.task.ResourceAssignmentCollection.getAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',0,'ResourceAssignment getAssignment(ProjectResource resource);'),(3177,'net.sourceforge.ganttproject.task.ResourceAssignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,541,'net.sourceforge.ganttproject.task.ResourceAssignmentCollection',4155,'net.sourceforge.ganttproject.task.ResourceAssignmentCollection.getAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',1,'ResourceAssignment getAssignment(ProjectResource resource);'),(3178,'TaskImpl task','net.sourceforge.ganttproject.task.TaskImpl',560,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4158,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,net.sourceforge.ganttproject.resource.ResourceManager)',0,'public ResourceAssignmentCollectionImpl(TaskImpl task, ResourceManager resourceManager) {\r\n    myTask = task;\r\n    myResourceManager = resourceManager;\r\n}'),(3179,'ResourceManager resourceManager','net.sourceforge.ganttproject.resource.ResourceManager',509,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4158,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,net.sourceforge.ganttproject.resource.ResourceManager)',0,'public ResourceAssignmentCollectionImpl(TaskImpl task, ResourceManager resourceManager) {\r\n    myTask = task;\r\n    myResourceManager = resourceManager;\r\n}'),(3180,'ResourceAssignmentCollectionImpl collection','net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',546,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4159,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.-init-(net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl)',0,'private ResourceAssignmentCollectionImpl(ResourceAssignmentCollectionImpl collection) {\r\n    myTask = collection.myTask;\r\n    ResourceAssignment[] assignments = collection.getAssignments();\r\n    for (int i = 0; i < (assignments.length); i++) {\r\n        ResourceAssignment next = assignments[i];\r\n        ResourceAssignment copy = new ResourceAssignmentCollectionImpl.ResourceAssignmentImpl(next.getResource());\r\n        copy.setLoad(next.getLoad());\r\n        copy.setCoordinator(next.isCoordinator());\r\n        copy.setRoleForAssignment(next.getRoleForAssignment());\r\n        addAssignment(copy);\r\n    }\r\n}'),(3181,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,543,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl',4181,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl.-init-(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public ResourceAssignmentImpl(ProjectResource resource) {\r\n    myAssignmentToResource = resource.createAssignment(this);\r\n    // resource\r\n    // .setAssignmentCollection(ResourceAssignmentCollectionImpl.this);\r\n}'),(3182,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,545,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentStub',4196,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentStub.-init-(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public ResourceAssignmentStub(ProjectResource resource) {\r\n    myResource = resource;\r\n}'),(3183,'ResourceAssignment assignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,542,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo',4177,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo.-init-(net.sourceforge.ganttproject.task.ResourceAssignment,int)',0,'public MutationInfo(ResourceAssignment assignment, int operation) {\r\n    myAssignment = assignment;\r\n    myOrder = (ResourceAssignmentCollectionImpl.MutationInfo.ourOrder)++;\r\n    myOperation = operation;\r\n    myResource = assignment.getResource();\r\n}'),(3184,'int operation','int',0,542,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo',4177,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo.-init-(net.sourceforge.ganttproject.task.ResourceAssignment,int)',0,'public MutationInfo(ResourceAssignment assignment, int operation) {\r\n    myAssignment = assignment;\r\n    myOrder = (ResourceAssignmentCollectionImpl.MutationInfo.ourOrder)++;\r\n    myOperation = operation;\r\n    myResource = assignment.getResource();\r\n}'),(3185,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,542,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo',4178,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo.-init-(net.sourceforge.ganttproject.resource.ProjectResource,int)',0,'public MutationInfo(ProjectResource resource, int operation) {\r\n    this.myAssignment = null;\r\n    this.myOrder = (ResourceAssignmentCollectionImpl.MutationInfo.ourOrder)++;\r\n    this.myOperation = operation;\r\n    this.myResource = resource;\r\n}'),(3186,'int operation','int',0,542,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo',4178,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo.-init-(net.sourceforge.ganttproject.resource.ProjectResource,int)',0,'public MutationInfo(ProjectResource resource, int operation) {\r\n    this.myAssignment = null;\r\n    this.myOrder = (ResourceAssignmentCollectionImpl.MutationInfo.ourOrder)++;\r\n    this.myOperation = operation;\r\n    this.myResource = resource;\r\n}'),(3187,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4171,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public ResourceAssignment getAssignment(ProjectResource resource) {\r\n    return ((ResourceAssignment) (myAssignments.get(resource)));\r\n}'),(3188,'net.sourceforge.ganttproject.task.ResourceAssignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4171,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',1,'public ResourceAssignment getAssignment(ProjectResource resource) {\r\n    return ((ResourceAssignment) (myAssignments.get(resource)));\r\n}'),(3189,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4164,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public ResourceAssignment addAssignment(ProjectResource resource) {\r\n    return auxAddAssignment(resource);\r\n}'),(3190,'net.sourceforge.ganttproject.task.ResourceAssignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4164,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',1,'public ResourceAssignment addAssignment(ProjectResource resource) {\r\n    return auxAddAssignment(resource);\r\n}'),(3191,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4170,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.deleteAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public void deleteAssignment(ProjectResource resource) {\r\n    myAssignments.remove(resource);\r\n}'),(3192,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4166,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.auxAddAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',0,'private ResourceAssignment auxAddAssignment(ProjectResource resource) {\r\n    final ResourceAssignment result = new ResourceAssignmentCollectionImpl.ResourceAssignmentImpl(resource);\r\n    addAssignment(result);\r\n    return result;\r\n}'),(3193,'net.sourceforge.ganttproject.task.ResourceAssignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4166,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.auxAddAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',1,'private ResourceAssignment auxAddAssignment(ProjectResource resource) {\r\n    final ResourceAssignment result = new ResourceAssignmentCollectionImpl.ResourceAssignmentImpl(resource);\r\n    addAssignment(result);\r\n    return result;\r\n}'),(3194,'ResourceAssignment assignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4165,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(net.sourceforge.ganttproject.task.ResourceAssignment)',0,'private void addAssignment(ResourceAssignment assignment) {\r\n    myAssignments.put(assignment.getResource(), assignment);\r\n}'),(3195,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4176,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.removeAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',0,'/**\r\n * Removes the assignments related to the given resource.\r\n *\r\n * @param resource\r\n * 		Assigned resource\r\n */\r\npublic void removeAssignment(ProjectResource resource) {\r\n    new ResourceAssignmentCollectionImpl.ResourceAssignmentImpl(resource).delete();\r\n}'),(3196,'float load','float',0,543,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl',4189,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl.setLoad(float)',0,'// todo: transaction\r\npublic void setLoad(float load) {\r\n    myAssignmentToResource.setLoad(load);\r\n}'),(3197,'boolean responsible','boolean',0,543,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl',4188,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl.setCoordinator(boolean)',0,'public void setCoordinator(boolean responsible) {\r\n    myAssignmentToResource.setCoordinator(responsible);\r\n}'),(3198,'Role role','net.sourceforge.ganttproject.roles.Role',512,543,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl',4190,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl.setRoleForAssignment(net.sourceforge.ganttproject.roles.Role)',0,'public void setRoleForAssignment(Role role) {\r\n    myAssignmentToResource.setRoleForAssignment(role);\r\n}'),(3199,'float load','float',0,545,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentStub',4205,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentStub.setLoad(float)',0,'public void setLoad(float load) {\r\n    myLoad = load;\r\n}'),(3200,'boolean responsible','boolean',0,545,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentStub',4204,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentStub.setCoordinator(boolean)',0,'public void setCoordinator(boolean responsible) {\r\n    myCoordinator = responsible;\r\n}'),(3201,'Role role','net.sourceforge.ganttproject.roles.Role',512,545,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentStub',4206,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentStub.setRoleForAssignment(net.sourceforge.ganttproject.roles.Role)',0,'public void setRoleForAssignment(Role role) {\r\n    myRoleForAssignment = role;\r\n}'),(3202,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,544,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl',4193,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl.addAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public ResourceAssignment addAssignment(ProjectResource resource) {\r\n    ResourceAssignment result = new ResourceAssignmentCollectionImpl.ResourceAssignmentStub(resource);\r\n    myQueue.put(resource, new ResourceAssignmentCollectionImpl.MutationInfo(result, ResourceAssignmentCollectionImpl.MutationInfo.ADD));\r\n    return result;\r\n}'),(3203,'net.sourceforge.ganttproject.task.ResourceAssignment','net.sourceforge.ganttproject.task.ResourceAssignment',540,544,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl',4193,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl.addAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',1,'public ResourceAssignment addAssignment(ProjectResource resource) {\r\n    ResourceAssignment result = new ResourceAssignmentCollectionImpl.ResourceAssignmentStub(resource);\r\n    myQueue.put(resource, new ResourceAssignmentCollectionImpl.MutationInfo(result, ResourceAssignmentCollectionImpl.MutationInfo.ADD));\r\n    return result;\r\n}'),(3204,'ProjectResource resource','net.sourceforge.ganttproject.resource.ProjectResource',505,544,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl',4195,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl.deleteAssignment(net.sourceforge.ganttproject.resource.ProjectResource)',0,'public void deleteAssignment(ProjectResource resource) {\r\n    ResourceAssignmentCollectionImpl.MutationInfo info = ((ResourceAssignmentCollectionImpl.MutationInfo) (myQueue.get(resource)));\r\n    if (info == null) {\r\n        myQueue.put(resource, new ResourceAssignmentCollectionImpl.MutationInfo(resource, ResourceAssignmentCollectionImpl.MutationInfo.DELETE));\r\n    } else\r\n        if ((info.myOperation) == (ResourceAssignmentCollectionImpl.MutationInfo.ADD)) {\r\n            myQueue.remove(resource);\r\n        }\r\n\r\n}'),(3205,'Object o','java.lang.Object',0,542,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo',4180,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo.equals(java.lang.Object)',0,'public boolean equals(Object o) {\r\n    boolean result = o instanceof ResourceAssignmentCollectionImpl.MutationInfo;\r\n    if (result) {\r\n        result = myAssignment.getResource().equals(((ResourceAssignmentCollectionImpl.MutationInfo) (o)).myAssignment.getResource());\r\n    }\r\n    return result;\r\n}'),(3206,'Object o','java.lang.Object',0,542,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo',4179,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo.compareTo(java.lang.Object)',0,'public int compareTo(Object o) {\r\n    if (!(o instanceof ResourceAssignmentCollectionImpl.MutationInfo)) {\r\n        throw new IllegalArgumentException();\r\n    }\r\n    return (myOrder) - (((ResourceAssignmentCollectionImpl.MutationInfo) (o)).myOrder);\r\n}'),(3207,'ResourceAssignmentCollection assignmentCollection','net.sourceforge.ganttproject.task.ResourceAssignmentCollection',541,546,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl',4175,'net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.importData(net.sourceforge.ganttproject.task.ResourceAssignmentCollection)',0,'public void importData(ResourceAssignmentCollection assignmentCollection) {\r\n    if (myTask.isUnplugged()) {\r\n        ResourceAssignment[] assignments = assignmentCollection.getAssignments();\r\n        for (int i = 0; i < (assignments.length); i++) {\r\n            ResourceAssignment next = assignments[i];\r\n            addAssignment(next);\r\n        }\r\n    } else {\r\n        ResourceAssignment[] assignments = assignmentCollection.getAssignments();\r\n        for (int i = 0; i < (assignments.length); i++) {\r\n            ResourceAssignment next = assignments[i];\r\n            ProjectResource nextResource = next.getResource();\r\n            ProjectResource nextImportedResource = myResourceManager.getById(nextResource.getId());\r\n            if (nextImportedResource != null) {\r\n                ResourceAssignment copy = new ResourceAssignmentCollectionImpl.ResourceAssignmentImpl(nextImportedResource);\r\n                copy.setLoad(next.getLoad());\r\n                copy.setCoordinator(next.isCoordinator());\r\n                copy.setRoleForAssignment(next.getRoleForAssignment());\r\n                addAssignment(copy);\r\n            }\r\n        }\r\n    }\r\n}'),(3208,'TaskLength duration','net.sourceforge.ganttproject.task.TaskLength',562,548,'net.sourceforge.ganttproject.task.Task',4246,'net.sourceforge.ganttproject.task.Task.translateDuration(net.sourceforge.ganttproject.task.TaskLength)',0,'TaskLength translateDuration(TaskLength duration);'),(3209,'net.sourceforge.ganttproject.task.TaskLength','net.sourceforge.ganttproject.task.TaskLength',562,548,'net.sourceforge.ganttproject.task.Task',4246,'net.sourceforge.ganttproject.task.Task.translateDuration(net.sourceforge.ganttproject.task.TaskLength)',1,'TaskLength translateDuration(TaskLength duration);'),(3210,'Task targetSupertask','net.sourceforge.ganttproject.task.Task',548,548,'net.sourceforge.ganttproject.task.Task',4243,'net.sourceforge.ganttproject.task.Task.move(net.sourceforge.ganttproject.task.Task)',0,'void move(Task targetSupertask);'),(3211,'GanttCalendar thirdDate','net.sourceforge.ganttproject.GanttCalendar',24,548,'net.sourceforge.ganttproject.task.Task',4244,'net.sourceforge.ganttproject.task.Task.setThirdDate(net.sourceforge.ganttproject.GanttCalendar)',0,'void setThirdDate(GanttCalendar thirdDate);'),(3212,'int dateConstraint','int',0,548,'net.sourceforge.ganttproject.task.Task',4245,'net.sourceforge.ganttproject.task.Task.setThirdDateConstraint(int)',0,'void setThirdDateConstraint(int dateConstraint);'),(3213,'TaskImpl task','net.sourceforge.ganttproject.task.TaskImpl',560,550,'net.sourceforge.ganttproject.task.TaskActivityImpl',4255,'net.sourceforge.ganttproject.task.TaskActivityImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,java.util.Date,java.util.Date)',0,'TaskActivityImpl(TaskImpl task, Date startDate, Date endDate) {\r\n    this(task, startDate, endDate, 1.0F);\r\n}'),(3214,'Date startDate','java.util.Date',0,550,'net.sourceforge.ganttproject.task.TaskActivityImpl',4255,'net.sourceforge.ganttproject.task.TaskActivityImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,java.util.Date,java.util.Date)',0,'TaskActivityImpl(TaskImpl task, Date startDate, Date endDate) {\r\n    this(task, startDate, endDate, 1.0F);\r\n}'),(3215,'Date endDate','java.util.Date',0,550,'net.sourceforge.ganttproject.task.TaskActivityImpl',4255,'net.sourceforge.ganttproject.task.TaskActivityImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,java.util.Date,java.util.Date)',0,'TaskActivityImpl(TaskImpl task, Date startDate, Date endDate) {\r\n    this(task, startDate, endDate, 1.0F);\r\n}'),(3216,'TaskImpl task','net.sourceforge.ganttproject.task.TaskImpl',560,550,'net.sourceforge.ganttproject.task.TaskActivityImpl',4256,'net.sourceforge.ganttproject.task.TaskActivityImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,java.util.Date,java.util.Date,float)',0,'TaskActivityImpl(TaskImpl task, Date startDate, Date endDate, float intensity) {\r\n    myStartDate = startDate;\r\n    myEndDate = endDate;\r\n    myDuration = task.getManager().createLength(task.getDuration().getTimeUnit(), startDate, endDate);\r\n    myIntensity = intensity;\r\n    myTask = task;\r\n}'),(3217,'Date startDate','java.util.Date',0,550,'net.sourceforge.ganttproject.task.TaskActivityImpl',4256,'net.sourceforge.ganttproject.task.TaskActivityImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,java.util.Date,java.util.Date,float)',0,'TaskActivityImpl(TaskImpl task, Date startDate, Date endDate, float intensity) {\r\n    myStartDate = startDate;\r\n    myEndDate = endDate;\r\n    myDuration = task.getManager().createLength(task.getDuration().getTimeUnit(), startDate, endDate);\r\n    myIntensity = intensity;\r\n    myTask = task;\r\n}'),(3218,'Date endDate','java.util.Date',0,550,'net.sourceforge.ganttproject.task.TaskActivityImpl',4256,'net.sourceforge.ganttproject.task.TaskActivityImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,java.util.Date,java.util.Date,float)',0,'TaskActivityImpl(TaskImpl task, Date startDate, Date endDate, float intensity) {\r\n    myStartDate = startDate;\r\n    myEndDate = endDate;\r\n    myDuration = task.getManager().createLength(task.getDuration().getTimeUnit(), startDate, endDate);\r\n    myIntensity = intensity;\r\n    myTask = task;\r\n}'),(3219,'float intensity','float',0,550,'net.sourceforge.ganttproject.task.TaskActivityImpl',4256,'net.sourceforge.ganttproject.task.TaskActivityImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,java.util.Date,java.util.Date,float)',0,'TaskActivityImpl(TaskImpl task, Date startDate, Date endDate, float intensity) {\r\n    myStartDate = startDate;\r\n    myEndDate = endDate;\r\n    myDuration = task.getManager().createLength(task.getDuration().getTimeUnit(), startDate, endDate);\r\n    myIntensity = intensity;\r\n    myTask = task;\r\n}'),(3220,'Task container','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4271,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.getNestedTasks(net.sourceforge.ganttproject.task.Task)',0,'Task[] getNestedTasks(Task container);'),(3221,'Task container','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4273,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.hasNestedTasks(net.sourceforge.ganttproject.task.Task)',0,'boolean hasNestedTasks(Task container);'),(3222,'Task nestedTask','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4269,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.getContainer(net.sourceforge.ganttproject.task.Task)',0,'Task getContainer(Task nestedTask);'),(3223,'net.sourceforge.ganttproject.task.Task','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4269,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.getContainer(net.sourceforge.ganttproject.task.Task)',1,'Task getContainer(Task nestedTask);'),(3224,'Task whatMove','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4274,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.move(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'void move(Task whatMove, Task whereMove);'),(3225,'Task whereMove','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4274,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.move(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'void move(Task whatMove, Task whereMove);'),(3226,'Task dependant','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4266,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.areUnrelated(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'boolean areUnrelated(Task dependant, Task dependee);'),(3227,'Task dependee','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4266,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.areUnrelated(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'boolean areUnrelated(Task dependant, Task dependee);'),(3228,'Task task','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4270,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.getDepth(net.sourceforge.ganttproject.task.Task)',0,'int getDepth(Task task);'),(3229,'Task next','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4267,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.compareDocumentOrder(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'int compareDocumentOrder(Task next, Task dependeeTask);'),(3230,'Task dependeeTask','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4267,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.compareDocumentOrder(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'int compareDocumentOrder(Task next, Task dependeeTask);'),(3231,'Task task','net.sourceforge.ganttproject.task.Task',548,552,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',4268,'net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade.contains(net.sourceforge.ganttproject.task.Task)',0,'boolean contains(Task task);'),(3232,'TaskManagerImpl taskManager','net.sourceforge.ganttproject.task.TaskManagerImpl',570,553,'net.sourceforge.ganttproject.task.TaskDocumentOrderComparator',4276,'net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.-init-(net.sourceforge.ganttproject.task.TaskManagerImpl)',0,'TaskDocumentOrderComparator(TaskManagerImpl taskManager) {\r\n    myManager = taskManager;\r\n}'),(3233,'Object object1','java.lang.Object',0,553,'net.sourceforge.ganttproject.task.TaskDocumentOrderComparator',4277,'net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.compare(java.lang.Object,java.lang.Object)',0,'public int compare(Object object1, Object object2) {\r\n    assert (object1 instanceof Task) && (object2 instanceof Task) : \"I compare only tasks\";\r\n    return myManager.getTaskHierarchy().compareDocumentOrder(((Task) (object1)), ((Task) (object2)));\r\n}'),(3234,'Object object2','java.lang.Object',0,553,'net.sourceforge.ganttproject.task.TaskDocumentOrderComparator',4277,'net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.compare(java.lang.Object,java.lang.Object)',0,'public int compare(Object object1, Object object2) {\r\n    assert (object1 instanceof Task) && (object2 instanceof Task) : \"I compare only tasks\";\r\n    return myManager.getTaskHierarchy().compareDocumentOrder(((Task) (object1)), ((Task) (object2)));\r\n}'),(3235,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,560,'net.sourceforge.ganttproject.task.TaskImpl',4278,'net.sourceforge.ganttproject.task.TaskImpl.-init-(net.sourceforge.ganttproject.task.TaskManager,int)',0,'protected TaskImpl(TaskManager taskManager, int taskID) {\r\n    myManager = ((TaskManagerImpl) (taskManager));\r\n    if (taskID == (-1)) {\r\n        myID = myManager.getMaxID();\r\n        myManager.increaseMaxID();\r\n    } else {\r\n        if ((myManager.getTask(taskID)) != null) {\r\n            throw new IllegalArgumentException(((\"There is a task with ID=\" + taskID) + \" already\"));\r\n        }\r\n        myID = taskID;\r\n    }\r\n    myAssignments = new ResourceAssignmentCollectionImpl(this, myManager.getConfig().getResourceManager());\r\n    myDependencySlice = new TaskDependencySliceImpl(this, myManager.getDependencyCollection());\r\n    myDependencySliceAsDependant = new TaskDependencySliceAsDependant(this, myManager.getDependencyCollection());\r\n    myDependencySliceAsDependee = new TaskDependencySliceAsDependee(this, myManager.getDependencyCollection());\r\n    myPriority = 1;\r\n    myTaskHierarchyItem = myManager.getHierarchyManager().createItem(this);\r\n    myNotes = \"\";\r\n    bExpand = true;\r\n    myColor = null;\r\n    customValues = new CustomColumnsValues(myManager.getCustomColumnStorage());\r\n}'),(3236,'int taskID','int',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4278,'net.sourceforge.ganttproject.task.TaskImpl.-init-(net.sourceforge.ganttproject.task.TaskManager,int)',0,'protected TaskImpl(TaskManager taskManager, int taskID) {\r\n    myManager = ((TaskManagerImpl) (taskManager));\r\n    if (taskID == (-1)) {\r\n        myID = myManager.getMaxID();\r\n        myManager.increaseMaxID();\r\n    } else {\r\n        if ((myManager.getTask(taskID)) != null) {\r\n            throw new IllegalArgumentException(((\"There is a task with ID=\" + taskID) + \" already\"));\r\n        }\r\n        myID = taskID;\r\n    }\r\n    myAssignments = new ResourceAssignmentCollectionImpl(this, myManager.getConfig().getResourceManager());\r\n    myDependencySlice = new TaskDependencySliceImpl(this, myManager.getDependencyCollection());\r\n    myDependencySliceAsDependant = new TaskDependencySliceAsDependant(this, myManager.getDependencyCollection());\r\n    myDependencySliceAsDependee = new TaskDependencySliceAsDependee(this, myManager.getDependencyCollection());\r\n    myPriority = 1;\r\n    myTaskHierarchyItem = myManager.getHierarchyManager().createItem(this);\r\n    myNotes = \"\";\r\n    bExpand = true;\r\n    myColor = null;\r\n    customValues = new CustomColumnsValues(myManager.getCustomColumnStorage());\r\n}'),(3237,'TaskImpl copy','net.sourceforge.ganttproject.task.TaskImpl',560,560,'net.sourceforge.ganttproject.task.TaskImpl',4279,'net.sourceforge.ganttproject.task.TaskImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,boolean)',0,'protected TaskImpl(TaskImpl copy, boolean isUnplugged) {\r\n    myManager = copy.myManager;\r\n    if (!isUnplugged) {\r\n        myTaskHierarchyItem = myManager.getHierarchyManager().createItem(this);\r\n    } else {\r\n        myTaskHierarchyItem = null;\r\n    }\r\n    myAssignments = new ResourceAssignmentCollectionImpl(this, myManager.getConfig().getResourceManager());\r\n    myAssignments.importData(copy.getAssignmentCollection());\r\n    myID = copy.myID;\r\n    myName = copy.myName;\r\n    myWebLink = copy.myWebLink;\r\n    isMilestone = copy.isMilestone;\r\n    isProjectTask = copy.isProjectTask;\r\n    myPriority = copy.myPriority;\r\n    myStart = copy.myStart;\r\n    myEnd = copy.myEnd;\r\n    myThird = copy.myThird;\r\n    myThirdDateConstraint = copy.myThirdDateConstraint;\r\n    myCompletionPercentage = copy.myCompletionPercentage;\r\n    myLength = copy.myLength;\r\n    myShape = copy.myShape;\r\n    myColor = copy.myColor;\r\n    myNotes = copy.myNotes;\r\n    bExpand = copy.bExpand;\r\n    // \r\n    myDependencySlice = new TaskDependencySliceImpl(this, myManager.getDependencyCollection());\r\n    myDependencySliceAsDependant = new TaskDependencySliceAsDependant(this, myManager.getDependencyCollection());\r\n    myDependencySliceAsDependee = new TaskDependencySliceAsDependee(this, myManager.getDependencyCollection());\r\n    customValues = ((CustomColumnsValues) (copy.getCustomValues().clone()));\r\n    recalculateActivities();\r\n}'),(3238,'boolean isUnplugged','boolean',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4279,'net.sourceforge.ganttproject.task.TaskImpl.-init-(net.sourceforge.ganttproject.task.TaskImpl,boolean)',0,'protected TaskImpl(TaskImpl copy, boolean isUnplugged) {\r\n    myManager = copy.myManager;\r\n    if (!isUnplugged) {\r\n        myTaskHierarchyItem = myManager.getHierarchyManager().createItem(this);\r\n    } else {\r\n        myTaskHierarchyItem = null;\r\n    }\r\n    myAssignments = new ResourceAssignmentCollectionImpl(this, myManager.getConfig().getResourceManager());\r\n    myAssignments.importData(copy.getAssignmentCollection());\r\n    myID = copy.myID;\r\n    myName = copy.myName;\r\n    myWebLink = copy.myWebLink;\r\n    isMilestone = copy.isMilestone;\r\n    isProjectTask = copy.isProjectTask;\r\n    myPriority = copy.myPriority;\r\n    myStart = copy.myStart;\r\n    myEnd = copy.myEnd;\r\n    myThird = copy.myThird;\r\n    myThirdDateConstraint = copy.myThirdDateConstraint;\r\n    myCompletionPercentage = copy.myCompletionPercentage;\r\n    myLength = copy.myLength;\r\n    myShape = copy.myShape;\r\n    myColor = copy.myColor;\r\n    myNotes = copy.myNotes;\r\n    bExpand = copy.bExpand;\r\n    // \r\n    myDependencySlice = new TaskDependencySliceImpl(this, myManager.getDependencyCollection());\r\n    myDependencySliceAsDependant = new TaskDependencySliceAsDependant(this, myManager.getDependencyCollection());\r\n    myDependencySliceAsDependee = new TaskDependencySliceAsDependee(this, myManager.getDependencyCollection());\r\n    customValues = ((CustomColumnsValues) (copy.getCustomValues().clone()));\r\n    recalculateActivities();\r\n}'),(3239,'Task targetSupertask','net.sourceforge.ganttproject.task.Task',548,560,'net.sourceforge.ganttproject.task.TaskImpl',4324,'net.sourceforge.ganttproject.task.TaskImpl.move(net.sourceforge.ganttproject.task.Task)',0,'public void move(Task targetSupertask) {\r\n    TaskImpl supertaskImpl = ((TaskImpl) (targetSupertask));\r\n    TaskHierarchyItem targetItem = supertaskImpl.myTaskHierarchyItem;\r\n    myTaskHierarchyItem.delete();\r\n    targetItem.addNestedItem(myTaskHierarchyItem);\r\n    myManager.onTaskMoved(this);\r\n}'),(3240,'int taskID','int',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4340,'net.sourceforge.ganttproject.task.TaskImpl.setTaskIDHack(int)',0,'// TODO: remove this hack. ID must never be changed\r\nprotected void setTaskIDHack(int taskID) {\r\n    myID = taskID;\r\n}'),(3241,'Object newValue','java.lang.Object',0,556,'net.sourceforge.ganttproject.task.TaskImpl$FieldChange',4360,'net.sourceforge.ganttproject.task.TaskImpl$FieldChange.setValue(java.lang.Object)',0,'void setValue(Object newValue) {\r\n    myFieldValue = newValue;\r\n    myEventSender.enable();\r\n}'),(3242,'Object oldValue','java.lang.Object',0,556,'net.sourceforge.ganttproject.task.TaskImpl$FieldChange',4359,'net.sourceforge.ganttproject.task.TaskImpl$FieldChange.setOldValue(java.lang.Object)',0,'public void setOldValue(Object oldValue) {\r\n    myOldValue = oldValue;\r\n}'),(3243,'int length','int',0,554,'net.sourceforge.ganttproject.task.TaskImpl$DurationChange',4355,'net.sourceforge.ganttproject.task.TaskImpl$DurationChange.getCachedDate(int)',0,'Date getCachedDate(int length) {\r\n    if ((myDates) == null) {\r\n        return null;\r\n    }\r\n    int index = length - (myMinLength);\r\n    if ((index < 0) || (index >= (myDates.size()))) {\r\n        return null;\r\n    }\r\n    return ((Date) (myDates.get(index)));\r\n}'),(3244,'Date date','java.util.Date',0,554,'net.sourceforge.ganttproject.task.TaskImpl$DurationChange',4354,'net.sourceforge.ganttproject.task.TaskImpl$DurationChange.cacheDate(java.util.Date,int)',0,'void cacheDate(Date date, int length) {\r\n    if ((myDates) == null) {\r\n        myDates = new ArrayList();\r\n    }\r\n    int index = length - (myMinLength);\r\n    while (index <= (-1)) {\r\n        myDates.add(0, null);\r\n        index++;\r\n    } \r\n    while (index > (myDates.size())) {\r\n        myDates.add(null);\r\n    } \r\n    if (index == (-1)) {\r\n        myDates.add(0, date);\r\n    } else\r\n        if (index == (myDates.size())) {\r\n            myDates.add(date);\r\n        } else {\r\n            myDates.set(index, date);\r\n        }\r\n\r\n}'),(3245,'int length','int',0,554,'net.sourceforge.ganttproject.task.TaskImpl$DurationChange',4354,'net.sourceforge.ganttproject.task.TaskImpl$DurationChange.cacheDate(java.util.Date,int)',0,'void cacheDate(Date date, int length) {\r\n    if ((myDates) == null) {\r\n        myDates = new ArrayList();\r\n    }\r\n    int index = length - (myMinLength);\r\n    while (index <= (-1)) {\r\n        myDates.add(0, null);\r\n        index++;\r\n    } \r\n    while (index > (myDates.size())) {\r\n        myDates.add(null);\r\n    } \r\n    if (index == (-1)) {\r\n        myDates.add(0, date);\r\n    } else\r\n        if (index == (myDates.size())) {\r\n            myDates.add(date);\r\n        } else {\r\n            myDates.set(index, date);\r\n        }\r\n\r\n}'),(3246,'final String name','java.lang.String',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4381,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setName(java.lang.String)',0,'public void setName(final String name) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setName(name);\r\n        }\r\n    });\r\n}'),(3247,'final boolean projectTask','boolean',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4384,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setProjectTask(boolean)',0,'public void setProjectTask(final boolean projectTask) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setProjectTask(projectTask);\r\n        }\r\n    });\r\n}'),(3248,'final boolean milestone','boolean',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4380,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setMilestone(boolean)',0,'public void setMilestone(final boolean milestone) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setMilestone(milestone);\r\n        }\r\n    });\r\n}'),(3249,'final int priority','int',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4383,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setPriority(int)',0,'public void setPriority(final int priority) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setPriority(priority);\r\n        }\r\n    });\r\n}'),(3250,'final GanttCalendar start','net.sourceforge.ganttproject.GanttCalendar',24,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4386,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setStart(net.sourceforge.ganttproject.GanttCalendar)',0,'public void setStart(final GanttCalendar start) {\r\n    assert start != null;\r\n    GanttCalendar currentStart = getStart();\r\n    if ((currentStart != null) && (start.equals(currentStart))) {\r\n        return;\r\n    }\r\n    if ((myStartChange) == null) {\r\n        myStartChange = new TaskImpl.FieldChange();\r\n        myStartChange.myEventSender = myPropertiesEventSender;\r\n    }\r\n    myStartChange.setOldValue(this.myStart);\r\n    myStartChange.setValue(start);\r\n    myActivities = null;\r\n}'),(3251,'final GanttCalendar end','net.sourceforge.ganttproject.GanttCalendar',24,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4377,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setEnd(net.sourceforge.ganttproject.GanttCalendar)',0,'public void setEnd(final GanttCalendar end) {\r\n    if ((myEndChange) == null) {\r\n        myEndChange = new TaskImpl.FieldChange();\r\n        myEndChange.myEventSender = myPropertiesEventSender;\r\n    }\r\n    myEndChange.setOldValue(this.myEnd);\r\n    myEndChange.setValue(end);\r\n    myActivities = null;\r\n}'),(3252,'final GanttCalendar third','net.sourceforge.ganttproject.GanttCalendar',24,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4388,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setThird(net.sourceforge.ganttproject.GanttCalendar,int)',0,'public void setThird(final GanttCalendar third, final int thirdDateConstraint) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setThirdDateConstraint(thirdDateConstraint);\r\n        }\r\n    });\r\n    if ((myThirdChange) == null) {\r\n        myThirdChange = new TaskImpl.FieldChange();\r\n        myThirdChange.myEventSender = myPropertiesEventSender;\r\n    }\r\n    myThirdChange.setValue(third);\r\n    myActivities = null;\r\n}'),(3253,'final int thirdDateConstraint','int',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4388,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setThird(net.sourceforge.ganttproject.GanttCalendar,int)',0,'public void setThird(final GanttCalendar third, final int thirdDateConstraint) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setThirdDateConstraint(thirdDateConstraint);\r\n        }\r\n    });\r\n    if ((myThirdChange) == null) {\r\n        myThirdChange = new TaskImpl.FieldChange();\r\n        myThirdChange.myEventSender = myPropertiesEventSender;\r\n    }\r\n    myThirdChange.setValue(third);\r\n    myActivities = null;\r\n}'),(3254,'final TaskLength length','net.sourceforge.ganttproject.task.TaskLength',562,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4376,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setDuration(net.sourceforge.ganttproject.task.TaskLength)',0,'public void setDuration(final TaskLength length) {\r\n    // If duration of task was set to 0 or less do not change it\r\n    if ((length.getLength()) <= 0) {\r\n        return;\r\n    }\r\n    if ((myDurationChange) == null) {\r\n        myDurationChange = new TaskImpl.DurationChange();\r\n        myDurationChange.myEventSender = myPropertiesEventSender;\r\n        myDurationChange.setValue(length);\r\n    } else {\r\n        TaskLength currentLength = ((TaskLength) (myDurationChange.myFieldValue));\r\n        if (((currentLength.getLength()) - (length.getLength())) == 0) {\r\n            return;\r\n        }\r\n    }\r\n    TaskLength prevLength = ((TaskLength) (myDurationChange.myFieldValue));\r\n    // System.err.println(\"new duration=\"+length+\"\r\n    // previous=\"+prevLength);\r\n    // Date prevEnd =\r\n    // myDurationChange.getCachedDate((int)prevLength.getLength());\r\n    Date prevEnd = null;\r\n    // System.err.println(\"previously cached shift=\"+prevEnd);\r\n    myDurationChange.setValue(length);\r\n    GanttCalendar newEnd;\r\n    Date shifted;\r\n    if (prevEnd == null) {\r\n        // System.err.println(\"no prev, length=\"+length.getLength());\r\n        shifted = this.shiftDate(getStart().getTime(), length);\r\n    } else {\r\n        // System.err.println(\"yes prev,\r\n        // length=\"+(length.getLength()-prevLength.getLength()));\r\n        shifted = this.shiftDate(prevEnd, getManager().createLength(length.getTimeUnit(), ((length.getLength()) - (prevLength.getLength()))));\r\n    }\r\n    // System.err.println(\"caching shift=\"+shifted+\" for\r\n    // duration=\"+length);\r\n    // myDurationChange.cacheDate(shifted, (int)length.getLength());\r\n    newEnd = new GanttCalendar(shifted);\r\n    setEnd(newEnd);\r\n    myActivities = null;\r\n}'),(3255,'final boolean expand','boolean',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4378,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setExpand(boolean)',0,'public void setExpand(final boolean expand) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setExpand(expand);\r\n        }\r\n    });\r\n}'),(3256,'final int percentage','int',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4374,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setCompletionPercentage(int)',0,'public void setCompletionPercentage(final int percentage) {\r\n    if ((myCompletionPercentageChange) == null) {\r\n        myCompletionPercentageChange = new TaskImpl.FieldChange();\r\n        myCompletionPercentageChange.myEventSender = myProgressEventSender;\r\n    }\r\n    myCompletionPercentageChange.setValue(new Integer(percentage));\r\n}'),(3257,'final boolean critical','boolean',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4375,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setCritical(boolean)',0,'// public void setStartFixed(final boolean isFixed) {\r\n// myCommands.add(new Runnable() {\r\n// public void run() {\r\n// TaskImpl.this.setStartFixed(isFixed);\r\n// }\r\n// });\r\n// }\r\n// \r\n// public void setFinishFixed(final boolean isFixed) {\r\n// myCommands.add(new Runnable() {\r\n// public void run() {\r\n// TaskImpl.this.setFinishFixed(isFixed);\r\n// }\r\n// });\r\n// \r\n// }\r\npublic void setCritical(final boolean critical) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setCritical(critical);\r\n        }\r\n    });\r\n}'),(3258,'final ShapePaint shape','net.sourceforge.ganttproject.shape.ShapePaint',529,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4385,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setShape(net.sourceforge.ganttproject.shape.ShapePaint)',0,'public void setShape(final ShapePaint shape) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setShape(shape);\r\n        }\r\n    });\r\n}'),(3259,'final Color color','java.awt.Color',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4373,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setColor(java.awt.Color)',0,'public void setColor(final Color color) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setColor(color);\r\n        }\r\n    });\r\n}'),(3260,'final String notes','java.lang.String',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4382,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setNotes(java.lang.String)',0,'public void setNotes(final String notes) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.setNotes(notes);\r\n        }\r\n    });\r\n}'),(3261,'final String notes','java.lang.String',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4362,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.addNotes(java.lang.String)',0,'public void addNotes(final String notes) {\r\n    myCommands.add(new Runnable() {\r\n        public void run() {\r\n            TaskImpl.this.addNotes(notes);\r\n        }\r\n    });\r\n}'),(3262,'float unitCount','float',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4389,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.shift(float)',0,'public void shift(float unitCount) {\r\n    Task result = getPrecomputedShift(unitCount);\r\n    if (result == null) {\r\n        result = this.shift(unitCount);\r\n        cachePrecomputedShift(result, unitCount);\r\n    }\r\n    // System.err.println(\"[MutatorImpl] shift(): result=\"+result);\r\n    setStart(result.getStart());\r\n    setDuration(result.getDuration());\r\n    setEnd(result.getEnd());\r\n}'),(3263,'TaskLength shift','net.sourceforge.ganttproject.task.TaskLength',562,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4390,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.shift(net.sourceforge.ganttproject.task.TaskLength)',0,'public void shift(TaskLength shift) {\r\n    this.shift(shift);\r\n}'),(3264,'int level','int',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4379,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setIsolationLevel(int)',0,'public void setIsolationLevel(int level) {\r\n    myIsolationLevel = level;\r\n}'),(3265,'Task result','net.sourceforge.ganttproject.task.Task',548,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4363,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.cachePrecomputedShift(net.sourceforge.ganttproject.task.Task,float)',0,'private void cachePrecomputedShift(Task result, float unitCount) {\r\n}'),(3266,'float unitCount','float',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4363,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.cachePrecomputedShift(net.sourceforge.ganttproject.task.Task,float)',0,'private void cachePrecomputedShift(Task result, float unitCount) {\r\n}'),(3267,'float unitCount','float',0,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4369,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.getPrecomputedShift(float)',0,'private Task getPrecomputedShift(float unitCount) {\r\n    return null;\r\n}'),(3268,'net.sourceforge.ganttproject.task.Task','net.sourceforge.ganttproject.task.Task',548,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4369,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.getPrecomputedShift(float)',1,'private Task getPrecomputedShift(float unitCount) {\r\n    return null;\r\n}'),(3269,'TaskInfo taskInfo','net.sourceforge.ganttproject.task.TaskInfo',561,557,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl',4387,'net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl.setTaskInfo(net.sourceforge.ganttproject.task.TaskInfo)',0,'public void setTaskInfo(TaskInfo taskInfo) {\r\n    myTaskInfo = taskInfo;\r\n}'),(3270,'String name','java.lang.String',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4334,'net.sourceforge.ganttproject.task.TaskImpl.setName(java.lang.String)',0,'public void setName(String name) {\r\n    myName = name;\r\n}'),(3271,'String webLink','java.lang.String',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4344,'net.sourceforge.ganttproject.task.TaskImpl.setWebLink(java.lang.String)',0,'public void setWebLink(String webLink) {\r\n    myWebLink = webLink;\r\n}'),(3272,'boolean milestone','boolean',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4333,'net.sourceforge.ganttproject.task.TaskImpl.setMilestone(boolean)',0,'public void setMilestone(boolean milestone) {\r\n    isMilestone = milestone;\r\n}'),(3273,'int priority','int',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4336,'net.sourceforge.ganttproject.task.TaskImpl.setPriority(int)',0,'public void setPriority(int priority) {\r\n    myPriority = priority;\r\n}'),(3274,'GanttCalendar start','net.sourceforge.ganttproject.GanttCalendar',24,560,'net.sourceforge.ganttproject.task.TaskImpl',4339,'net.sourceforge.ganttproject.task.TaskImpl.setStart(net.sourceforge.ganttproject.GanttCalendar)',0,'public void setStart(GanttCalendar start) {\r\n    Date closestWorkingStart = myManager.findClosestWorkingTime(start.getTime());\r\n    start.setTime(closestWorkingStart);\r\n    GanttCalendar oldStart = ((myStart) == null) ? null : myStart.Clone();\r\n    myStart = start;\r\n    GanttCalendar oldEnd = getEnd();\r\n    // if (myID>=0) {\r\n    recalculateActivities();\r\n    // }\r\n}'),(3275,'GanttCalendar end','net.sourceforge.ganttproject.GanttCalendar',24,560,'net.sourceforge.ganttproject.task.TaskImpl',4331,'net.sourceforge.ganttproject.task.TaskImpl.setEnd(net.sourceforge.ganttproject.GanttCalendar)',0,'public void setEnd(GanttCalendar end) {\r\n    GanttCalendar oldFinish = ((myEnd) == null) ? null : myEnd.Clone();\r\n    myEnd = end;\r\n    recalculateActivities();\r\n    // System.err.println(\"we have \"+myActivities.size()+\" activities\");\r\n    // if (areEventsEnabled()) {\r\n    // myManager.fireTaskScheduleChanged(this, myStart.Clone(), oldFinish);\r\n    // }\r\n}'),(3276,'GanttCalendar third','net.sourceforge.ganttproject.GanttCalendar',24,560,'net.sourceforge.ganttproject.task.TaskImpl',4342,'net.sourceforge.ganttproject.task.TaskImpl.setThirdDate(net.sourceforge.ganttproject.GanttCalendar)',0,'public void setThirdDate(GanttCalendar third) {\r\n    GanttCalendar oldThird = ((myThird) == null) ? null : myThird.Clone();\r\n    myThird = third;\r\n    // recalculateActivities();\r\n    // if (areEventsEnabled()) {\r\n    // myManager.fireTaskScheduleChanged(this, myThird.Clone(), oldThird);\r\n    // }\r\n}'),(3277,'int thirdDateConstraint','int',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4343,'net.sourceforge.ganttproject.task.TaskImpl.setThirdDateConstraint(int)',0,'public void setThirdDateConstraint(int thirdDateConstraint) {\r\n    myThirdDateConstraint = thirdDateConstraint;\r\n}'),(3278,'TaskLength shift','net.sourceforge.ganttproject.task.TaskLength',562,560,'net.sourceforge.ganttproject.task.TaskImpl',4347,'net.sourceforge.ganttproject.task.TaskImpl.shift(net.sourceforge.ganttproject.task.TaskLength)',0,'public void shift(TaskLength shift) {\r\n    float unitCount = shift.getLength(myLength.getTimeUnit());\r\n    if (unitCount != 0.0F) {\r\n        Task resultTask = shift(unitCount);\r\n        GanttCalendar oldStart = myStart;\r\n        GanttCalendar oldEnd = myEnd;\r\n        myStart = resultTask.getStart();\r\n        myLength = resultTask.getDuration();\r\n        myEnd = resultTask.getEnd();\r\n        if (areEventsEnabled()) {\r\n            myManager.fireTaskScheduleChanged(this, oldStart, oldEnd);\r\n        }\r\n        recalculateActivities();\r\n    }\r\n}'),(3279,'float unitCount','float',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4346,'net.sourceforge.ganttproject.task.TaskImpl.shift(float)',0,'public Task shift(float unitCount) {\r\n    Task clone = unpluggedClone();\r\n    if (unitCount > 0) {\r\n        TaskLength length = myManager.createLength(myLength.getTimeUnit(), unitCount);\r\n        // clone.setDuration(length);\r\n        Date shiftedDate = TaskImpl.RESTLESS_CALENDAR.shiftDate(myStart.getTime(), length);\r\n        clone.setStart(new GanttCalendar(shiftedDate));\r\n        clone.setDuration(myLength);\r\n    } else {\r\n        Date newStart = shiftDate(clone.getStart().getTime(), getManager().createLength(clone.getDuration().getTimeUnit(), ((long) (unitCount))));\r\n        clone.setStart(new GanttCalendar(newStart));\r\n        clone.setDuration(myLength);\r\n    }\r\n    return clone;\r\n}'),(3280,'net.sourceforge.ganttproject.task.Task','net.sourceforge.ganttproject.task.Task',548,560,'net.sourceforge.ganttproject.task.TaskImpl',4346,'net.sourceforge.ganttproject.task.TaskImpl.shift(float)',1,'public Task shift(float unitCount) {\r\n    Task clone = unpluggedClone();\r\n    if (unitCount > 0) {\r\n        TaskLength length = myManager.createLength(myLength.getTimeUnit(), unitCount);\r\n        // clone.setDuration(length);\r\n        Date shiftedDate = TaskImpl.RESTLESS_CALENDAR.shiftDate(myStart.getTime(), length);\r\n        clone.setStart(new GanttCalendar(shiftedDate));\r\n        clone.setDuration(myLength);\r\n    } else {\r\n        Date newStart = shiftDate(clone.getStart().getTime(), getManager().createLength(clone.getDuration().getTimeUnit(), ((long) (unitCount))));\r\n        clone.setStart(new GanttCalendar(newStart));\r\n        clone.setDuration(myLength);\r\n    }\r\n    return clone;\r\n}'),(3281,'TaskLength length','net.sourceforge.ganttproject.task.TaskLength',562,560,'net.sourceforge.ganttproject.task.TaskImpl',4330,'net.sourceforge.ganttproject.task.TaskImpl.setDuration(net.sourceforge.ganttproject.task.TaskLength)',0,'public void setDuration(TaskLength length) {\r\n    assert (length.getLength()) > 0;\r\n    // GanttCalendar oldFinish = myEnd == null ? null : myEnd.Clone();\r\n    myLength = length;\r\n    myEnd = null;\r\n    // Date newEndDate = shiftDate(myStart.getTime(),\r\n    // length.getTimeUnit(), length.getLength());\r\n    // myEnd = new GanttCalendar(newEndDate);\r\n    // myEnd = myStart.newAdd((int) length.getLength());\r\n    recalculateActivities();\r\n    // if (areEventsEnabled()) {\r\n    // myManager.fireTaskScheduleChanged(this, myStart.Clone(),\r\n    // oldFinish);\r\n    // }\r\n}'),(3282,'Date input','java.util.Date',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4348,'net.sourceforge.ganttproject.task.TaskImpl.shiftDate(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'private Date shiftDate(Date input, TaskLength duration) {\r\n    return myManager.getConfig().getCalendar().shiftDate(input, duration);\r\n}'),(3283,'TaskLength duration','net.sourceforge.ganttproject.task.TaskLength',562,560,'net.sourceforge.ganttproject.task.TaskImpl',4348,'net.sourceforge.ganttproject.task.TaskImpl.shiftDate(java.util.Date,net.sourceforge.ganttproject.task.TaskLength)',0,'private Date shiftDate(Date input, TaskLength duration) {\r\n    return myManager.getConfig().getCalendar().shiftDate(input, duration);\r\n}'),(3284,'TaskLength duration','net.sourceforge.ganttproject.task.TaskLength',562,560,'net.sourceforge.ganttproject.task.TaskImpl',4350,'net.sourceforge.ganttproject.task.TaskImpl.translateDuration(net.sourceforge.ganttproject.task.TaskLength)',0,'public TaskLength translateDuration(TaskLength duration) {\r\n    return myManager.createLength(myLength.getTimeUnit(), translateDurationValue(duration));\r\n}'),(3285,'net.sourceforge.ganttproject.task.TaskLength','net.sourceforge.ganttproject.task.TaskLength',562,560,'net.sourceforge.ganttproject.task.TaskImpl',4350,'net.sourceforge.ganttproject.task.TaskImpl.translateDuration(net.sourceforge.ganttproject.task.TaskLength)',1,'public TaskLength translateDuration(TaskLength duration) {\r\n    return myManager.createLength(myLength.getTimeUnit(), translateDurationValue(duration));\r\n}'),(3286,'TaskLength duration','net.sourceforge.ganttproject.task.TaskLength',562,560,'net.sourceforge.ganttproject.task.TaskImpl',4351,'net.sourceforge.ganttproject.task.TaskImpl.translateDurationValue(net.sourceforge.ganttproject.task.TaskLength)',0,'private float translateDurationValue(TaskLength duration) {\r\n    if (myLength.getTimeUnit().equals(duration.getTimeUnit())) {\r\n        return duration.getValue();\r\n    }\r\n    if (myLength.getTimeUnit().isConstructedFrom(duration.getTimeUnit())) {\r\n        return (duration.getValue()) / (myLength.getTimeUnit().getAtomCount(duration.getTimeUnit()));\r\n    }\r\n    if (duration.getTimeUnit().isConstructedFrom(myLength.getTimeUnit())) {\r\n        return (duration.getValue()) * (duration.getTimeUnit().getAtomCount(myLength.getTimeUnit()));\r\n    }\r\n    throw new RuntimeException((((\"Cant transalte duration=\" + duration) + \" into units=\") + (myLength.getTimeUnit())));\r\n}'),(3287,'List output','java.util.List',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4326,'net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities(java.util.List,java.util.Date,java.util.Date)',0,'private void recalculateActivities(List output, Date startDate, Date endDate) {\r\n    GPCalendar calendar = myManager.getConfig().getCalendar();\r\n    List activities = calendar.getActivities(startDate, endDate);\r\n    output.clear();\r\n    for (int i = 0; i < (activities.size()); i++) {\r\n        GPCalendarActivity nextCalendarActivity = ((GPCalendarActivity) (activities.get(i)));\r\n        TaskActivityImpl nextTaskActivity;\r\n        if (nextCalendarActivity.isWorkingTime()) {\r\n            nextTaskActivity = new TaskActivityImpl(this, nextCalendarActivity.getStart(), nextCalendarActivity.getEnd());\r\n        } else\r\n            if ((i > 0) && ((i + 1) < (activities.size()))) {\r\n                nextTaskActivity = new TaskActivityImpl(this, nextCalendarActivity.getStart(), nextCalendarActivity.getEnd(), 0);\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n        output.add(nextTaskActivity);\r\n    }\r\n}'),(3288,'Date startDate','java.util.Date',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4326,'net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities(java.util.List,java.util.Date,java.util.Date)',0,'private void recalculateActivities(List output, Date startDate, Date endDate) {\r\n    GPCalendar calendar = myManager.getConfig().getCalendar();\r\n    List activities = calendar.getActivities(startDate, endDate);\r\n    output.clear();\r\n    for (int i = 0; i < (activities.size()); i++) {\r\n        GPCalendarActivity nextCalendarActivity = ((GPCalendarActivity) (activities.get(i)));\r\n        TaskActivityImpl nextTaskActivity;\r\n        if (nextCalendarActivity.isWorkingTime()) {\r\n            nextTaskActivity = new TaskActivityImpl(this, nextCalendarActivity.getStart(), nextCalendarActivity.getEnd());\r\n        } else\r\n            if ((i > 0) && ((i + 1) < (activities.size()))) {\r\n                nextTaskActivity = new TaskActivityImpl(this, nextCalendarActivity.getStart(), nextCalendarActivity.getEnd(), 0);\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n        output.add(nextTaskActivity);\r\n    }\r\n}'),(3289,'Date endDate','java.util.Date',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4326,'net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities(java.util.List,java.util.Date,java.util.Date)',0,'private void recalculateActivities(List output, Date startDate, Date endDate) {\r\n    GPCalendar calendar = myManager.getConfig().getCalendar();\r\n    List activities = calendar.getActivities(startDate, endDate);\r\n    output.clear();\r\n    for (int i = 0; i < (activities.size()); i++) {\r\n        GPCalendarActivity nextCalendarActivity = ((GPCalendarActivity) (activities.get(i)));\r\n        TaskActivityImpl nextTaskActivity;\r\n        if (nextCalendarActivity.isWorkingTime()) {\r\n            nextTaskActivity = new TaskActivityImpl(this, nextCalendarActivity.getStart(), nextCalendarActivity.getEnd());\r\n        } else\r\n            if ((i > 0) && ((i + 1) < (activities.size()))) {\r\n                nextTaskActivity = new TaskActivityImpl(this, nextCalendarActivity.getStart(), nextCalendarActivity.getEnd(), 0);\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n        output.add(nextTaskActivity);\r\n    }\r\n}'),(3290,'int percentage','int',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4328,'net.sourceforge.ganttproject.task.TaskImpl.setCompletionPercentage(int)',0,'public void setCompletionPercentage(int percentage) {\r\n    int oldPercentage = myCompletionPercentage;\r\n    myCompletionPercentage = percentage;\r\n    if (oldPercentage != (myCompletionPercentage)) {\r\n        TaskImpl.EventSender progressEventSender = new TaskImpl.ProgressEventSender();\r\n        progressEventSender.enable();\r\n        progressEventSender.fireEvent();\r\n    }\r\n}'),(3291,'ShapePaint shape','net.sourceforge.ganttproject.shape.ShapePaint',529,560,'net.sourceforge.ganttproject.task.TaskImpl',4338,'net.sourceforge.ganttproject.task.TaskImpl.setShape(net.sourceforge.ganttproject.shape.ShapePaint)',0,'// public void setStartFixed(boolean isFixed) {\r\n// isStartFixed = isFixed;\r\n// }\r\n// public void setFinishFixed(boolean isFixed) {\r\n// isFinishFixed = isFixed;\r\n// }\r\npublic void setShape(ShapePaint shape) {\r\n    myShape = shape;\r\n}'),(3292,'Color color','java.awt.Color',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4327,'net.sourceforge.ganttproject.task.TaskImpl.setColor(java.awt.Color)',0,'public void setColor(Color color) {\r\n    myColor = color;\r\n}'),(3293,'String notes','java.lang.String',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4335,'net.sourceforge.ganttproject.task.TaskImpl.setNotes(java.lang.String)',0,'public void setNotes(String notes) {\r\n    myNotes = notes;\r\n}'),(3294,'boolean expand','boolean',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4332,'net.sourceforge.ganttproject.task.TaskImpl.setExpand(boolean)',0,'public void setExpand(boolean expand) {\r\n    bExpand = expand;\r\n}'),(3295,'String notes','java.lang.String',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4281,'net.sourceforge.ganttproject.task.TaskImpl.addNotes(java.lang.String)',0,'public void addNotes(String notes) {\r\n    myNotes += notes;\r\n}'),(3296,'boolean enabled','boolean',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4290,'net.sourceforge.ganttproject.task.TaskImpl.enableEvents(boolean)',0,'protected void enableEvents(boolean enabled) {\r\n    myEventsEnabled = enabled;\r\n}'),(3297,'boolean critical','boolean',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4329,'net.sourceforge.ganttproject.task.TaskImpl.setCritical(boolean)',0,'/**\r\n *\r\n *\r\n * @unknown \r\n */\r\npublic void setCritical(boolean critical) {\r\n    this.critical = critical;\r\n}'),(3298,'TaskInfo taskInfo','net.sourceforge.ganttproject.task.TaskInfo',561,560,'net.sourceforge.ganttproject.task.TaskImpl',4341,'net.sourceforge.ganttproject.task.TaskImpl.setTaskInfo(net.sourceforge.ganttproject.task.TaskInfo)',0,'public void setTaskInfo(TaskInfo taskInfo) {\r\n    myTaskInfo = taskInfo;\r\n}'),(3299,'boolean projectTask','boolean',0,560,'net.sourceforge.ganttproject.task.TaskImpl',4337,'net.sourceforge.ganttproject.task.TaskImpl.setProjectTask(boolean)',0,'public void setProjectTask(boolean projectTask) {\r\n    isProjectTask = projectTask;\r\n}'),(3300,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,562,'net.sourceforge.ganttproject.task.TaskLength',4398,'net.sourceforge.ganttproject.task.TaskLength.getLength(net.sourceforge.ganttproject.time.TimeUnit)',0,'float getLength(TimeUnit unit);'),(3301,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,563,'net.sourceforge.ganttproject.task.TaskLengthImpl',4401,'net.sourceforge.ganttproject.task.TaskLengthImpl.-init-(net.sourceforge.ganttproject.time.TimeUnit,long)',0,'public TaskLengthImpl(TimeUnit unit, long count) {\r\n    myUnit = unit;\r\n    myCount = count;\r\n}'),(3302,'long count','long',0,563,'net.sourceforge.ganttproject.task.TaskLengthImpl',4401,'net.sourceforge.ganttproject.task.TaskLengthImpl.-init-(net.sourceforge.ganttproject.time.TimeUnit,long)',0,'public TaskLengthImpl(TimeUnit unit, long count) {\r\n    myUnit = unit;\r\n    myCount = count;\r\n}'),(3303,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,563,'net.sourceforge.ganttproject.task.TaskLengthImpl',4402,'net.sourceforge.ganttproject.task.TaskLengthImpl.-init-(net.sourceforge.ganttproject.time.TimeUnit,float)',0,'/**\r\n *\r\n *\r\n * @param unit\r\n * 		\r\n * @param length\r\n * 		\r\n */\r\npublic TaskLengthImpl(TimeUnit unit, float length) {\r\n    myUnit = unit;\r\n    myCount = length;\r\n}'),(3304,'float length','float',0,563,'net.sourceforge.ganttproject.task.TaskLengthImpl',4402,'net.sourceforge.ganttproject.task.TaskLengthImpl.-init-(net.sourceforge.ganttproject.time.TimeUnit,float)',0,'/**\r\n *\r\n *\r\n * @param unit\r\n * 		\r\n * @param length\r\n * 		\r\n */\r\npublic TaskLengthImpl(TimeUnit unit, float length) {\r\n    myUnit = unit;\r\n    myCount = length;\r\n}'),(3305,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,563,'net.sourceforge.ganttproject.task.TaskLengthImpl',4407,'net.sourceforge.ganttproject.task.TaskLengthImpl.setLength(net.sourceforge.ganttproject.time.TimeUnit,long)',0,'public void setLength(TimeUnit unit, long length) {\r\n    if (!(unit.equals(myUnit))) {\r\n        throw new IllegalArgumentException((((\"Cant convert unit=\" + unit) + \" to my unit=\") + (myUnit)));\r\n    }\r\n    myCount = length;\r\n}'),(3306,'long length','long',0,563,'net.sourceforge.ganttproject.task.TaskLengthImpl',4407,'net.sourceforge.ganttproject.task.TaskLengthImpl.setLength(net.sourceforge.ganttproject.time.TimeUnit,long)',0,'public void setLength(TimeUnit unit, long length) {\r\n    if (!(unit.equals(myUnit))) {\r\n        throw new IllegalArgumentException((((\"Cant convert unit=\" + unit) + \" to my unit=\") + (myUnit)));\r\n    }\r\n    myCount = length;\r\n}'),(3307,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,563,'net.sourceforge.ganttproject.task.TaskLengthImpl',4404,'net.sourceforge.ganttproject.task.TaskLengthImpl.getLength(net.sourceforge.ganttproject.time.TimeUnit)',0,'public float getLength(TimeUnit unit) {\r\n    if (myUnit.isConstructedFrom(unit)) {\r\n        return ((float) (myCount)) * (myUnit.getAtomCount(unit));\r\n    } else\r\n        if (unit.isConstructedFrom(myUnit)) {\r\n            return ((float) (myCount)) / (unit.getAtomCount(myUnit));\r\n        } else\r\n            if (!(unit.equals(myUnit))) {\r\n                throw new IllegalArgumentException((((\"Cant convert unit=\" + unit) + \" to my unit=\") + (myUnit)));\r\n            }\r\n\r\n\r\n    return myCount;\r\n}'),(3308,'int taskId','int',0,565,'net.sourceforge.ganttproject.task.TaskManager',4428,'net.sourceforge.ganttproject.task.TaskManager.getTask(int)',0,'public GanttTask getTask(int taskId);'),(3309,'net.sourceforge.ganttproject.GanttTask','net.sourceforge.ganttproject.GanttTask',63,565,'net.sourceforge.ganttproject.task.TaskManager',4428,'net.sourceforge.ganttproject.task.TaskManager.getTask(int)',1,'public GanttTask getTask(int taskId);'),(3310,'Task task','net.sourceforge.ganttproject.task.Task',548,565,'net.sourceforge.ganttproject.task.TaskManager',4435,'net.sourceforge.ganttproject.task.TaskManager.registerTask(net.sourceforge.ganttproject.task.Task)',0,'public void registerTask(Task task);'),(3311,'int taskId','int',0,565,'net.sourceforge.ganttproject.task.TaskManager',4417,'net.sourceforge.ganttproject.task.TaskManager.createTask(int)',0,'public GanttTask createTask(int taskId);'),(3312,'net.sourceforge.ganttproject.GanttTask','net.sourceforge.ganttproject.GanttTask',63,565,'net.sourceforge.ganttproject.task.TaskManager',4417,'net.sourceforge.ganttproject.task.TaskManager.createTask(int)',1,'public GanttTask createTask(int taskId);'),(3313,'long length','long',0,565,'net.sourceforge.ganttproject.task.TaskManager',4413,'net.sourceforge.ganttproject.task.TaskManager.createLength(long)',0,'public TaskLength createLength(long length);'),(3314,'net.sourceforge.ganttproject.task.TaskLength','net.sourceforge.ganttproject.task.TaskLength',562,565,'net.sourceforge.ganttproject.task.TaskManager',4413,'net.sourceforge.ganttproject.task.TaskManager.createLength(long)',1,'public TaskLength createLength(long length);'),(3315,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,565,'net.sourceforge.ganttproject.task.TaskManager',4414,'net.sourceforge.ganttproject.task.TaskManager.createLength(net.sourceforge.ganttproject.time.TimeUnit,float)',0,'TaskLength createLength(TimeUnit unit, float length);'),(3316,'net.sourceforge.ganttproject.task.TaskLength','net.sourceforge.ganttproject.task.TaskLength',562,565,'net.sourceforge.ganttproject.task.TaskManager',4414,'net.sourceforge.ganttproject.task.TaskManager.createLength(net.sourceforge.ganttproject.time.TimeUnit,float)',1,'TaskLength createLength(TimeUnit unit, float length);'),(3317,'float length','float',0,565,'net.sourceforge.ganttproject.task.TaskManager',4414,'net.sourceforge.ganttproject.task.TaskManager.createLength(net.sourceforge.ganttproject.time.TimeUnit,float)',0,'TaskLength createLength(TimeUnit unit, float length);'),(3318,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,565,'net.sourceforge.ganttproject.task.TaskManager',4415,'net.sourceforge.ganttproject.task.TaskManager.createLength(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date)',0,'public TaskLength createLength(TimeUnit timeUnit, Date startDate, Date endDate);'),(3319,'net.sourceforge.ganttproject.task.TaskLength','net.sourceforge.ganttproject.task.TaskLength',562,565,'net.sourceforge.ganttproject.task.TaskManager',4415,'net.sourceforge.ganttproject.task.TaskManager.createLength(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date)',1,'public TaskLength createLength(TimeUnit timeUnit, Date startDate, Date endDate);'),(3320,'Date startDate','java.util.Date',0,565,'net.sourceforge.ganttproject.task.TaskManager',4415,'net.sourceforge.ganttproject.task.TaskManager.createLength(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date)',0,'public TaskLength createLength(TimeUnit timeUnit, Date startDate, Date endDate);'),(3321,'Date endDate','java.util.Date',0,565,'net.sourceforge.ganttproject.task.TaskManager',4415,'net.sourceforge.ganttproject.task.TaskManager.createLength(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date)',0,'public TaskLength createLength(TimeUnit timeUnit, Date startDate, Date endDate);'),(3322,'int constraintID','int',0,565,'net.sourceforge.ganttproject.task.TaskManager',4412,'net.sourceforge.ganttproject.task.TaskManager.createConstraint(int)',0,'TaskDependencyConstraint createConstraint(int constraintID);'),(3323,'net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint','net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint',606,565,'net.sourceforge.ganttproject.task.TaskManager',4412,'net.sourceforge.ganttproject.task.TaskManager.createConstraint(int)',1,'TaskDependencyConstraint createConstraint(int constraintID);'),(3324,'TaskListener listener','net.sourceforge.ganttproject.task.event.TaskListener',621,565,'net.sourceforge.ganttproject.task.TaskManager',4410,'net.sourceforge.ganttproject.task.TaskManager.addTaskListener(net.sourceforge.ganttproject.task.event.TaskListener)',0,'void addTaskListener(TaskListener listener);'),(3325,'TaskContainmentHierarchyFacade.Factory containmentFacadeFactory','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory',551,564,'net.sourceforge.ganttproject.task.TaskManager$Access',4437,'net.sourceforge.ganttproject.task.TaskManager$Access.newInstance(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.TaskManagerConfig)',0,'public static TaskManager newInstance(TaskContainmentHierarchyFacade.Factory containmentFacadeFactory, TaskManagerConfig config) {\r\n    return new TaskManagerImpl(containmentFacadeFactory, config, null);\r\n}'),(3326,'net.sourceforge.ganttproject.task.TaskManager','net.sourceforge.ganttproject.task.TaskManager',565,564,'net.sourceforge.ganttproject.task.TaskManager$Access',4437,'net.sourceforge.ganttproject.task.TaskManager$Access.newInstance(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.TaskManagerConfig)',1,'public static TaskManager newInstance(TaskContainmentHierarchyFacade.Factory containmentFacadeFactory, TaskManagerConfig config) {\r\n    return new TaskManagerImpl(containmentFacadeFactory, config, null);\r\n}'),(3327,'TaskManagerConfig config','net.sourceforge.ganttproject.task.TaskManagerConfig',566,564,'net.sourceforge.ganttproject.task.TaskManager$Access',4437,'net.sourceforge.ganttproject.task.TaskManager$Access.newInstance(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.TaskManagerConfig)',0,'public static TaskManager newInstance(TaskContainmentHierarchyFacade.Factory containmentFacadeFactory, TaskManagerConfig config) {\r\n    return new TaskManagerImpl(containmentFacadeFactory, config, null);\r\n}'),(3328,'TaskContainmentHierarchyFacade.Factory factory','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory',551,564,'net.sourceforge.ganttproject.task.TaskManager$Access',4438,'net.sourceforge.ganttproject.task.TaskManager$Access.newInstance(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.TaskManagerConfig,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'public static TaskManager newInstance(TaskContainmentHierarchyFacade.Factory factory, TaskManagerConfig taskConfig, CustomColumnsStorage customColumnsStorage) {\r\n    return new TaskManagerImpl(factory, taskConfig, customColumnsStorage);\r\n}'),(3329,'net.sourceforge.ganttproject.task.TaskManager','net.sourceforge.ganttproject.task.TaskManager',565,564,'net.sourceforge.ganttproject.task.TaskManager$Access',4438,'net.sourceforge.ganttproject.task.TaskManager$Access.newInstance(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.TaskManagerConfig,net.sourceforge.ganttproject.task.CustomColumnsStorage)',1,'public static TaskManager newInstance(TaskContainmentHierarchyFacade.Factory factory, TaskManagerConfig taskConfig, CustomColumnsStorage customColumnsStorage) {\r\n    return new TaskManagerImpl(factory, taskConfig, customColumnsStorage);\r\n}'),(3330,'TaskManagerConfig taskConfig','net.sourceforge.ganttproject.task.TaskManagerConfig',566,564,'net.sourceforge.ganttproject.task.TaskManager$Access',4438,'net.sourceforge.ganttproject.task.TaskManager$Access.newInstance(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.TaskManagerConfig,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'public static TaskManager newInstance(TaskContainmentHierarchyFacade.Factory factory, TaskManagerConfig taskConfig, CustomColumnsStorage customColumnsStorage) {\r\n    return new TaskManagerImpl(factory, taskConfig, customColumnsStorage);\r\n}'),(3331,'CustomColumnsStorage customColumnsStorage','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,564,'net.sourceforge.ganttproject.task.TaskManager$Access',4438,'net.sourceforge.ganttproject.task.TaskManager$Access.newInstance(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.TaskManagerConfig,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'public static TaskManager newInstance(TaskContainmentHierarchyFacade.Factory factory, TaskManagerConfig taskConfig, CustomColumnsStorage customColumnsStorage) {\r\n    return new TaskManagerImpl(factory, taskConfig, customColumnsStorage);\r\n}'),(3332,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,565,'net.sourceforge.ganttproject.task.TaskManager',4433,'net.sourceforge.ganttproject.task.TaskManager.importData(net.sourceforge.ganttproject.task.TaskManager)',0,'public Map importData(TaskManager taskManager);'),(3333,'TaskManager importedTaskManager','net.sourceforge.ganttproject.task.TaskManager',565,565,'net.sourceforge.ganttproject.task.TaskManager',4432,'net.sourceforge.ganttproject.task.TaskManager.importAssignments(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.ResourceManager,java.util.Map,java.util.Map)',0,'public void importAssignments(TaskManager importedTaskManager, ResourceManager hrManager, Map original2importedTask, Map original2importedResource);'),(3334,'ResourceManager hrManager','net.sourceforge.ganttproject.resource.ResourceManager',509,565,'net.sourceforge.ganttproject.task.TaskManager',4432,'net.sourceforge.ganttproject.task.TaskManager.importAssignments(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.ResourceManager,java.util.Map,java.util.Map)',0,'public void importAssignments(TaskManager importedTaskManager, ResourceManager hrManager, Map original2importedTask, Map original2importedResource);'),(3335,'Map original2importedTask','java.util.Map',0,565,'net.sourceforge.ganttproject.task.TaskManager',4432,'net.sourceforge.ganttproject.task.TaskManager.importAssignments(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.ResourceManager,java.util.Map,java.util.Map)',0,'public void importAssignments(TaskManager importedTaskManager, ResourceManager hrManager, Map original2importedTask, Map original2importedResource);'),(3336,'Map original2importedResource','java.util.Map',0,565,'net.sourceforge.ganttproject.task.TaskManager',4432,'net.sourceforge.ganttproject.task.TaskManager.importAssignments(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.ResourceManager,java.util.Map,java.util.Map)',0,'public void importAssignments(TaskManager importedTaskManager, ResourceManager hrManager, Map original2importedTask, Map original2importedResource);'),(3337,'TaskNode root','net.sourceforge.ganttproject.task.TaskNode',572,565,'net.sourceforge.ganttproject.task.TaskManager',4434,'net.sourceforge.ganttproject.task.TaskManager.processCriticalPath(net.sourceforge.ganttproject.task.TaskNode)',0,'/**\r\n * Processes the critical path findind on <code>root</code> tasks.\r\n *\r\n * @param root\r\n * 		The root of the tasks to consider in the critical path\r\n * 		finding.\r\n */\r\npublic void processCriticalPath(TaskNode root);'),(3338,'Task tasktoRemove','net.sourceforge.ganttproject.task.Task',548,565,'net.sourceforge.ganttproject.task.TaskManager',4418,'net.sourceforge.ganttproject.task.TaskManager.deleteTask(net.sourceforge.ganttproject.task.Task)',0,'// /**\r\n// * Resets the critical path, i.e. reset all critical tasks to normal\r\n// tasks.\r\n// * @param root The root of the tasks to consider.\r\n// */\r\n// public void resetCriticalPath(TaskNode root);\r\npublic void deleteTask(Task tasktoRemove);'),(3339,'TaskManagerImpl taskManager','net.sourceforge.ganttproject.task.TaskManagerImpl',570,569,'net.sourceforge.ganttproject.task.TaskManagerImpl$TaskMap',4506,'net.sourceforge.ganttproject.task.TaskManagerImpl$TaskMap.-init-(net.sourceforge.ganttproject.task.TaskManagerImpl)',0,'TaskMap(TaskManagerImpl taskManager) {\r\n    myComparator = new TaskDocumentOrderComparator(taskManager);\r\n    myManager = taskManager;\r\n}'),(3340,'TaskContainmentHierarchyFacade.Factory containmentFacadeFactory','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory',551,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4445,'net.sourceforge.ganttproject.task.TaskManagerImpl.-init-(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.TaskManagerConfig,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'TaskManagerImpl(TaskContainmentHierarchyFacade.Factory containmentFacadeFactory, TaskManagerConfig config, CustomColumnsStorage columnStorage) {\r\n    myCustomColumnStorage = (columnStorage == null) ? new CustomColumnsStorage() : columnStorage;\r\n    myConfig = config;\r\n    myHierarchyManager = new TaskHierarchyManagerImpl();\r\n    EventDispatcher dispatcher = new EventDispatcher() {\r\n        public void fireDependencyAdded(TaskDependency dep) {\r\n            TaskManagerImpl.this.fireDependencyAdded(dep);\r\n        }\r\n\r\n        public void fireDependencyRemoved(TaskDependency dep) {\r\n            TaskManagerImpl.this.fireDependencyRemoved(dep);\r\n        }\r\n    };\r\n    myDependencyCollection = new TaskDependencyCollectionImpl(containmentFacadeFactory, dispatcher) {\r\n        private TaskContainmentHierarchyFacade myTaskHierarchy;\r\n\r\n        protected TaskContainmentHierarchyFacade getTaskHierarchy() {\r\n            if ((myTaskHierarchy) == null) {\r\n                myTaskHierarchy = TaskManagerImpl.this.getTaskHierarchy();\r\n            }\r\n            return myTaskHierarchy;\r\n        }\r\n    };\r\n    myFacadeFactory = (containmentFacadeFactory == null) ? new TaskManagerImpl.FacadeFactoryImpl() : containmentFacadeFactory;\r\n    // clear();\r\n    {\r\n        Calendar c = CalendarFactory.newCalendar();\r\n        Date today = c.getTime();\r\n        myRoot = new GanttTask(null, new GanttCalendar(today), 1, this, (-1));\r\n        myRoot.setStart(new GanttCalendar(today));\r\n        myRoot.setDuration(createLength(getConfig().getTimeUnitStack().getDefaultTimeUnit(), 1));\r\n        myRoot.setExpand(true);\r\n    }\r\n    FindPossibleDependeesAlgorithm alg1 = new FindPossibleDependeesAlgorithmImpl() {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    AdjustTaskBoundsAlgorithm alg3 = new AdjustTaskBoundsAlgorithm() {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    RecalculateTaskScheduleAlgorithm alg2 = new RecalculateTaskScheduleAlgorithm(alg3) {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    RecalculateTaskCompletionPercentageAlgorithm alg4 = new RecalculateTaskCompletionPercentageAlgorithm() {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    ProjectBoundsAlgorithm alg5 = new ProjectBoundsAlgorithm();\r\n    myAlgorithmCollection = new AlgorithmCollection(alg1, alg2, alg3, alg4, alg5);\r\n}'),(3341,'TaskManagerConfig config','net.sourceforge.ganttproject.task.TaskManagerConfig',566,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4445,'net.sourceforge.ganttproject.task.TaskManagerImpl.-init-(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.TaskManagerConfig,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'TaskManagerImpl(TaskContainmentHierarchyFacade.Factory containmentFacadeFactory, TaskManagerConfig config, CustomColumnsStorage columnStorage) {\r\n    myCustomColumnStorage = (columnStorage == null) ? new CustomColumnsStorage() : columnStorage;\r\n    myConfig = config;\r\n    myHierarchyManager = new TaskHierarchyManagerImpl();\r\n    EventDispatcher dispatcher = new EventDispatcher() {\r\n        public void fireDependencyAdded(TaskDependency dep) {\r\n            TaskManagerImpl.this.fireDependencyAdded(dep);\r\n        }\r\n\r\n        public void fireDependencyRemoved(TaskDependency dep) {\r\n            TaskManagerImpl.this.fireDependencyRemoved(dep);\r\n        }\r\n    };\r\n    myDependencyCollection = new TaskDependencyCollectionImpl(containmentFacadeFactory, dispatcher) {\r\n        private TaskContainmentHierarchyFacade myTaskHierarchy;\r\n\r\n        protected TaskContainmentHierarchyFacade getTaskHierarchy() {\r\n            if ((myTaskHierarchy) == null) {\r\n                myTaskHierarchy = TaskManagerImpl.this.getTaskHierarchy();\r\n            }\r\n            return myTaskHierarchy;\r\n        }\r\n    };\r\n    myFacadeFactory = (containmentFacadeFactory == null) ? new TaskManagerImpl.FacadeFactoryImpl() : containmentFacadeFactory;\r\n    // clear();\r\n    {\r\n        Calendar c = CalendarFactory.newCalendar();\r\n        Date today = c.getTime();\r\n        myRoot = new GanttTask(null, new GanttCalendar(today), 1, this, (-1));\r\n        myRoot.setStart(new GanttCalendar(today));\r\n        myRoot.setDuration(createLength(getConfig().getTimeUnitStack().getDefaultTimeUnit(), 1));\r\n        myRoot.setExpand(true);\r\n    }\r\n    FindPossibleDependeesAlgorithm alg1 = new FindPossibleDependeesAlgorithmImpl() {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    AdjustTaskBoundsAlgorithm alg3 = new AdjustTaskBoundsAlgorithm() {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    RecalculateTaskScheduleAlgorithm alg2 = new RecalculateTaskScheduleAlgorithm(alg3) {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    RecalculateTaskCompletionPercentageAlgorithm alg4 = new RecalculateTaskCompletionPercentageAlgorithm() {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    ProjectBoundsAlgorithm alg5 = new ProjectBoundsAlgorithm();\r\n    myAlgorithmCollection = new AlgorithmCollection(alg1, alg2, alg3, alg4, alg5);\r\n}'),(3342,'CustomColumnsStorage columnStorage','net.sourceforge.ganttproject.task.CustomColumnsStorage',535,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4445,'net.sourceforge.ganttproject.task.TaskManagerImpl.-init-(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.TaskManagerConfig,net.sourceforge.ganttproject.task.CustomColumnsStorage)',0,'TaskManagerImpl(TaskContainmentHierarchyFacade.Factory containmentFacadeFactory, TaskManagerConfig config, CustomColumnsStorage columnStorage) {\r\n    myCustomColumnStorage = (columnStorage == null) ? new CustomColumnsStorage() : columnStorage;\r\n    myConfig = config;\r\n    myHierarchyManager = new TaskHierarchyManagerImpl();\r\n    EventDispatcher dispatcher = new EventDispatcher() {\r\n        public void fireDependencyAdded(TaskDependency dep) {\r\n            TaskManagerImpl.this.fireDependencyAdded(dep);\r\n        }\r\n\r\n        public void fireDependencyRemoved(TaskDependency dep) {\r\n            TaskManagerImpl.this.fireDependencyRemoved(dep);\r\n        }\r\n    };\r\n    myDependencyCollection = new TaskDependencyCollectionImpl(containmentFacadeFactory, dispatcher) {\r\n        private TaskContainmentHierarchyFacade myTaskHierarchy;\r\n\r\n        protected TaskContainmentHierarchyFacade getTaskHierarchy() {\r\n            if ((myTaskHierarchy) == null) {\r\n                myTaskHierarchy = TaskManagerImpl.this.getTaskHierarchy();\r\n            }\r\n            return myTaskHierarchy;\r\n        }\r\n    };\r\n    myFacadeFactory = (containmentFacadeFactory == null) ? new TaskManagerImpl.FacadeFactoryImpl() : containmentFacadeFactory;\r\n    // clear();\r\n    {\r\n        Calendar c = CalendarFactory.newCalendar();\r\n        Date today = c.getTime();\r\n        myRoot = new GanttTask(null, new GanttCalendar(today), 1, this, (-1));\r\n        myRoot.setStart(new GanttCalendar(today));\r\n        myRoot.setDuration(createLength(getConfig().getTimeUnitStack().getDefaultTimeUnit(), 1));\r\n        myRoot.setExpand(true);\r\n    }\r\n    FindPossibleDependeesAlgorithm alg1 = new FindPossibleDependeesAlgorithmImpl() {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    AdjustTaskBoundsAlgorithm alg3 = new AdjustTaskBoundsAlgorithm() {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    RecalculateTaskScheduleAlgorithm alg2 = new RecalculateTaskScheduleAlgorithm(alg3) {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    RecalculateTaskCompletionPercentageAlgorithm alg4 = new RecalculateTaskCompletionPercentageAlgorithm() {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return TaskManagerImpl.this.getTaskHierarchy();\r\n        }\r\n    };\r\n    ProjectBoundsAlgorithm alg5 = new ProjectBoundsAlgorithm();\r\n    myAlgorithmCollection = new AlgorithmCollection(alg1, alg2, alg3, alg4, alg5);\r\n}'),(3343,'Task task','net.sourceforge.ganttproject.task.Task',548,569,'net.sourceforge.ganttproject.task.TaskManagerImpl$TaskMap',4507,'net.sourceforge.ganttproject.task.TaskManagerImpl$TaskMap.addTask(net.sourceforge.ganttproject.task.Task)',0,'void addTask(Task task) {\r\n    myId2task.put(new Integer(task.getTaskID()), task);\r\n    isModified = true;\r\n}'),(3344,'int id','int',0,569,'net.sourceforge.ganttproject.task.TaskManagerImpl$TaskMap',4509,'net.sourceforge.ganttproject.task.TaskManagerImpl$TaskMap.getTask(int)',0,'Task getTask(int id) {\r\n    return ((Task) (myId2task.get(new Integer(id))));\r\n}'),(3345,'net.sourceforge.ganttproject.task.Task','net.sourceforge.ganttproject.task.Task',548,569,'net.sourceforge.ganttproject.task.TaskManagerImpl$TaskMap',4509,'net.sourceforge.ganttproject.task.TaskManagerImpl$TaskMap.getTask(int)',1,'Task getTask(int id) {\r\n    return ((Task) (myId2task.get(new Integer(id))));\r\n}'),(3346,'Task task','net.sourceforge.ganttproject.task.Task',548,569,'net.sourceforge.ganttproject.task.TaskManagerImpl$TaskMap',4512,'net.sourceforge.ganttproject.task.TaskManagerImpl$TaskMap.removeTask(net.sourceforge.ganttproject.task.Task)',0,'public void removeTask(Task task) {\r\n    myId2task.remove(new Integer(task.getTaskID()));\r\n    Task[] nestedTasks = myManager.getTaskHierarchy().getNestedTasks(task);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        removeTask(nestedTasks[i]);\r\n    }\r\n    isModified = true;\r\n}'),(3347,'int taskId','int',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4479,'net.sourceforge.ganttproject.task.TaskManagerImpl.getTask(int)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.task.TaskManager#getTask(int)\n */\r\npublic GanttTask getTask(int taskId) {\r\n    return ((GanttTask) (myTaskMap.getTask(taskId)));\r\n}'),(3348,'net.sourceforge.ganttproject.GanttTask','net.sourceforge.ganttproject.GanttTask',63,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4479,'net.sourceforge.ganttproject.task.TaskManagerImpl.getTask(int)',1,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.task.TaskManager#getTask(int)\n */\r\npublic GanttTask getTask(int taskId) {\r\n    return ((GanttTask) (myTaskMap.getTask(taskId)));\r\n}'),(3349,'Task tasktoRemove','net.sourceforge.ganttproject.task.Task',548,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4457,'net.sourceforge.ganttproject.task.TaskManagerImpl.deleteTask(net.sourceforge.ganttproject.task.Task)',0,'public void deleteTask(Task tasktoRemove) {\r\n    myTaskMap.removeTask(tasktoRemove);\r\n    // TaskDependency[] dep =\r\n    // myDependencyCollection.getDependencies(tasktoRemove);\r\n    // for(int i=0;i<dep.length; i++){\r\n    // dep[i].delete();\r\n    // }\r\n    // todo REMOVE TASK FROM TASKHIERARCHY\r\n    // fireTaskRemoved(tasktoRemove,myTaskContainment.getContainer(tasktoRemove));\r\n}'),(3350,'int taskID','int',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4456,'net.sourceforge.ganttproject.task.TaskManagerImpl.createTask(int)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.task.TaskManager#createTask(int)\n */\r\npublic GanttTask createTask(int taskID) {\r\n    GanttTask result = new GanttTask(\"\", new GanttCalendar(), 1, this, taskID);\r\n    if ((result.getTaskID()) >= (getMaxID())) {\r\n        setMaxID(((result.getTaskID()) + 1));\r\n    }\r\n    // result.setTaskID(taskID);\r\n    // getTaskHierarchy().move(result, getRootTask());\r\n    // result.move(getRootTask());\r\n    fireTaskAdded(result);\r\n    return result;\r\n}'),(3351,'net.sourceforge.ganttproject.GanttTask','net.sourceforge.ganttproject.GanttTask',63,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4456,'net.sourceforge.ganttproject.task.TaskManagerImpl.createTask(int)',1,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.task.TaskManager#createTask(int)\n */\r\npublic GanttTask createTask(int taskID) {\r\n    GanttTask result = new GanttTask(\"\", new GanttCalendar(), 1, this, taskID);\r\n    if ((result.getTaskID()) >= (getMaxID())) {\r\n        setMaxID(((result.getTaskID()) + 1));\r\n    }\r\n    // result.setTaskID(taskID);\r\n    // getTaskHierarchy().move(result, getRootTask());\r\n    // result.move(getRootTask());\r\n    fireTaskAdded(result);\r\n    return result;\r\n}'),(3352,'Task task','net.sourceforge.ganttproject.task.Task',548,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4490,'net.sourceforge.ganttproject.task.TaskManagerImpl.registerTask(net.sourceforge.ganttproject.task.Task)',0,'/* (non-Javadoc)\n\n@see net.sourceforge.ganttproject.task.TaskManager#registerTask(net.sourceforge.ganttproject.GanttTask)\n */\r\npublic void registerTask(Task task) {\r\n    int taskID = task.getTaskID();\r\n    if ((myTaskMap.getTask(taskID)) == null) {\r\n        // if the taskID is\r\n        // not in the map\r\n        myTaskMap.addTask(task);\r\n        if ((getMaxID()) < taskID) {\r\n            setMaxID((taskID + 1));\r\n        }\r\n    } else {\r\n        // taskID has been in the map. the newTask will not be added\r\n        throw new RuntimeException((\"There is a task that already has the ID \" + taskID));\r\n    }\r\n}'),(3353,'TaskImpl task','net.sourceforge.ganttproject.task.TaskImpl',560,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4487,'net.sourceforge.ganttproject.task.TaskManagerImpl.isRegistered(net.sourceforge.ganttproject.task.TaskImpl)',0,'boolean isRegistered(TaskImpl task) {\r\n    return (myTaskMap.getTask(task.getTaskID())) != null;\r\n}'),(3354,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4453,'net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(net.sourceforge.ganttproject.time.TimeUnit,float)',0,'public TaskLength createLength(TimeUnit unit, float length) {\r\n    return new TaskLengthImpl(unit, length);\r\n}'),(3355,'net.sourceforge.ganttproject.task.TaskLength','net.sourceforge.ganttproject.task.TaskLength',562,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4453,'net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(net.sourceforge.ganttproject.time.TimeUnit,float)',1,'public TaskLength createLength(TimeUnit unit, float length) {\r\n    return new TaskLengthImpl(unit, length);\r\n}'),(3356,'float length','float',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4453,'net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(net.sourceforge.ganttproject.time.TimeUnit,float)',0,'public TaskLength createLength(TimeUnit unit, float length) {\r\n    return new TaskLengthImpl(unit, length);\r\n}'),(3357,'long count','long',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4452,'net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(long)',0,'public TaskLength createLength(long count) {\r\n    return new TaskLengthImpl(getConfig().getTimeUnitStack().getDefaultTimeUnit(), count);\r\n}'),(3358,'net.sourceforge.ganttproject.task.TaskLength','net.sourceforge.ganttproject.task.TaskLength',562,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4452,'net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(long)',1,'public TaskLength createLength(long count) {\r\n    return new TaskLengthImpl(getConfig().getTimeUnitStack().getDefaultTimeUnit(), count);\r\n}'),(3359,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4454,'net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date)',0,'public TaskLength createLength(TimeUnit timeUnit, Date startDate, Date endDate) {\r\n    TaskLength result;\r\n    int sign = 1;\r\n    if (endDate.before(startDate)) {\r\n        sign = -1;\r\n        Date temp = endDate;\r\n        endDate = startDate;\r\n        startDate = temp;\r\n    }\r\n    if (timeUnit instanceof DateFrameable) {\r\n        DateFrameable df = ((DateFrameable) (timeUnit));\r\n        int unitCount = 0;\r\n        for (; startDate.before(endDate); unitCount++) {\r\n            startDate = df.adjustRight(startDate);\r\n        }\r\n        result = new TaskLengthImpl(timeUnit, (unitCount * sign));\r\n    } else {\r\n        throw new IllegalArgumentException(((\"Time unit=\" + timeUnit) + \" is not date frameable\"));\r\n    }\r\n    return result;\r\n}'),(3360,'net.sourceforge.ganttproject.task.TaskLength','net.sourceforge.ganttproject.task.TaskLength',562,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4454,'net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date)',1,'public TaskLength createLength(TimeUnit timeUnit, Date startDate, Date endDate) {\r\n    TaskLength result;\r\n    int sign = 1;\r\n    if (endDate.before(startDate)) {\r\n        sign = -1;\r\n        Date temp = endDate;\r\n        endDate = startDate;\r\n        startDate = temp;\r\n    }\r\n    if (timeUnit instanceof DateFrameable) {\r\n        DateFrameable df = ((DateFrameable) (timeUnit));\r\n        int unitCount = 0;\r\n        for (; startDate.before(endDate); unitCount++) {\r\n            startDate = df.adjustRight(startDate);\r\n        }\r\n        result = new TaskLengthImpl(timeUnit, (unitCount * sign));\r\n    } else {\r\n        throw new IllegalArgumentException(((\"Time unit=\" + timeUnit) + \" is not date frameable\"));\r\n    }\r\n    return result;\r\n}'),(3361,'Date startDate','java.util.Date',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4454,'net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date)',0,'public TaskLength createLength(TimeUnit timeUnit, Date startDate, Date endDate) {\r\n    TaskLength result;\r\n    int sign = 1;\r\n    if (endDate.before(startDate)) {\r\n        sign = -1;\r\n        Date temp = endDate;\r\n        endDate = startDate;\r\n        startDate = temp;\r\n    }\r\n    if (timeUnit instanceof DateFrameable) {\r\n        DateFrameable df = ((DateFrameable) (timeUnit));\r\n        int unitCount = 0;\r\n        for (; startDate.before(endDate); unitCount++) {\r\n            startDate = df.adjustRight(startDate);\r\n        }\r\n        result = new TaskLengthImpl(timeUnit, (unitCount * sign));\r\n    } else {\r\n        throw new IllegalArgumentException(((\"Time unit=\" + timeUnit) + \" is not date frameable\"));\r\n    }\r\n    return result;\r\n}'),(3362,'Date endDate','java.util.Date',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4454,'net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date,java.util.Date)',0,'public TaskLength createLength(TimeUnit timeUnit, Date startDate, Date endDate) {\r\n    TaskLength result;\r\n    int sign = 1;\r\n    if (endDate.before(startDate)) {\r\n        sign = -1;\r\n        Date temp = endDate;\r\n        endDate = startDate;\r\n        startDate = temp;\r\n    }\r\n    if (timeUnit instanceof DateFrameable) {\r\n        DateFrameable df = ((DateFrameable) (timeUnit));\r\n        int unitCount = 0;\r\n        for (; startDate.before(endDate); unitCount++) {\r\n            startDate = df.adjustRight(startDate);\r\n        }\r\n        result = new TaskLengthImpl(timeUnit, (unitCount * sign));\r\n    } else {\r\n        throw new IllegalArgumentException(((\"Time unit=\" + timeUnit) + \" is not date frameable\"));\r\n    }\r\n    return result;\r\n}'),(3363,'final int constraintID','int',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4451,'net.sourceforge.ganttproject.task.TaskManagerImpl.createConstraint(int)',0,'public TaskDependencyConstraint createConstraint(final int constraintID) {\r\n    TaskDependencyConstraint result;\r\n    switch (constraintID) {\r\n        case GanttTaskRelationship.FS :\r\n            {\r\n                result = new FinishStartConstraintImpl();\r\n                break;\r\n            }\r\n        case GanttTaskRelationship.FF :\r\n            {\r\n                result = new FinishFinishConstraintImpl();\r\n                break;\r\n            }\r\n        case GanttTaskRelationship.SF :\r\n            {\r\n                result = new StartFinishConstraintImpl();\r\n                break;\r\n            }\r\n        case GanttTaskRelationship.SS :\r\n            {\r\n                result = new StartStartConstraintImpl();\r\n                break;\r\n            }\r\n        default :\r\n            {\r\n                throw new IllegalArgumentException((\"Unknown constraint ID=\" + constraintID));\r\n            }\r\n    }\r\n    return result;\r\n}'),(3364,'net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint','net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint',606,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4451,'net.sourceforge.ganttproject.task.TaskManagerImpl.createConstraint(int)',1,'public TaskDependencyConstraint createConstraint(final int constraintID) {\r\n    TaskDependencyConstraint result;\r\n    switch (constraintID) {\r\n        case GanttTaskRelationship.FS :\r\n            {\r\n                result = new FinishStartConstraintImpl();\r\n                break;\r\n            }\r\n        case GanttTaskRelationship.FF :\r\n            {\r\n                result = new FinishFinishConstraintImpl();\r\n                break;\r\n            }\r\n        case GanttTaskRelationship.SF :\r\n            {\r\n                result = new StartFinishConstraintImpl();\r\n                break;\r\n            }\r\n        case GanttTaskRelationship.SS :\r\n            {\r\n                result = new StartStartConstraintImpl();\r\n                break;\r\n            }\r\n        default :\r\n            {\r\n                throw new IllegalArgumentException((\"Unknown constraint ID=\" + constraintID));\r\n            }\r\n    }\r\n    return result;\r\n}'),(3365,'int id','int',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4493,'net.sourceforge.ganttproject.task.TaskManagerImpl.setMaxID(int)',0,'private void setMaxID(int id) {\r\n    myMaxID = id;\r\n}'),(3366,'TaskListener listener','net.sourceforge.ganttproject.task.event.TaskListener',621,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4449,'net.sourceforge.ganttproject.task.TaskManagerImpl.addTaskListener(net.sourceforge.ganttproject.task.event.TaskListener)',0,'public void addTaskListener(TaskListener listener) {\r\n    myListeners.add(listener);\r\n}'),(3367,'Task changedTask','net.sourceforge.ganttproject.task.Task',548,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4463,'net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskProgressChanged(net.sourceforge.ganttproject.task.Task)',0,'public void fireTaskProgressChanged(Task changedTask) {\r\n    if (areEventsEnabled) {\r\n        TaskPropertyEvent e = new TaskPropertyEvent(changedTask);\r\n        for (int i = 0; i < (myListeners.size()); i++) {\r\n            TaskListener next = ((TaskListener) (myListeners.get(i)));\r\n            next.taskProgressChanged(e);\r\n        }\r\n    }\r\n}'),(3368,'Task changedTask','net.sourceforge.ganttproject.task.Task',548,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4466,'net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskScheduleChanged(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar)',0,'void fireTaskScheduleChanged(Task changedTask, GanttCalendar oldStartDate, GanttCalendar oldFinishDate) {\r\n    if (areEventsEnabled) {\r\n        TaskScheduleEvent e = new TaskScheduleEvent(changedTask, oldStartDate, oldFinishDate, changedTask.getStart(), changedTask.getEnd());\r\n        // List copy = new ArrayList(myListeners);\r\n        // myListeners.clear();\r\n        for (int i = 0; i < (myListeners.size()); i++) {\r\n            TaskListener next = ((TaskListener) (myListeners.get(i)));\r\n            next.taskScheduleChanged(e);\r\n        }\r\n    }\r\n}'),(3369,'GanttCalendar oldStartDate','net.sourceforge.ganttproject.GanttCalendar',24,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4466,'net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskScheduleChanged(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar)',0,'void fireTaskScheduleChanged(Task changedTask, GanttCalendar oldStartDate, GanttCalendar oldFinishDate) {\r\n    if (areEventsEnabled) {\r\n        TaskScheduleEvent e = new TaskScheduleEvent(changedTask, oldStartDate, oldFinishDate, changedTask.getStart(), changedTask.getEnd());\r\n        // List copy = new ArrayList(myListeners);\r\n        // myListeners.clear();\r\n        for (int i = 0; i < (myListeners.size()); i++) {\r\n            TaskListener next = ((TaskListener) (myListeners.get(i)));\r\n            next.taskScheduleChanged(e);\r\n        }\r\n    }\r\n}'),(3370,'GanttCalendar oldFinishDate','net.sourceforge.ganttproject.GanttCalendar',24,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4466,'net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskScheduleChanged(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar)',0,'void fireTaskScheduleChanged(Task changedTask, GanttCalendar oldStartDate, GanttCalendar oldFinishDate) {\r\n    if (areEventsEnabled) {\r\n        TaskScheduleEvent e = new TaskScheduleEvent(changedTask, oldStartDate, oldFinishDate, changedTask.getStart(), changedTask.getEnd());\r\n        // List copy = new ArrayList(myListeners);\r\n        // myListeners.clear();\r\n        for (int i = 0; i < (myListeners.size()); i++) {\r\n            TaskListener next = ((TaskListener) (myListeners.get(i)));\r\n            next.taskScheduleChanged(e);\r\n        }\r\n    }\r\n}'),(3371,'TaskDependency newDependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4460,'net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyAdded(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'private void fireDependencyAdded(TaskDependency newDependency) {\r\n    if (areEventsEnabled) {\r\n        TaskDependencyEvent e = new TaskDependencyEvent(getDependencyCollection(), newDependency);\r\n        for (int i = 0; i < (myListeners.size()); i++) {\r\n            TaskListener next = ((TaskListener) (myListeners.get(i)));\r\n            next.dependencyAdded(e);\r\n        }\r\n    }\r\n}'),(3372,'TaskDependency dep','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4461,'net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyRemoved(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'private void fireDependencyRemoved(TaskDependency dep) {\r\n    TaskDependencyEvent e = new TaskDependencyEvent(getDependencyCollection(), dep);\r\n    for (int i = 0; i < (myListeners.size()); i++) {\r\n        TaskListener next = ((TaskListener) (myListeners.get(i)));\r\n        next.dependencyRemoved(e);\r\n    }\r\n}'),(3373,'Task task','net.sourceforge.ganttproject.task.Task',548,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4462,'net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskAdded(net.sourceforge.ganttproject.task.Task)',0,'private void fireTaskAdded(Task task) {\r\n    if (areEventsEnabled) {\r\n        TaskHierarchyEvent e = new TaskHierarchyEvent(this, task, null, getTaskHierarchy().getContainer(task));\r\n        for (int i = 0; i < (myListeners.size()); i++) {\r\n            TaskListener next = ((TaskListener) (myListeners.get(i)));\r\n            next.taskAdded(e);\r\n        }\r\n    }\r\n}'),(3374,'Task task','net.sourceforge.ganttproject.task.Task',548,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4465,'net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskRemoved(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'private void fireTaskRemoved(Task task, Task oldSupertask) {\r\n    TaskHierarchyEvent e = new TaskHierarchyEvent(this, task, oldSupertask, null);\r\n    for (int i = 0; i < (myListeners.size()); i++) {\r\n        TaskListener next = ((TaskListener) (myListeners.get(i)));\r\n        next.taskRemoved(e);\r\n    }\r\n}'),(3375,'Task oldSupertask','net.sourceforge.ganttproject.task.Task',548,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4465,'net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskRemoved(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'private void fireTaskRemoved(Task task, Task oldSupertask) {\r\n    TaskHierarchyEvent e = new TaskHierarchyEvent(this, task, oldSupertask, null);\r\n    for (int i = 0; i < (myListeners.size()); i++) {\r\n        TaskListener next = ((TaskListener) (myListeners.get(i)));\r\n        next.taskRemoved(e);\r\n    }\r\n}'),(3376,'Task task','net.sourceforge.ganttproject.task.Task',548,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4464,'net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskPropertiesChanged(net.sourceforge.ganttproject.task.Task)',0,'void fireTaskPropertiesChanged(Task task) {\r\n    if (areEventsEnabled) {\r\n        TaskPropertyEvent e = new TaskPropertyEvent(task);\r\n        for (int i = 0; i < (myListeners.size()); i++) {\r\n            TaskListener next = ((TaskListener) (myListeners.get(i)));\r\n            next.taskPropertiesChanged(e);\r\n        }\r\n    }\r\n}'),(3377,'Task container','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4502,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.getNestedTasks(net.sourceforge.ganttproject.task.Task)',0,'// public FacadeImpl(Task root) {\r\n// myRoot = root;\r\n// }\r\npublic Task[] getNestedTasks(Task container) {\r\n    return container.getNestedTasks();\r\n}'),(3378,'Task container','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4504,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.hasNestedTasks(net.sourceforge.ganttproject.task.Task)',0,'public boolean hasNestedTasks(Task container) {\r\n    return (myRoot) == null ? false : myRoot.isMilestone();\r\n}'),(3379,'Task nestedTask','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4500,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.getContainer(net.sourceforge.ganttproject.task.Task)',0,'public Task getContainer(Task nestedTask) {\r\n    return nestedTask.getSupertask();\r\n}'),(3380,'net.sourceforge.ganttproject.task.Task','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4500,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.getContainer(net.sourceforge.ganttproject.task.Task)',1,'public Task getContainer(Task nestedTask) {\r\n    return nestedTask.getSupertask();\r\n}'),(3381,'Task first','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4497,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.areUnrelated(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public boolean areUnrelated(Task first, Task second) {\r\n    myPathBuffer.clear();\r\n    for (Task container = getContainer(first); container != null; container = getContainer(container)) {\r\n        myPathBuffer.add(container);\r\n    }\r\n    if (myPathBuffer.contains(second)) {\r\n        return false;\r\n    }\r\n    myPathBuffer.clear();\r\n    for (Task container = getContainer(second); container != null; container = getContainer(container)) {\r\n        myPathBuffer.add(container);\r\n    }\r\n    if (myPathBuffer.contains(first)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}'),(3382,'Task second','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4497,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.areUnrelated(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public boolean areUnrelated(Task first, Task second) {\r\n    myPathBuffer.clear();\r\n    for (Task container = getContainer(first); container != null; container = getContainer(container)) {\r\n        myPathBuffer.add(container);\r\n    }\r\n    if (myPathBuffer.contains(second)) {\r\n        return false;\r\n    }\r\n    myPathBuffer.clear();\r\n    for (Task container = getContainer(second); container != null; container = getContainer(container)) {\r\n        myPathBuffer.add(container);\r\n    }\r\n    if (myPathBuffer.contains(first)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}'),(3383,'Task whatMove','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4505,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.move(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public void move(Task whatMove, Task whereMove) {\r\n    whatMove.move(whereMove);\r\n}'),(3384,'Task whereMove','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4505,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.move(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public void move(Task whatMove, Task whereMove) {\r\n    whatMove.move(whereMove);\r\n}'),(3385,'Task task','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4501,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.getDepth(net.sourceforge.ganttproject.task.Task)',0,'public int getDepth(Task task) {\r\n    int depth = 0;\r\n    while (task != (myRoot)) {\r\n        task = task.getSupertask();\r\n        depth++;\r\n    } \r\n    return depth;\r\n}'),(3386,'Task task1','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4498,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.compareDocumentOrder(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public int compareDocumentOrder(Task task1, Task task2) {\r\n    if (task1 == task2) {\r\n        return 0;\r\n    }\r\n    List buffer1 = new ArrayList();\r\n    for (Task container = task1; container != null; container = getContainer(container)) {\r\n        buffer1.add(0, container);\r\n    }\r\n    List buffer2 = new ArrayList();\r\n    for (Task container = task2; container != null; container = getContainer(container)) {\r\n        buffer2.add(0, container);\r\n    }\r\n    if (((buffer1.get(0)) != (getRootTask())) && ((buffer2.get(0)) == (getRootTask()))) {\r\n        return -1;\r\n    }\r\n    if (((buffer1.get(0)) == (getRootTask())) && ((buffer2.get(0)) != (getRootTask()))) {\r\n        return 1;\r\n    }\r\n    int result = 0;\r\n    int i = 0;\r\n    Task commonRoot = null;\r\n    while (true) {\r\n        if (i == (buffer1.size())) {\r\n            return -1;\r\n        }\r\n        if (i == (buffer2.size())) {\r\n            return 1;\r\n        }\r\n        Task root1 = ((Task) (buffer1.get(i)));\r\n        Task root2 = ((Task) (buffer2.get(i)));\r\n        if (root1 != root2) {\r\n            assert commonRoot != null : ((((((\"Failure comparing task=\" + task1) + \" and task=\") + task2) + \"\n. Path1=\") + buffer1) + \"\nPath2=\") + buffer2;\r\n            Task[] nestedTasks = commonRoot.getNestedTasks();\r\n            for (int j = 0; j < (nestedTasks.length); j++) {\r\n                if ((nestedTasks[j]) == root1) {\r\n                    return -1;\r\n                }\r\n                if ((nestedTasks[j]) == root2) {\r\n                    return 1;\r\n                }\r\n            }\r\n            throw new IllegalStateException(\"We should not be here\");\r\n        }\r\n        i++;\r\n        commonRoot = root1;\r\n    } \r\n}'),(3387,'Task task2','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4498,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.compareDocumentOrder(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public int compareDocumentOrder(Task task1, Task task2) {\r\n    if (task1 == task2) {\r\n        return 0;\r\n    }\r\n    List buffer1 = new ArrayList();\r\n    for (Task container = task1; container != null; container = getContainer(container)) {\r\n        buffer1.add(0, container);\r\n    }\r\n    List buffer2 = new ArrayList();\r\n    for (Task container = task2; container != null; container = getContainer(container)) {\r\n        buffer2.add(0, container);\r\n    }\r\n    if (((buffer1.get(0)) != (getRootTask())) && ((buffer2.get(0)) == (getRootTask()))) {\r\n        return -1;\r\n    }\r\n    if (((buffer1.get(0)) == (getRootTask())) && ((buffer2.get(0)) != (getRootTask()))) {\r\n        return 1;\r\n    }\r\n    int result = 0;\r\n    int i = 0;\r\n    Task commonRoot = null;\r\n    while (true) {\r\n        if (i == (buffer1.size())) {\r\n            return -1;\r\n        }\r\n        if (i == (buffer2.size())) {\r\n            return 1;\r\n        }\r\n        Task root1 = ((Task) (buffer1.get(i)));\r\n        Task root2 = ((Task) (buffer2.get(i)));\r\n        if (root1 != root2) {\r\n            assert commonRoot != null : ((((((\"Failure comparing task=\" + task1) + \" and task=\") + task2) + \"\n. Path1=\") + buffer1) + \"\nPath2=\") + buffer2;\r\n            Task[] nestedTasks = commonRoot.getNestedTasks();\r\n            for (int j = 0; j < (nestedTasks.length); j++) {\r\n                if ((nestedTasks[j]) == root1) {\r\n                    return -1;\r\n                }\r\n                if ((nestedTasks[j]) == root2) {\r\n                    return 1;\r\n                }\r\n            }\r\n            throw new IllegalStateException(\"We should not be here\");\r\n        }\r\n        i++;\r\n        commonRoot = root1;\r\n    } \r\n}'),(3388,'Task task','net.sourceforge.ganttproject.task.Task',548,568,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl',4499,'net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl.contains(net.sourceforge.ganttproject.task.Task)',0,'public boolean contains(Task task) {\r\n    throw new UnsupportedOperationException();\r\n}'),(3389,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4485,'net.sourceforge.ganttproject.task.TaskManagerImpl.importData(net.sourceforge.ganttproject.task.TaskManager)',0,'public Map importData(TaskManager taskManager) {\r\n    Task importRoot = taskManager.getRootTask();\r\n    Map original2imported = new HashMap();\r\n    importData(importRoot, getRootTask(), original2imported);\r\n    TaskDependency[] deps = taskManager.getDependencyCollection().getDependencies();\r\n    for (int i = 0; i < (deps.length); i++) {\r\n        Task nextDependant = deps[i].getDependant();\r\n        Task nextDependee = deps[i].getDependee();\r\n        Task importedDependant = ((Task) (original2imported.get(nextDependant)));\r\n        Task importedDependee = ((Task) (original2imported.get(nextDependee)));\r\n        try {\r\n            TaskDependency dependency = getDependencyCollection().createDependency(importedDependant, importedDependee, new FinishStartConstraintImpl());\r\n            dependency.setConstraint(deps[i].getConstraint());\r\n            dependency.setDifference(deps[i].getDifference());\r\n            dependency.setHardness(deps[i].getHardness());\r\n        } catch (TaskDependencyException e) {\r\n            if (!(GPLogger.log(e))) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }\r\n    }\r\n    return original2imported;\r\n}'),(3390,'Task importRoot','net.sourceforge.ganttproject.task.Task',548,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4484,'net.sourceforge.ganttproject.task.TaskManagerImpl.importData(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,java.util.Map)',0,'private void importData(Task importRoot, Task root, Map original2imported) {\r\n    Task[] nested = importRoot.getManager().getTaskHierarchy().getNestedTasks(importRoot);\r\n    for (int i = (nested.length) - 1; i >= 0; i--) {\r\n        Task nextImported = createTask();\r\n        registerTask(nextImported);\r\n        nextImported.setName(nested[i].getName());\r\n        nextImported.setStart(nested[i].getStart().Clone());\r\n        nextImported.setDuration(nested[i].getDuration());\r\n        nextImported.setMilestone(nested[i].isMilestone());\r\n        nextImported.setColor(nested[i].getColor());\r\n        nextImported.setShape(nested[i].getShape());\r\n        nextImported.setCompletionPercentage(nested[i].getCompletionPercentage());\r\n        nextImported.setNotes(nested[i].getNotes());\r\n        nextImported.setTaskInfo(nested[i].getTaskInfo());\r\n        nextImported.setExpand(nested[i].getExpand());\r\n        if ((nested[i].getThird()) != null) {\r\n            nextImported.setThirdDate(nested[i].getThird().Clone());\r\n            nextImported.setThirdDateConstraint(nested[i].getThirdDateConstraint());\r\n        }\r\n        myCustomColumnStorage.processNewTask(nextImported);\r\n        CustomColumnsValues customValues = nested[i].getCustomValues();\r\n        Collection customColums = myCustomColumnStorage.getCustomColums();\r\n        for (Iterator it = customColums.iterator(); it.hasNext();) {\r\n            CustomColumn nextColumn = ((CustomColumn) (it.next()));\r\n            Object value = customValues.getValue(nextColumn.getName());\r\n            if (value != null) {\r\n                try {\r\n                    nextImported.getCustomValues().setValue(nextColumn.getName(), value);\r\n                } catch (CustomColumnsException e) {\r\n                    if (!(GPLogger.log(e))) {\r\n                        e.printStackTrace(System.err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // System.out.println (\"Import : \" + nextImported.getTaskID() + \"\r\n        // -->> \" + nextImported.getName());\r\n        original2imported.put(nested[i], nextImported);\r\n        // nextImported.move(root);\r\n        getTaskHierarchy().move(nextImported, root);\r\n        importData(nested[i], nextImported, original2imported);\r\n    }\r\n}'),(3391,'Task root','net.sourceforge.ganttproject.task.Task',548,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4484,'net.sourceforge.ganttproject.task.TaskManagerImpl.importData(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,java.util.Map)',0,'private void importData(Task importRoot, Task root, Map original2imported) {\r\n    Task[] nested = importRoot.getManager().getTaskHierarchy().getNestedTasks(importRoot);\r\n    for (int i = (nested.length) - 1; i >= 0; i--) {\r\n        Task nextImported = createTask();\r\n        registerTask(nextImported);\r\n        nextImported.setName(nested[i].getName());\r\n        nextImported.setStart(nested[i].getStart().Clone());\r\n        nextImported.setDuration(nested[i].getDuration());\r\n        nextImported.setMilestone(nested[i].isMilestone());\r\n        nextImported.setColor(nested[i].getColor());\r\n        nextImported.setShape(nested[i].getShape());\r\n        nextImported.setCompletionPercentage(nested[i].getCompletionPercentage());\r\n        nextImported.setNotes(nested[i].getNotes());\r\n        nextImported.setTaskInfo(nested[i].getTaskInfo());\r\n        nextImported.setExpand(nested[i].getExpand());\r\n        if ((nested[i].getThird()) != null) {\r\n            nextImported.setThirdDate(nested[i].getThird().Clone());\r\n            nextImported.setThirdDateConstraint(nested[i].getThirdDateConstraint());\r\n        }\r\n        myCustomColumnStorage.processNewTask(nextImported);\r\n        CustomColumnsValues customValues = nested[i].getCustomValues();\r\n        Collection customColums = myCustomColumnStorage.getCustomColums();\r\n        for (Iterator it = customColums.iterator(); it.hasNext();) {\r\n            CustomColumn nextColumn = ((CustomColumn) (it.next()));\r\n            Object value = customValues.getValue(nextColumn.getName());\r\n            if (value != null) {\r\n                try {\r\n                    nextImported.getCustomValues().setValue(nextColumn.getName(), value);\r\n                } catch (CustomColumnsException e) {\r\n                    if (!(GPLogger.log(e))) {\r\n                        e.printStackTrace(System.err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // System.out.println (\"Import : \" + nextImported.getTaskID() + \"\r\n        // -->> \" + nextImported.getName());\r\n        original2imported.put(nested[i], nextImported);\r\n        // nextImported.move(root);\r\n        getTaskHierarchy().move(nextImported, root);\r\n        importData(nested[i], nextImported, original2imported);\r\n    }\r\n}'),(3392,'Map original2imported','java.util.Map',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4484,'net.sourceforge.ganttproject.task.TaskManagerImpl.importData(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,java.util.Map)',0,'private void importData(Task importRoot, Task root, Map original2imported) {\r\n    Task[] nested = importRoot.getManager().getTaskHierarchy().getNestedTasks(importRoot);\r\n    for (int i = (nested.length) - 1; i >= 0; i--) {\r\n        Task nextImported = createTask();\r\n        registerTask(nextImported);\r\n        nextImported.setName(nested[i].getName());\r\n        nextImported.setStart(nested[i].getStart().Clone());\r\n        nextImported.setDuration(nested[i].getDuration());\r\n        nextImported.setMilestone(nested[i].isMilestone());\r\n        nextImported.setColor(nested[i].getColor());\r\n        nextImported.setShape(nested[i].getShape());\r\n        nextImported.setCompletionPercentage(nested[i].getCompletionPercentage());\r\n        nextImported.setNotes(nested[i].getNotes());\r\n        nextImported.setTaskInfo(nested[i].getTaskInfo());\r\n        nextImported.setExpand(nested[i].getExpand());\r\n        if ((nested[i].getThird()) != null) {\r\n            nextImported.setThirdDate(nested[i].getThird().Clone());\r\n            nextImported.setThirdDateConstraint(nested[i].getThirdDateConstraint());\r\n        }\r\n        myCustomColumnStorage.processNewTask(nextImported);\r\n        CustomColumnsValues customValues = nested[i].getCustomValues();\r\n        Collection customColums = myCustomColumnStorage.getCustomColums();\r\n        for (Iterator it = customColums.iterator(); it.hasNext();) {\r\n            CustomColumn nextColumn = ((CustomColumn) (it.next()));\r\n            Object value = customValues.getValue(nextColumn.getName());\r\n            if (value != null) {\r\n                try {\r\n                    nextImported.getCustomValues().setValue(nextColumn.getName(), value);\r\n                } catch (CustomColumnsException e) {\r\n                    if (!(GPLogger.log(e))) {\r\n                        e.printStackTrace(System.err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // System.out.println (\"Import : \" + nextImported.getTaskID() + \"\r\n        // -->> \" + nextImported.getName());\r\n        original2imported.put(nested[i], nextImported);\r\n        // nextImported.move(root);\r\n        getTaskHierarchy().move(nextImported, root);\r\n        importData(nested[i], nextImported, original2imported);\r\n    }\r\n}'),(3393,'Date time','java.util.Date',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4459,'net.sourceforge.ganttproject.task.TaskManagerImpl.findClosestWorkingTime(java.util.Date)',0,'public Date findClosestWorkingTime(Date time) {\r\n    return getCalendar().findClosestWorkingTime(time);\r\n}'),(3394,'TaskNode root','net.sourceforge.ganttproject.task.TaskNode',572,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4489,'net.sourceforge.ganttproject.task.TaskManagerImpl.processCriticalPath(net.sourceforge.ganttproject.task.TaskNode)',0,'public void processCriticalPath(TaskNode root) {\r\n    try {\r\n        myAlgorithmCollection.getRecalculateTaskScheduleAlgorithm().run();\r\n    } catch (TaskDependencyException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n    CriticalPathAlgorithm criticAlgo = new CriticalPathAlgorithmImpl(root, getCalendar());\r\n    Task[] tasks = criticAlgo.getCriticalTasks();\r\n    resetCriticalPath(root);\r\n    for (int i = 0; i < (tasks.length); i++)\r\n        tasks[i].setCritical(true);\r\n\r\n}'),(3395,'TaskNode root','net.sourceforge.ganttproject.task.TaskNode',572,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4491,'net.sourceforge.ganttproject.task.TaskManagerImpl.resetCriticalPath(net.sourceforge.ganttproject.task.TaskNode)',0,'private void resetCriticalPath(TaskNode root) {\r\n    Enumeration en = root.preorderEnumeration();\r\n    while (en.hasMoreElements()) {\r\n        Object next = en.nextElement();\r\n        if (!(next instanceof TaskNode))\r\n            continue;\r\n\r\n        Task t = ((Task) (((TaskNode) (next)).getUserObject()));\r\n        t.setCritical(false);\r\n    } \r\n}'),(3396,'TaskManager importedTaskManager','net.sourceforge.ganttproject.task.TaskManager',565,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4483,'net.sourceforge.ganttproject.task.TaskManagerImpl.importAssignments(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.ResourceManager,java.util.Map,java.util.Map)',0,'public void importAssignments(TaskManager importedTaskManager, ResourceManager hrManager, Map original2importedTask, Map original2importedResource) {\r\n    Task[] tasks = importedTaskManager.getTasks();\r\n    for (int i = 0; i < (tasks.length); i++) {\r\n        ResourceAssignment[] assignments = tasks[i].getAssignments();\r\n        for (int j = 0; j < (assignments.length); j++) {\r\n            Task task = getTask(((Task) (original2importedTask.get(tasks[i]))).getTaskID());\r\n            ResourceAssignment assignment = task.getAssignmentCollection().addAssignment(((HumanResource) (original2importedResource.get(assignments[j].getResource()))));\r\n            assignment.setLoad(assignments[j].getLoad());\r\n            assignment.setCoordinator(assignments[j].isCoordinator());\r\n        }\r\n    }\r\n}'),(3397,'ResourceManager hrManager','net.sourceforge.ganttproject.resource.ResourceManager',509,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4483,'net.sourceforge.ganttproject.task.TaskManagerImpl.importAssignments(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.ResourceManager,java.util.Map,java.util.Map)',0,'public void importAssignments(TaskManager importedTaskManager, ResourceManager hrManager, Map original2importedTask, Map original2importedResource) {\r\n    Task[] tasks = importedTaskManager.getTasks();\r\n    for (int i = 0; i < (tasks.length); i++) {\r\n        ResourceAssignment[] assignments = tasks[i].getAssignments();\r\n        for (int j = 0; j < (assignments.length); j++) {\r\n            Task task = getTask(((Task) (original2importedTask.get(tasks[i]))).getTaskID());\r\n            ResourceAssignment assignment = task.getAssignmentCollection().addAssignment(((HumanResource) (original2importedResource.get(assignments[j].getResource()))));\r\n            assignment.setLoad(assignments[j].getLoad());\r\n            assignment.setCoordinator(assignments[j].isCoordinator());\r\n        }\r\n    }\r\n}'),(3398,'Map original2importedTask','java.util.Map',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4483,'net.sourceforge.ganttproject.task.TaskManagerImpl.importAssignments(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.ResourceManager,java.util.Map,java.util.Map)',0,'public void importAssignments(TaskManager importedTaskManager, ResourceManager hrManager, Map original2importedTask, Map original2importedResource) {\r\n    Task[] tasks = importedTaskManager.getTasks();\r\n    for (int i = 0; i < (tasks.length); i++) {\r\n        ResourceAssignment[] assignments = tasks[i].getAssignments();\r\n        for (int j = 0; j < (assignments.length); j++) {\r\n            Task task = getTask(((Task) (original2importedTask.get(tasks[i]))).getTaskID());\r\n            ResourceAssignment assignment = task.getAssignmentCollection().addAssignment(((HumanResource) (original2importedResource.get(assignments[j].getResource()))));\r\n            assignment.setLoad(assignments[j].getLoad());\r\n            assignment.setCoordinator(assignments[j].isCoordinator());\r\n        }\r\n    }\r\n}'),(3399,'Map original2importedResource','java.util.Map',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4483,'net.sourceforge.ganttproject.task.TaskManagerImpl.importAssignments(net.sourceforge.ganttproject.task.TaskManager,net.sourceforge.ganttproject.resource.ResourceManager,java.util.Map,java.util.Map)',0,'public void importAssignments(TaskManager importedTaskManager, ResourceManager hrManager, Map original2importedTask, Map original2importedResource) {\r\n    Task[] tasks = importedTaskManager.getTasks();\r\n    for (int i = 0; i < (tasks.length); i++) {\r\n        ResourceAssignment[] assignments = tasks[i].getAssignments();\r\n        for (int j = 0; j < (assignments.length); j++) {\r\n            Task task = getTask(((Task) (original2importedTask.get(tasks[i]))).getTaskID());\r\n            ResourceAssignment assignment = task.getAssignmentCollection().addAssignment(((HumanResource) (original2importedResource.get(assignments[j].getResource()))));\r\n            assignment.setLoad(assignments[j].getLoad());\r\n            assignment.setCoordinator(assignments[j].isCoordinator());\r\n        }\r\n    }\r\n}'),(3400,'TaskImpl task','net.sourceforge.ganttproject.task.TaskImpl',560,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4488,'net.sourceforge.ganttproject.task.TaskManagerImpl.onTaskMoved(net.sourceforge.ganttproject.task.TaskImpl)',0,'void onTaskMoved(TaskImpl task) {\r\n    if (!(isRegistered(task))) {\r\n        registerTask(task);\r\n    }\r\n    myTaskMap.setDirty();\r\n}'),(3401,'boolean enabled','boolean',0,570,'net.sourceforge.ganttproject.task.TaskManagerImpl',4492,'net.sourceforge.ganttproject.task.TaskManagerImpl.setEventsEnabled(boolean)',0,'public void setEventsEnabled(boolean enabled) {\r\n    areEventsEnabled = enabled;\r\n}'),(3402,'int level','int',0,571,'net.sourceforge.ganttproject.task.TaskMutator',4517,'net.sourceforge.ganttproject.task.TaskMutator.setIsolationLevel(int)',0,'void setIsolationLevel(int level);'),(3403,'float unitCount','float',0,571,'net.sourceforge.ganttproject.task.TaskMutator',4519,'net.sourceforge.ganttproject.task.TaskMutator.shift(float)',0,'void shift(float unitCount);'),(3404,'GanttCalendar third','net.sourceforge.ganttproject.GanttCalendar',24,571,'net.sourceforge.ganttproject.task.TaskMutator',4518,'net.sourceforge.ganttproject.task.TaskMutator.setThird(net.sourceforge.ganttproject.GanttCalendar,int)',0,'void setThird(GanttCalendar third, int thirdDateConstraint);'),(3405,'int thirdDateConstraint','int',0,571,'net.sourceforge.ganttproject.task.TaskMutator',4518,'net.sourceforge.ganttproject.task.TaskMutator.setThird(net.sourceforge.ganttproject.GanttCalendar,int)',0,'void setThird(GanttCalendar third, int thirdDateConstraint);'),(3406,'Task t','net.sourceforge.ganttproject.task.Task',548,572,'net.sourceforge.ganttproject.task.TaskNode',4520,'net.sourceforge.ganttproject.task.TaskNode.-init-(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * Creates an instance of TaskNode with the given task as reference.\r\n *\r\n * @param t\r\n * 		Task of reference.\r\n */\r\npublic TaskNode(Task t) {\r\n    super(t);\r\n    task = t;\r\n}'),(3407,'int priority','int',0,572,'net.sourceforge.ganttproject.task.TaskNode',4534,'net.sourceforge.ganttproject.task.TaskNode.setPriority(int)',0,'/**\r\n * Sets the priority of the task.\r\n *\r\n * @param priority\r\n * 		The priority to be set.\r\n */\r\npublic void setPriority(int priority) {\r\n    task.setPriority(priority);\r\n}'),(3408,'String newName','java.lang.String',0,572,'net.sourceforge.ganttproject.task.TaskNode',4533,'net.sourceforge.ganttproject.task.TaskNode.setName(java.lang.String)',0,'/**\r\n * Sets the name of the task.\r\n *\r\n * @param newName\r\n * 		The name to be set.\r\n */\r\npublic void setName(String newName) {\r\n    task.setName(newName);\r\n}'),(3409,'GanttCalendar startDate','net.sourceforge.ganttproject.GanttCalendar',24,572,'net.sourceforge.ganttproject.task.TaskNode',4535,'net.sourceforge.ganttproject.task.TaskNode.setStart(net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n * Sets the start date of the task.\r\n *\r\n * @param startDate\r\n * 		The start date of the task to be set.\r\n */\r\npublic void setStart(GanttCalendar startDate) {\r\n    TaskMutator mutator = task.createMutatorFixingDuration();\r\n    mutator.setStart(startDate);\r\n    mutator.commit();\r\n}'),(3410,'GanttCalendar endDate','net.sourceforge.ganttproject.GanttCalendar',24,572,'net.sourceforge.ganttproject.task.TaskNode',4532,'net.sourceforge.ganttproject.task.TaskNode.setEnd(net.sourceforge.ganttproject.GanttCalendar)',0,'/**\r\n * Sets the end date of the task.\r\n *\r\n * @param endDate\r\n * 		The end date of the task to be set.\r\n */\r\npublic void setEnd(GanttCalendar endDate) {\r\n    TaskMutator mutator = task.createMutator();\r\n    mutator.setEnd(endDate);\r\n    mutator.commit();\r\n}'),(3411,'TaskLength length','net.sourceforge.ganttproject.task.TaskLength',562,572,'net.sourceforge.ganttproject.task.TaskNode',4531,'net.sourceforge.ganttproject.task.TaskNode.setDuration(net.sourceforge.ganttproject.task.TaskLength)',0,'/**\r\n * Sets the duration of the task.\r\n *\r\n * @param length\r\n * 		The duration to be set.\r\n */\r\npublic void setDuration(TaskLength length) {\r\n    TaskMutator mutator = task.createMutator();\r\n    mutator.setDuration(length);\r\n    mutator.commit();\r\n}'),(3412,'int percentage','int',0,572,'net.sourceforge.ganttproject.task.TaskNode',4530,'net.sourceforge.ganttproject.task.TaskNode.setCompletionPercentage(int)',0,'/**\r\n * Sets the completion percentage of the task.\r\n *\r\n * @param percentage\r\n * 		The percentage to be set.\r\n */\r\npublic void setCompletionPercentage(int percentage) {\r\n    task.setCompletionPercentage(percentage);\r\n}'),(3413,'TaskInfo info','net.sourceforge.ganttproject.task.TaskInfo',561,572,'net.sourceforge.ganttproject.task.TaskNode',4536,'net.sourceforge.ganttproject.task.TaskNode.setTaskInfo(net.sourceforge.ganttproject.task.TaskInfo)',0,'public void setTaskInfo(TaskInfo info) {\r\n    task.setTaskInfo(info);\r\n}'),(3414,'Task task','net.sourceforge.ganttproject.task.Task',548,573,'net.sourceforge.ganttproject.task.TaskProperties',4539,'net.sourceforge.ganttproject.task.TaskProperties.getProperty(net.sourceforge.ganttproject.task.Task,java.lang.String)',0,'/**\r\n * Returns the task property specified by <code>propertyID</code>.\r\n *\r\n * @param task\r\n * 		The task from which we want the property.\r\n * @param propertyID\r\n * 		The property ID which could be <code>ID_TASK_DATES</code>,\r\n * 		<code>ID_TASK_NAME</code>, ... or a custom column name.\r\n * @return the task property specified by <code>propertyID</code>. The\r\nresult may be <code>null</code>.\r\n */\r\npublic static Object getProperty(Task task, String propertyID) {\r\n    Object res = null;\r\n    StringBuffer sb = new StringBuffer();\r\n    if (propertyID != null) {\r\n        if (propertyID.equals(TaskProperties.ID_TASK_DATES)) {\r\n            sb.append(\" [ \");\r\n            sb.append((((task.getStart()) + \" - \") + (task.getEnd())));\r\n            sb.append(\" ] \");\r\n            res = sb.toString();\r\n        } else\r\n            if (propertyID.equals(TaskProperties.ID_TASK_NAME)) {\r\n                sb.append(((\" \" + (task.getName())) + \" \"));\r\n                res = sb.toString();\r\n            } else\r\n                if (propertyID.equals(TaskProperties.ID_TASK_LENGTH)) {\r\n                    sb.append(\" [ \");\r\n                    sb.append(((((int) (task.getDuration().getLength())) + \" \") + (GanttLanguage.getInstance().getText(\"days\"))));\r\n                    sb.append(\" ] \");\r\n                    res = sb.toString();\r\n                } else\r\n                    if (propertyID.equals(TaskProperties.ID_TASK_ADVANCEMENT)) {\r\n                        sb.append(\" [ \");\r\n                        sb.append(((task.getCompletionPercentage()) + \"%\"));\r\n                        sb.append(\" ] \");\r\n                        res = sb.toString();\r\n                    } else\r\n                        if (propertyID.equals(TaskProperties.ID_TASK_COORDINATOR)) {\r\n                            ResourceAssignment[] assignments = task.getAssignments();\r\n                            if ((assignments.length) > 0) {\r\n                                boolean first = true;\r\n                                boolean close = false;\r\n                                int j = 0;\r\n                                for (int i = 0; i < (assignments.length); i++) {\r\n                                    if (assignments[i].isCoordinator()) {\r\n                                        j++;\r\n                                        if (first) {\r\n                                            close = true;\r\n                                            first = false;\r\n                                            sb.append(\"{\");\r\n                                        }\r\n                                        if (j > 1) {\r\n                                            sb.append(\", \");\r\n                                        }\r\n                                        sb.append(assignments[i].getResource().getName());\r\n                                    }\r\n                                }\r\n                                if (close)\r\n                                    sb.append(\"}\");\r\n\r\n                            }\r\n                            res = sb.toString();\r\n                        } else\r\n                            if (propertyID.equals(TaskProperties.ID_TASK_RESOURCES)) {\r\n                                ResourceAssignment[] assignments = task.getAssignments();\r\n                                if ((assignments.length) > 0) {\r\n                                    sb.append(\" \");\r\n                                    /* Keep coordinators and other resources separate */\r\n                                    StringBuffer resources = new StringBuffer();\r\n                                    StringBuffer coordinators = new StringBuffer();\r\n                                    for (int i = 0; i < (assignments.length); i++) {\r\n                                        /* Creates list of resources in format {coordinators},resources */\r\n                                        if (assignments[i].isCoordinator()) {\r\n                                            if ((coordinators.length()) > 0) {\r\n                                                coordinators.append(\",\");\r\n                                            }\r\n                                            coordinators.append(assignments[i].getResource().getName());\r\n                                        } else {\r\n                                            if ((resources.length()) > 0) {\r\n                                                resources.append(\",\");\r\n                                            }\r\n                                            resources.append(assignments[i].getResource().getName());\r\n                                        }\r\n                                    }\r\n                                    if ((coordinators.length()) > 0) {\r\n                                        sb.append(\"{\");\r\n                                        sb.append(coordinators);\r\n                                        sb.append(\"}\");\r\n                                        if ((resources.length()) > 0) {\r\n                                            sb.append(\",\");\r\n                                        }\r\n                                    }\r\n                                    if ((resources.length()) > 0) {\r\n                                        sb.append(resources);\r\n                                    }\r\n                                    sb.append(\" \");\r\n                                }\r\n                                res = sb.toString();\r\n                            } else\r\n                                if (propertyID.equals(TaskProperties.ID_TASK_ID)) {\r\n                                    sb.append(\"# \").append(task.getTaskID());\r\n                                    res = sb.toString();\r\n                                } else\r\n                                    if (propertyID.equals(TaskProperties.ID_TASK_PREDECESSORS)) {\r\n                                        TaskDependency[] dep = task.getDependenciesAsDependant().toArray();\r\n                                        int i = 0;\r\n                                        if ((dep != null) && ((dep.length) > 0)) {\r\n                                            for (i = 0; i < ((dep.length) - 1); i++)\r\n                                                sb.append(((dep[i].getDependee().getTaskID()) + \", \"));\r\n\r\n                                            sb.append(dep[i].getDependee().getTaskID());\r\n                                        }\r\n                                        res = sb.toString();\r\n                                    } else {\r\n                                        res = task.getCustomValues().getValue(propertyID);\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    return res;\r\n}'),(3415,'String propertyID','java.lang.String',0,573,'net.sourceforge.ganttproject.task.TaskProperties',4539,'net.sourceforge.ganttproject.task.TaskProperties.getProperty(net.sourceforge.ganttproject.task.Task,java.lang.String)',0,'/**\r\n * Returns the task property specified by <code>propertyID</code>.\r\n *\r\n * @param task\r\n * 		The task from which we want the property.\r\n * @param propertyID\r\n * 		The property ID which could be <code>ID_TASK_DATES</code>,\r\n * 		<code>ID_TASK_NAME</code>, ... or a custom column name.\r\n * @return the task property specified by <code>propertyID</code>. The\r\nresult may be <code>null</code>.\r\n */\r\npublic static Object getProperty(Task task, String propertyID) {\r\n    Object res = null;\r\n    StringBuffer sb = new StringBuffer();\r\n    if (propertyID != null) {\r\n        if (propertyID.equals(TaskProperties.ID_TASK_DATES)) {\r\n            sb.append(\" [ \");\r\n            sb.append((((task.getStart()) + \" - \") + (task.getEnd())));\r\n            sb.append(\" ] \");\r\n            res = sb.toString();\r\n        } else\r\n            if (propertyID.equals(TaskProperties.ID_TASK_NAME)) {\r\n                sb.append(((\" \" + (task.getName())) + \" \"));\r\n                res = sb.toString();\r\n            } else\r\n                if (propertyID.equals(TaskProperties.ID_TASK_LENGTH)) {\r\n                    sb.append(\" [ \");\r\n                    sb.append(((((int) (task.getDuration().getLength())) + \" \") + (GanttLanguage.getInstance().getText(\"days\"))));\r\n                    sb.append(\" ] \");\r\n                    res = sb.toString();\r\n                } else\r\n                    if (propertyID.equals(TaskProperties.ID_TASK_ADVANCEMENT)) {\r\n                        sb.append(\" [ \");\r\n                        sb.append(((task.getCompletionPercentage()) + \"%\"));\r\n                        sb.append(\" ] \");\r\n                        res = sb.toString();\r\n                    } else\r\n                        if (propertyID.equals(TaskProperties.ID_TASK_COORDINATOR)) {\r\n                            ResourceAssignment[] assignments = task.getAssignments();\r\n                            if ((assignments.length) > 0) {\r\n                                boolean first = true;\r\n                                boolean close = false;\r\n                                int j = 0;\r\n                                for (int i = 0; i < (assignments.length); i++) {\r\n                                    if (assignments[i].isCoordinator()) {\r\n                                        j++;\r\n                                        if (first) {\r\n                                            close = true;\r\n                                            first = false;\r\n                                            sb.append(\"{\");\r\n                                        }\r\n                                        if (j > 1) {\r\n                                            sb.append(\", \");\r\n                                        }\r\n                                        sb.append(assignments[i].getResource().getName());\r\n                                    }\r\n                                }\r\n                                if (close)\r\n                                    sb.append(\"}\");\r\n\r\n                            }\r\n                            res = sb.toString();\r\n                        } else\r\n                            if (propertyID.equals(TaskProperties.ID_TASK_RESOURCES)) {\r\n                                ResourceAssignment[] assignments = task.getAssignments();\r\n                                if ((assignments.length) > 0) {\r\n                                    sb.append(\" \");\r\n                                    /* Keep coordinators and other resources separate */\r\n                                    StringBuffer resources = new StringBuffer();\r\n                                    StringBuffer coordinators = new StringBuffer();\r\n                                    for (int i = 0; i < (assignments.length); i++) {\r\n                                        /* Creates list of resources in format {coordinators},resources */\r\n                                        if (assignments[i].isCoordinator()) {\r\n                                            if ((coordinators.length()) > 0) {\r\n                                                coordinators.append(\",\");\r\n                                            }\r\n                                            coordinators.append(assignments[i].getResource().getName());\r\n                                        } else {\r\n                                            if ((resources.length()) > 0) {\r\n                                                resources.append(\",\");\r\n                                            }\r\n                                            resources.append(assignments[i].getResource().getName());\r\n                                        }\r\n                                    }\r\n                                    if ((coordinators.length()) > 0) {\r\n                                        sb.append(\"{\");\r\n                                        sb.append(coordinators);\r\n                                        sb.append(\"}\");\r\n                                        if ((resources.length()) > 0) {\r\n                                            sb.append(\",\");\r\n                                        }\r\n                                    }\r\n                                    if ((resources.length()) > 0) {\r\n                                        sb.append(resources);\r\n                                    }\r\n                                    sb.append(\" \");\r\n                                }\r\n                                res = sb.toString();\r\n                            } else\r\n                                if (propertyID.equals(TaskProperties.ID_TASK_ID)) {\r\n                                    sb.append(\"# \").append(task.getTaskID());\r\n                                    res = sb.toString();\r\n                                } else\r\n                                    if (propertyID.equals(TaskProperties.ID_TASK_PREDECESSORS)) {\r\n                                        TaskDependency[] dep = task.getDependenciesAsDependant().toArray();\r\n                                        int i = 0;\r\n                                        if ((dep != null) && ((dep.length) > 0)) {\r\n                                            for (i = 0; i < ((dep.length) - 1); i++)\r\n                                                sb.append(((dep[i].getDependee().getTaskID()) + \", \"));\r\n\r\n                                            sb.append(dep[i].getDependee().getTaskID());\r\n                                        }\r\n                                        res = sb.toString();\r\n                                    } else {\r\n                                        res = task.getCustomValues().getValue(propertyID);\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    return res;\r\n}'),(3416,'List currentSelection','java.util.List',0,574,'net.sourceforge.ganttproject.task.TaskSelectionManager$Listener',4553,'net.sourceforge.ganttproject.task.TaskSelectionManager$Listener.selectionChanged(java.util.List)',0,'void selectionChanged(List currentSelection);'),(3417,'Object newConsumer','java.lang.Object',0,574,'net.sourceforge.ganttproject.task.TaskSelectionManager$Listener',4554,'net.sourceforge.ganttproject.task.TaskSelectionManager$Listener.userInputConsumerChanged(java.lang.Object)',0,'void userInputConsumerChanged(Object newConsumer);'),(3418,'Object consumer','java.lang.Object',0,575,'net.sourceforge.ganttproject.task.TaskSelectionManager',4552,'net.sourceforge.ganttproject.task.TaskSelectionManager.setUserInputConsumer(java.lang.Object)',0,'public void setUserInputConsumer(Object consumer) {\r\n    if (consumer != (myUserInputConsumer)) {\r\n        fireUserInputConsumerChanged();\r\n    }\r\n    myUserInputConsumer = consumer;\r\n}'),(3419,'Task task','net.sourceforge.ganttproject.task.Task',548,575,'net.sourceforge.ganttproject.task.TaskSelectionManager',4542,'net.sourceforge.ganttproject.task.TaskSelectionManager.addTask(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * Adds <code>task</code> to the selected tasks.\r\n *\r\n * @param task\r\n * 		A task to add to the selected tasks.\r\n */\r\npublic void addTask(Task task) {\r\n    if (!(selectedTasks.contains(task))) {\r\n        selectedTasks.add(task);\r\n        fireSelectionChanged();\r\n    }\r\n}'),(3420,'Task task','net.sourceforge.ganttproject.task.Task',548,575,'net.sourceforge.ganttproject.task.TaskSelectionManager',4551,'net.sourceforge.ganttproject.task.TaskSelectionManager.removeTask(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * Removes <code>task</code> from the selected tasks;\r\n *\r\n * @param task\r\n * 		A task to remove from the selected tasks.\r\n */\r\npublic void removeTask(Task task) {\r\n    if (selectedTasks.contains(task)) {\r\n        selectedTasks.remove(task);\r\n        fireSelectionChanged();\r\n    }\r\n}'),(3421,'Task task','net.sourceforge.ganttproject.task.Task',548,575,'net.sourceforge.ganttproject.task.TaskSelectionManager',4549,'net.sourceforge.ganttproject.task.TaskSelectionManager.isTaskSelected(net.sourceforge.ganttproject.task.Task)',0,'/**\r\n * Returns <code>true</code> if <code>task</code> is selected,\r\n * <code>false</code> otherwise.\r\n *\r\n * @param task\r\n * 		The task to test.\r\n * @return <code>true</code> if <code>task</code> is selected,\r\n<code>false</code> otherwise.\r\n */\r\npublic boolean isTaskSelected(Task task) {\r\n    return selectedTasks.contains(task);\r\n}'),(3422,'TaskSelectionManager.Listener listener','net.sourceforge.ganttproject.task.TaskSelectionManager$Listener',574,575,'net.sourceforge.ganttproject.task.TaskSelectionManager',4541,'net.sourceforge.ganttproject.task.TaskSelectionManager.addSelectionListener(net.sourceforge.ganttproject.task.TaskSelectionManager$Listener)',0,'public void addSelectionListener(TaskSelectionManager.Listener listener) {\r\n    myListeners.add(listener);\r\n}'),(3423,'TaskSelectionManager.Listener listener','net.sourceforge.ganttproject.task.TaskSelectionManager$Listener',574,575,'net.sourceforge.ganttproject.task.TaskSelectionManager',4550,'net.sourceforge.ganttproject.task.TaskSelectionManager.removeSelectionListener(net.sourceforge.ganttproject.task.TaskSelectionManager$Listener)',0,'public void removeSelectionListener(TaskSelectionManager.Listener listener) {\r\n    myListeners.remove(listener);\r\n}'),(3424,'Task task','net.sourceforge.ganttproject.task.Task',548,577,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm',4559,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(net.sourceforge.ganttproject.task.Task)',0,'public void run(Task task) {\r\n    run(new Task[]{ task });\r\n}'),(3425,'Task[] tasks','net.sourceforge.ganttproject.task.Task[]',0,577,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm',4560,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(net.sourceforge.ganttproject.task.Task[])',0,'public void run(Task[] tasks) {\r\n    if (!(isEnabled())) {\r\n        return;\r\n    }\r\n    AdjustTaskBoundsAlgorithm.AlgorithmImpl algorithmImpl = new AdjustTaskBoundsAlgorithm.AlgorithmImpl();\r\n    algorithmImpl.run(tasks);\r\n}'),(3426,'Task supertask','net.sourceforge.ganttproject.task.Task',548,577,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm',4557,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.adjustNestedTasks(net.sourceforge.ganttproject.task.Task)',0,'public void adjustNestedTasks(Task supertask) throws TaskDependencyException {\r\n    TaskContainmentHierarchyFacade containmentFacade = createContainmentFacade();\r\n    /* <Task> */\r\n    List nestedTasks = new ArrayList(Arrays.asList(containmentFacade.getNestedTasks(supertask)));\r\n    if ((nestedTasks.size()) == 0) {\r\n        return;\r\n    }\r\n    SortTasksAlgorithm sortAlgorithm = new SortTasksAlgorithm();\r\n    sortAlgorithm.sortTasksByStartDate(nestedTasks);\r\n    Set modifiedTasks = new HashSet();\r\n    for (int i = 0; i < (nestedTasks.size()); i++) {\r\n        Task nextNested = ((Task) (nestedTasks.get(i)));\r\n        if (nextNested.getStart().getTime().before(supertask.getStart().getTime())) {\r\n            TaskMutator mutator = nextNested.createMutatorFixingDuration();\r\n            mutator.setStart(supertask.getStart());\r\n            mutator.commit();\r\n            // \r\n            modifiedTasks.add(nextNested);\r\n        }\r\n        if (nextNested.getEnd().getTime().after(supertask.getEnd().getTime())) {\r\n            TaskMutator mutator = nextNested.createMutatorFixingDuration();\r\n            mutator.shift(supertask.getManager().createLength(supertask.getDuration().getTimeUnit(), nextNested.getEnd().getTime(), supertask.getEnd().getTime()));\r\n            mutator.commit();\r\n            // \r\n            modifiedTasks.add(nextNested);\r\n        }\r\n    }\r\n    run(((Task[]) (modifiedTasks.toArray(new Task[0]))));\r\n    RecalculateTaskScheduleAlgorithm alg = new RecalculateTaskScheduleAlgorithm(this) {\r\n        protected TaskContainmentHierarchyFacade createContainmentFacade() {\r\n            return AdjustTaskBoundsAlgorithm.this.createContainmentFacade();\r\n        }\r\n    };\r\n    alg.run(modifiedTasks);\r\n}'),(3427,'Task[] tasks','net.sourceforge.ganttproject.task.Task[]',0,576,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm$AlgorithmImpl',4564,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm$AlgorithmImpl.run(net.sourceforge.ganttproject.task.Task[])',0,'public void run(Task[] tasks) {\r\n    HashSet taskSet = new HashSet(Arrays.asList(tasks));\r\n    myModifiedTasks.addAll(taskSet);\r\n    TaskContainmentHierarchyFacade containmentFacade = createContainmentFacade();\r\n    while (!(taskSet.isEmpty())) {\r\n        recalculateSupertaskScheduleBottomUp(taskSet, containmentFacade);\r\n        taskSet.clear();\r\n        for (Iterator modified = myModifiedTasks.iterator(); modified.hasNext();) {\r\n            Task nextTask = ((Task) (modified.next()));\r\n            Task supertask = containmentFacade.getContainer(nextTask);\r\n            if (supertask != null) {\r\n                taskSet.add(supertask);\r\n            }\r\n        }\r\n        myModifiedTasks.clear();\r\n    } \r\n    myModifiedTasks.clear();\r\n}'),(3428,'Set supertasks','java.util.Set',0,576,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm$AlgorithmImpl',4563,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm$AlgorithmImpl.recalculateSupertaskScheduleBottomUp(java.util.Set,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'private void recalculateSupertaskScheduleBottomUp(Set supertasks, TaskContainmentHierarchyFacade containmentFacade) {\r\n    for (Iterator it = supertasks.iterator(); it.hasNext();) {\r\n        Task nextSupertask = ((Task) (it.next()));\r\n        recalculateSupertaskSchedule(nextSupertask, containmentFacade);\r\n    }\r\n}'),(3429,'TaskContainmentHierarchyFacade containmentFacade','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,576,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm$AlgorithmImpl',4563,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm$AlgorithmImpl.recalculateSupertaskScheduleBottomUp(java.util.Set,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'private void recalculateSupertaskScheduleBottomUp(Set supertasks, TaskContainmentHierarchyFacade containmentFacade) {\r\n    for (Iterator it = supertasks.iterator(); it.hasNext();) {\r\n        Task nextSupertask = ((Task) (it.next()));\r\n        recalculateSupertaskSchedule(nextSupertask, containmentFacade);\r\n    }\r\n}'),(3430,'final Task supertask','net.sourceforge.ganttproject.task.Task',548,576,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm$AlgorithmImpl',4562,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm$AlgorithmImpl.recalculateSupertaskSchedule(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'private void recalculateSupertaskSchedule(final Task supertask, final TaskContainmentHierarchyFacade containmentFacade) {\r\n    Task[] nested = containmentFacade.getNestedTasks(supertask);\r\n    if ((nested.length) == 0) {\r\n        return;\r\n    }\r\n    GanttCalendar maxEnd = null;\r\n    GanttCalendar minStart = null;\r\n    for (int i = 0; i < (nested.length); i++) {\r\n        Task nextNested = nested[i];\r\n        GanttCalendar nextStart = nextNested.getStart();\r\n        if ((minStart == null) || ((nextStart.compareTo(minStart)) < 0)) {\r\n            minStart = nextStart;\r\n        }\r\n        GanttCalendar nextEnd = nextNested.getEnd();\r\n        if ((maxEnd == null) || ((nextEnd.compareTo(maxEnd)) > 0)) {\r\n            maxEnd = nextEnd;\r\n        }\r\n    }\r\n    TaskMutator mutator = supertask.createMutator();\r\n    if ((minStart.compareTo(supertask.getStart())) != 0) {\r\n        // System.err.println(\"recalculating supertask=\"+supertask.getTaskID()+\" start=\"+minStart);\r\n        // modifyTaskStart(supertask, minStart);\r\n        mutator.setStart(minStart);\r\n        myModifiedTasks.add(supertask);\r\n    }\r\n    if ((maxEnd.compareTo(supertask.getEnd())) != 0) {\r\n        // modifyTaskEnd(supertask, maxEnd);\r\n        mutator.setEnd(maxEnd);\r\n        myModifiedTasks.add(supertask);\r\n    }\r\n    mutator.commit();\r\n}'),(3431,'final TaskContainmentHierarchyFacade containmentFacade','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,576,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm$AlgorithmImpl',4562,'net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm$AlgorithmImpl.recalculateSupertaskSchedule(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'private void recalculateSupertaskSchedule(final Task supertask, final TaskContainmentHierarchyFacade containmentFacade) {\r\n    Task[] nested = containmentFacade.getNestedTasks(supertask);\r\n    if ((nested.length) == 0) {\r\n        return;\r\n    }\r\n    GanttCalendar maxEnd = null;\r\n    GanttCalendar minStart = null;\r\n    for (int i = 0; i < (nested.length); i++) {\r\n        Task nextNested = nested[i];\r\n        GanttCalendar nextStart = nextNested.getStart();\r\n        if ((minStart == null) || ((nextStart.compareTo(minStart)) < 0)) {\r\n            minStart = nextStart;\r\n        }\r\n        GanttCalendar nextEnd = nextNested.getEnd();\r\n        if ((maxEnd == null) || ((nextEnd.compareTo(maxEnd)) > 0)) {\r\n            maxEnd = nextEnd;\r\n        }\r\n    }\r\n    TaskMutator mutator = supertask.createMutator();\r\n    if ((minStart.compareTo(supertask.getStart())) != 0) {\r\n        // System.err.println(\"recalculating supertask=\"+supertask.getTaskID()+\" start=\"+minStart);\r\n        // modifyTaskStart(supertask, minStart);\r\n        mutator.setStart(minStart);\r\n        myModifiedTasks.add(supertask);\r\n    }\r\n    if ((maxEnd.compareTo(supertask.getEnd())) != 0) {\r\n        // modifyTaskEnd(supertask, maxEnd);\r\n        mutator.setEnd(maxEnd);\r\n        myModifiedTasks.add(supertask);\r\n    }\r\n    mutator.commit();\r\n}'),(3432,'boolean enabled','boolean',0,578,'net.sourceforge.ganttproject.task.algorithm.AlgorithmBase',4567,'net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.setEnabled(boolean)',0,'public void setEnabled(boolean enabled) {\r\n    isEnabled = enabled;\r\n}'),(3433,'FindPossibleDependeesAlgorithm myFindPossibleDependeesAlgorithm','net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm',582,579,'net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection',4568,'net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.-init-(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm)',0,'public AlgorithmCollection(FindPossibleDependeesAlgorithm myFindPossibleDependeesAlgorithm, RecalculateTaskScheduleAlgorithm recalculateTaskScheduleAlgorithm, AdjustTaskBoundsAlgorithm adjustTaskBoundsAlgorithm, RecalculateTaskCompletionPercentageAlgorithm completionPercentageAlgorithm, ProjectBoundsAlgorithm projectBoundsAlgorithm) {\r\n    this.myFindPossibleDependeesAlgorithm = myFindPossibleDependeesAlgorithm;\r\n    myRecalculateTaskScheduleAlgorithm = recalculateTaskScheduleAlgorithm;\r\n    myAdjustTaskBoundsAlgorithm = adjustTaskBoundsAlgorithm;\r\n    myCompletionPercentageAlgorithm = completionPercentageAlgorithm;\r\n    myProjectBoundsAlgorithm = projectBoundsAlgorithm;\r\n    myShiftTaskTreeAlgorithm = new ShiftTaskTreeAlgorithm();\r\n}'),(3434,'RecalculateTaskScheduleAlgorithm recalculateTaskScheduleAlgorithm','net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',587,579,'net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection',4568,'net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.-init-(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm)',0,'public AlgorithmCollection(FindPossibleDependeesAlgorithm myFindPossibleDependeesAlgorithm, RecalculateTaskScheduleAlgorithm recalculateTaskScheduleAlgorithm, AdjustTaskBoundsAlgorithm adjustTaskBoundsAlgorithm, RecalculateTaskCompletionPercentageAlgorithm completionPercentageAlgorithm, ProjectBoundsAlgorithm projectBoundsAlgorithm) {\r\n    this.myFindPossibleDependeesAlgorithm = myFindPossibleDependeesAlgorithm;\r\n    myRecalculateTaskScheduleAlgorithm = recalculateTaskScheduleAlgorithm;\r\n    myAdjustTaskBoundsAlgorithm = adjustTaskBoundsAlgorithm;\r\n    myCompletionPercentageAlgorithm = completionPercentageAlgorithm;\r\n    myProjectBoundsAlgorithm = projectBoundsAlgorithm;\r\n    myShiftTaskTreeAlgorithm = new ShiftTaskTreeAlgorithm();\r\n}'),(3435,'AdjustTaskBoundsAlgorithm adjustTaskBoundsAlgorithm','net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm',577,579,'net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection',4568,'net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.-init-(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm)',0,'public AlgorithmCollection(FindPossibleDependeesAlgorithm myFindPossibleDependeesAlgorithm, RecalculateTaskScheduleAlgorithm recalculateTaskScheduleAlgorithm, AdjustTaskBoundsAlgorithm adjustTaskBoundsAlgorithm, RecalculateTaskCompletionPercentageAlgorithm completionPercentageAlgorithm, ProjectBoundsAlgorithm projectBoundsAlgorithm) {\r\n    this.myFindPossibleDependeesAlgorithm = myFindPossibleDependeesAlgorithm;\r\n    myRecalculateTaskScheduleAlgorithm = recalculateTaskScheduleAlgorithm;\r\n    myAdjustTaskBoundsAlgorithm = adjustTaskBoundsAlgorithm;\r\n    myCompletionPercentageAlgorithm = completionPercentageAlgorithm;\r\n    myProjectBoundsAlgorithm = projectBoundsAlgorithm;\r\n    myShiftTaskTreeAlgorithm = new ShiftTaskTreeAlgorithm();\r\n}'),(3436,'RecalculateTaskCompletionPercentageAlgorithm completionPercentageAlgorithm','net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm',586,579,'net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection',4568,'net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.-init-(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm)',0,'public AlgorithmCollection(FindPossibleDependeesAlgorithm myFindPossibleDependeesAlgorithm, RecalculateTaskScheduleAlgorithm recalculateTaskScheduleAlgorithm, AdjustTaskBoundsAlgorithm adjustTaskBoundsAlgorithm, RecalculateTaskCompletionPercentageAlgorithm completionPercentageAlgorithm, ProjectBoundsAlgorithm projectBoundsAlgorithm) {\r\n    this.myFindPossibleDependeesAlgorithm = myFindPossibleDependeesAlgorithm;\r\n    myRecalculateTaskScheduleAlgorithm = recalculateTaskScheduleAlgorithm;\r\n    myAdjustTaskBoundsAlgorithm = adjustTaskBoundsAlgorithm;\r\n    myCompletionPercentageAlgorithm = completionPercentageAlgorithm;\r\n    myProjectBoundsAlgorithm = projectBoundsAlgorithm;\r\n    myShiftTaskTreeAlgorithm = new ShiftTaskTreeAlgorithm();\r\n}'),(3437,'ProjectBoundsAlgorithm projectBoundsAlgorithm','net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm',585,579,'net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection',4568,'net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.-init-(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm)',0,'public AlgorithmCollection(FindPossibleDependeesAlgorithm myFindPossibleDependeesAlgorithm, RecalculateTaskScheduleAlgorithm recalculateTaskScheduleAlgorithm, AdjustTaskBoundsAlgorithm adjustTaskBoundsAlgorithm, RecalculateTaskCompletionPercentageAlgorithm completionPercentageAlgorithm, ProjectBoundsAlgorithm projectBoundsAlgorithm) {\r\n    this.myFindPossibleDependeesAlgorithm = myFindPossibleDependeesAlgorithm;\r\n    myRecalculateTaskScheduleAlgorithm = recalculateTaskScheduleAlgorithm;\r\n    myAdjustTaskBoundsAlgorithm = adjustTaskBoundsAlgorithm;\r\n    myCompletionPercentageAlgorithm = completionPercentageAlgorithm;\r\n    myProjectBoundsAlgorithm = projectBoundsAlgorithm;\r\n    myShiftTaskTreeAlgorithm = new ShiftTaskTreeAlgorithm();\r\n}'),(3438,'TaskNode root','net.sourceforge.ganttproject.task.TaskNode',572,581,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl',4576,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.-init-(net.sourceforge.ganttproject.task.TaskNode,net.sourceforge.ganttproject.calendar.GPCalendar)',0,'public CriticalPathAlgorithmImpl(TaskNode root, GPCalendar cal) {\r\n    this.root = root;\r\n    this.calendar = cal;\r\n}'),(3439,'GPCalendar cal','net.sourceforge.ganttproject.calendar.GPCalendar',146,581,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl',4576,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.-init-(net.sourceforge.ganttproject.task.TaskNode,net.sourceforge.ganttproject.calendar.GPCalendar)',0,'public CriticalPathAlgorithmImpl(TaskNode root, GPCalendar cal) {\r\n    this.root = root;\r\n    this.calendar = cal;\r\n}'),(3440,'Task successor','net.sourceforge.ganttproject.task.Task',548,581,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl',4577,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.checkCriticalTasks(net.sourceforge.ganttproject.task.Task,java.util.List)',0,'/**\r\n * Recursive method that adds critical task among predecessors of\r\n * <code>successor</code> in <code>criticalTasksList</code>\r\n *\r\n * @param successor\r\n * 		The start task.\r\n * @param criticalTasksList\r\n * 		The list in which critical tasks should be added.\r\n */\r\nprivate void checkCriticalTasks(Task successor, List criticalTasksList) {\r\n    TaskDependency[] rel = successor.getDependenciesAsDependant().toArray();\r\n    for (int i = 0; i < (rel.length); i++) {\r\n        Task t = rel[i].getDependee();\r\n        if (((t.getEnd().compareTo(successor.getStart())) == 0) || (CriticalPathAlgorithmImpl.isIntervalNonWorking(t.getEnd(), successor.getStart(), calendar))) {\r\n            criticalTasksList.add(t);\r\n            checkCriticalTasks(t, criticalTasksList);\r\n            // System.out.println(\"critical \" + t);\r\n        }\r\n        // else\r\n        // System.out.println(\"non critical \" + t);\r\n    }\r\n}'),(3441,'List criticalTasksList','java.util.List',0,581,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl',4577,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.checkCriticalTasks(net.sourceforge.ganttproject.task.Task,java.util.List)',0,'/**\r\n * Recursive method that adds critical task among predecessors of\r\n * <code>successor</code> in <code>criticalTasksList</code>\r\n *\r\n * @param successor\r\n * 		The start task.\r\n * @param criticalTasksList\r\n * 		The list in which critical tasks should be added.\r\n */\r\nprivate void checkCriticalTasks(Task successor, List criticalTasksList) {\r\n    TaskDependency[] rel = successor.getDependenciesAsDependant().toArray();\r\n    for (int i = 0; i < (rel.length); i++) {\r\n        Task t = rel[i].getDependee();\r\n        if (((t.getEnd().compareTo(successor.getStart())) == 0) || (CriticalPathAlgorithmImpl.isIntervalNonWorking(t.getEnd(), successor.getStart(), calendar))) {\r\n            criticalTasksList.add(t);\r\n            checkCriticalTasks(t, criticalTasksList);\r\n            // System.out.println(\"critical \" + t);\r\n        }\r\n        // else\r\n        // System.out.println(\"non critical \" + t);\r\n    }\r\n}'),(3442,'GanttCalendar d1','net.sourceforge.ganttproject.GanttCalendar',24,581,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl',4580,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.isIntervalNonWorking(net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.calendar.GPCalendar)',0,'private static boolean isIntervalNonWorking(GanttCalendar d1, GanttCalendar d2, GPCalendar cal) {\r\n    while ((d1.before(d2)) && ((cal.getWeekDayType(d1.getDayWeek())) != (GPCalendar.DayType.WORKING)))\r\n        d1.add(1);\r\n\r\n    return d1.equals(d2);\r\n}'),(3443,'GanttCalendar d2','net.sourceforge.ganttproject.GanttCalendar',24,581,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl',4580,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.isIntervalNonWorking(net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.calendar.GPCalendar)',0,'private static boolean isIntervalNonWorking(GanttCalendar d1, GanttCalendar d2, GPCalendar cal) {\r\n    while ((d1.before(d2)) && ((cal.getWeekDayType(d1.getDayWeek())) != (GPCalendar.DayType.WORKING)))\r\n        d1.add(1);\r\n\r\n    return d1.equals(d2);\r\n}'),(3444,'GPCalendar cal','net.sourceforge.ganttproject.calendar.GPCalendar',146,581,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl',4580,'net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.isIntervalNonWorking(net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.calendar.GPCalendar)',0,'private static boolean isIntervalNonWorking(GanttCalendar d1, GanttCalendar d2, GPCalendar cal) {\r\n    while ((d1.before(d2)) && ((cal.getWeekDayType(d1.getDayWeek())) != (GPCalendar.DayType.WORKING)))\r\n        d1.add(1);\r\n\r\n    return d1.equals(d2);\r\n}'),(3445,'Task dependant','net.sourceforge.ganttproject.task.Task',548,582,'net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm',4581,'net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm.run(net.sourceforge.ganttproject.task.Task)',0,'Task[] run(Task dependant);'),(3446,'Task dependant','net.sourceforge.ganttproject.task.Task',548,583,'net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl',4585,'net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.run(net.sourceforge.ganttproject.task.Task)',0,'public Task[] run(Task dependant) {\r\n    myContainmentFacade = createContainmentFacade();\r\n    ArrayList result = new ArrayList();\r\n    Task root = myContainmentFacade.getRootTask();\r\n    Task[] nestedTasks = myContainmentFacade.getNestedTasks(root);\r\n    processTask(nestedTasks, dependant, result);\r\n    return ((Task[]) (result.toArray(new Task[0])));\r\n}'),(3447,'Task[] taskList','net.sourceforge.ganttproject.task.Task[]',0,583,'net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl',4584,'net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.processTask(net.sourceforge.ganttproject.task.Task[],net.sourceforge.ganttproject.task.Task,java.util.ArrayList)',0,'private void processTask(Task[] taskList, Task dependant, ArrayList result) {\r\n    for (int i = 0; i < (taskList.length); i++) {\r\n        Task next = taskList[i];\r\n        if (!(next.equals(dependant))) {\r\n            Task[] nested = myContainmentFacade.getNestedTasks(next);\r\n            // if (nested.length==0) {\r\n            result.add(next);\r\n            // }\r\n            // else {\r\n            processTask(nested, dependant, result);\r\n            // }\r\n        }\r\n    }\r\n}'),(3448,'Task dependant','net.sourceforge.ganttproject.task.Task',548,583,'net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl',4584,'net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.processTask(net.sourceforge.ganttproject.task.Task[],net.sourceforge.ganttproject.task.Task,java.util.ArrayList)',0,'private void processTask(Task[] taskList, Task dependant, ArrayList result) {\r\n    for (int i = 0; i < (taskList.length); i++) {\r\n        Task next = taskList[i];\r\n        if (!(next.equals(dependant))) {\r\n            Task[] nested = myContainmentFacade.getNestedTasks(next);\r\n            // if (nested.length==0) {\r\n            result.add(next);\r\n            // }\r\n            // else {\r\n            processTask(nested, dependant, result);\r\n            // }\r\n        }\r\n    }\r\n}'),(3449,'ArrayList result','java.util.ArrayList',0,583,'net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl',4584,'net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.processTask(net.sourceforge.ganttproject.task.Task[],net.sourceforge.ganttproject.task.Task,java.util.ArrayList)',0,'private void processTask(Task[] taskList, Task dependant, ArrayList result) {\r\n    for (int i = 0; i < (taskList.length); i++) {\r\n        Task next = taskList[i];\r\n        if (!(next.equals(dependant))) {\r\n            Task[] nested = myContainmentFacade.getNestedTasks(next);\r\n            // if (nested.length==0) {\r\n            result.add(next);\r\n            // }\r\n            // else {\r\n            processTask(nested, dependant, result);\r\n            // }\r\n        }\r\n    }\r\n}'),(3450,'Date lowerBound','java.util.Date',0,584,'net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm$Result',4589,'net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm$Result.-init-(java.util.Date,java.util.Date)',0,'private Result(Date lowerBound, Date upperBound) {\r\n    this.lowerBound = lowerBound;\r\n    this.upperBound = upperBound;\r\n}'),(3451,'Date upperBound','java.util.Date',0,584,'net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm$Result',4589,'net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm$Result.-init-(java.util.Date,java.util.Date)',0,'private Result(Date lowerBound, Date upperBound) {\r\n    this.lowerBound = lowerBound;\r\n    this.upperBound = upperBound;\r\n}'),(3452,'/* <Task> */\r\nCollection tasks','java.util.Collection',0,585,'net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm',4588,'net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.getBounds(java.util.Collection)',0,'public ProjectBoundsAlgorithm.Result getBounds(/* <Task> */\r\nCollection tasks) {\r\n    Date lowerBound = null;\r\n    Date upperBound = null;\r\n    for (Iterator it = tasks.iterator(); it.hasNext();) {\r\n        Task next = ((Task) (it.next()));\r\n        Date start = next.getStart().getTime();\r\n        Date end = next.getEnd().getTime();\r\n        if ((lowerBound == null) || (lowerBound.after(start))) {\r\n            lowerBound = start;\r\n        }\r\n        if ((upperBound == null) || (upperBound.before(end))) {\r\n            upperBound = end;\r\n        }\r\n    }\r\n    return new ProjectBoundsAlgorithm.Result(lowerBound, upperBound);\r\n}'),(3453,'Task task','net.sourceforge.ganttproject.task.Task',548,586,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm',4594,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.run(net.sourceforge.ganttproject.task.Task)',0,'public void run(Task task) {\r\n    TaskContainmentHierarchyFacade facade = createContainmentFacade();\r\n    recalculateSupertaskCompletionPercentageBottomUp(task, facade);\r\n}'),(3454,'Task task','net.sourceforge.ganttproject.task.Task',548,586,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm',4593,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentageBottomUp(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'private void recalculateSupertaskCompletionPercentageBottomUp(Task task, TaskContainmentHierarchyFacade facade) {\r\n    while (task != null) {\r\n        recalculateSupertaskCompletionPercentage(task, facade);\r\n        task = facade.getContainer(task);\r\n    } \r\n}'),(3455,'TaskContainmentHierarchyFacade facade','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,586,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm',4593,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentageBottomUp(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'private void recalculateSupertaskCompletionPercentageBottomUp(Task task, TaskContainmentHierarchyFacade facade) {\r\n    while (task != null) {\r\n        recalculateSupertaskCompletionPercentage(task, facade);\r\n        task = facade.getContainer(task);\r\n    } \r\n}'),(3456,'Task task','net.sourceforge.ganttproject.task.Task',548,586,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm',4592,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentage(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'private void recalculateSupertaskCompletionPercentage(Task task, TaskContainmentHierarchyFacade facade) {\r\n    Task[] nestedTasks = facade.getNestedTasks(task);\r\n    if ((nestedTasks.length) > 0) {\r\n        int completedDays = 0;\r\n        long plannedDays = 0;\r\n        for (int i = 0; i < (nestedTasks.length); i++) {\r\n            Task next = nestedTasks[i];\r\n            long nextDuration = next.getDuration().getLength();\r\n            completedDays += nextDuration * (next.getCompletionPercentage());\r\n            plannedDays += nextDuration;\r\n        }\r\n        int completionPercentage = ((int) (completedDays / plannedDays));\r\n        task.setCompletionPercentage(completionPercentage);\r\n    }\r\n}'),(3457,'TaskContainmentHierarchyFacade facade','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,586,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm',4592,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentage(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade)',0,'private void recalculateSupertaskCompletionPercentage(Task task, TaskContainmentHierarchyFacade facade) {\r\n    Task[] nestedTasks = facade.getNestedTasks(task);\r\n    if ((nestedTasks.length) > 0) {\r\n        int completedDays = 0;\r\n        long plannedDays = 0;\r\n        for (int i = 0; i < (nestedTasks.length); i++) {\r\n            Task next = nestedTasks[i];\r\n            long nextDuration = next.getDuration().getLength();\r\n            completedDays += nextDuration * (next.getCompletionPercentage());\r\n            plannedDays += nextDuration;\r\n        }\r\n        int completionPercentage = ((int) (completedDays / plannedDays));\r\n        task.setCompletionPercentage(completionPercentage);\r\n    }\r\n}'),(3458,'AdjustTaskBoundsAlgorithm adjuster','net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm',577,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4595,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.-init-(net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm)',0,'public RecalculateTaskScheduleAlgorithm(AdjustTaskBoundsAlgorithm adjuster) {\r\n    myAdjuster = adjuster;\r\n}'),(3459,'Task changedTask','net.sourceforge.ganttproject.task.Task',548,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4605,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run(net.sourceforge.ganttproject.task.Task)',0,'public void run(Task changedTask) throws TaskDependencyException {\r\n    if (!(isEnabled())) {\r\n        return;\r\n    }\r\n    isRunning = true;\r\n    (myEntranceCounter)++;\r\n    myMarkedTasks.clear();\r\n    buildDistanceGraph(changedTask);\r\n    fulfilDependencies();\r\n    myDistance2dependencyList.clear();\r\n    myModifiedTasks.add(changedTask);\r\n    myAdjuster.run(((Task[]) (myModifiedTasks.toArray(new Task[0]))));\r\n    myDistance2dependencyList.clear();\r\n    myModifiedTasks.clear();\r\n    (myEntranceCounter)--;\r\n    isRunning = false;\r\n}'),(3460,'Set taskSet','java.util.Set',0,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4604,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run(java.util.Set)',0,'public void run(Set taskSet) throws TaskDependencyException {\r\n    if (!(isEnabled())) {\r\n        return;\r\n    }\r\n    isRunning = true;\r\n    (myEntranceCounter)++;\r\n    myMarkedTasks.clear();\r\n    for (Iterator tasks = taskSet.iterator(); tasks.hasNext();) {\r\n        Task nextTask = ((Task) (tasks.next()));\r\n        buildDistanceGraph(nextTask);\r\n        fulfilDependencies();\r\n        myDistance2dependencyList.clear();\r\n        myModifiedTasks.add(nextTask);\r\n    }\r\n    myAdjuster.run(((Task[]) (myModifiedTasks.toArray(new Task[0]))));\r\n    myDistance2dependencyList.clear();\r\n    myModifiedTasks.clear();\r\n    (myEntranceCounter)--;\r\n    isRunning = false;\r\n}'),(3461,'TaskContainmentHierarchyFacade facade','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade',552,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4606,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.traverse(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.util.Set)',0,'private void traverse(TaskContainmentHierarchyFacade facade, Task root, Set independentTasks) {\r\n    TaskDependency[] asDependant = root.getDependenciesAsDependant().toArray();\r\n    if ((asDependant.length) == 0) {\r\n        independentTasks.add(root);\r\n    }\r\n    Task[] nestedTasks = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        traverse(facade, nestedTasks[i], independentTasks);\r\n    }\r\n}'),(3462,'Task root','net.sourceforge.ganttproject.task.Task',548,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4606,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.traverse(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.util.Set)',0,'private void traverse(TaskContainmentHierarchyFacade facade, Task root, Set independentTasks) {\r\n    TaskDependency[] asDependant = root.getDependenciesAsDependant().toArray();\r\n    if ((asDependant.length) == 0) {\r\n        independentTasks.add(root);\r\n    }\r\n    Task[] nestedTasks = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        traverse(facade, nestedTasks[i], independentTasks);\r\n    }\r\n}'),(3463,'Set independentTasks','java.util.Set',0,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4606,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.traverse(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,net.sourceforge.ganttproject.task.Task,java.util.Set)',0,'private void traverse(TaskContainmentHierarchyFacade facade, Task root, Set independentTasks) {\r\n    TaskDependency[] asDependant = root.getDependenciesAsDependant().toArray();\r\n    if ((asDependant.length) == 0) {\r\n        independentTasks.add(root);\r\n    }\r\n    Task[] nestedTasks = facade.getNestedTasks(root);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        traverse(facade, nestedTasks[i], independentTasks);\r\n    }\r\n}'),(3464,'TaskDependency dependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4599,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.fulfilConstraints(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'private void fulfilConstraints(TaskDependency dependency) throws TaskDependencyException {\r\n    Task dependant = dependency.getDependant();\r\n    TaskDependency[] depsAsDependant = dependant.getDependenciesAsDependant().toArray();\r\n    if ((depsAsDependant.length) > 0) {\r\n        ArrayList startLaterVariations = new ArrayList();\r\n        ArrayList startEarlierVariations = new ArrayList();\r\n        ArrayList noVariations = new ArrayList();\r\n        // \r\n        for (int i = 0; i < (depsAsDependant.length); i++) {\r\n            TaskDependency next = depsAsDependant[i];\r\n            TaskDependencyConstraint.Collision nextCollision = next.getConstraint().getCollision();\r\n            GanttCalendar acceptableStart = nextCollision.getAcceptableStart();\r\n            switch (nextCollision.getVariation()) {\r\n                case TaskDependencyConstraint.Collision.START_EARLIER_VARIATION :\r\n                    {\r\n                        startEarlierVariations.add(acceptableStart);\r\n                        break;\r\n                    }\r\n                case TaskDependencyConstraint.Collision.START_LATER_VARIATION :\r\n                    {\r\n                        startLaterVariations.add(acceptableStart);\r\n                        break;\r\n                    }\r\n                case TaskDependencyConstraint.Collision.NO_VARIATION :\r\n                    {\r\n                        noVariations.add(acceptableStart);\r\n                        break;\r\n                    }\r\n            }\r\n        }\r\n        if ((noVariations.size()) > 1) {\r\n            throw new TaskDependencyException(((((\"Failed to fulfill constraints of task=\" + dependant) + \". There are \") + (noVariations.size())) + \" constraints which dont allow for task start variation\"));\r\n        }\r\n        // \r\n        Collections.sort(startEarlierVariations);\r\n        Collections.sort(startLaterVariations);\r\n        // \r\n        GanttCalendar solution;\r\n        GanttCalendar earliestStart = ((GanttCalendar) (((startEarlierVariations.size()) == 0) ? null : startEarlierVariations.get(0)));\r\n        GanttCalendar latestStart = ((GanttCalendar) (((startLaterVariations.size()) >= 0) ? startLaterVariations.get(((startLaterVariations.size()) - 1)) : null));\r\n        if ((earliestStart == null) && (latestStart == null)) {\r\n            solution = dependant.getStart();\r\n        } else {\r\n            if ((earliestStart == null) && (latestStart != null)) {\r\n                earliestStart = latestStart;\r\n            } else\r\n                if ((earliestStart != null) && (latestStart == null)) {\r\n                    latestStart = earliestStart;\r\n                }\r\n\r\n            if ((earliestStart.compareTo(latestStart)) < 0) {\r\n                throw new TaskDependencyException((\"Failed to fulfill constraints of task=\" + dependant));\r\n            }\r\n        }\r\n        if ((noVariations.size()) > 0) {\r\n            GanttCalendar notVariableStart = ((GanttCalendar) (noVariations.get(0)));\r\n            if (((notVariableStart.compareTo(earliestStart)) < 0) || ((notVariableStart.compareTo(latestStart)) > 0)) {\r\n                throw new TaskDependencyException((\"Failed to fulfill constraints of task=\" + dependant));\r\n            }\r\n            solution = notVariableStart;\r\n        } else {\r\n            solution = latestStart;\r\n        }\r\n        // \r\n        modifyTaskStart(dependant, solution);\r\n    }\r\n}'),(3465,'Task task','net.sourceforge.ganttproject.task.Task',548,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4602,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.modifyTaskStart(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.GanttCalendar)',0,'private void modifyTaskStart(Task task, GanttCalendar newStart) {\r\n    TaskMutator mutator = task.createMutatorFixingDuration();\r\n    mutator.setStart(newStart);\r\n    mutator.commit();\r\n    myModifiedTasks.add(task);\r\n}'),(3466,'GanttCalendar newStart','net.sourceforge.ganttproject.GanttCalendar',24,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4602,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.modifyTaskStart(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.GanttCalendar)',0,'private void modifyTaskStart(Task task, GanttCalendar newStart) {\r\n    TaskMutator mutator = task.createMutatorFixingDuration();\r\n    mutator.setStart(newStart);\r\n    mutator.commit();\r\n    myModifiedTasks.add(task);\r\n}'),(3467,'Task changedTask','net.sourceforge.ganttproject.task.Task',548,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4596,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(net.sourceforge.ganttproject.task.Task)',0,'private void buildDistanceGraph(Task changedTask) {\r\n    TaskDependency[] depsAsDependee = changedTask.getDependenciesAsDependee().toArray();\r\n    buildDistanceGraph(depsAsDependee, 1);\r\n}'),(3468,'TaskDependency[] deps','net.sourceforge.ganttproject.task.dependency.TaskDependency[]',0,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4597,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(net.sourceforge.ganttproject.task.dependency.TaskDependency[],int)',0,'private void buildDistanceGraph(TaskDependency[] deps, int distance) {\r\n    if ((deps.length) == 0) {\r\n        return;\r\n    }\r\n    Integer key = new Integer(distance);\r\n    List depsList = ((List) (myDistance2dependencyList.get(key)));\r\n    if (depsList == null) {\r\n        depsList = new ArrayList();\r\n        myDistance2dependencyList.put(key, depsList);\r\n    }\r\n    depsList.addAll(Arrays.asList(deps));\r\n    for (int i = 0; i < (deps.length); i++) {\r\n        Task dependant = deps[i].getDependant();\r\n        TaskDependency[] nextStepDeps = dependant.getDependenciesAsDependee().toArray();\r\n        buildDistanceGraph(nextStepDeps, (++distance));\r\n    }\r\n}'),(3469,'int distance','int',0,587,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm',4597,'net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(net.sourceforge.ganttproject.task.dependency.TaskDependency[],int)',0,'private void buildDistanceGraph(TaskDependency[] deps, int distance) {\r\n    if ((deps.length) == 0) {\r\n        return;\r\n    }\r\n    Integer key = new Integer(distance);\r\n    List depsList = ((List) (myDistance2dependencyList.get(key)));\r\n    if (depsList == null) {\r\n        depsList = new ArrayList();\r\n        myDistance2dependencyList.put(key, depsList);\r\n    }\r\n    depsList.addAll(Arrays.asList(deps));\r\n    for (int i = 0; i < (deps.length); i++) {\r\n        Task dependant = deps[i].getDependant();\r\n        TaskDependency[] nextStepDeps = dependant.getDependenciesAsDependee().toArray();\r\n        buildDistanceGraph(nextStepDeps, (++distance));\r\n    }\r\n}'),(3470,'Task rootTask','net.sourceforge.ganttproject.task.Task',548,588,'net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm',4608,'net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.run(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskLength)',0,'public void run(Task rootTask, TaskLength shift) {\r\n    shiftTask(rootTask, shift);\r\n}'),(3471,'TaskLength shift','net.sourceforge.ganttproject.task.TaskLength',562,588,'net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm',4608,'net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.run(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskLength)',0,'public void run(Task rootTask, TaskLength shift) {\r\n    shiftTask(rootTask, shift);\r\n}'),(3472,'Task rootTask','net.sourceforge.ganttproject.task.Task',548,588,'net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm',4609,'net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.shiftTask(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskLength)',0,'private void shiftTask(Task rootTask, TaskLength shift) {\r\n    rootTask.shift(shift);\r\n    Task[] nestedTasks = rootTask.getManager().getTaskHierarchy().getNestedTasks(rootTask);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        Task next = nestedTasks[i];\r\n        shiftTask(next, shift);\r\n    }\r\n}'),(3473,'TaskLength shift','net.sourceforge.ganttproject.task.TaskLength',562,588,'net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm',4609,'net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.shiftTask(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.TaskLength)',0,'private void shiftTask(Task rootTask, TaskLength shift) {\r\n    rootTask.shift(shift);\r\n    Task[] nestedTasks = rootTask.getManager().getTaskHierarchy().getNestedTasks(rootTask);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        Task next = nestedTasks[i];\r\n        shiftTask(next, shift);\r\n    }\r\n}'),(3474,'/* <TaskActivity> */\r\nList tasks','java.util.List',0,589,'net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm',4611,'net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm.sortByStartDate(java.util.List)',0,'public void sortByStartDate(/* <TaskActivity> */\r\nList tasks) {\r\n    Collections.sort(tasks, mySortActivitiesByStartDateComparator);\r\n}'),(3475,'/* <Task> */\r\nList tasks','java.util.List',0,589,'net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm',4612,'net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm.sortTasksByStartDate(java.util.List)',0,'public void sortTasksByStartDate(/* <Task> */\r\nList tasks) {\r\n    Collections.sort(tasks, mySortTasksByStartDateComparator);\r\n}'),(3476,'TaskDependency dep','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,590,'net.sourceforge.ganttproject.task.dependency.EventDispatcher',4613,'net.sourceforge.ganttproject.task.dependency.EventDispatcher.fireDependencyAdded(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'void fireDependencyAdded(TaskDependency dep);'),(3477,'TaskDependency dep','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,590,'net.sourceforge.ganttproject.task.dependency.EventDispatcher',4614,'net.sourceforge.ganttproject.task.dependency.EventDispatcher.fireDependencyRemoved(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'void fireDependencyRemoved(TaskDependency dep);'),(3478,'TaskManager taskManager','net.sourceforge.ganttproject.task.TaskManager',565,591,'net.sourceforge.ganttproject.task.dependency.LoopDetector',4615,'net.sourceforge.ganttproject.task.dependency.LoopDetector.-init-(net.sourceforge.ganttproject.task.TaskManager)',0,'public LoopDetector(TaskManager taskManager) {\r\n    myTaskManager = taskManager;\r\n}'),(3479,'TaskDependency dep','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,591,'net.sourceforge.ganttproject.task.dependency.LoopDetector',4617,'net.sourceforge.ganttproject.task.dependency.LoopDetector.isLooping(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'public boolean isLooping(TaskDependency dep) {\r\n    Set checked = new LinkedHashSet();\r\n    checked.add(dep.getDependee());\r\n    return isLooping(checked, dep.getDependant());\r\n}'),(3480,'Set checked','java.util.Set',0,591,'net.sourceforge.ganttproject.task.dependency.LoopDetector',4616,'net.sourceforge.ganttproject.task.dependency.LoopDetector.isLooping(java.util.Set,net.sourceforge.ganttproject.task.Task)',0,'private boolean isLooping(Set checked, Task incoming) {\r\n    boolean result = false;\r\n    Set newChecked = new LinkedHashSet(checked);\r\n    newChecked.add(incoming);\r\n    TaskDependency[] nextDeps = incoming.getDependenciesAsDependee().toArray();\r\n    for (int i = 0; (!result) && (i < (nextDeps.length)); i++) {\r\n        if (!(newChecked.contains(nextDeps[i].getDependant()))) {\r\n            result = isLooping(newChecked, nextDeps[i].getDependant());\r\n        } else {\r\n            result = true;\r\n        }\r\n    }\r\n    if (!result) {\r\n        Task supertask = myTaskManager.getTaskHierarchy().getContainer(incoming);\r\n        if ((supertask != null) && ((myTaskManager.getTaskHierarchy().getRootTask()) != supertask)) {\r\n            result = isLooping(newChecked, supertask);\r\n        }\r\n    }\r\n    return result;\r\n}'),(3481,'Task incoming','net.sourceforge.ganttproject.task.Task',548,591,'net.sourceforge.ganttproject.task.dependency.LoopDetector',4616,'net.sourceforge.ganttproject.task.dependency.LoopDetector.isLooping(java.util.Set,net.sourceforge.ganttproject.task.Task)',0,'private boolean isLooping(Set checked, Task incoming) {\r\n    boolean result = false;\r\n    Set newChecked = new LinkedHashSet(checked);\r\n    newChecked.add(incoming);\r\n    TaskDependency[] nextDeps = incoming.getDependenciesAsDependee().toArray();\r\n    for (int i = 0; (!result) && (i < (nextDeps.length)); i++) {\r\n        if (!(newChecked.contains(nextDeps[i].getDependant()))) {\r\n            result = isLooping(newChecked, nextDeps[i].getDependant());\r\n        } else {\r\n            result = true;\r\n        }\r\n    }\r\n    if (!result) {\r\n        Task supertask = myTaskManager.getTaskHierarchy().getContainer(incoming);\r\n        if ((supertask != null) && ((myTaskManager.getTaskHierarchy().getRootTask()) != supertask)) {\r\n            result = isLooping(newChecked, supertask);\r\n        }\r\n    }\r\n    return result;\r\n}'),(3482,'Task dependant','net.sourceforge.ganttproject.task.Task',548,592,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection',4619,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'TaskDependency createDependency(Task dependant, Task dependee) throws TaskDependencyException;'),(3483,'net.sourceforge.ganttproject.task.dependency.TaskDependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,592,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection',4619,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',1,'TaskDependency createDependency(Task dependant, Task dependee) throws TaskDependencyException;'),(3484,'Task dependee','net.sourceforge.ganttproject.task.Task',548,592,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection',4619,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'TaskDependency createDependency(Task dependant, Task dependee) throws TaskDependencyException;'),(3485,'Task dependant','net.sourceforge.ganttproject.task.Task',548,592,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection',4620,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException;'),(3486,'net.sourceforge.ganttproject.task.dependency.TaskDependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,592,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection',4620,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',1,'TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException;'),(3487,'Task dependee','net.sourceforge.ganttproject.task.Task',548,592,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection',4620,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException;'),(3488,'TaskDependencyConstraint constraint','net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint',606,592,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection',4620,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException;'),(3489,'TaskDependency dependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,592,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection',4621,'net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection.deleteDependency(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'void deleteDependency(TaskDependency dependency);'),(3490,'Task task','net.sourceforge.ganttproject.task.Task',548,593,'net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey',4622,'net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey.-init-(net.sourceforge.ganttproject.task.Task)',0,'public RangeSearchFromKey(Task task) {\r\n    super((-1), task.getTaskID(), 0);\r\n}'),(3491,'Task task','net.sourceforge.ganttproject.task.Task',548,594,'net.sourceforge.ganttproject.task.dependency.RangeSearchToKey',4623,'net.sourceforge.ganttproject.task.dependency.RangeSearchToKey.-init-(net.sourceforge.ganttproject.task.Task)',0,'public RangeSearchToKey(Task task) {\r\n    super(3, task.getTaskID(), 0);\r\n}'),(3492,'int type','int',0,595,'net.sourceforge.ganttproject.task.dependency.SearchKey',4624,'net.sourceforge.ganttproject.task.dependency.SearchKey.-init-(int,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl)',0,'public SearchKey(int type, TaskDependencyImpl taskDependency) {\r\n    myType = type;\r\n    Task firstTask;\r\n    Task secondTask;\r\n    switch (type) {\r\n        case SearchKey.DEPENDANT :\r\n            {\r\n                firstTask = taskDependency.getDependant();\r\n                secondTask = taskDependency.getDependee();\r\n                break;\r\n            }\r\n        case SearchKey.DEPENDEE :\r\n            {\r\n                firstTask = taskDependency.getDependee();\r\n                secondTask = taskDependency.getDependant();\r\n                break;\r\n            }\r\n        default :\r\n            {\r\n                throw new RuntimeException((\"Invalid type=\" + type));\r\n            }\r\n    }\r\n    myFirstTaskID = firstTask.getTaskID();\r\n    mySecondTaskID = secondTask.getTaskID();\r\n}'),(3493,'TaskDependencyImpl taskDependency','net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl',608,595,'net.sourceforge.ganttproject.task.dependency.SearchKey',4624,'net.sourceforge.ganttproject.task.dependency.SearchKey.-init-(int,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl)',0,'public SearchKey(int type, TaskDependencyImpl taskDependency) {\r\n    myType = type;\r\n    Task firstTask;\r\n    Task secondTask;\r\n    switch (type) {\r\n        case SearchKey.DEPENDANT :\r\n            {\r\n                firstTask = taskDependency.getDependant();\r\n                secondTask = taskDependency.getDependee();\r\n                break;\r\n            }\r\n        case SearchKey.DEPENDEE :\r\n            {\r\n                firstTask = taskDependency.getDependee();\r\n                secondTask = taskDependency.getDependant();\r\n                break;\r\n            }\r\n        default :\r\n            {\r\n                throw new RuntimeException((\"Invalid type=\" + type));\r\n            }\r\n    }\r\n    myFirstTaskID = firstTask.getTaskID();\r\n    mySecondTaskID = secondTask.getTaskID();\r\n}'),(3494,'int type','int',0,595,'net.sourceforge.ganttproject.task.dependency.SearchKey',4625,'net.sourceforge.ganttproject.task.dependency.SearchKey.-init-(int,int,int)',0,'protected SearchKey(int type, int firstTaskID, int secondTaskID) {\r\n    myType = type;\r\n    myFirstTaskID = firstTaskID;\r\n    mySecondTaskID = secondTaskID;\r\n}'),(3495,'int firstTaskID','int',0,595,'net.sourceforge.ganttproject.task.dependency.SearchKey',4625,'net.sourceforge.ganttproject.task.dependency.SearchKey.-init-(int,int,int)',0,'protected SearchKey(int type, int firstTaskID, int secondTaskID) {\r\n    myType = type;\r\n    myFirstTaskID = firstTaskID;\r\n    mySecondTaskID = secondTaskID;\r\n}'),(3496,'int secondTaskID','int',0,595,'net.sourceforge.ganttproject.task.dependency.SearchKey',4625,'net.sourceforge.ganttproject.task.dependency.SearchKey.-init-(int,int,int)',0,'protected SearchKey(int type, int firstTaskID, int secondTaskID) {\r\n    myType = type;\r\n    myFirstTaskID = firstTaskID;\r\n    mySecondTaskID = secondTaskID;\r\n}'),(3497,'Object o','java.lang.Object',0,595,'net.sourceforge.ganttproject.task.dependency.SearchKey',4626,'net.sourceforge.ganttproject.task.dependency.SearchKey.compareTo(java.lang.Object)',0,'public int compareTo(Object o) {\r\n    SearchKey rvalue = ((SearchKey) (o));\r\n    int result = (myFirstTaskID) - (rvalue.myFirstTaskID);\r\n    if (result == 0) {\r\n        result = (myType) - (rvalue.myType);\r\n    }\r\n    if (result == 0) {\r\n        result = (mySecondTaskID) - (rvalue.mySecondTaskID);\r\n    }\r\n    return result;\r\n}'),(3498,'Object obj','java.lang.Object',0,595,'net.sourceforge.ganttproject.task.dependency.SearchKey',4627,'net.sourceforge.ganttproject.task.dependency.SearchKey.equals(java.lang.Object)',0,'public boolean equals(Object obj) {\r\n    SearchKey rvalue = ((SearchKey) (obj));\r\n    return (((myFirstTaskID) == (rvalue.myFirstTaskID)) && ((myType) == (rvalue.myType))) && ((mySecondTaskID) == (rvalue.mySecondTaskID));\r\n}'),(3499,'String id','java.lang.String',0,597,'net.sourceforge.ganttproject.task.dependency.TaskDependency$Hardness',4643,'net.sourceforge.ganttproject.task.dependency.TaskDependency$Hardness.-init-(java.lang.String)',0,'private Hardness(String id) {\r\n    myID = id;\r\n}'),(3500,'String hardnessAsString','java.lang.String',0,597,'net.sourceforge.ganttproject.task.dependency.TaskDependency$Hardness',4645,'net.sourceforge.ganttproject.task.dependency.TaskDependency$Hardness.parse(java.lang.String)',0,'public static TaskDependency.Hardness parse(String hardnessAsString) {\r\n    if (hardnessAsString == null) {\r\n        throw new IllegalArgumentException(\"Null value is not allowed as hardness\");\r\n    }\r\n    if (\"Rubber\".equals(hardnessAsString.trim())) {\r\n        return TaskDependency.Hardness.RUBBER;\r\n    }\r\n    if (\"Strong\".equals(hardnessAsString.trim())) {\r\n        return TaskDependency.Hardness.STRONG;\r\n    }\r\n    throw new IllegalArgumentException((\"Unexpected hardness string value=\" + hardnessAsString));\r\n}'),(3501,'TaskDependencyConstraint constraint','net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint',606,598,'net.sourceforge.ganttproject.task.dependency.TaskDependency',4637,'net.sourceforge.ganttproject.task.dependency.TaskDependency.setConstraint(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'void setConstraint(TaskDependencyConstraint constraint);'),(3502,'int difference','int',0,598,'net.sourceforge.ganttproject.task.dependency.TaskDependency',4638,'net.sourceforge.ganttproject.task.dependency.TaskDependency.setDifference(int)',0,'void setDifference(int difference);'),(3503,'TaskDependency.Hardness hardness','net.sourceforge.ganttproject.task.dependency.TaskDependency$Hardness',597,598,'net.sourceforge.ganttproject.task.dependency.TaskDependency',4639,'net.sourceforge.ganttproject.task.dependency.TaskDependency.setHardness(net.sourceforge.ganttproject.task.dependency.TaskDependency$Hardness)',0,'void setHardness(TaskDependency.Hardness hardness);'),(3504,'Task task','net.sourceforge.ganttproject.task.Task',548,599,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection',4649,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection.getDependencies(net.sourceforge.ganttproject.task.Task)',0,'TaskDependency[] getDependencies(Task task);'),(3505,'Task dependant','net.sourceforge.ganttproject.task.Task',548,599,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection',4650,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection.getDependenciesAsDependant(net.sourceforge.ganttproject.task.Task)',0,'TaskDependency[] getDependenciesAsDependant(Task dependant);'),(3506,'Task dependee','net.sourceforge.ganttproject.task.Task',548,599,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection',4651,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection.getDependenciesAsDependee(net.sourceforge.ganttproject.task.Task)',0,'TaskDependency[] getDependenciesAsDependee(Task dependee);'),(3507,'Task myDependant','net.sourceforge.ganttproject.task.Task',548,599,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection',4646,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection.canCreateDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'boolean canCreateDependency(Task myDependant, Task dependee);'),(3508,'Task dependee','net.sourceforge.ganttproject.task.Task',548,599,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection',4646,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection.canCreateDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'boolean canCreateDependency(Task myDependant, Task dependee);'),(3509,'TaskContainmentHierarchyFacade.Factory taskHierarchyFactory','net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory',551,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4652,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.-init-(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.dependency.EventDispatcher)',0,'public TaskDependencyCollectionImpl(TaskContainmentHierarchyFacade.Factory taskHierarchyFactory, EventDispatcher myEventDispatcher) {\r\n    this.myEventDispatcher = myEventDispatcher;\r\n    myTaskHierarchyFactory = taskHierarchyFactory;\r\n}'),(3510,'EventDispatcher myEventDispatcher','net.sourceforge.ganttproject.task.dependency.EventDispatcher',590,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4652,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.-init-(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,net.sourceforge.ganttproject.task.dependency.EventDispatcher)',0,'public TaskDependencyCollectionImpl(TaskContainmentHierarchyFacade.Factory taskHierarchyFactory, EventDispatcher myEventDispatcher) {\r\n    this.myEventDispatcher = myEventDispatcher;\r\n    myTaskHierarchyFactory = taskHierarchyFactory;\r\n}'),(3511,'TaskDependency myDependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,600,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo',4674,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo.-init-(net.sourceforge.ganttproject.task.dependency.TaskDependency,int)',0,'public MutationInfo(TaskDependency myDependency, int myOperation) {\r\n    this.myDependency = myDependency;\r\n    this.myOperation = myOperation;\r\n}'),(3512,'int myOperation','int',0,600,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo',4674,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo.-init-(net.sourceforge.ganttproject.task.dependency.TaskDependency,int)',0,'public MutationInfo(TaskDependency myDependency, int myOperation) {\r\n    this.myDependency = myDependency;\r\n    this.myOperation = myOperation;\r\n}'),(3513,'Task task','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4669,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependencies(net.sourceforge.ganttproject.task.Task)',0,'public TaskDependency[] getDependencies(Task task) {\r\n    SearchKey fromKey = new RangeSearchFromKey(task);\r\n    SearchKey toKey = new RangeSearchToKey(task);\r\n    SortedMap submap = mySearchKey2dependency.subMap(fromKey, toKey);\r\n    return ((TaskDependency[]) (submap.values().toArray(new TaskDependency[0])));\r\n}'),(3514,'Task dependant','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4670,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependenciesAsDependant(net.sourceforge.ganttproject.task.Task)',0,'public TaskDependency[] getDependenciesAsDependant(Task dependant) {\r\n    SearchKey fromKey = new SearchKey(SearchKey.DEPENDANT, dependant.getTaskID(), (-1));\r\n    SearchKey toKey = new SearchKey(SearchKey.DEPENDEE, dependant.getTaskID(), (-1));\r\n    SortedMap submap = mySearchKey2dependency.subMap(fromKey, toKey);\r\n    return ((TaskDependency[]) (submap.values().toArray(new TaskDependency[0])));\r\n}'),(3515,'Task dependee','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4671,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependenciesAsDependee(net.sourceforge.ganttproject.task.Task)',0,'public TaskDependency[] getDependenciesAsDependee(Task dependee) {\r\n    SearchKey fromKey = new SearchKey(SearchKey.DEPENDEE, dependee.getTaskID(), (-1));\r\n    SearchKey toKey = new SearchKey(Integer.MAX_VALUE, dependee.getTaskID(), (-1));\r\n    SortedMap submap = mySearchKey2dependency.subMap(fromKey, toKey);\r\n    return ((TaskDependency[]) (submap.values().toArray(new TaskDependency[0])));\r\n}'),(3516,'Task dependant','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4661,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public TaskDependency createDependency(Task dependant, Task dependee) throws TaskDependencyException {\r\n    return createDependency(dependant, dependee, new FinishStartConstraintImpl());\r\n}'),(3517,'net.sourceforge.ganttproject.task.dependency.TaskDependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4661,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',1,'public TaskDependency createDependency(Task dependant, Task dependee) throws TaskDependencyException {\r\n    return createDependency(dependant, dependee, new FinishStartConstraintImpl());\r\n}'),(3518,'Task dependee','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4661,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public TaskDependency createDependency(Task dependant, Task dependee) throws TaskDependencyException {\r\n    return createDependency(dependant, dependee, new FinishStartConstraintImpl());\r\n}'),(3519,'Task dependant','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4662,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'public TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException {\r\n    TaskDependency result = auxCreateDependency(dependant, dependee, constraint);\r\n    addDependency(result);\r\n    return result;\r\n}'),(3520,'net.sourceforge.ganttproject.task.dependency.TaskDependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4662,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',1,'public TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException {\r\n    TaskDependency result = auxCreateDependency(dependant, dependee, constraint);\r\n    addDependency(result);\r\n    return result;\r\n}'),(3521,'Task dependee','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4662,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'public TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException {\r\n    TaskDependency result = auxCreateDependency(dependant, dependee, constraint);\r\n    addDependency(result);\r\n    return result;\r\n}'),(3522,'TaskDependencyConstraint constraint','net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint',606,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4662,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'public TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException {\r\n    TaskDependency result = auxCreateDependency(dependant, dependee, constraint);\r\n    addDependency(result);\r\n    return result;\r\n}'),(3523,'Task dependant','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4659,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.canCreateDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public boolean canCreateDependency(Task dependant, Task dependee) {\r\n    if (dependant == dependee) {\r\n        return false;\r\n    }\r\n    if (false == (getTaskHierarchy().areUnrelated(dependant, dependee))) {\r\n        return false;\r\n    }\r\n    SearchKey key = new SearchKey(SearchKey.DEPENDANT, dependant.getTaskID(), dependee.getTaskID());\r\n    if (mySearchKey2dependency.containsKey(key)) {\r\n        return false;\r\n    }\r\n    TaskDependency testDep = new TaskDependencyImpl(dependant, dependee, this);\r\n    if (isLooping(testDep)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}'),(3524,'Task dependee','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4659,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.canCreateDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public boolean canCreateDependency(Task dependant, Task dependee) {\r\n    if (dependant == dependee) {\r\n        return false;\r\n    }\r\n    if (false == (getTaskHierarchy().areUnrelated(dependant, dependee))) {\r\n        return false;\r\n    }\r\n    SearchKey key = new SearchKey(SearchKey.DEPENDANT, dependant.getTaskID(), dependee.getTaskID());\r\n    if (mySearchKey2dependency.containsKey(key)) {\r\n        return false;\r\n    }\r\n    TaskDependency testDep = new TaskDependencyImpl(dependant, dependee, this);\r\n    if (isLooping(testDep)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}'),(3525,'TaskDependency dependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4665,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.deleteDependency(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'public void deleteDependency(TaskDependency dependency) {\r\n    delete(dependency);\r\n}'),(3526,'TaskDependency dependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4667,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.fireChanged(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'void fireChanged(TaskDependency dependency) {\r\n    myEventDispatcher.fireDependencyRemoved(dependency);\r\n    myEventDispatcher.fireDependencyAdded(dependency);\r\n}'),(3527,'Task dependant','net.sourceforge.ganttproject.task.Task',548,601,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl',4679,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public TaskDependency createDependency(Task dependant, Task dependee) throws TaskDependencyException {\r\n    return createDependency(dependant, dependee, new FinishFinishConstraintImpl());\r\n}'),(3528,'net.sourceforge.ganttproject.task.dependency.TaskDependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,601,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl',4679,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',1,'public TaskDependency createDependency(Task dependant, Task dependee) throws TaskDependencyException {\r\n    return createDependency(dependant, dependee, new FinishFinishConstraintImpl());\r\n}'),(3529,'Task dependee','net.sourceforge.ganttproject.task.Task',548,601,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl',4679,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public TaskDependency createDependency(Task dependant, Task dependee) throws TaskDependencyException {\r\n    return createDependency(dependant, dependee, new FinishFinishConstraintImpl());\r\n}'),(3530,'Task dependant','net.sourceforge.ganttproject.task.Task',548,601,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl',4680,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'public TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException {\r\n    TaskDependency result = auxCreateDependency(dependant, dependee, constraint);\r\n    myQueue.put(result, new TaskDependencyCollectionImpl.MutationInfo(result, TaskDependencyCollectionImpl.MutationInfo.ADD));\r\n    return result;\r\n}'),(3531,'net.sourceforge.ganttproject.task.dependency.TaskDependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,601,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl',4680,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',1,'public TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException {\r\n    TaskDependency result = auxCreateDependency(dependant, dependee, constraint);\r\n    myQueue.put(result, new TaskDependencyCollectionImpl.MutationInfo(result, TaskDependencyCollectionImpl.MutationInfo.ADD));\r\n    return result;\r\n}'),(3532,'Task dependee','net.sourceforge.ganttproject.task.Task',548,601,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl',4680,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'public TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException {\r\n    TaskDependency result = auxCreateDependency(dependant, dependee, constraint);\r\n    myQueue.put(result, new TaskDependencyCollectionImpl.MutationInfo(result, TaskDependencyCollectionImpl.MutationInfo.ADD));\r\n    return result;\r\n}'),(3533,'TaskDependencyConstraint constraint','net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint',606,601,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl',4680,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl.createDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'public TaskDependency createDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) throws TaskDependencyException {\r\n    TaskDependency result = auxCreateDependency(dependant, dependee, constraint);\r\n    myQueue.put(result, new TaskDependencyCollectionImpl.MutationInfo(result, TaskDependencyCollectionImpl.MutationInfo.ADD));\r\n    return result;\r\n}'),(3534,'TaskDependency dependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,601,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl',4681,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl.deleteDependency(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'public void deleteDependency(TaskDependency dependency) {\r\n    TaskDependencyCollectionImpl.MutationInfo info = ((TaskDependencyCollectionImpl.MutationInfo) (myQueue.get(dependency)));\r\n    if (info == null) {\r\n        myQueue.put(dependency, new TaskDependencyCollectionImpl.MutationInfo(dependency, TaskDependencyCollectionImpl.MutationInfo.DELETE));\r\n    } else\r\n        if ((info.myOperation) == (TaskDependencyCollectionImpl.MutationInfo.ADD)) {\r\n            myQueue.remove(dependency);\r\n        }\r\n\r\n}'),(3535,'Object o','java.lang.Object',0,600,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo',4675,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo.compareTo(java.lang.Object)',0,'public int compareTo(Object o) {\r\n    TaskDependencyCollectionImpl.MutationInfo rvalue = ((TaskDependencyCollectionImpl.MutationInfo) (o));\r\n    return (myOrder) - (rvalue.myOrder);\r\n}'),(3536,'Task dependant','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4658,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.auxCreateDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'private TaskDependency auxCreateDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) {\r\n    TaskDependency result = new TaskDependencyImpl(dependant, dependee, this);\r\n    result.setConstraint(constraint);\r\n    result.setDifference(0);\r\n    return result;\r\n}'),(3537,'net.sourceforge.ganttproject.task.dependency.TaskDependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4658,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.auxCreateDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',1,'private TaskDependency auxCreateDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) {\r\n    TaskDependency result = new TaskDependencyImpl(dependant, dependee, this);\r\n    result.setConstraint(constraint);\r\n    result.setDifference(0);\r\n    return result;\r\n}'),(3538,'Task dependee','net.sourceforge.ganttproject.task.Task',548,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4658,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.auxCreateDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'private TaskDependency auxCreateDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) {\r\n    TaskDependency result = new TaskDependencyImpl(dependant, dependee, this);\r\n    result.setConstraint(constraint);\r\n    result.setDifference(0);\r\n    return result;\r\n}'),(3539,'TaskDependencyConstraint constraint','net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint',606,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4658,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.auxCreateDependency(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'private TaskDependency auxCreateDependency(Task dependant, Task dependee, TaskDependencyConstraint constraint) {\r\n    TaskDependency result = new TaskDependencyImpl(dependant, dependee, this);\r\n    result.setConstraint(constraint);\r\n    result.setDifference(0);\r\n    return result;\r\n}'),(3540,'TaskDependency dep','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4657,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.addDependency(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'void addDependency(TaskDependency dep) throws TaskDependencyException {\r\n    if (myDependencies.contains(dep)) {\r\n        throw new TaskDependencyException(((\"Dependency=\" + dep) + \" already exists\"));\r\n    }\r\n    if (this.isLooping(dep)) {\r\n        throw new TaskDependencyException(((\"Dependency=\" + dep) + \" is looping\"));\r\n    }\r\n    if (false == (getTaskHierarchy().areUnrelated(dep.getDependant(), dep.getDependee()))) {\r\n        throw new TaskDependencyException(((\"In dependency=\" + dep) + \" one of participants is a supertask of another\"));\r\n    }\r\n    myDependencies.add(dep);\r\n    // \r\n    mySearchKey2dependency.put(new SearchKey(SearchKey.DEPENDANT, ((TaskDependencyImpl) (dep))), dep);\r\n    mySearchKey2dependency.put(new SearchKey(SearchKey.DEPENDEE, ((TaskDependencyImpl) (dep))), dep);\r\n    myEventDispatcher.fireDependencyAdded(dep);\r\n}'),(3541,'TaskDependency dep','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4673,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.isLooping(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'boolean isLooping(TaskDependency dep) {\r\n    LoopDetector detector = new LoopDetector(dep.getDependant().getManager());\r\n    return detector.isLooping(dep);\r\n}'),(3542,'TaskDependency dep','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4655,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'boolean _isLooping(TaskDependency dep) {\r\n    Set tasksInvolved = new HashSet();\r\n    tasksInvolved.add(dep.getDependee());\r\n    return _isLooping(dep, tasksInvolved);\r\n}'),(3543,'TaskDependency dep','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4656,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(net.sourceforge.ganttproject.task.dependency.TaskDependency,java.util.Set)',0,'private boolean _isLooping(TaskDependency dep, Set tasksInvolved) {\r\n    Task dependant = dep.getDependant();\r\n    if (tasksInvolved.contains(dependant)) {\r\n        return true;\r\n    }\r\n    for (Iterator tasks = tasksInvolved.iterator(); tasks.hasNext();) {\r\n        Task nextInvolved = ((Task) (tasks.next()));\r\n        if (false == (getTaskHierarchy().areUnrelated(nextInvolved, dependant))) {\r\n            return true;\r\n        }\r\n    }\r\n    tasksInvolved.add(dependant);\r\n    {\r\n        TaskDependency[] nextDeps = dependant.getDependenciesAsDependee().toArray();\r\n        for (int i = 0; i < (nextDeps.length); i++) {\r\n            if (_isLooping(nextDeps[i], tasksInvolved)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    Task[] nestedTasks = getTaskHierarchy().getNestedTasks(dependant);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        tasksInvolved.add(nestedTasks[i]);\r\n        TaskDependency[] nextDeps = nestedTasks[i].getDependenciesAsDependee().toArray();\r\n        for (int j = 0; j < (nextDeps.length); j++) {\r\n            if (_isLooping(nextDeps[j], tasksInvolved)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    tasksInvolved.remove(dependant);\r\n    return false;\r\n}'),(3544,'Set tasksInvolved','java.util.Set',0,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4656,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(net.sourceforge.ganttproject.task.dependency.TaskDependency,java.util.Set)',0,'private boolean _isLooping(TaskDependency dep, Set tasksInvolved) {\r\n    Task dependant = dep.getDependant();\r\n    if (tasksInvolved.contains(dependant)) {\r\n        return true;\r\n    }\r\n    for (Iterator tasks = tasksInvolved.iterator(); tasks.hasNext();) {\r\n        Task nextInvolved = ((Task) (tasks.next()));\r\n        if (false == (getTaskHierarchy().areUnrelated(nextInvolved, dependant))) {\r\n            return true;\r\n        }\r\n    }\r\n    tasksInvolved.add(dependant);\r\n    {\r\n        TaskDependency[] nextDeps = dependant.getDependenciesAsDependee().toArray();\r\n        for (int i = 0; i < (nextDeps.length); i++) {\r\n            if (_isLooping(nextDeps[i], tasksInvolved)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    Task[] nestedTasks = getTaskHierarchy().getNestedTasks(dependant);\r\n    for (int i = 0; i < (nestedTasks.length); i++) {\r\n        tasksInvolved.add(nestedTasks[i]);\r\n        TaskDependency[] nextDeps = nestedTasks[i].getDependenciesAsDependee().toArray();\r\n        for (int j = 0; j < (nextDeps.length); j++) {\r\n            if (_isLooping(nextDeps[j], tasksInvolved)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    tasksInvolved.remove(dependant);\r\n    return false;\r\n}'),(3545,'TaskDependency dep','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,602,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',4664,'net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.delete(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'void delete(TaskDependency dep) {\r\n    myDependencies.remove(dep);\r\n    SearchKey key1 = new SearchKey(SearchKey.DEPENDANT, dep.getDependant().getTaskID(), dep.getDependee().getTaskID());\r\n    SearchKey key2 = new SearchKey(SearchKey.DEPENDEE, dep.getDependee().getTaskID(), dep.getDependant().getTaskID());\r\n    mySearchKey2dependency.remove(key1);\r\n    mySearchKey2dependency.remove(key2);\r\n    myEventDispatcher.fireDependencyRemoved(dep);\r\n    // SearchKey fromKey = new RangeSearchFromKey(dep.getDependant());\r\n    // SearchKey toKey = new RangeSearchToKey(dep.getDependant());\r\n    // mySearchKey2dependency.subMap(fromKey, toKey).clear();\r\n    // fromKey = new RangeSearchFromKey(dep.getDependee());\r\n    // toKey = new RangeSearchToKey(dep.getDependee());\r\n    // mySearchKey2dependency.subMap(fromKey, toKey).clear();\r\n}'),(3546,'GanttCalendar myAcceptableStart','net.sourceforge.ganttproject.GanttCalendar',24,605,'net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision',4692,'net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision.-init-(net.sourceforge.ganttproject.GanttCalendar,int,boolean)',0,'public DefaultCollision(GanttCalendar myAcceptableStart, int myVariation, boolean isActive) {\r\n    this.myAcceptableStart = myAcceptableStart;\r\n    this.myVariation = myVariation;\r\n    this.isActive = isActive;\r\n}'),(3547,'int myVariation','int',0,605,'net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision',4692,'net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision.-init-(net.sourceforge.ganttproject.GanttCalendar,int,boolean)',0,'public DefaultCollision(GanttCalendar myAcceptableStart, int myVariation, boolean isActive) {\r\n    this.myAcceptableStart = myAcceptableStart;\r\n    this.myVariation = myVariation;\r\n    this.isActive = isActive;\r\n}'),(3548,'boolean isActive','boolean',0,605,'net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision',4692,'net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision.-init-(net.sourceforge.ganttproject.GanttCalendar,int,boolean)',0,'public DefaultCollision(GanttCalendar myAcceptableStart, int myVariation, boolean isActive) {\r\n    this.myAcceptableStart = myAcceptableStart;\r\n    this.myVariation = myVariation;\r\n    this.isActive = isActive;\r\n}'),(3549,'TaskDependency dependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,606,'net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint',4688,'net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.setTaskDependency(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'void setTaskDependency(TaskDependency dependency);'),(3550,'String message','java.lang.String',0,607,'net.sourceforge.ganttproject.task.dependency.TaskDependencyException',4697,'net.sourceforge.ganttproject.task.dependency.TaskDependencyException.-init-(java.lang.String)',0,'public TaskDependencyException(String message) {\r\n    super(message);\r\n}'),(3551,'Throwable cause','java.lang.Throwable',0,607,'net.sourceforge.ganttproject.task.dependency.TaskDependencyException',4698,'net.sourceforge.ganttproject.task.dependency.TaskDependencyException.-init-(java.lang.Throwable)',0,'public TaskDependencyException(Throwable cause) {\r\n    super(cause);\r\n}'),(3552,'String message','java.lang.String',0,607,'net.sourceforge.ganttproject.task.dependency.TaskDependencyException',4699,'net.sourceforge.ganttproject.task.dependency.TaskDependencyException.-init-(java.lang.String,java.lang.Throwable)',0,'public TaskDependencyException(String message, Throwable cause) {\r\n    super(message, cause);\r\n}'),(3553,'Throwable cause','java.lang.Throwable',0,607,'net.sourceforge.ganttproject.task.dependency.TaskDependencyException',4699,'net.sourceforge.ganttproject.task.dependency.TaskDependencyException.-init-(java.lang.String,java.lang.Throwable)',0,'public TaskDependencyException(String message, Throwable cause) {\r\n    super(message, cause);\r\n}'),(3554,'Task dependant','net.sourceforge.ganttproject.task.Task',548,608,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl',4700,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl)',0,'public TaskDependencyImpl(Task dependant, Task dependee, TaskDependencyCollectionImpl collection) {\r\n    myDependant = dependant;\r\n    myDependee = dependee;\r\n    myCollection = collection;\r\n    if ((dependee == null) || (dependant == null)) {\r\n        throw new IllegalArgumentException((((\"invalid participants of dependency: dependee=\" + dependee) + \" dependant=\") + dependant));\r\n    }\r\n    myHardness = TaskDependency.Hardness.STRONG;\r\n}'),(3555,'Task dependee','net.sourceforge.ganttproject.task.Task',548,608,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl',4700,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl)',0,'public TaskDependencyImpl(Task dependant, Task dependee, TaskDependencyCollectionImpl collection) {\r\n    myDependant = dependant;\r\n    myDependee = dependee;\r\n    myCollection = collection;\r\n    if ((dependee == null) || (dependant == null)) {\r\n        throw new IllegalArgumentException((((\"invalid participants of dependency: dependee=\" + dependee) + \" dependant=\") + dependant));\r\n    }\r\n    myHardness = TaskDependency.Hardness.STRONG;\r\n}'),(3556,'TaskDependencyCollectionImpl collection','net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl',602,608,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl',4700,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl)',0,'public TaskDependencyImpl(Task dependant, Task dependee, TaskDependencyCollectionImpl collection) {\r\n    myDependant = dependant;\r\n    myDependee = dependee;\r\n    myCollection = collection;\r\n    if ((dependee == null) || (dependant == null)) {\r\n        throw new IllegalArgumentException((((\"invalid participants of dependency: dependee=\" + dependee) + \" dependant=\") + dependant));\r\n    }\r\n    myHardness = TaskDependency.Hardness.STRONG;\r\n}'),(3557,'TaskDependencyConstraint constraint','net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint',606,608,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl',4710,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setConstraint(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint)',0,'public void setConstraint(TaskDependencyConstraint constraint) {\r\n    myConstraint = constraint;\r\n    constraint.setTaskDependency(this);\r\n    myCollection.fireChanged(this);\r\n}'),(3558,'Object obj','java.lang.Object',0,608,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl',4702,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.equals(java.lang.Object)',0,'public boolean equals(Object obj) {\r\n    boolean result = obj instanceof TaskDependency;\r\n    if (result) {\r\n        TaskDependency rvalue = ((TaskDependency) (obj));\r\n        result = (myDependant.equals(rvalue.getDependant())) && (myDependee.equals(rvalue.getDependee()));\r\n    }\r\n    return result;\r\n}'),(3559,'int difference','int',0,608,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl',4711,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setDifference(int)',0,'public void setDifference(int difference) {\r\n    myDifference = difference;\r\n}'),(3560,'TaskDependency.Hardness hardness','net.sourceforge.ganttproject.task.dependency.TaskDependency$Hardness',597,608,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl',4712,'net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setHardness(net.sourceforge.ganttproject.task.dependency.TaskDependency$Hardness)',0,'public void setHardness(TaskDependency.Hardness hardness) {\r\n    myHardness = hardness;\r\n}'),(3561,'List selection','java.util.List',0,609,'net.sourceforge.ganttproject.task.dependency.TaskDependencySlice',4715,'net.sourceforge.ganttproject.task.dependency.TaskDependencySlice.clear(java.util.List)',0,'void clear(List selection);'),(3562,'Task task','net.sourceforge.ganttproject.task.Task',548,610,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant',4717,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection)',0,'public TaskDependencySliceAsDependant(Task task, TaskDependencyCollection dependencyCollection) {\r\n    super(task, dependencyCollection);\r\n}'),(3563,'TaskDependencyCollection dependencyCollection','net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection',599,610,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant',4717,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection)',0,'public TaskDependencySliceAsDependant(Task task, TaskDependencyCollection dependencyCollection) {\r\n    super(task, dependencyCollection);\r\n}'),(3564,'Task task','net.sourceforge.ganttproject.task.Task',548,611,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee',4719,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection)',0,'public TaskDependencySliceAsDependee(Task task, TaskDependencyCollection dependencyCollection) {\r\n    super(task, dependencyCollection);\r\n}'),(3565,'TaskDependencyCollection dependencyCollection','net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection',599,611,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee',4719,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection)',0,'public TaskDependencySliceAsDependee(Task task, TaskDependencyCollection dependencyCollection) {\r\n    super(task, dependencyCollection);\r\n}'),(3566,'Task task','net.sourceforge.ganttproject.task.Task',548,612,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl',4721,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection)',0,'public TaskDependencySliceImpl(Task task, TaskDependencyCollection dependencyCollection) {\r\n    myTask = task;\r\n    myDependencyCollection = dependencyCollection;\r\n}'),(3567,'TaskDependencyCollection dependencyCollection','net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection',599,612,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl',4721,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection)',0,'public TaskDependencySliceImpl(Task task, TaskDependencyCollection dependencyCollection) {\r\n    myTask = task;\r\n    myDependencyCollection = dependencyCollection;\r\n}'),(3568,'List selection','java.util.List',0,612,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl',4723,'net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.clear(java.util.List)',0,'// This function unlinks only tasks that are selected and leaves links to not selected tasks.\r\npublic void clear(List selection) {\r\n    TaskDependency[] deps = toArray();\r\n    for (int i = 0; i < (deps.length); i++) {\r\n        if ((selection.contains(deps[i].getDependant())) && (selection.contains(deps[i].getDependee()))) {\r\n            deps[i].delete();\r\n        }\r\n    }\r\n}'),(3569,'int myID','int',0,613,'net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl',4727,'net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.-init-(int,java.lang.String)',0,'public ConstraintImpl(int myID, String myName) {\r\n    this.myID = myID;\r\n    this.myName = myName;\r\n}'),(3570,'String myName','java.lang.String',0,613,'net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl',4727,'net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.-init-(int,java.lang.String)',0,'public ConstraintImpl(int myID, String myName) {\r\n    this.myID = myID;\r\n    this.myName = myName;\r\n}'),(3571,'TaskDependency dependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,613,'net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl',4733,'net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.setTaskDependency(net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'public void setTaskDependency(TaskDependency dependency) {\r\n    myDependency = dependency;\r\n}'),(3572,'GanttCalendar calendar','net.sourceforge.ganttproject.GanttCalendar',24,613,'net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl',4728,'net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.addDelay(net.sourceforge.ganttproject.GanttCalendar)',0,'public void addDelay(GanttCalendar calendar) {\r\n    int difference = myDependency.getDifference();\r\n    calendar.add(difference);\r\n    GanttCalendar solutionStart = calendar.Clone();\r\n    solutionStart.add(((-1) * (myDependency.getDifference())));\r\n    for (int i = 0; i <= difference; i++) {\r\n        if (myDependency.getDependant().getManager().getCalendar().isNonWorkingDay(solutionStart.getTime())) {\r\n            calendar.add(1);\r\n            difference++;\r\n        }\r\n        solutionStart.add(1);\r\n    }\r\n}'),(3573,'TaskActivity dependantActivity','net.sourceforge.ganttproject.task.TaskActivity',549,614,'net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl',4735,'net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.-init-(net.sourceforge.ganttproject.task.TaskActivity,net.sourceforge.ganttproject.task.TaskActivity,java.util.Date[])',0,'DependencyActivityBindingImpl(TaskActivity dependantActivity, TaskActivity dependeeActivity, Date[] alignedBounds) {\r\n    myDependantActivity = dependantActivity;\r\n    myDependeeActivity = dependeeActivity;\r\n    myAlignedBounds = alignedBounds;\r\n}'),(3574,'TaskActivity dependeeActivity','net.sourceforge.ganttproject.task.TaskActivity',549,614,'net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl',4735,'net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.-init-(net.sourceforge.ganttproject.task.TaskActivity,net.sourceforge.ganttproject.task.TaskActivity,java.util.Date[])',0,'DependencyActivityBindingImpl(TaskActivity dependantActivity, TaskActivity dependeeActivity, Date[] alignedBounds) {\r\n    myDependantActivity = dependantActivity;\r\n    myDependeeActivity = dependeeActivity;\r\n    myAlignedBounds = alignedBounds;\r\n}'),(3575,'Date[] alignedBounds','java.util.Date[]',0,614,'net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl',4735,'net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.-init-(net.sourceforge.ganttproject.task.TaskActivity,net.sourceforge.ganttproject.task.TaskActivity,java.util.Date[])',0,'DependencyActivityBindingImpl(TaskActivity dependantActivity, TaskActivity dependeeActivity, Date[] alignedBounds) {\r\n    myDependantActivity = dependantActivity;\r\n    myDependeeActivity = dependeeActivity;\r\n    myAlignedBounds = alignedBounds;\r\n}'),(3576,'TaskDependencyCollection source','net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection',599,619,'net.sourceforge.ganttproject.task.event.TaskDependencyEvent',4751,'net.sourceforge.ganttproject.task.event.TaskDependencyEvent.-init-(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'public TaskDependencyEvent(TaskDependencyCollection source, TaskDependency dependency) {\r\n    super(source);\r\n    myDependency = dependency;\r\n}'),(3577,'TaskDependency dependency','net.sourceforge.ganttproject.task.dependency.TaskDependency',598,619,'net.sourceforge.ganttproject.task.event.TaskDependencyEvent',4751,'net.sourceforge.ganttproject.task.event.TaskDependencyEvent.-init-(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependency)',0,'public TaskDependencyEvent(TaskDependencyCollection source, TaskDependency dependency) {\r\n    super(source);\r\n    myDependency = dependency;\r\n}'),(3578,'Object source','java.lang.Object',0,620,'net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',4753,'net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.-init-(java.lang.Object,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public TaskHierarchyEvent(Object source, Task myTask, Task myOldContainer, Task myNewContainer) {\r\n    super(source);\r\n    this.myNewContainer = myNewContainer;\r\n    this.myTask = myTask;\r\n    this.myOldContainer = myOldContainer;\r\n}'),(3579,'Task myTask','net.sourceforge.ganttproject.task.Task',548,620,'net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',4753,'net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.-init-(java.lang.Object,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public TaskHierarchyEvent(Object source, Task myTask, Task myOldContainer, Task myNewContainer) {\r\n    super(source);\r\n    this.myNewContainer = myNewContainer;\r\n    this.myTask = myTask;\r\n    this.myOldContainer = myOldContainer;\r\n}'),(3580,'Task myOldContainer','net.sourceforge.ganttproject.task.Task',548,620,'net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',4753,'net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.-init-(java.lang.Object,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public TaskHierarchyEvent(Object source, Task myTask, Task myOldContainer, Task myNewContainer) {\r\n    super(source);\r\n    this.myNewContainer = myNewContainer;\r\n    this.myTask = myTask;\r\n    this.myOldContainer = myOldContainer;\r\n}'),(3581,'Task myNewContainer','net.sourceforge.ganttproject.task.Task',548,620,'net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',4753,'net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.-init-(java.lang.Object,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.Task)',0,'public TaskHierarchyEvent(Object source, Task myTask, Task myOldContainer, Task myNewContainer) {\r\n    super(source);\r\n    this.myNewContainer = myNewContainer;\r\n    this.myTask = myTask;\r\n    this.myOldContainer = myOldContainer;\r\n}'),(3582,'TaskScheduleEvent e','net.sourceforge.ganttproject.task.event.TaskScheduleEvent',624,621,'net.sourceforge.ganttproject.task.event.TaskListener',4764,'net.sourceforge.ganttproject.task.event.TaskListener.taskScheduleChanged(net.sourceforge.ganttproject.task.event.TaskScheduleEvent)',0,'void taskScheduleChanged(TaskScheduleEvent e);'),(3583,'TaskDependencyEvent e','net.sourceforge.ganttproject.task.event.TaskDependencyEvent',619,621,'net.sourceforge.ganttproject.task.event.TaskListener',4757,'net.sourceforge.ganttproject.task.event.TaskListener.dependencyAdded(net.sourceforge.ganttproject.task.event.TaskDependencyEvent)',0,'void dependencyAdded(TaskDependencyEvent e);'),(3584,'TaskDependencyEvent e','net.sourceforge.ganttproject.task.event.TaskDependencyEvent',619,621,'net.sourceforge.ganttproject.task.event.TaskListener',4758,'net.sourceforge.ganttproject.task.event.TaskListener.dependencyRemoved(net.sourceforge.ganttproject.task.event.TaskDependencyEvent)',0,'void dependencyRemoved(TaskDependencyEvent e);'),(3585,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,621,'net.sourceforge.ganttproject.task.event.TaskListener',4759,'net.sourceforge.ganttproject.task.event.TaskListener.taskAdded(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'void taskAdded(TaskHierarchyEvent e);'),(3586,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,621,'net.sourceforge.ganttproject.task.event.TaskListener',4763,'net.sourceforge.ganttproject.task.event.TaskListener.taskRemoved(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'void taskRemoved(TaskHierarchyEvent e);'),(3587,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,621,'net.sourceforge.ganttproject.task.event.TaskListener',4760,'net.sourceforge.ganttproject.task.event.TaskListener.taskMoved(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'void taskMoved(TaskHierarchyEvent e);'),(3588,'TaskPropertyEvent e','net.sourceforge.ganttproject.task.event.TaskPropertyEvent',623,621,'net.sourceforge.ganttproject.task.event.TaskListener',4762,'net.sourceforge.ganttproject.task.event.TaskListener.taskPropertiesChanged(net.sourceforge.ganttproject.task.event.TaskPropertyEvent)',0,'void taskPropertiesChanged(TaskPropertyEvent e);'),(3589,'TaskPropertyEvent e','net.sourceforge.ganttproject.task.event.TaskPropertyEvent',623,621,'net.sourceforge.ganttproject.task.event.TaskListener',4761,'net.sourceforge.ganttproject.task.event.TaskListener.taskProgressChanged(net.sourceforge.ganttproject.task.event.TaskPropertyEvent)',0,'void taskProgressChanged(TaskPropertyEvent e);'),(3590,'TaskScheduleEvent e','net.sourceforge.ganttproject.task.event.TaskScheduleEvent',624,622,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter',4773,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskScheduleChanged(net.sourceforge.ganttproject.task.event.TaskScheduleEvent)',0,'public void taskScheduleChanged(TaskScheduleEvent e) {\r\n}'),(3591,'TaskDependencyEvent e','net.sourceforge.ganttproject.task.event.TaskDependencyEvent',619,622,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter',4766,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyAdded(net.sourceforge.ganttproject.task.event.TaskDependencyEvent)',0,'public void dependencyAdded(TaskDependencyEvent e) {\r\n}'),(3592,'TaskDependencyEvent e','net.sourceforge.ganttproject.task.event.TaskDependencyEvent',619,622,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter',4767,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyRemoved(net.sourceforge.ganttproject.task.event.TaskDependencyEvent)',0,'public void dependencyRemoved(TaskDependencyEvent e) {\r\n}'),(3593,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,622,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter',4768,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskAdded(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'public void taskAdded(TaskHierarchyEvent e) {\r\n}'),(3594,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,622,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter',4772,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskRemoved(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'public void taskRemoved(TaskHierarchyEvent e) {\r\n}'),(3595,'TaskHierarchyEvent e','net.sourceforge.ganttproject.task.event.TaskHierarchyEvent',620,622,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter',4769,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskMoved(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent)',0,'public void taskMoved(TaskHierarchyEvent e) {\r\n}'),(3596,'TaskPropertyEvent e','net.sourceforge.ganttproject.task.event.TaskPropertyEvent',623,622,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter',4771,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskPropertiesChanged(net.sourceforge.ganttproject.task.event.TaskPropertyEvent)',0,'public void taskPropertiesChanged(TaskPropertyEvent e) {\r\n}'),(3597,'TaskPropertyEvent e','net.sourceforge.ganttproject.task.event.TaskPropertyEvent',623,622,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter',4770,'net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskProgressChanged(net.sourceforge.ganttproject.task.event.TaskPropertyEvent)',0,'public void taskProgressChanged(TaskPropertyEvent e) {\r\n}'),(3598,'Object source','java.lang.Object',0,623,'net.sourceforge.ganttproject.task.event.TaskPropertyEvent',4774,'net.sourceforge.ganttproject.task.event.TaskPropertyEvent.-init-(java.lang.Object)',0,'public TaskPropertyEvent(Object source) {\r\n    super(source);\r\n    myTask = ((Task) (source));\r\n}'),(3599,'Task source','net.sourceforge.ganttproject.task.Task',548,624,'net.sourceforge.ganttproject.task.event.TaskScheduleEvent',4776,'net.sourceforge.ganttproject.task.event.TaskScheduleEvent.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar)',0,'public TaskScheduleEvent(Task source, GanttCalendar oldStartDate, GanttCalendar oldFinishDate, GanttCalendar newStartDate, GanttCalendar newFinishDate) {\r\n    super(source);\r\n    myOldStartDate = oldStartDate;\r\n    myOldFinishDate = oldFinishDate;\r\n    myNewStartDate = newStartDate;\r\n    myNewFinishDate = newFinishDate;\r\n}'),(3600,'GanttCalendar oldStartDate','net.sourceforge.ganttproject.GanttCalendar',24,624,'net.sourceforge.ganttproject.task.event.TaskScheduleEvent',4776,'net.sourceforge.ganttproject.task.event.TaskScheduleEvent.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar)',0,'public TaskScheduleEvent(Task source, GanttCalendar oldStartDate, GanttCalendar oldFinishDate, GanttCalendar newStartDate, GanttCalendar newFinishDate) {\r\n    super(source);\r\n    myOldStartDate = oldStartDate;\r\n    myOldFinishDate = oldFinishDate;\r\n    myNewStartDate = newStartDate;\r\n    myNewFinishDate = newFinishDate;\r\n}'),(3601,'GanttCalendar oldFinishDate','net.sourceforge.ganttproject.GanttCalendar',24,624,'net.sourceforge.ganttproject.task.event.TaskScheduleEvent',4776,'net.sourceforge.ganttproject.task.event.TaskScheduleEvent.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar)',0,'public TaskScheduleEvent(Task source, GanttCalendar oldStartDate, GanttCalendar oldFinishDate, GanttCalendar newStartDate, GanttCalendar newFinishDate) {\r\n    super(source);\r\n    myOldStartDate = oldStartDate;\r\n    myOldFinishDate = oldFinishDate;\r\n    myNewStartDate = newStartDate;\r\n    myNewFinishDate = newFinishDate;\r\n}'),(3602,'GanttCalendar newStartDate','net.sourceforge.ganttproject.GanttCalendar',24,624,'net.sourceforge.ganttproject.task.event.TaskScheduleEvent',4776,'net.sourceforge.ganttproject.task.event.TaskScheduleEvent.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar)',0,'public TaskScheduleEvent(Task source, GanttCalendar oldStartDate, GanttCalendar oldFinishDate, GanttCalendar newStartDate, GanttCalendar newFinishDate) {\r\n    super(source);\r\n    myOldStartDate = oldStartDate;\r\n    myOldFinishDate = oldFinishDate;\r\n    myNewStartDate = newStartDate;\r\n    myNewFinishDate = newFinishDate;\r\n}'),(3603,'GanttCalendar newFinishDate','net.sourceforge.ganttproject.GanttCalendar',24,624,'net.sourceforge.ganttproject.task.event.TaskScheduleEvent',4776,'net.sourceforge.ganttproject.task.event.TaskScheduleEvent.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar,net.sourceforge.ganttproject.GanttCalendar)',0,'public TaskScheduleEvent(Task source, GanttCalendar oldStartDate, GanttCalendar oldFinishDate, GanttCalendar newStartDate, GanttCalendar newFinishDate) {\r\n    super(source);\r\n    myOldStartDate = oldStartDate;\r\n    myOldFinishDate = oldFinishDate;\r\n    myNewStartDate = newStartDate;\r\n    myNewFinishDate = newFinishDate;\r\n}'),(3604,'Task myTask','net.sourceforge.ganttproject.task.Task',548,625,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem',4782,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem)',0,'public TaskHierarchyItem(Task myTask, TaskHierarchyItem containerItem) {\r\n    this.myTask = myTask;\r\n    this.myContainerItem = containerItem;\r\n    if ((myContainerItem) != null) {\r\n        myContainerItem.addNestedItem(this);\r\n    }\r\n}'),(3605,'TaskHierarchyItem containerItem','net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem',625,625,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem',4782,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.-init-(net.sourceforge.ganttproject.task.Task,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem)',0,'public TaskHierarchyItem(Task myTask, TaskHierarchyItem containerItem) {\r\n    this.myTask = myTask;\r\n    this.myContainerItem = containerItem;\r\n    if ((myContainerItem) != null) {\r\n        myContainerItem.addNestedItem(this);\r\n    }\r\n}'),(3606,'TaskHierarchyItem nested','net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem',625,625,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem',4783,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.addNestedItem(net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem)',0,'public void addNestedItem(TaskHierarchyItem nested) {\r\n    nested.myNextSiblingItem = myFirstNestedItem;\r\n    nested.myContainerItem = this;\r\n    myFirstNestedItem = nested;\r\n}'),(3607,'Task task','net.sourceforge.ganttproject.task.Task',548,626,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl',4789,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl.createItem(net.sourceforge.ganttproject.task.Task)',0,'public TaskHierarchyItem createItem(Task task) {\r\n    TaskHierarchyItem result = new TaskHierarchyItem(task, myRootItem);\r\n    return result;\r\n}'),(3608,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem','net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem',625,626,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl',4789,'net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl.createItem(net.sourceforge.ganttproject.task.Task)',1,'public TaskHierarchyItem createItem(Task task) {\r\n    TaskHierarchyItem result = new TaskHierarchyItem(task, myRootItem);\r\n    return result;\r\n}'),(3609,'Date baseDate','java.util.Date',0,627,'net.sourceforge.ganttproject.time.DateFrameable',4792,'net.sourceforge.ganttproject.time.DateFrameable.adjustRight(java.util.Date)',0,'Date adjustRight(Date baseDate);'),(3610,'Date baseDate','java.util.Date',0,627,'net.sourceforge.ganttproject.time.DateFrameable',4791,'net.sourceforge.ganttproject.time.DateFrameable.adjustLeft(java.util.Date)',0,'Date adjustLeft(Date baseDate);'),(3611,'Date baseDate','java.util.Date',0,627,'net.sourceforge.ganttproject.time.DateFrameable',4793,'net.sourceforge.ganttproject.time.DateFrameable.jumpLeft(java.util.Date)',0,'Date jumpLeft(Date baseDate);'),(3612,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,628,'net.sourceforge.ganttproject.time.TextFormatter',4794,'net.sourceforge.ganttproject.time.TextFormatter.format(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date)',0,'public TimeUnitText format(TimeUnit timeUnit, Date baseDate);'),(3613,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,628,'net.sourceforge.ganttproject.time.TextFormatter',4794,'net.sourceforge.ganttproject.time.TextFormatter.format(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date)',1,'public TimeUnitText format(TimeUnit timeUnit, Date baseDate);'),(3614,'Date baseDate','java.util.Date',0,628,'net.sourceforge.ganttproject.time.TextFormatter',4794,'net.sourceforge.ganttproject.time.TextFormatter.format(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date)',0,'public TimeUnitText format(TimeUnit timeUnit, Date baseDate);'),(3615,'TimeUnit unitLine','net.sourceforge.ganttproject.time.TimeUnit',630,629,'net.sourceforge.ganttproject.time.TimeFrame',4799,'net.sourceforge.ganttproject.time.TimeFrame.getUnitCount(net.sourceforge.ganttproject.time.TimeUnit)',0,'int getUnitCount(TimeUnit unitLine);'),(3616,'TimeUnit unitLine','net.sourceforge.ganttproject.time.TimeUnit',630,629,'net.sourceforge.ganttproject.time.TimeFrame',4802,'net.sourceforge.ganttproject.time.TimeFrame.getUnitText(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'TimeUnitText getUnitText(TimeUnit unitLine, int position);'),(3617,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,629,'net.sourceforge.ganttproject.time.TimeFrame',4802,'net.sourceforge.ganttproject.time.TimeFrame.getUnitText(net.sourceforge.ganttproject.time.TimeUnit,int)',1,'TimeUnitText getUnitText(TimeUnit unitLine, int position);'),(3618,'int position','int',0,629,'net.sourceforge.ganttproject.time.TimeFrame',4802,'net.sourceforge.ganttproject.time.TimeFrame.getUnitText(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'TimeUnitText getUnitText(TimeUnit unitLine, int position);'),(3619,'TimeUnit unitLine','net.sourceforge.ganttproject.time.TimeUnit',630,629,'net.sourceforge.ganttproject.time.TimeFrame',4801,'net.sourceforge.ganttproject.time.TimeFrame.getUnitStart(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'Date getUnitStart(TimeUnit unitLine, int position);'),(3620,'int position','int',0,629,'net.sourceforge.ganttproject.time.TimeFrame',4801,'net.sourceforge.ganttproject.time.TimeFrame.getUnitStart(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'Date getUnitStart(TimeUnit unitLine, int position);'),(3621,'TimeUnit unitLine','net.sourceforge.ganttproject.time.TimeUnit',630,629,'net.sourceforge.ganttproject.time.TimeFrame',4800,'net.sourceforge.ganttproject.time.TimeFrame.getUnitFinish(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'Date getUnitFinish(TimeUnit unitLine, int position);'),(3622,'int position','int',0,629,'net.sourceforge.ganttproject.time.TimeFrame',4800,'net.sourceforge.ganttproject.time.TimeFrame.getUnitFinish(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'Date getUnitFinish(TimeUnit unitLine, int position);'),(3623,'Date exactDate','java.util.Date',0,629,'net.sourceforge.ganttproject.time.TimeFrame',4803,'net.sourceforge.ganttproject.time.TimeFrame.trimLeft(java.util.Date)',0,'void trimLeft(Date exactDate);'),(3624,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,630,'net.sourceforge.ganttproject.time.TimeUnit',4808,'net.sourceforge.ganttproject.time.TimeUnit.isConstructedFrom(net.sourceforge.ganttproject.time.TimeUnit)',0,'public boolean isConstructedFrom(TimeUnit unit);'),(3625,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,630,'net.sourceforge.ganttproject.time.TimeUnit',4805,'net.sourceforge.ganttproject.time.TimeUnit.getAtomCount(net.sourceforge.ganttproject.time.TimeUnit)',0,'public int getAtomCount(TimeUnit atomUnit);'),(3626,'TextFormatter formatter','net.sourceforge.ganttproject.time.TextFormatter',628,630,'net.sourceforge.ganttproject.time.TimeUnit',4809,'net.sourceforge.ganttproject.time.TimeUnit.setTextFormatter(net.sourceforge.ganttproject.time.TextFormatter)',0,'// \r\npublic void setTextFormatter(TextFormatter formatter);'),(3627,'Date baseDate','java.util.Date',0,630,'net.sourceforge.ganttproject.time.TimeUnit',4804,'net.sourceforge.ganttproject.time.TimeUnit.format(java.util.Date)',0,'public TimeUnitText format(Date baseDate);'),(3628,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,630,'net.sourceforge.ganttproject.time.TimeUnit',4804,'net.sourceforge.ganttproject.time.TimeUnit.format(java.util.Date)',1,'public TimeUnitText format(Date baseDate);'),(3629,'String name','java.lang.String',0,631,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl',4810,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitDateFrameableImpl(String name, TimeUnitGraph timeUnitGraph, TimeUnit atomUnit, DateFrameable framer) {\r\n    super(name, timeUnitGraph, atomUnit);\r\n    myFramer = framer;\r\n}'),(3630,'TimeUnitGraph timeUnitGraph','net.sourceforge.ganttproject.time.TimeUnitGraph',636,631,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl',4810,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitDateFrameableImpl(String name, TimeUnitGraph timeUnitGraph, TimeUnit atomUnit, DateFrameable framer) {\r\n    super(name, timeUnitGraph, atomUnit);\r\n    myFramer = framer;\r\n}'),(3631,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,631,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl',4810,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitDateFrameableImpl(String name, TimeUnitGraph timeUnitGraph, TimeUnit atomUnit, DateFrameable framer) {\r\n    super(name, timeUnitGraph, atomUnit);\r\n    myFramer = framer;\r\n}'),(3632,'DateFrameable framer','net.sourceforge.ganttproject.time.DateFrameable',627,631,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl',4810,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitDateFrameableImpl(String name, TimeUnitGraph timeUnitGraph, TimeUnit atomUnit, DateFrameable framer) {\r\n    super(name, timeUnitGraph, atomUnit);\r\n    myFramer = framer;\r\n}'),(3633,'Date baseDate','java.util.Date',0,631,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl',4812,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl.adjustRight(java.util.Date)',0,'public Date adjustRight(Date baseDate) {\r\n    return myFramer.adjustRight(baseDate);\r\n}'),(3634,'Date baseDate','java.util.Date',0,631,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl',4811,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl.adjustLeft(java.util.Date)',0,'public Date adjustLeft(Date baseDate) {\r\n    return myFramer.adjustLeft(baseDate);\r\n}'),(3635,'Date baseDate','java.util.Date',0,631,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl',4813,'net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl.jumpLeft(java.util.Date)',0,'public Date jumpLeft(Date baseDate) {\r\n    return myFramer.jumpLeft(baseDate);\r\n}'),(3636,'Date date','java.util.Date',0,632,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate',4814,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate.createTimeUnit(java.util.Date)',0,'public TimeUnit createTimeUnit(Date date);'),(3637,'net.sourceforge.ganttproject.time.TimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,632,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate',4814,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate.createTimeUnit(java.util.Date)',1,'public TimeUnit createTimeUnit(Date date);'),(3638,'String name','java.lang.String',0,634,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl',4815,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitFunctionOfDateImpl(String name, TimeUnitGraph graph, TimeUnit directAtomUnit, DateFrameable framer) {\r\n    super(name, graph, directAtomUnit, framer);\r\n    if (!(directAtomUnit instanceof DateFrameable)) {\r\n        throw new IllegalArgumentException(\"Only date frameable time units may be used as atoms for functions of date\");\r\n    }\r\n    myDirectFrameable = ((DateFrameable) (directAtomUnit));\r\n}'),(3639,'TimeUnitGraph graph','net.sourceforge.ganttproject.time.TimeUnitGraph',636,634,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl',4815,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitFunctionOfDateImpl(String name, TimeUnitGraph graph, TimeUnit directAtomUnit, DateFrameable framer) {\r\n    super(name, graph, directAtomUnit, framer);\r\n    if (!(directAtomUnit instanceof DateFrameable)) {\r\n        throw new IllegalArgumentException(\"Only date frameable time units may be used as atoms for functions of date\");\r\n    }\r\n    myDirectFrameable = ((DateFrameable) (directAtomUnit));\r\n}'),(3640,'TimeUnit directAtomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,634,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl',4815,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitFunctionOfDateImpl(String name, TimeUnitGraph graph, TimeUnit directAtomUnit, DateFrameable framer) {\r\n    super(name, graph, directAtomUnit, framer);\r\n    if (!(directAtomUnit instanceof DateFrameable)) {\r\n        throw new IllegalArgumentException(\"Only date frameable time units may be used as atoms for functions of date\");\r\n    }\r\n    myDirectFrameable = ((DateFrameable) (directAtomUnit));\r\n}'),(3641,'DateFrameable framer','net.sourceforge.ganttproject.time.DateFrameable',627,634,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl',4815,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitFunctionOfDateImpl(String name, TimeUnitGraph graph, TimeUnit directAtomUnit, DateFrameable framer) {\r\n    super(name, graph, directAtomUnit, framer);\r\n    if (!(directAtomUnit instanceof DateFrameable)) {\r\n        throw new IllegalArgumentException(\"Only date frameable time units may be used as atoms for functions of date\");\r\n    }\r\n    myDirectFrameable = ((DateFrameable) (directAtomUnit));\r\n}'),(3642,'Date myBaseDate','java.util.Date',0,633,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl',4819,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl.-init-(java.util.Date)',0,'public ParameterizedTimeUnitImpl(Date myBaseDate) {\r\n    this.myBaseDate = myBaseDate;\r\n    this.myRightDate = this.adjustRight(myBaseDate);\r\n    this.myLeftDate = this.adjustLeft(myBaseDate);\r\n}'),(3643,'Date date','java.util.Date',0,634,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl',4817,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl.createTimeUnit(java.util.Date)',0,'public TimeUnit createTimeUnit(Date date) {\r\n    return new TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl(date);\r\n}'),(3644,'net.sourceforge.ganttproject.time.TimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,634,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl',4817,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl.createTimeUnit(java.util.Date)',1,'public TimeUnit createTimeUnit(Date date) {\r\n    return new TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl(date);\r\n}'),(3645,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,634,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl',4818,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl.getAtomCount(net.sourceforge.ganttproject.time.TimeUnit)',0,'public int getAtomCount(TimeUnit atomUnit) {\r\n    throw new UnsupportedOperationException(\"This time unit is function of date. Use method createTimeUnit() to create a parameterized instance.\");\r\n}'),(3646,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,633,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl',4828,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl.isConstructedFrom(net.sourceforge.ganttproject.time.TimeUnit)',0,'public boolean isConstructedFrom(TimeUnit unit) {\r\n    return this.isConstructedFrom(unit);\r\n}'),(3647,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,633,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl',4824,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl.getAtomCount(net.sourceforge.ganttproject.time.TimeUnit)',0,'public int getAtomCount(TimeUnit atomUnit) {\r\n    if ((atomUnit == (this)) || (atomUnit == (this))) {\r\n        return 1;\r\n    }\r\n    int directAtomCount = getDirectAtomCount();\r\n    return directAtomCount * (getDirectAtomUnit().getAtomCount(atomUnit));\r\n}'),(3648,'Date baseDate','java.util.Date',0,633,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl',4821,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl.adjustRight(java.util.Date)',0,'public Date adjustRight(Date baseDate) {\r\n    return this.adjustRight(baseDate);\r\n}'),(3649,'Date baseDate','java.util.Date',0,633,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl',4820,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl.adjustLeft(java.util.Date)',0,'public Date adjustLeft(Date baseDate) {\r\n    return this.adjustLeft(baseDate);\r\n}'),(3650,'Date baseDate','java.util.Date',0,633,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl',4829,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl.jumpLeft(java.util.Date)',0,'public Date jumpLeft(Date baseDate) {\r\n    return this.jumpLeft(baseDate);\r\n}'),(3651,'TextFormatter formatter','net.sourceforge.ganttproject.time.TextFormatter',628,633,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl',4830,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl.setTextFormatter(net.sourceforge.ganttproject.time.TextFormatter)',0,'public void setTextFormatter(TextFormatter formatter) {\r\n    this.setTextFormatter(formatter);\r\n}'),(3652,'Date baseDate','java.util.Date',0,633,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl',4823,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl.format(java.util.Date)',0,'public TimeUnitText format(Date baseDate) {\r\n    TextFormatter formatter = this.getTextFormatter();\r\n    return formatter == null ? new TimeUnitText(\"\") : formatter.format(this, baseDate);\r\n}'),(3653,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,633,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl',4823,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl.format(java.util.Date)',1,'public TimeUnitText format(Date baseDate) {\r\n    TextFormatter formatter = this.getTextFormatter();\r\n    return formatter == null ? new TimeUnitText(\"\") : formatter.format(this, baseDate);\r\n}'),(3654,'Object o','java.lang.Object',0,633,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl',4822,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl.equals(java.lang.Object)',0,'public boolean equals(Object o) {\r\n    return this.equals(o);\r\n}'),(3655,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,635,'net.sourceforge.ganttproject.time.TimeUnitGraph$Composition',4840,'net.sourceforge.ganttproject.time.TimeUnitGraph$Composition.-init-(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'Composition(TimeUnit atomUnit, int atomCount) {\r\n    myAtom = atomUnit;\r\n    myAtomCount = atomCount;\r\n}'),(3656,'int atomCount','int',0,635,'net.sourceforge.ganttproject.time.TimeUnitGraph$Composition',4840,'net.sourceforge.ganttproject.time.TimeUnitGraph$Composition.-init-(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'Composition(TimeUnit atomUnit, int atomCount) {\r\n    myAtom = atomUnit;\r\n    myAtomCount = atomCount;\r\n}'),(3657,'TimeUnitGraph.Composition transitiveComposition','net.sourceforge.ganttproject.time.TimeUnitGraph$Composition',635,635,'net.sourceforge.ganttproject.time.TimeUnitGraph$Composition',4841,'net.sourceforge.ganttproject.time.TimeUnitGraph$Composition.-init-(net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,int)',0,'Composition(TimeUnitGraph.Composition transitiveComposition, int atomCount) {\r\n    myAtomCount = atomCount * (transitiveComposition.myAtomCount);\r\n    myAtom = transitiveComposition.myAtom;\r\n}'),(3658,'int atomCount','int',0,635,'net.sourceforge.ganttproject.time.TimeUnitGraph$Composition',4841,'net.sourceforge.ganttproject.time.TimeUnitGraph$Composition.-init-(net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,int)',0,'Composition(TimeUnitGraph.Composition transitiveComposition, int atomCount) {\r\n    myAtomCount = atomCount * (transitiveComposition.myAtomCount);\r\n    myAtom = transitiveComposition.myAtom;\r\n}'),(3659,'String name','java.lang.String',0,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4834,'net.sourceforge.ganttproject.time.TimeUnitGraph.createAtomTimeUnit(java.lang.String)',0,'public TimeUnit createAtomTimeUnit(String name) {\r\n    TimeUnit result = new TimeUnitImpl(name, this, null);\r\n    List compositions = new ArrayList();\r\n    compositions.add(new TimeUnitGraph.Composition(result, 1));\r\n    myUnit2compositions.put(result, compositions);\r\n    return result;\r\n}'),(3660,'net.sourceforge.ganttproject.time.TimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4834,'net.sourceforge.ganttproject.time.TimeUnitGraph.createAtomTimeUnit(java.lang.String)',1,'public TimeUnit createAtomTimeUnit(String name) {\r\n    TimeUnit result = new TimeUnitImpl(name, this, null);\r\n    List compositions = new ArrayList();\r\n    compositions.add(new TimeUnitGraph.Composition(result, 1));\r\n    myUnit2compositions.put(result, compositions);\r\n    return result;\r\n}'),(3661,'String name','java.lang.String',0,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4836,'net.sourceforge.ganttproject.time.TimeUnitGraph.createTimeUnit(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'TimeUnit createTimeUnit(String name, TimeUnit atomUnit, int count) {\r\n    TimeUnit result = new TimeUnitImpl(name, this, atomUnit);\r\n    registerTimeUnit(result, count);\r\n    return result;\r\n}'),(3662,'net.sourceforge.ganttproject.time.TimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4836,'net.sourceforge.ganttproject.time.TimeUnitGraph.createTimeUnit(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,int)',1,'TimeUnit createTimeUnit(String name, TimeUnit atomUnit, int count) {\r\n    TimeUnit result = new TimeUnitImpl(name, this, atomUnit);\r\n    registerTimeUnit(result, count);\r\n    return result;\r\n}'),(3663,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4836,'net.sourceforge.ganttproject.time.TimeUnitGraph.createTimeUnit(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'TimeUnit createTimeUnit(String name, TimeUnit atomUnit, int count) {\r\n    TimeUnit result = new TimeUnitImpl(name, this, atomUnit);\r\n    registerTimeUnit(result, count);\r\n    return result;\r\n}'),(3664,'int count','int',0,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4836,'net.sourceforge.ganttproject.time.TimeUnitGraph.createTimeUnit(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,int)',0,'TimeUnit createTimeUnit(String name, TimeUnit atomUnit, int count) {\r\n    TimeUnit result = new TimeUnitImpl(name, this, atomUnit);\r\n    registerTimeUnit(result, count);\r\n    return result;\r\n}'),(3665,'String name','java.lang.String',0,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4835,'net.sourceforge.ganttproject.time.TimeUnitGraph.createDateFrameableTimeUnit(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,int,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnit createDateFrameableTimeUnit(String name, TimeUnit atomUnit, int atomCount, DateFrameable framer) {\r\n    TimeUnit result = new TimeUnitDateFrameableImpl(name, this, atomUnit, framer);\r\n    registerTimeUnit(result, atomCount);\r\n    return result;\r\n}'),(3666,'net.sourceforge.ganttproject.time.TimeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4835,'net.sourceforge.ganttproject.time.TimeUnitGraph.createDateFrameableTimeUnit(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,int,net.sourceforge.ganttproject.time.DateFrameable)',1,'public TimeUnit createDateFrameableTimeUnit(String name, TimeUnit atomUnit, int atomCount, DateFrameable framer) {\r\n    TimeUnit result = new TimeUnitDateFrameableImpl(name, this, atomUnit, framer);\r\n    registerTimeUnit(result, atomCount);\r\n    return result;\r\n}'),(3667,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4835,'net.sourceforge.ganttproject.time.TimeUnitGraph.createDateFrameableTimeUnit(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,int,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnit createDateFrameableTimeUnit(String name, TimeUnit atomUnit, int atomCount, DateFrameable framer) {\r\n    TimeUnit result = new TimeUnitDateFrameableImpl(name, this, atomUnit, framer);\r\n    registerTimeUnit(result, atomCount);\r\n    return result;\r\n}'),(3668,'int atomCount','int',0,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4835,'net.sourceforge.ganttproject.time.TimeUnitGraph.createDateFrameableTimeUnit(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,int,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnit createDateFrameableTimeUnit(String name, TimeUnit atomUnit, int atomCount, DateFrameable framer) {\r\n    TimeUnit result = new TimeUnitDateFrameableImpl(name, this, atomUnit, framer);\r\n    registerTimeUnit(result, atomCount);\r\n    return result;\r\n}'),(3669,'DateFrameable framer','net.sourceforge.ganttproject.time.DateFrameable',627,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4835,'net.sourceforge.ganttproject.time.TimeUnitGraph.createDateFrameableTimeUnit(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,int,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnit createDateFrameableTimeUnit(String name, TimeUnit atomUnit, int atomCount, DateFrameable framer) {\r\n    TimeUnit result = new TimeUnitDateFrameableImpl(name, this, atomUnit, framer);\r\n    registerTimeUnit(result, atomCount);\r\n    return result;\r\n}'),(3670,'String name','java.lang.String',0,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4837,'net.sourceforge.ganttproject.time.TimeUnitGraph.createTimeUnitFunctionOfDate(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitFunctionOfDate createTimeUnitFunctionOfDate(String name, TimeUnit atomUnit, DateFrameable framer) {\r\n    TimeUnitFunctionOfDate result;\r\n    result = new TimeUnitFunctionOfDateImpl(name, this, atomUnit, framer);\r\n    registerTimeUnit(result, (-1));\r\n    return result;\r\n}'),(3671,'net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate','net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate',632,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4837,'net.sourceforge.ganttproject.time.TimeUnitGraph.createTimeUnitFunctionOfDate(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',1,'public TimeUnitFunctionOfDate createTimeUnitFunctionOfDate(String name, TimeUnit atomUnit, DateFrameable framer) {\r\n    TimeUnitFunctionOfDate result;\r\n    result = new TimeUnitFunctionOfDateImpl(name, this, atomUnit, framer);\r\n    registerTimeUnit(result, (-1));\r\n    return result;\r\n}'),(3672,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4837,'net.sourceforge.ganttproject.time.TimeUnitGraph.createTimeUnitFunctionOfDate(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitFunctionOfDate createTimeUnitFunctionOfDate(String name, TimeUnit atomUnit, DateFrameable framer) {\r\n    TimeUnitFunctionOfDate result;\r\n    result = new TimeUnitFunctionOfDateImpl(name, this, atomUnit, framer);\r\n    registerTimeUnit(result, (-1));\r\n    return result;\r\n}'),(3673,'DateFrameable framer','net.sourceforge.ganttproject.time.DateFrameable',627,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4837,'net.sourceforge.ganttproject.time.TimeUnitGraph.createTimeUnitFunctionOfDate(java.lang.String,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.DateFrameable)',0,'public TimeUnitFunctionOfDate createTimeUnitFunctionOfDate(String name, TimeUnit atomUnit, DateFrameable framer) {\r\n    TimeUnitFunctionOfDate result;\r\n    result = new TimeUnitFunctionOfDateImpl(name, this, atomUnit, framer);\r\n    registerTimeUnit(result, (-1));\r\n    return result;\r\n}'),(3674,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4839,'net.sourceforge.ganttproject.time.TimeUnitGraph.registerTimeUnit(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'private void registerTimeUnit(TimeUnit unit, int atomCount) {\r\n    TimeUnit atomUnit = unit.getDirectAtomUnit();\r\n    List transitiveCompositions = ((List) (myUnit2compositions.get(atomUnit)));\r\n    if (transitiveCompositions == null) {\r\n        throw new RuntimeException(((\"Atom unit=\" + atomUnit) + \" is unknown\"));\r\n    }\r\n    List compositions = new ArrayList(((transitiveCompositions.size()) + 1));\r\n    compositions.add(new TimeUnitGraph.Composition(unit, 1));\r\n    for (int i = 0; i < (transitiveCompositions.size()); i++) {\r\n        TimeUnitGraph.Composition nextTransitive = ((TimeUnitGraph.Composition) (transitiveCompositions.get(i)));\r\n        compositions.add(new TimeUnitGraph.Composition(nextTransitive, atomCount));\r\n    }\r\n    myUnit2compositions.put(unit, compositions);\r\n}'),(3675,'int atomCount','int',0,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4839,'net.sourceforge.ganttproject.time.TimeUnitGraph.registerTimeUnit(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'private void registerTimeUnit(TimeUnit unit, int atomCount) {\r\n    TimeUnit atomUnit = unit.getDirectAtomUnit();\r\n    List transitiveCompositions = ((List) (myUnit2compositions.get(atomUnit)));\r\n    if (transitiveCompositions == null) {\r\n        throw new RuntimeException(((\"Atom unit=\" + atomUnit) + \" is unknown\"));\r\n    }\r\n    List compositions = new ArrayList(((transitiveCompositions.size()) + 1));\r\n    compositions.add(new TimeUnitGraph.Composition(unit, 1));\r\n    for (int i = 0; i < (transitiveCompositions.size()); i++) {\r\n        TimeUnitGraph.Composition nextTransitive = ((TimeUnitGraph.Composition) (transitiveCompositions.get(i)));\r\n        compositions.add(new TimeUnitGraph.Composition(nextTransitive, atomCount));\r\n    }\r\n    myUnit2compositions.put(unit, compositions);\r\n}'),(3676,'TimeUnitImpl timeUnit','net.sourceforge.ganttproject.time.TimeUnitImpl',637,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4838,'net.sourceforge.ganttproject.time.TimeUnitGraph.getComposition(net.sourceforge.ganttproject.time.TimeUnitImpl,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeUnitGraph.Composition getComposition(TimeUnitImpl timeUnit, TimeUnit atomUnit) {\r\n    TimeUnitGraph.Composition result = null;\r\n    List compositions = ((List) (myUnit2compositions.get(timeUnit)));\r\n    if (compositions == null) {\r\n        throw new RuntimeException(((\"Unit=\" + timeUnit) + \" has no compositions\"));\r\n    }\r\n    for (int i = 0; i < (compositions.size()); i++) {\r\n        TimeUnitGraph.Composition next = ((TimeUnitGraph.Composition) (compositions.get(i)));\r\n        if (next.myAtom.equals(atomUnit)) {\r\n            result = next;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(3677,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,636,'net.sourceforge.ganttproject.time.TimeUnitGraph',4838,'net.sourceforge.ganttproject.time.TimeUnitGraph.getComposition(net.sourceforge.ganttproject.time.TimeUnitImpl,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeUnitGraph.Composition getComposition(TimeUnitImpl timeUnit, TimeUnit atomUnit) {\r\n    TimeUnitGraph.Composition result = null;\r\n    List compositions = ((List) (myUnit2compositions.get(timeUnit)));\r\n    if (compositions == null) {\r\n        throw new RuntimeException(((\"Unit=\" + timeUnit) + \" has no compositions\"));\r\n    }\r\n    for (int i = 0; i < (compositions.size()); i++) {\r\n        TimeUnitGraph.Composition next = ((TimeUnitGraph.Composition) (compositions.get(i)));\r\n        if (next.myAtom.equals(atomUnit)) {\r\n            result = next;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(3678,'String name','java.lang.String',0,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4843,'net.sourceforge.ganttproject.time.TimeUnitImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeUnitImpl(String name, TimeUnitGraph graph, TimeUnit directAtomUnit) {\r\n    myName = name;\r\n    myGraph = graph;\r\n    myDirectAtomUnit = directAtomUnit;\r\n}'),(3679,'TimeUnitGraph graph','net.sourceforge.ganttproject.time.TimeUnitGraph',636,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4843,'net.sourceforge.ganttproject.time.TimeUnitImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeUnitImpl(String name, TimeUnitGraph graph, TimeUnit directAtomUnit) {\r\n    myName = name;\r\n    myGraph = graph;\r\n    myDirectAtomUnit = directAtomUnit;\r\n}'),(3680,'TimeUnit directAtomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4843,'net.sourceforge.ganttproject.time.TimeUnitImpl.-init-(java.lang.String,net.sourceforge.ganttproject.time.TimeUnitGraph,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeUnitImpl(String name, TimeUnitGraph graph, TimeUnit directAtomUnit) {\r\n    myName = name;\r\n    myGraph = graph;\r\n    myDirectAtomUnit = directAtomUnit;\r\n}'),(3681,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4851,'net.sourceforge.ganttproject.time.TimeUnitImpl.isConstructedFrom(net.sourceforge.ganttproject.time.TimeUnit)',0,'public boolean isConstructedFrom(TimeUnit atomUnit) {\r\n    return (myGraph.getComposition(this, atomUnit)) != null;\r\n}'),(3682,'TimeUnit atomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4847,'net.sourceforge.ganttproject.time.TimeUnitImpl.getAtomCount(net.sourceforge.ganttproject.time.TimeUnit)',0,'public int getAtomCount(TimeUnit atomUnit) {\r\n    TimeUnitGraph.Composition composition = myGraph.getComposition(this, atomUnit);\r\n    if (composition == null) {\r\n        throw new RuntimeException((((\"Failed to find a composition of time unit=\" + (this)) + \" from time unit=\") + atomUnit));\r\n    }\r\n    return composition.getAtomCount();\r\n}'),(3683,'TextFormatter formatter','net.sourceforge.ganttproject.time.TextFormatter',628,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4853,'net.sourceforge.ganttproject.time.TimeUnitImpl.setTextFormatter(net.sourceforge.ganttproject.time.TextFormatter)',0,'public void setTextFormatter(TextFormatter formatter) {\r\n    myTextFormatter = formatter;\r\n}'),(3684,'Date baseDate','java.util.Date',0,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4846,'net.sourceforge.ganttproject.time.TimeUnitImpl.format(java.util.Date)',0,'public TimeUnitText format(Date baseDate) {\r\n    return (myTextFormatter) == null ? new TimeUnitText(\"\") : myTextFormatter.format(this, baseDate);\r\n}'),(3685,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4846,'net.sourceforge.ganttproject.time.TimeUnitImpl.format(java.util.Date)',1,'public TimeUnitText format(Date baseDate) {\r\n    return (myTextFormatter) == null ? new TimeUnitText(\"\") : myTextFormatter.format(this, baseDate);\r\n}'),(3686,'Date baseDate','java.util.Date',0,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4845,'net.sourceforge.ganttproject.time.TimeUnitImpl.adjustRight(java.util.Date)',0,'public Date adjustRight(Date baseDate) {\r\n    throw new UnsupportedOperationException(((\"Time unit=\" + (this)) + \" doesnt support this operation\"));\r\n}'),(3687,'Date baseDate','java.util.Date',0,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4844,'net.sourceforge.ganttproject.time.TimeUnitImpl.adjustLeft(java.util.Date)',0,'public Date adjustLeft(Date baseDate) {\r\n    throw new UnsupportedOperationException(((\"Time unit=\" + (this)) + \" doesnt support this operation\"));\r\n}'),(3688,'Date baseDate','java.util.Date',0,637,'net.sourceforge.ganttproject.time.TimeUnitImpl',4852,'net.sourceforge.ganttproject.time.TimeUnitImpl.jumpLeft(java.util.Date)',0,'public Date jumpLeft(Date baseDate) {\r\n    throw new UnsupportedOperationException(((\"Time unit=\" + (this)) + \" doesnt support this operation\"));\r\n}'),(3689,'TimeUnit topUnit','net.sourceforge.ganttproject.time.TimeUnit',630,638,'net.sourceforge.ganttproject.time.TimeUnitPair',4855,'net.sourceforge.ganttproject.time.TimeUnitPair.-init-(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnitStack)',0,'protected TimeUnitPair(TimeUnit topUnit, TimeUnit bottomUnit, TimeUnitStack timeUnitStack) {\r\n    myTopTimeUnit = topUnit;\r\n    myBottomTimeUnit = bottomUnit;\r\n    myTimeUnitStack = timeUnitStack;\r\n}'),(3690,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,638,'net.sourceforge.ganttproject.time.TimeUnitPair',4855,'net.sourceforge.ganttproject.time.TimeUnitPair.-init-(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnitStack)',0,'protected TimeUnitPair(TimeUnit topUnit, TimeUnit bottomUnit, TimeUnitStack timeUnitStack) {\r\n    myTopTimeUnit = topUnit;\r\n    myBottomTimeUnit = bottomUnit;\r\n    myTimeUnitStack = timeUnitStack;\r\n}'),(3691,'TimeUnitStack timeUnitStack','net.sourceforge.ganttproject.time.TimeUnitStack',639,638,'net.sourceforge.ganttproject.time.TimeUnitPair',4855,'net.sourceforge.ganttproject.time.TimeUnitPair.-init-(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnitStack)',0,'protected TimeUnitPair(TimeUnit topUnit, TimeUnit bottomUnit, TimeUnitStack timeUnitStack) {\r\n    myTopTimeUnit = topUnit;\r\n    myBottomTimeUnit = bottomUnit;\r\n    myTimeUnitStack = timeUnitStack;\r\n}'),(3692,'Date startDate','java.util.Date',0,639,'net.sourceforge.ganttproject.time.TimeUnitStack',4859,'net.sourceforge.ganttproject.time.TimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'TimeFrame createTimeFrame(Date startDate, TimeUnit topUnit, TimeUnit bottomUnit);'),(3693,'net.sourceforge.ganttproject.time.TimeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,639,'net.sourceforge.ganttproject.time.TimeUnitStack',4859,'net.sourceforge.ganttproject.time.TimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',1,'TimeFrame createTimeFrame(Date startDate, TimeUnit topUnit, TimeUnit bottomUnit);'),(3694,'TimeUnit topUnit','net.sourceforge.ganttproject.time.TimeUnit',630,639,'net.sourceforge.ganttproject.time.TimeUnitStack',4859,'net.sourceforge.ganttproject.time.TimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'TimeFrame createTimeFrame(Date startDate, TimeUnit topUnit, TimeUnit bottomUnit);'),(3695,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,639,'net.sourceforge.ganttproject.time.TimeUnitStack',4859,'net.sourceforge.ganttproject.time.TimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'TimeFrame createTimeFrame(Date startDate, TimeUnit topUnit, TimeUnit bottomUnit);'),(3696,'String longText','java.lang.String',0,640,'net.sourceforge.ganttproject.time.TimeUnitText',4863,'net.sourceforge.ganttproject.time.TimeUnitText.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'public TimeUnitText(String longText, String mediumText, String shortText) {\r\n    myLongText = longText;\r\n    myMediumText = mediumText;\r\n    myShortText = shortText;\r\n}'),(3697,'String mediumText','java.lang.String',0,640,'net.sourceforge.ganttproject.time.TimeUnitText',4863,'net.sourceforge.ganttproject.time.TimeUnitText.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'public TimeUnitText(String longText, String mediumText, String shortText) {\r\n    myLongText = longText;\r\n    myMediumText = mediumText;\r\n    myShortText = shortText;\r\n}'),(3698,'String shortText','java.lang.String',0,640,'net.sourceforge.ganttproject.time.TimeUnitText',4863,'net.sourceforge.ganttproject.time.TimeUnitText.-init-(java.lang.String,java.lang.String,java.lang.String)',0,'public TimeUnitText(String longText, String mediumText, String shortText) {\r\n    myLongText = longText;\r\n    myMediumText = mediumText;\r\n    myShortText = shortText;\r\n}'),(3699,'String mediumText','java.lang.String',0,640,'net.sourceforge.ganttproject.time.TimeUnitText',4864,'net.sourceforge.ganttproject.time.TimeUnitText.-init-(java.lang.String)',0,'public TimeUnitText(String mediumText) {\r\n    myMediumText = mediumText;\r\n    myLongText = mediumText;\r\n    myShortText = mediumText;\r\n}'),(3700,'int maxLength','int',0,640,'net.sourceforge.ganttproject.time.TimeUnitText',4866,'net.sourceforge.ganttproject.time.TimeUnitText.getText(int)',0,'public String getText(int maxLength) {\r\n    return myMediumText;\r\n}'),(3701,'int requestedMaxLength','int',0,640,'net.sourceforge.ganttproject.time.TimeUnitText',4867,'net.sourceforge.ganttproject.time.TimeUnitText.getText(int,net.sourceforge.ganttproject.util.TextLengthCalculator)',0,'public String getText(int requestedMaxLength, TextLengthCalculator calculator) {\r\n    String result = null;\r\n    if (!(calculator.getState().equals(myCalculatorState))) {\r\n        myCalculatorState = calculator.getState();\r\n        myMinimaxLong = calculator.getTextLength(myLongText);\r\n        myMinimaxMedium = calculator.getTextLength(myMediumText);\r\n        myMinimaxShort = calculator.getTextLength(myShortText);\r\n    }\r\n    result = getCachedText(requestedMaxLength);\r\n    return result == null ? \"\" : result;\r\n}'),(3702,'TextLengthCalculator calculator','net.sourceforge.ganttproject.util.TextLengthCalculator',664,640,'net.sourceforge.ganttproject.time.TimeUnitText',4867,'net.sourceforge.ganttproject.time.TimeUnitText.getText(int,net.sourceforge.ganttproject.util.TextLengthCalculator)',0,'public String getText(int requestedMaxLength, TextLengthCalculator calculator) {\r\n    String result = null;\r\n    if (!(calculator.getState().equals(myCalculatorState))) {\r\n        myCalculatorState = calculator.getState();\r\n        myMinimaxLong = calculator.getTextLength(myLongText);\r\n        myMinimaxMedium = calculator.getTextLength(myMediumText);\r\n        myMinimaxShort = calculator.getTextLength(myShortText);\r\n    }\r\n    result = getCachedText(requestedMaxLength);\r\n    return result == null ? \"\" : result;\r\n}'),(3703,'int maxLength','int',0,640,'net.sourceforge.ganttproject.time.TimeUnitText',4865,'net.sourceforge.ganttproject.time.TimeUnitText.getCachedText(int)',0,'private String getCachedText(int maxLength) {\r\n    if (((myMinimaxLong) >= 0) && ((myMinimaxLong) <= maxLength)) {\r\n        return myLongText;\r\n    }\r\n    if (((myMinimaxMedium) >= 0) && ((myMinimaxMedium) <= maxLength)) {\r\n        return myMediumText;\r\n    }\r\n    if (((myMinimaxShort) >= 0) && ((myMinimaxShort) <= maxLength)) {\r\n        return myShortText;\r\n    }\r\n    return null;\r\n}'),(3704,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,641,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter',4871,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter.format(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date)',0,'public TimeUnitText format(TimeUnit timeUnit, Date baseDate) {\r\n    TimeUnitText result = null;\r\n    Date adjustedLeft = ((DateFrameable) (timeUnit)).adjustLeft(baseDate);\r\n    result = getCachedText(adjustedLeft);\r\n    if (result == null) {\r\n        result = createTimeUnitText(adjustedLeft);\r\n        myTextCache.put(adjustedLeft, result);\r\n    }\r\n    return result;\r\n}'),(3705,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,641,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter',4871,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter.format(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date)',1,'public TimeUnitText format(TimeUnit timeUnit, Date baseDate) {\r\n    TimeUnitText result = null;\r\n    Date adjustedLeft = ((DateFrameable) (timeUnit)).adjustLeft(baseDate);\r\n    result = getCachedText(adjustedLeft);\r\n    if (result == null) {\r\n        result = createTimeUnitText(adjustedLeft);\r\n        myTextCache.put(adjustedLeft, result);\r\n    }\r\n    return result;\r\n}'),(3706,'Date baseDate','java.util.Date',0,641,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter',4871,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter.format(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date)',0,'public TimeUnitText format(TimeUnit timeUnit, Date baseDate) {\r\n    TimeUnitText result = null;\r\n    Date adjustedLeft = ((DateFrameable) (timeUnit)).adjustLeft(baseDate);\r\n    result = getCachedText(adjustedLeft);\r\n    if (result == null) {\r\n        result = createTimeUnitText(adjustedLeft);\r\n        myTextCache.put(adjustedLeft, result);\r\n    }\r\n    return result;\r\n}'),(3707,'Date startDate','java.util.Date',0,641,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter',4872,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter.getCachedText(java.util.Date)',0,'protected TimeUnitText getCachedText(Date startDate) {\r\n    return ((TimeUnitText) (myTextCache.get(startDate)));\r\n}'),(3708,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,641,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter',4872,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter.getCachedText(java.util.Date)',1,'protected TimeUnitText getCachedText(Date startDate) {\r\n    return ((TimeUnitText) (myTextCache.get(startDate)));\r\n}'),(3709,'GanttLanguage.Event event','net.sourceforge.ganttproject.language.GanttLanguage$Event',459,641,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter',4873,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter.languageChanged(net.sourceforge.ganttproject.language.GanttLanguage$Event)',0,'public void languageChanged(GanttLanguage.Event event) {\r\n    myTextCache.clear();\r\n}'),(3710,'Date adjustedLeft','java.util.Date',0,641,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter',4870,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter.createTimeUnitText(java.util.Date)',0,'protected abstract TimeUnitText createTimeUnitText(Date adjustedLeft);'),(3711,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,641,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter',4870,'net.sourceforge.ganttproject.time.gregorian.CachingTextFormatter.createTimeUnitText(java.util.Date)',1,'protected abstract TimeUnitText createTimeUnitText(Date adjustedLeft);'),(3712,'Date adjustedLeft','java.util.Date',0,642,'net.sourceforge.ganttproject.time.gregorian.DayTextFormatter',4875,'net.sourceforge.ganttproject.time.gregorian.DayTextFormatter.createTimeUnitText(java.util.Date)',0,'protected TimeUnitText createTimeUnitText(Date adjustedLeft) {\r\n    return new TimeUnitText(MessageFormat.format(\"{0}\", new Object[]{ \"\" + (adjustedLeft.getDate()) }));\r\n}'),(3713,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,642,'net.sourceforge.ganttproject.time.gregorian.DayTextFormatter',4875,'net.sourceforge.ganttproject.time.gregorian.DayTextFormatter.createTimeUnitText(java.util.Date)',1,'protected TimeUnitText createTimeUnitText(Date adjustedLeft) {\r\n    return new TimeUnitText(MessageFormat.format(\"{0}\", new Object[]{ \"\" + (adjustedLeft.getDate()) }));\r\n}'),(3714,'int calendarField','int',0,643,'net.sourceforge.ganttproject.time.gregorian.FramerImpl',4876,'net.sourceforge.ganttproject.time.gregorian.FramerImpl.-init-(int)',0,'public FramerImpl(int calendarField) {\r\n    myCalendarField = calendarField;\r\n}'),(3715,'Date baseDate','java.util.Date',0,643,'net.sourceforge.ganttproject.time.gregorian.FramerImpl',4878,'net.sourceforge.ganttproject.time.gregorian.FramerImpl.adjustRight(java.util.Date)',0,'public Date adjustRight(Date baseDate) {\r\n    Calendar c = CalendarFactory.newCalendar();\r\n    c.setTime(baseDate);\r\n    clearFields(c);\r\n    c.add(myCalendarField, 1);\r\n    return c.getTime();\r\n}'),(3716,'Calendar c','java.util.Calendar',0,643,'net.sourceforge.ganttproject.time.gregorian.FramerImpl',4879,'net.sourceforge.ganttproject.time.gregorian.FramerImpl.clearFields(java.util.Calendar)',0,'private void clearFields(Calendar c) {\r\n    for (int i = (myCalendarField) + 1; i <= (Calendar.MILLISECOND); i++) {\r\n        c.clear(i);\r\n    }\r\n}'),(3717,'Date baseDate','java.util.Date',0,643,'net.sourceforge.ganttproject.time.gregorian.FramerImpl',4877,'net.sourceforge.ganttproject.time.gregorian.FramerImpl.adjustLeft(java.util.Date)',0,'public Date adjustLeft(Date baseDate) {\r\n    Calendar c = CalendarFactory.newCalendar();\r\n    c.setTime(baseDate);\r\n    Date beforeClear = c.getTime();\r\n    clearFields(c);\r\n    // if (beforeClear.compareTo(c.getTime())==0) {\r\n    // c.add(Calendar.MILLISECOND, -1);\r\n    // }\r\n    Date result = c.getTime();\r\n    return result;\r\n}'),(3718,'Date baseDate','java.util.Date',0,643,'net.sourceforge.ganttproject.time.gregorian.FramerImpl',4880,'net.sourceforge.ganttproject.time.gregorian.FramerImpl.jumpLeft(java.util.Date)',0,'public Date jumpLeft(Date baseDate) {\r\n    Calendar c = CalendarFactory.newCalendar();\r\n    c.setTime(baseDate);\r\n    c.add(myCalendarField, (-1));\r\n    return c.getTime();\r\n}'),(3719,'String[] args','java.lang.String[]',0,643,'net.sourceforge.ganttproject.time.gregorian.FramerImpl',4881,'net.sourceforge.ganttproject.time.gregorian.FramerImpl.main(java.lang.String[])',0,'public static void main(String[] args) {\r\n    GanttLanguage.getInstance().setLocale(null);\r\n    Calendar c = ((Calendar) (GanttLanguage.getInstance().newCalendar()));\r\n    Date now = GregorianCalendar.getInstance().getTime();\r\n    c.setTime(now);\r\n    for (int i = (Calendar.DAY_OF_MONTH) + 1; i <= (Calendar.MILLISECOND); i++) {\r\n        c.clear(i);\r\n    }\r\n    Date result = c.getTime();\r\n    System.err.println(result);\r\n}'),(3720,'GanttLanguage i18n','net.sourceforge.ganttproject.language.GanttLanguage',461,645,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack',4882,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack.-init-(net.sourceforge.ganttproject.language.GanttLanguage)',0,'/**\r\n *\r\n */\r\npublic GPTimeUnitStack(GanttLanguage i18n) {\r\n    TimeUnit atom = ourGraph.createAtomTimeUnit(\"atom\");\r\n    DAY = ourGraph.createDateFrameableTimeUnit(\"day\", atom, 1, new FramerImpl(Calendar.DATE));\r\n    DAY.setTextFormatter(new DayTextFormatter());\r\n    MONTH = ourGraph.createTimeUnitFunctionOfDate(\"month\", DAY, new FramerImpl(Calendar.MONTH));\r\n    MONTH.setTextFormatter(new MonthTextFormatter());\r\n    WEEK = ourGraph.createDateFrameableTimeUnit(\"week\", DAY, 7, new WeekFramerImpl());\r\n    MONTH_FROM_WEEKS = ourGraph.createTimeUnitFunctionOfDate(\"month_from_weeks\", WEEK, new FramerImpl(Calendar.MONTH));\r\n    WEEK.setTextFormatter(new WeekTextFormatter(((i18n.getText(\"week\")) + \" {0}\")));\r\n    WEEK_AS_BOTTOM_UNIT = ourGraph.createDateFrameableTimeUnit(\"week\", DAY, 7, new WeekFramerImpl());\r\n    WEEK_AS_BOTTOM_UNIT.setTextFormatter(new WeekTextFormatter(\"{0}\"));\r\n    YEAR = ourGraph.createTimeUnitFunctionOfDate(\"year\", DAY, new FramerImpl(Calendar.YEAR));\r\n    YEAR.setTextFormatter(new YearTextFormatter());\r\n    myPairs = new TimeUnitPair[]{ new GPTimeUnitStack.MyTimeUnitPair(WEEK, DAY), new GPTimeUnitStack.MyTimeUnitPair(WEEK, DAY), new GPTimeUnitStack.MyTimeUnitPair(MONTH, DAY), new GPTimeUnitStack.MyTimeUnitPair(MONTH, WEEK_AS_BOTTOM_UNIT), new GPTimeUnitStack.MyTimeUnitPair(MONTH, WEEK_AS_BOTTOM_UNIT), new GPTimeUnitStack.MyTimeUnitPair(MONTH, WEEK_AS_BOTTOM_UNIT), new GPTimeUnitStack.MyTimeUnitPair(MONTH, WEEK_AS_BOTTOM_UNIT), new GPTimeUnitStack.MyTimeUnitPair(YEAR, WEEK_AS_BOTTOM_UNIT), new GPTimeUnitStack.MyTimeUnitPair(YEAR, WEEK_AS_BOTTOM_UNIT) };\r\n}'),(3721,'TimeUnit topUnit','net.sourceforge.ganttproject.time.TimeUnit',630,644,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack$MyTimeUnitPair',4888,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack$MyTimeUnitPair.-init-(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'MyTimeUnitPair(TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    super(topUnit, bottomUnit, this);\r\n}'),(3722,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,644,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack$MyTimeUnitPair',4888,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack$MyTimeUnitPair.-init-(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'MyTimeUnitPair(TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    super(topUnit, bottomUnit, this);\r\n}'),(3723,'Date baseDate','java.util.Date',0,645,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack',4884,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeFrame createTimeFrame(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n    // topUnit = ((TimeUnitFunctionOfDate)topUnit).createTimeUnit(baseDate);\r\n    // }\r\n    return new TimeFrameImpl(baseDate, topUnit, bottomUnit);\r\n}'),(3724,'net.sourceforge.ganttproject.time.TimeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,645,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack',4884,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',1,'public TimeFrame createTimeFrame(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n    // topUnit = ((TimeUnitFunctionOfDate)topUnit).createTimeUnit(baseDate);\r\n    // }\r\n    return new TimeFrameImpl(baseDate, topUnit, bottomUnit);\r\n}'),(3725,'TimeUnit topUnit','net.sourceforge.ganttproject.time.TimeUnit',630,645,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack',4884,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeFrame createTimeFrame(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n    // topUnit = ((TimeUnitFunctionOfDate)topUnit).createTimeUnit(baseDate);\r\n    // }\r\n    return new TimeFrameImpl(baseDate, topUnit, bottomUnit);\r\n}'),(3726,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,645,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack',4884,'net.sourceforge.ganttproject.time.gregorian.GPTimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeFrame createTimeFrame(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n    // topUnit = ((TimeUnitFunctionOfDate)topUnit).createTimeUnit(baseDate);\r\n    // }\r\n    return new TimeFrameImpl(baseDate, topUnit, bottomUnit);\r\n}'),(3727,'int year','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4890,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date) {\r\n    super(year, month, date);\r\n}'),(3728,'int month','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4890,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date) {\r\n    super(year, month, date);\r\n}'),(3729,'int date','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4890,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date) {\r\n    super(year, month, date);\r\n}'),(3730,'int year','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4891,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute) {\r\n    super(year, month, date, hour, minute);\r\n}'),(3731,'int month','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4891,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute) {\r\n    super(year, month, date, hour, minute);\r\n}'),(3732,'int date','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4891,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute) {\r\n    super(year, month, date, hour, minute);\r\n}'),(3733,'int hour','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4891,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute) {\r\n    super(year, month, date, hour, minute);\r\n}'),(3734,'int minute','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4891,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute) {\r\n    super(year, month, date, hour, minute);\r\n}'),(3735,'int year','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4892,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n * @param second\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute, int second) {\r\n    super(year, month, date, hour, minute, second);\r\n}'),(3736,'int month','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4892,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n * @param second\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute, int second) {\r\n    super(year, month, date, hour, minute, second);\r\n}'),(3737,'int date','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4892,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n * @param second\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute, int second) {\r\n    super(year, month, date, hour, minute, second);\r\n}'),(3738,'int hour','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4892,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n * @param second\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute, int second) {\r\n    super(year, month, date, hour, minute, second);\r\n}'),(3739,'int minute','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4892,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n * @param second\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute, int second) {\r\n    super(year, month, date, hour, minute, second);\r\n}'),(3740,'int second','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4892,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(int,int,int,int,int,int)',0,'/**\r\n * From super\r\n *\r\n * @param year\r\n * 		\r\n * @param month\r\n * 		\r\n * @param date\r\n * 		\r\n * @param hour\r\n * 		\r\n * @param minute\r\n * 		\r\n * @param second\r\n * 		\r\n */\r\npublic GregorianCalendar(int year, int month, int date, int hour, int minute, int second) {\r\n    super(year, month, date, hour, minute, second);\r\n}'),(3741,'Locale aLocale','java.util.Locale',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4893,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(java.util.Locale)',0,'/**\r\n * From super\r\n *\r\n * @param aLocale\r\n * 		\r\n */\r\npublic GregorianCalendar(Locale aLocale) {\r\n    super(aLocale);\r\n}'),(3742,'TimeZone zone','java.util.TimeZone',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4894,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(java.util.TimeZone)',0,'/**\r\n * From super\r\n *\r\n * @param zone\r\n * 		\r\n */\r\npublic GregorianCalendar(TimeZone zone) {\r\n    super(zone);\r\n}'),(3743,'TimeZone zone','java.util.TimeZone',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4895,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(java.util.TimeZone,java.util.Locale)',0,'/**\r\n * From super\r\n *\r\n * @param zone\r\n * 		\r\n * @param aLocale\r\n * 		\r\n */\r\npublic GregorianCalendar(TimeZone zone, Locale aLocale) {\r\n    super(zone, aLocale);\r\n}'),(3744,'Locale aLocale','java.util.Locale',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4895,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.-init-(java.util.TimeZone,java.util.Locale)',0,'/**\r\n * From super\r\n *\r\n * @param zone\r\n * 		\r\n * @param aLocale\r\n * 		\r\n */\r\npublic GregorianCalendar(TimeZone zone, Locale aLocale) {\r\n    super(zone, aLocale);\r\n}'),(3745,'int field','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4896,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.add(int,int)',0,'/**\r\n * Overrides the original, to solve the october duplicated day bug\r\n */\r\npublic void add(int field, int value) {\r\n    if (field == (Calendar.DATE))\r\n        this.add(Calendar.HOUR, (value * 24));\r\n    else\r\n        super.add(field, value);\r\n\r\n}'),(3746,'int value','int',0,646,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar',4896,'net.sourceforge.ganttproject.time.gregorian.GregorianCalendar.add(int,int)',0,'/**\r\n * Overrides the original, to solve the october duplicated day bug\r\n */\r\npublic void add(int field, int value) {\r\n    if (field == (Calendar.DATE))\r\n        this.add(Calendar.HOUR, (value * 24));\r\n    else\r\n        super.add(field, value);\r\n\r\n}'),(3747,'Date baseDate','java.util.Date',0,647,'net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack',4898,'net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeFrame createTimeFrame(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n        topUnit = ((TimeUnitFunctionOfDate) (topUnit)).createTimeUnit(baseDate);\r\n    }\r\n    return new TimeFrameImpl(baseDate, topUnit, bottomUnit);\r\n}'),(3748,'net.sourceforge.ganttproject.time.TimeFrame','net.sourceforge.ganttproject.time.TimeFrame',629,647,'net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack',4898,'net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',1,'public TimeFrame createTimeFrame(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n        topUnit = ((TimeUnitFunctionOfDate) (topUnit)).createTimeUnit(baseDate);\r\n    }\r\n    return new TimeFrameImpl(baseDate, topUnit, bottomUnit);\r\n}'),(3749,'TimeUnit topUnit','net.sourceforge.ganttproject.time.TimeUnit',630,647,'net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack',4898,'net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeFrame createTimeFrame(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n        topUnit = ((TimeUnitFunctionOfDate) (topUnit)).createTimeUnit(baseDate);\r\n    }\r\n    return new TimeFrameImpl(baseDate, topUnit, bottomUnit);\r\n}'),(3750,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,647,'net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack',4898,'net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack.createTimeFrame(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'public TimeFrame createTimeFrame(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n        topUnit = ((TimeUnitFunctionOfDate) (topUnit)).createTimeUnit(baseDate);\r\n    }\r\n    return new TimeFrameImpl(baseDate, topUnit, bottomUnit);\r\n}'),(3751,'Date adjustedLeft','java.util.Date',0,648,'net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter',4903,'net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter.createTimeUnitText(java.util.Date)',0,'protected TimeUnitText createTimeUnitText(Date adjustedLeft) {\r\n    TimeUnitText result;\r\n    String longText = MessageFormat.format(\"{0}\", new Object[]{ myLongFormat.format(adjustedLeft) });\r\n    String mediumText = MessageFormat.format(\"{0}\", new Object[]{ myMediumFormat.format(adjustedLeft) });\r\n    String shortText = MessageFormat.format(\"{0}\", new Object[]{ myShortFormat.format(adjustedLeft) });\r\n    result = new TimeUnitText(longText, mediumText, shortText);\r\n    return result;\r\n}'),(3752,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,648,'net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter',4903,'net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter.createTimeUnitText(java.util.Date)',1,'protected TimeUnitText createTimeUnitText(Date adjustedLeft) {\r\n    TimeUnitText result;\r\n    String longText = MessageFormat.format(\"{0}\", new Object[]{ myLongFormat.format(adjustedLeft) });\r\n    String mediumText = MessageFormat.format(\"{0}\", new Object[]{ myMediumFormat.format(adjustedLeft) });\r\n    String shortText = MessageFormat.format(\"{0}\", new Object[]{ myShortFormat.format(adjustedLeft) });\r\n    result = new TimeUnitText(longText, mediumText, shortText);\r\n    return result;\r\n}'),(3753,'GanttLanguage.Event event','net.sourceforge.ganttproject.language.GanttLanguage$Event',459,648,'net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter',4905,'net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter.languageChanged(net.sourceforge.ganttproject.language.GanttLanguage$Event)',0,'public void languageChanged(GanttLanguage.Event event) {\r\n    super.languageChanged(event);\r\n    initFormats();\r\n}'),(3754,'Date baseDate','java.util.Date',0,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4906,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.-init-(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'TimeFrameImpl(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // if (!topUnit.isConstructedFrom(bottomUnit)) {\r\n    // throw new RuntimeException(\"Top unit=\"+topUnit+\" is not constructed\r\n    // from bottom unit=\"+bottomUnit);\r\n    // }\r\n    if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n        topUnit = ((TimeUnitFunctionOfDate) (topUnit)).createTimeUnit(baseDate);\r\n    }\r\n    myBaseDate = baseDate;\r\n    myHighestFrameable = calculateHighestFrameableUnit(topUnit, bottomUnit);\r\n    myLowestFrameable = calculateLowestFrameableUnit(topUnit, bottomUnit);\r\n    // if (myHighestFrameable!=topUnit || myLowestFrameable!=bottomUnit) {\r\n    // throw new RuntimeException(\"Current implementation requires all units\r\n    // to be frameable. myHighestFrameable=\"+myHighestFrameable+\"\r\n    // myLowestFrameable=\"+myLowestFrameable);\r\n    // }\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myCalendar = CalendarFactory.newCalendar();\r\n    myCalendar.setTime(myBaseDate);\r\n    if ((myLowestFrameable) == null) {\r\n        throw new RuntimeException(\"Failed to find any time frameable unit :(\");\r\n    }\r\n    myStartDate = myLowestFrameable.adjustLeft(myBaseDate);\r\n    if (myStartDate.after(myBaseDate)) {\r\n        throw new IllegalStateException(\"Start date is after base date\");\r\n    }\r\n    // System.err.println(\"TimeFrame.init: myStartDate=\"+myStartDate+\"\r\n    // myBaseDate=\"+myBaseDate);\r\n    // myEndDate = calculateEndDate();\r\n    // myNextFrameStartDate = shiftDate(myBaseDate, myTopUnit, 1);\r\n}'),(3755,'TimeUnit topUnit','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4906,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.-init-(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'TimeFrameImpl(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // if (!topUnit.isConstructedFrom(bottomUnit)) {\r\n    // throw new RuntimeException(\"Top unit=\"+topUnit+\" is not constructed\r\n    // from bottom unit=\"+bottomUnit);\r\n    // }\r\n    if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n        topUnit = ((TimeUnitFunctionOfDate) (topUnit)).createTimeUnit(baseDate);\r\n    }\r\n    myBaseDate = baseDate;\r\n    myHighestFrameable = calculateHighestFrameableUnit(topUnit, bottomUnit);\r\n    myLowestFrameable = calculateLowestFrameableUnit(topUnit, bottomUnit);\r\n    // if (myHighestFrameable!=topUnit || myLowestFrameable!=bottomUnit) {\r\n    // throw new RuntimeException(\"Current implementation requires all units\r\n    // to be frameable. myHighestFrameable=\"+myHighestFrameable+\"\r\n    // myLowestFrameable=\"+myLowestFrameable);\r\n    // }\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myCalendar = CalendarFactory.newCalendar();\r\n    myCalendar.setTime(myBaseDate);\r\n    if ((myLowestFrameable) == null) {\r\n        throw new RuntimeException(\"Failed to find any time frameable unit :(\");\r\n    }\r\n    myStartDate = myLowestFrameable.adjustLeft(myBaseDate);\r\n    if (myStartDate.after(myBaseDate)) {\r\n        throw new IllegalStateException(\"Start date is after base date\");\r\n    }\r\n    // System.err.println(\"TimeFrame.init: myStartDate=\"+myStartDate+\"\r\n    // myBaseDate=\"+myBaseDate);\r\n    // myEndDate = calculateEndDate();\r\n    // myNextFrameStartDate = shiftDate(myBaseDate, myTopUnit, 1);\r\n}'),(3756,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4906,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.-init-(java.util.Date,net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'TimeFrameImpl(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // if (!topUnit.isConstructedFrom(bottomUnit)) {\r\n    // throw new RuntimeException(\"Top unit=\"+topUnit+\" is not constructed\r\n    // from bottom unit=\"+bottomUnit);\r\n    // }\r\n    if (topUnit instanceof TimeUnitFunctionOfDate) {\r\n        topUnit = ((TimeUnitFunctionOfDate) (topUnit)).createTimeUnit(baseDate);\r\n    }\r\n    myBaseDate = baseDate;\r\n    myHighestFrameable = calculateHighestFrameableUnit(topUnit, bottomUnit);\r\n    myLowestFrameable = calculateLowestFrameableUnit(topUnit, bottomUnit);\r\n    // if (myHighestFrameable!=topUnit || myLowestFrameable!=bottomUnit) {\r\n    // throw new RuntimeException(\"Current implementation requires all units\r\n    // to be frameable. myHighestFrameable=\"+myHighestFrameable+\"\r\n    // myLowestFrameable=\"+myLowestFrameable);\r\n    // }\r\n    myTopUnit = topUnit;\r\n    myBottomUnit = bottomUnit;\r\n    myCalendar = CalendarFactory.newCalendar();\r\n    myCalendar.setTime(myBaseDate);\r\n    if ((myLowestFrameable) == null) {\r\n        throw new RuntimeException(\"Failed to find any time frameable unit :(\");\r\n    }\r\n    myStartDate = myLowestFrameable.adjustLeft(myBaseDate);\r\n    if (myStartDate.after(myBaseDate)) {\r\n        throw new IllegalStateException(\"Start date is after base date\");\r\n    }\r\n    // System.err.println(\"TimeFrame.init: myStartDate=\"+myStartDate+\"\r\n    // myBaseDate=\"+myBaseDate);\r\n    // myEndDate = calculateEndDate();\r\n    // myNextFrameStartDate = shiftDate(myBaseDate, myTopUnit, 1);\r\n}'),(3757,'int myTruncatedCount','int',0,651,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$UnitInfo',4940,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$UnitInfo.-init-(int,int,java.util.Date)',0,'public UnitInfo(int myTruncatedCount, int myRoundedCount, Date lastDate) {\r\n    this.myTruncatedCount = myTruncatedCount;\r\n    this.myRoundedCount = myRoundedCount;\r\n    this.lastDate = lastDate;\r\n}'),(3758,'int myRoundedCount','int',0,651,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$UnitInfo',4940,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$UnitInfo.-init-(int,int,java.util.Date)',0,'public UnitInfo(int myTruncatedCount, int myRoundedCount, Date lastDate) {\r\n    this.myTruncatedCount = myTruncatedCount;\r\n    this.myRoundedCount = myRoundedCount;\r\n    this.lastDate = lastDate;\r\n}'),(3759,'Date lastDate','java.util.Date',0,651,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$UnitInfo',4940,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$UnitInfo.-init-(int,int,java.util.Date)',0,'public UnitInfo(int myTruncatedCount, int myRoundedCount, Date lastDate) {\r\n    this.myTruncatedCount = myTruncatedCount;\r\n    this.myRoundedCount = myRoundedCount;\r\n    this.lastDate = lastDate;\r\n}'),(3760,'TimeUnit myUnit','net.sourceforge.ganttproject.time.TimeUnit',630,649,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader',4931,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader.-init-(net.sourceforge.ganttproject.time.TimeUnit)',0,'public LineHeader(TimeUnit myUnit) {\r\n    this.myUnit = myUnit;\r\n}'),(3761,'Date myStartDate','java.util.Date',0,650,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineItem',4938,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineItem.-init-(java.util.Date,java.util.Date)',0,'public LineItem(Date myStartDate, Date myEndDate) {\r\n    this.myStartDate = myStartDate;\r\n    this.myEndDate = myEndDate;\r\n}'),(3762,'Date myEndDate','java.util.Date',0,650,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineItem',4938,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineItem.-init-(java.util.Date,java.util.Date)',0,'public LineItem(Date myStartDate, Date myEndDate) {\r\n    this.myStartDate = myStartDate;\r\n    this.myEndDate = myEndDate;\r\n}'),(3763,'TimeUnit topUnit','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4913,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.calculateLowestFrameableUnit(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'private DateFrameable calculateLowestFrameableUnit(TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // DateFrameable lowestFrameable = null;\r\n    // for (TimeUnit timeUnit = topUnit; timeUnit!=null; timeUnit =\r\n    // timeUnit.getDirectAtomUnit()) {\r\n    // if (timeUnit instanceof DateFrameable) {\r\n    // lowestFrameable = (DateFrameable)timeUnit;\r\n    // }\r\n    // if (bottomUnit.equals(timeUnit)) {\r\n    // break;\r\n    // }\r\n    // }\r\n    // return lowestFrameable;\r\n    return bottomUnit;\r\n}'),(3764,'net.sourceforge.ganttproject.time.DateFrameable','net.sourceforge.ganttproject.time.DateFrameable',627,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4913,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.calculateLowestFrameableUnit(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',1,'private DateFrameable calculateLowestFrameableUnit(TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // DateFrameable lowestFrameable = null;\r\n    // for (TimeUnit timeUnit = topUnit; timeUnit!=null; timeUnit =\r\n    // timeUnit.getDirectAtomUnit()) {\r\n    // if (timeUnit instanceof DateFrameable) {\r\n    // lowestFrameable = (DateFrameable)timeUnit;\r\n    // }\r\n    // if (bottomUnit.equals(timeUnit)) {\r\n    // break;\r\n    // }\r\n    // }\r\n    // return lowestFrameable;\r\n    return bottomUnit;\r\n}'),(3765,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4913,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.calculateLowestFrameableUnit(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'private DateFrameable calculateLowestFrameableUnit(TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // DateFrameable lowestFrameable = null;\r\n    // for (TimeUnit timeUnit = topUnit; timeUnit!=null; timeUnit =\r\n    // timeUnit.getDirectAtomUnit()) {\r\n    // if (timeUnit instanceof DateFrameable) {\r\n    // lowestFrameable = (DateFrameable)timeUnit;\r\n    // }\r\n    // if (bottomUnit.equals(timeUnit)) {\r\n    // break;\r\n    // }\r\n    // }\r\n    // return lowestFrameable;\r\n    return bottomUnit;\r\n}'),(3766,'TimeUnit topUnit','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4911,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.calculateHighestFrameableUnit(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'private DateFrameable calculateHighestFrameableUnit(TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // DateFrameable highestFrameable = null;\r\n    // for (TimeUnit timeUnit = topUnit; timeUnit!=null; timeUnit =\r\n    // timeUnit.getDirectAtomUnit()) {\r\n    // System.err.println(\"next time unit=\"+timeUnit);\r\n    // if (timeUnit instanceof DateFrameable) {\r\n    // highestFrameable = (DateFrameable)timeUnit;\r\n    // break;\r\n    // }\r\n    // if (timeUnit==bottomUnit) {\r\n    // break;\r\n    // }\r\n    // }\r\n    // return highestFrameable;\r\n    return topUnit;\r\n}'),(3767,'net.sourceforge.ganttproject.time.DateFrameable','net.sourceforge.ganttproject.time.DateFrameable',627,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4911,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.calculateHighestFrameableUnit(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',1,'private DateFrameable calculateHighestFrameableUnit(TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // DateFrameable highestFrameable = null;\r\n    // for (TimeUnit timeUnit = topUnit; timeUnit!=null; timeUnit =\r\n    // timeUnit.getDirectAtomUnit()) {\r\n    // System.err.println(\"next time unit=\"+timeUnit);\r\n    // if (timeUnit instanceof DateFrameable) {\r\n    // highestFrameable = (DateFrameable)timeUnit;\r\n    // break;\r\n    // }\r\n    // if (timeUnit==bottomUnit) {\r\n    // break;\r\n    // }\r\n    // }\r\n    // return highestFrameable;\r\n    return topUnit;\r\n}'),(3768,'TimeUnit bottomUnit','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4911,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.calculateHighestFrameableUnit(net.sourceforge.ganttproject.time.TimeUnit,net.sourceforge.ganttproject.time.TimeUnit)',0,'private DateFrameable calculateHighestFrameableUnit(TimeUnit topUnit, TimeUnit bottomUnit) {\r\n    // DateFrameable highestFrameable = null;\r\n    // for (TimeUnit timeUnit = topUnit; timeUnit!=null; timeUnit =\r\n    // timeUnit.getDirectAtomUnit()) {\r\n    // System.err.println(\"next time unit=\"+timeUnit);\r\n    // if (timeUnit instanceof DateFrameable) {\r\n    // highestFrameable = (DateFrameable)timeUnit;\r\n    // break;\r\n    // }\r\n    // if (timeUnit==bottomUnit) {\r\n    // break;\r\n    // }\r\n    // }\r\n    // return highestFrameable;\r\n    return topUnit;\r\n}'),(3769,'TimeFrameImpl.LineHeader lastHeader','net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader',649,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4912,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.calculateLines(net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader)',0,'private TimeFrameImpl.LineHeader calculateLines(TimeFrameImpl.LineHeader lastHeader) {\r\n    TimeUnit curUnit = (lastHeader == null) ? myTopUnit : lastHeader.myUnit.getDirectAtomUnit();\r\n    TimeFrameImpl.LineHeader curHeader = createHeader(curUnit);\r\n    fillLine(lastHeader, curHeader);\r\n    if (lastHeader != null) {\r\n        lastHeader.append(curHeader);\r\n    }\r\n    if (curUnit != (myBottomUnit)) {\r\n        calculateLines(curHeader);\r\n    }\r\n    return curHeader;\r\n}'),(3770,'TimeFrameImpl.LineHeader higherHeader','net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader',649,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4916,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.fillLine(net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader,net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader)',0,'private void fillLine(TimeFrameImpl.LineHeader higherHeader, TimeFrameImpl.LineHeader header) {\r\n    if (higherHeader == null) {\r\n        Date startDate = myStartDate;\r\n        Date endDate = ((DateFrameable) (myTopUnit)).adjustRight(myBaseDate);\r\n        // System.err.println(\"filling line=\"+header+\" endDate=\"+endDate);\r\n        TimeFrameImpl.LineItem item = createLineItem(startDate, endDate);\r\n        header.myFirstItem = item;\r\n    } else {\r\n        // System.err.println(\"filling line=\"+header);\r\n        for (TimeFrameImpl.LineItem higherItem = higherHeader.myFirstItem; higherItem != null; higherItem = higherItem.myNextItem) {\r\n            int unitCount = getUnitCount(higherHeader, header, higherItem);\r\n            Date curStartDate = higherItem.myStartDate;\r\n            TimeFrameImpl.LineItem curItem = null;\r\n            // System.err.println(\"unit count=\"+unitCount+\"\r\n            // startDate=\"+curStartDate);\r\n            for (int i = 0; (i < unitCount) && ((curStartDate.compareTo(higherItem.myEndDate)) < 0); i++) {\r\n                Date nextEndDate = ((DateFrameable) (header.myUnit)).adjustRight(curStartDate);\r\n                TimeFrameImpl.LineItem newItem = createLineItem(curStartDate, nextEndDate);\r\n                if (curItem == null) {\r\n                    header.myFirstItem = newItem;\r\n                } else {\r\n                    curItem.myNextItem = newItem;\r\n                }\r\n                curItem = newItem;\r\n                curStartDate = nextEndDate;\r\n            }\r\n            // System.err.println(\"result: \"+header.fullDump());\r\n        }\r\n    }\r\n}'),(3771,'TimeFrameImpl.LineHeader header','net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader',649,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4916,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.fillLine(net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader,net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader)',0,'private void fillLine(TimeFrameImpl.LineHeader higherHeader, TimeFrameImpl.LineHeader header) {\r\n    if (higherHeader == null) {\r\n        Date startDate = myStartDate;\r\n        Date endDate = ((DateFrameable) (myTopUnit)).adjustRight(myBaseDate);\r\n        // System.err.println(\"filling line=\"+header+\" endDate=\"+endDate);\r\n        TimeFrameImpl.LineItem item = createLineItem(startDate, endDate);\r\n        header.myFirstItem = item;\r\n    } else {\r\n        // System.err.println(\"filling line=\"+header);\r\n        for (TimeFrameImpl.LineItem higherItem = higherHeader.myFirstItem; higherItem != null; higherItem = higherItem.myNextItem) {\r\n            int unitCount = getUnitCount(higherHeader, header, higherItem);\r\n            Date curStartDate = higherItem.myStartDate;\r\n            TimeFrameImpl.LineItem curItem = null;\r\n            // System.err.println(\"unit count=\"+unitCount+\"\r\n            // startDate=\"+curStartDate);\r\n            for (int i = 0; (i < unitCount) && ((curStartDate.compareTo(higherItem.myEndDate)) < 0); i++) {\r\n                Date nextEndDate = ((DateFrameable) (header.myUnit)).adjustRight(curStartDate);\r\n                TimeFrameImpl.LineItem newItem = createLineItem(curStartDate, nextEndDate);\r\n                if (curItem == null) {\r\n                    header.myFirstItem = newItem;\r\n                } else {\r\n                    curItem.myNextItem = newItem;\r\n                }\r\n                curItem = newItem;\r\n                curStartDate = nextEndDate;\r\n            }\r\n            // System.err.println(\"result: \"+header.fullDump());\r\n        }\r\n    }\r\n}'),(3772,'TimeFrameImpl.LineHeader higherHeader','net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader',649,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4924,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitCount(net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader,net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader,net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineItem)',0,'private int getUnitCount(TimeFrameImpl.LineHeader higherHeader, TimeFrameImpl.LineHeader header, TimeFrameImpl.LineItem higherItem) {\r\n    TimeUnit higherUnit = ((higherHeader.myUnit) instanceof TimeUnitFunctionOfDate) ? ((TimeUnitFunctionOfDate) (higherHeader.myUnit)).createTimeUnit(higherItem.myStartDate) : higherHeader.myUnit;\r\n    TimeUnit lowerUnit = header.myUnit;\r\n    int result = higherUnit.getAtomCount(lowerUnit);\r\n    return result;\r\n}'),(3773,'TimeFrameImpl.LineHeader header','net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader',649,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4924,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitCount(net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader,net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader,net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineItem)',0,'private int getUnitCount(TimeFrameImpl.LineHeader higherHeader, TimeFrameImpl.LineHeader header, TimeFrameImpl.LineItem higherItem) {\r\n    TimeUnit higherUnit = ((higherHeader.myUnit) instanceof TimeUnitFunctionOfDate) ? ((TimeUnitFunctionOfDate) (higherHeader.myUnit)).createTimeUnit(higherItem.myStartDate) : higherHeader.myUnit;\r\n    TimeUnit lowerUnit = header.myUnit;\r\n    int result = higherUnit.getAtomCount(lowerUnit);\r\n    return result;\r\n}'),(3774,'TimeFrameImpl.LineItem higherItem','net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineItem',650,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4924,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitCount(net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader,net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader,net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineItem)',0,'private int getUnitCount(TimeFrameImpl.LineHeader higherHeader, TimeFrameImpl.LineHeader header, TimeFrameImpl.LineItem higherItem) {\r\n    TimeUnit higherUnit = ((higherHeader.myUnit) instanceof TimeUnitFunctionOfDate) ? ((TimeUnitFunctionOfDate) (higherHeader.myUnit)).createTimeUnit(higherItem.myStartDate) : higherHeader.myUnit;\r\n    TimeUnit lowerUnit = header.myUnit;\r\n    int result = higherUnit.getAtomCount(lowerUnit);\r\n    return result;\r\n}'),(3775,'Date startDate','java.util.Date',0,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4915,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.createLineItem(java.util.Date,java.util.Date)',0,'private TimeFrameImpl.LineItem createLineItem(Date startDate, Date endDate) {\r\n    return new TimeFrameImpl.LineItem(startDate, endDate);\r\n}'),(3776,'Date endDate','java.util.Date',0,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4915,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.createLineItem(java.util.Date,java.util.Date)',0,'private TimeFrameImpl.LineItem createLineItem(Date startDate, Date endDate) {\r\n    return new TimeFrameImpl.LineItem(startDate, endDate);\r\n}'),(3777,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4914,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.createHeader(net.sourceforge.ganttproject.time.TimeUnit)',0,'private TimeFrameImpl.LineHeader createHeader(TimeUnit unit) {\r\n    return new TimeFrameImpl.LineHeader(unit);\r\n}'),(3778,'TimeUnit unit','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4923,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitCount(net.sourceforge.ganttproject.time.TimeUnit)',0,'public int getUnitCount(TimeUnit unit) {\r\n    TimeFrameImpl.LineHeader lineHeader = getLineHeader(unit);\r\n    if (lineHeader == null) {\r\n        lineHeader = new TimeFrameImpl.LineHeader(unit);\r\n        // return getUnitCount(getLineHeader(), lineHeader,\r\n        // getLineHeader().myFirstItem);\r\n        fillLine(getLineHeader(), lineHeader);\r\n        return lineHeader.getItemCount();\r\n    }\r\n    int result = (lineHeader == null) ? -1 : lineHeader.getItemCount();\r\n    if (result == (-1)) {\r\n        throw new RuntimeException(((\"There is not time unit=\" + unit) + \" in this time frame\"));\r\n    }\r\n    return result;\r\n}'),(3779,'TimeUnit timeUnit','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4920,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getLineHeader(net.sourceforge.ganttproject.time.TimeUnit)',0,'private TimeFrameImpl.LineHeader getLineHeader(TimeUnit timeUnit) {\r\n    TimeFrameImpl.LineHeader result = getLineHeader();\r\n    for (; result != null; result = result.next()) {\r\n        if ((result.myUnit) == timeUnit) {\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}'),(3780,'TimeUnit unitLine','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4927,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitText(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'// public int getUnitCount(TimeUnit unitLine) {\r\n// int counter = 0;\r\n// for (Date nextUnitStart = shiftDate(myStartDate, unitLine, counter);\r\n// nextUnitStart.before(myNextFrameStartDate);\r\n// nextUnitStart = shiftDate(myStartDate, unitLine, ++counter)) {\r\n// //System.err.println(\"myStart=\"+myStartDate+\"\r\n// nextFrame=\"+myNextFrameStartDate+\" nextUnitStart=\"+nextUnitStart);\r\n// }\r\n// return counter;\r\n// }\r\npublic TimeUnitText getUnitText(TimeUnit unitLine, int position) {\r\n    TimeFrameImpl.LineHeader lineHeader = getLineHeader(unitLine);\r\n    TimeFrameImpl.LineItem lineItem = (lineHeader == null) ? null : lineHeader.getLineItem(position);\r\n    Date startDate = (lineItem == null) ? null : lineItem.myStartDate;\r\n    TimeUnitText result = (startDate == null) ? null : getUnitText(unitLine, startDate);\r\n    // if (\"31\".equals(result)) {\r\n    // System.err.println(\"unit line=\"+unitLine+\" position=\"+position);\r\n    // }\r\n    return result;\r\n}'),(3781,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4927,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitText(net.sourceforge.ganttproject.time.TimeUnit,int)',1,'// public int getUnitCount(TimeUnit unitLine) {\r\n// int counter = 0;\r\n// for (Date nextUnitStart = shiftDate(myStartDate, unitLine, counter);\r\n// nextUnitStart.before(myNextFrameStartDate);\r\n// nextUnitStart = shiftDate(myStartDate, unitLine, ++counter)) {\r\n// //System.err.println(\"myStart=\"+myStartDate+\"\r\n// nextFrame=\"+myNextFrameStartDate+\" nextUnitStart=\"+nextUnitStart);\r\n// }\r\n// return counter;\r\n// }\r\npublic TimeUnitText getUnitText(TimeUnit unitLine, int position) {\r\n    TimeFrameImpl.LineHeader lineHeader = getLineHeader(unitLine);\r\n    TimeFrameImpl.LineItem lineItem = (lineHeader == null) ? null : lineHeader.getLineItem(position);\r\n    Date startDate = (lineItem == null) ? null : lineItem.myStartDate;\r\n    TimeUnitText result = (startDate == null) ? null : getUnitText(unitLine, startDate);\r\n    // if (\"31\".equals(result)) {\r\n    // System.err.println(\"unit line=\"+unitLine+\" position=\"+position);\r\n    // }\r\n    return result;\r\n}'),(3782,'int position','int',0,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4927,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitText(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'// public int getUnitCount(TimeUnit unitLine) {\r\n// int counter = 0;\r\n// for (Date nextUnitStart = shiftDate(myStartDate, unitLine, counter);\r\n// nextUnitStart.before(myNextFrameStartDate);\r\n// nextUnitStart = shiftDate(myStartDate, unitLine, ++counter)) {\r\n// //System.err.println(\"myStart=\"+myStartDate+\"\r\n// nextFrame=\"+myNextFrameStartDate+\" nextUnitStart=\"+nextUnitStart);\r\n// }\r\n// return counter;\r\n// }\r\npublic TimeUnitText getUnitText(TimeUnit unitLine, int position) {\r\n    TimeFrameImpl.LineHeader lineHeader = getLineHeader(unitLine);\r\n    TimeFrameImpl.LineItem lineItem = (lineHeader == null) ? null : lineHeader.getLineItem(position);\r\n    Date startDate = (lineItem == null) ? null : lineItem.myStartDate;\r\n    TimeUnitText result = (startDate == null) ? null : getUnitText(unitLine, startDate);\r\n    // if (\"31\".equals(result)) {\r\n    // System.err.println(\"unit line=\"+unitLine+\" position=\"+position);\r\n    // }\r\n    return result;\r\n}'),(3783,'TimeUnit unitLine','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4928,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitText(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date)',0,'private TimeUnitText getUnitText(TimeUnit unitLine, Date startDate) {\r\n    String result = null;\r\n    return unitLine.format(startDate);\r\n    // if (unitLine.equals(GregorianTimeUnitStack.DAY)) {\r\n    // result = \"\"+startDate.getDate();\r\n    // }\r\n    // return result;\r\n}'),(3784,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4928,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitText(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date)',1,'private TimeUnitText getUnitText(TimeUnit unitLine, Date startDate) {\r\n    String result = null;\r\n    return unitLine.format(startDate);\r\n    // if (unitLine.equals(GregorianTimeUnitStack.DAY)) {\r\n    // result = \"\"+startDate.getDate();\r\n    // }\r\n    // return result;\r\n}'),(3785,'Date startDate','java.util.Date',0,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4928,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitText(net.sourceforge.ganttproject.time.TimeUnit,java.util.Date)',0,'private TimeUnitText getUnitText(TimeUnit unitLine, Date startDate) {\r\n    String result = null;\r\n    return unitLine.format(startDate);\r\n    // if (unitLine.equals(GregorianTimeUnitStack.DAY)) {\r\n    // result = \"\"+startDate.getDate();\r\n    // }\r\n    // return result;\r\n}'),(3786,'TimeUnit unitLine','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4926,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitStart(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public Date getUnitStart(TimeUnit unitLine, int position) {\r\n    TimeFrameImpl.LineHeader lineHeader = getLineHeader(unitLine);\r\n    TimeFrameImpl.LineItem lineItem = (lineHeader == null) ? null : lineHeader.getLineItem(position);\r\n    Date result = (lineItem == null) ? null : lineItem.myStartDate;\r\n    return result;\r\n}'),(3787,'int position','int',0,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4926,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitStart(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public Date getUnitStart(TimeUnit unitLine, int position) {\r\n    TimeFrameImpl.LineHeader lineHeader = getLineHeader(unitLine);\r\n    TimeFrameImpl.LineItem lineItem = (lineHeader == null) ? null : lineHeader.getLineItem(position);\r\n    Date result = (lineItem == null) ? null : lineItem.myStartDate;\r\n    return result;\r\n}'),(3788,'TimeUnit unitLine','net.sourceforge.ganttproject.time.TimeUnit',630,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4925,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitFinish(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public Date getUnitFinish(TimeUnit unitLine, int position) {\r\n    TimeFrameImpl.LineHeader lineHeader = getLineHeader(unitLine);\r\n    TimeFrameImpl.LineItem lineItem = (lineHeader == null) ? null : lineHeader.getLineItem(position);\r\n    Date result = (lineItem == null) ? null : lineItem.myEndDate;\r\n    return result;\r\n}'),(3789,'int position','int',0,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4925,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.getUnitFinish(net.sourceforge.ganttproject.time.TimeUnit,int)',0,'public Date getUnitFinish(TimeUnit unitLine, int position) {\r\n    TimeFrameImpl.LineHeader lineHeader = getLineHeader(unitLine);\r\n    TimeFrameImpl.LineItem lineItem = (lineHeader == null) ? null : lineHeader.getLineItem(position);\r\n    Date result = (lineItem == null) ? null : lineItem.myEndDate;\r\n    return result;\r\n}'),(3790,'TimeFrameImpl.LineHeader next','net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader',649,649,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader',4932,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader.append(net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader)',0,'void append(TimeFrameImpl.LineHeader next) {\r\n    myNextHeader = next;\r\n}'),(3791,'int position','int',0,649,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader',4935,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl$LineHeader.getLineItem(int)',0,'TimeFrameImpl.LineItem getLineItem(int position) {\r\n    TimeFrameImpl.LineItem result = myFirstItem;\r\n    for (; (result != null) && ((position--) > 0); result = result.myNextItem) {\r\n        // position--;\r\n    }\r\n    return result;\r\n}'),(3792,'Date exactDate','java.util.Date',0,652,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl',4930,'net.sourceforge.ganttproject.time.gregorian.TimeFrameImpl.trimLeft(java.util.Date)',0,'public void trimLeft(Date exactDate) {\r\n    myStartDate = exactDate;\r\n    myLineHeader = null;\r\n}'),(3793,'Date baseDate','java.util.Date',0,653,'net.sourceforge.ganttproject.time.gregorian.WeekFramerImpl',4943,'net.sourceforge.ganttproject.time.gregorian.WeekFramerImpl.adjustRight(java.util.Date)',0,'public Date adjustRight(Date baseDate) {\r\n    Calendar c = CalendarFactory.newCalendar();\r\n    do {\r\n        baseDate = myDayFramer.adjustRight(baseDate);\r\n        c.setTime(baseDate);\r\n    } while ((c.get(Calendar.DAY_OF_WEEK)) != (c.getFirstDayOfWeek()) );\r\n    return c.getTime();\r\n}'),(3794,'Date baseDate','java.util.Date',0,653,'net.sourceforge.ganttproject.time.gregorian.WeekFramerImpl',4942,'net.sourceforge.ganttproject.time.gregorian.WeekFramerImpl.adjustLeft(java.util.Date)',0,'public Date adjustLeft(Date baseDate) {\r\n    Calendar c = CalendarFactory.newCalendar();\r\n    c.setTime(myDayFramer.adjustLeft(baseDate));\r\n    while ((c.get(Calendar.DAY_OF_WEEK)) != (c.getFirstDayOfWeek())) {\r\n        c.setTime(myDayFramer.adjustLeft(myDayFramer.jumpLeft(c.getTime())));\r\n    } \r\n    return c.getTime();\r\n}'),(3795,'Date baseDate','java.util.Date',0,653,'net.sourceforge.ganttproject.time.gregorian.WeekFramerImpl',4944,'net.sourceforge.ganttproject.time.gregorian.WeekFramerImpl.jumpLeft(java.util.Date)',0,'public Date jumpLeft(Date baseDate) {\r\n    Calendar c = CalendarFactory.newCalendar();\r\n    c.setTime(myDayFramer.adjustLeft(baseDate));\r\n    int dayOfWeek = c.get(Calendar.DAY_OF_WEEK);\r\n    do {\r\n        baseDate = myDayFramer.jumpLeft(baseDate);\r\n        c.setTime(baseDate);\r\n    } while ((c.get(Calendar.DAY_OF_WEEK)) != dayOfWeek );\r\n    return c.getTime();\r\n}'),(3796,'String formatString','java.lang.String',0,654,'net.sourceforge.ganttproject.time.gregorian.WeekTextFormatter',4945,'net.sourceforge.ganttproject.time.gregorian.WeekTextFormatter.-init-(java.lang.String)',0,'WeekTextFormatter(String formatString) {\r\n    myCalendar = CalendarFactory.newCalendar();\r\n}'),(3797,'Date startDate','java.util.Date',0,654,'net.sourceforge.ganttproject.time.gregorian.WeekTextFormatter',4946,'net.sourceforge.ganttproject.time.gregorian.WeekTextFormatter.createTimeUnitText(java.util.Date)',0,'protected TimeUnitText createTimeUnitText(Date startDate) {\r\n    myCalendar.setTime(startDate);\r\n    myCalendar.setMinimalDaysInFirstWeek(4);\r\n    Integer weekNo = new Integer(myCalendar.get(Calendar.WEEK_OF_YEAR));\r\n    String shortText = MessageFormat.format(\"{0}\", new Object[]{ weekNo });\r\n    String middleText = MessageFormat.format(((GanttLanguage.getInstance().getText(\"week\")) + \" {0}\"), new Object[]{ weekNo });\r\n    return new TimeUnitText(middleText, middleText, shortText);\r\n}'),(3798,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,654,'net.sourceforge.ganttproject.time.gregorian.WeekTextFormatter',4946,'net.sourceforge.ganttproject.time.gregorian.WeekTextFormatter.createTimeUnitText(java.util.Date)',1,'protected TimeUnitText createTimeUnitText(Date startDate) {\r\n    myCalendar.setTime(startDate);\r\n    myCalendar.setMinimalDaysInFirstWeek(4);\r\n    Integer weekNo = new Integer(myCalendar.get(Calendar.WEEK_OF_YEAR));\r\n    String shortText = MessageFormat.format(\"{0}\", new Object[]{ weekNo });\r\n    String middleText = MessageFormat.format(((GanttLanguage.getInstance().getText(\"week\")) + \" {0}\"), new Object[]{ weekNo });\r\n    return new TimeUnitText(middleText, middleText, shortText);\r\n}'),(3799,'GanttLanguage.Event event','net.sourceforge.ganttproject.language.GanttLanguage$Event',459,654,'net.sourceforge.ganttproject.time.gregorian.WeekTextFormatter',4947,'net.sourceforge.ganttproject.time.gregorian.WeekTextFormatter.languageChanged(net.sourceforge.ganttproject.language.GanttLanguage$Event)',0,'public void languageChanged(GanttLanguage.Event event) {\r\n    super.languageChanged(event);\r\n    myCalendar = CalendarFactory.newCalendar();\r\n}'),(3800,'Date startDate','java.util.Date',0,655,'net.sourceforge.ganttproject.time.gregorian.YearTextFormatter',4949,'net.sourceforge.ganttproject.time.gregorian.YearTextFormatter.createTimeUnitText(java.util.Date)',0,'protected TimeUnitText createTimeUnitText(Date startDate) {\r\n    myCalendar.setTime(startDate);\r\n    // Integer yearNo = new Integer(myCalendar.get(Calendar.YEAR));\r\n    // String shortText = MessageFormat.format(\"{0}\", new Object[]\r\n    // {yearNo});\r\n    String shortText = MessageFormat.format(\"{0,date,yyyy}\", new Object[]{ myCalendar.getTime() });\r\n    return new TimeUnitText(shortText);\r\n}'),(3801,'net.sourceforge.ganttproject.time.TimeUnitText','net.sourceforge.ganttproject.time.TimeUnitText',640,655,'net.sourceforge.ganttproject.time.gregorian.YearTextFormatter',4949,'net.sourceforge.ganttproject.time.gregorian.YearTextFormatter.createTimeUnitText(java.util.Date)',1,'protected TimeUnitText createTimeUnitText(Date startDate) {\r\n    myCalendar.setTime(startDate);\r\n    // Integer yearNo = new Integer(myCalendar.get(Calendar.YEAR));\r\n    // String shortText = MessageFormat.format(\"{0}\", new Object[]\r\n    // {yearNo});\r\n    String shortText = MessageFormat.format(\"{0,date,yyyy}\", new Object[]{ myCalendar.getTime() });\r\n    return new TimeUnitText(shortText);\r\n}'),(3802,'String localizedName','java.lang.String',0,657,'net.sourceforge.ganttproject.undo.GPUndoManager',4960,'net.sourceforge.ganttproject.undo.GPUndoManager.undoableEdit(java.lang.String,java.lang.Runnable)',0,'void undoableEdit(String localizedName, Runnable runnableEdit);'),(3803,'Runnable runnableEdit','java.lang.Runnable',0,657,'net.sourceforge.ganttproject.undo.GPUndoManager',4960,'net.sourceforge.ganttproject.undo.GPUndoManager.undoableEdit(java.lang.String,java.lang.Runnable)',0,'void undoableEdit(String localizedName, Runnable runnableEdit);'),(3804,'GPUndoListener listener','net.sourceforge.ganttproject.undo.GPUndoListener',656,657,'net.sourceforge.ganttproject.undo.GPUndoManager',4951,'net.sourceforge.ganttproject.undo.GPUndoManager.addUndoableEditListener(net.sourceforge.ganttproject.undo.GPUndoListener)',0,'void addUndoableEditListener(GPUndoListener listener);'),(3805,'GPUndoListener listener','net.sourceforge.ganttproject.undo.GPUndoListener',656,657,'net.sourceforge.ganttproject.undo.GPUndoManager',4958,'net.sourceforge.ganttproject.undo.GPUndoManager.removeUndoableEditListener(net.sourceforge.ganttproject.undo.GPUndoListener)',0,'void removeUndoableEditListener(GPUndoListener listener);'),(3806,'IGanttProject project','net.sourceforge.ganttproject.IGanttProject',84,658,'net.sourceforge.ganttproject.undo.UndoManagerImpl',4961,'net.sourceforge.ganttproject.undo.UndoManagerImpl.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.parser.ParserFactory,net.sourceforge.ganttproject.document.DocumentManager)',0,'public UndoManagerImpl(IGanttProject project, ParserFactory parserFactory, DocumentManager documentManager) {\r\n    myProject = project;\r\n    myParserFactory = parserFactory;\r\n    myDocumentManager = documentManager;\r\n    mySwingUndoManager = new UndoManager();\r\n    myUndoEventDispatcher = new UndoableEditSupport();\r\n}'),(3807,'ParserFactory parserFactory','net.sourceforge.ganttproject.parser.ParserFactory',475,658,'net.sourceforge.ganttproject.undo.UndoManagerImpl',4961,'net.sourceforge.ganttproject.undo.UndoManagerImpl.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.parser.ParserFactory,net.sourceforge.ganttproject.document.DocumentManager)',0,'public UndoManagerImpl(IGanttProject project, ParserFactory parserFactory, DocumentManager documentManager) {\r\n    myProject = project;\r\n    myParserFactory = parserFactory;\r\n    myDocumentManager = documentManager;\r\n    mySwingUndoManager = new UndoManager();\r\n    myUndoEventDispatcher = new UndoableEditSupport();\r\n}'),(3808,'DocumentManager documentManager','net.sourceforge.ganttproject.document.DocumentManager',237,658,'net.sourceforge.ganttproject.undo.UndoManagerImpl',4961,'net.sourceforge.ganttproject.undo.UndoManagerImpl.-init-(net.sourceforge.ganttproject.IGanttProject,net.sourceforge.ganttproject.parser.ParserFactory,net.sourceforge.ganttproject.document.DocumentManager)',0,'public UndoManagerImpl(IGanttProject project, ParserFactory parserFactory, DocumentManager documentManager) {\r\n    myProject = project;\r\n    myParserFactory = parserFactory;\r\n    myDocumentManager = documentManager;\r\n    mySwingUndoManager = new UndoManager();\r\n    myUndoEventDispatcher = new UndoableEditSupport();\r\n}'),(3809,'String localizedName','java.lang.String',0,658,'net.sourceforge.ganttproject.undo.UndoManagerImpl',4976,'net.sourceforge.ganttproject.undo.UndoManagerImpl.undoableEdit(java.lang.String,java.lang.Runnable)',0,'public void undoableEdit(String localizedName, Runnable editImpl) {\r\n    try {\r\n        swingEditImpl = new UndoableEditImpl(localizedName, editImpl, this);\r\n        mySwingUndoManager.addEdit(swingEditImpl);\r\n        fireUndoableEditHappened(swingEditImpl);\r\n    } catch (IOException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n}'),(3810,'Runnable editImpl','java.lang.Runnable',0,658,'net.sourceforge.ganttproject.undo.UndoManagerImpl',4976,'net.sourceforge.ganttproject.undo.UndoManagerImpl.undoableEdit(java.lang.String,java.lang.Runnable)',0,'public void undoableEdit(String localizedName, Runnable editImpl) {\r\n    try {\r\n        swingEditImpl = new UndoableEditImpl(localizedName, editImpl, this);\r\n        mySwingUndoManager.addEdit(swingEditImpl);\r\n        fireUndoableEditHappened(swingEditImpl);\r\n    } catch (IOException e) {\r\n        if (!(GPLogger.log(e))) {\r\n            e.printStackTrace(System.err);\r\n        }\r\n    }\r\n}'),(3811,'UndoableEditImpl swingEditImpl','net.sourceforge.ganttproject.undo.UndoableEditImpl',659,658,'net.sourceforge.ganttproject.undo.UndoManagerImpl',4967,'net.sourceforge.ganttproject.undo.UndoManagerImpl.fireUndoableEditHappened(net.sourceforge.ganttproject.undo.UndoableEditImpl)',0,'private void fireUndoableEditHappened(UndoableEditImpl swingEditImpl) {\r\n    myUndoEventDispatcher.postEdit(swingEditImpl);\r\n}'),(3812,'GPUndoListener listener','net.sourceforge.ganttproject.undo.GPUndoListener',656,658,'net.sourceforge.ganttproject.undo.UndoManagerImpl',4962,'net.sourceforge.ganttproject.undo.UndoManagerImpl.addUndoableEditListener(net.sourceforge.ganttproject.undo.GPUndoListener)',0,'public void addUndoableEditListener(GPUndoListener listener) {\r\n    myUndoEventDispatcher.addUndoableEditListener(listener);\r\n}'),(3813,'GPUndoListener listener','net.sourceforge.ganttproject.undo.GPUndoListener',656,658,'net.sourceforge.ganttproject.undo.UndoManagerImpl',4974,'net.sourceforge.ganttproject.undo.UndoManagerImpl.removeUndoableEditListener(net.sourceforge.ganttproject.undo.GPUndoListener)',0,'public void removeUndoableEditListener(GPUndoListener listener) {\r\n    myUndoEventDispatcher.removeUndoableEditListener(listener);\r\n}'),(3814,'String localizedName','java.lang.String',0,659,'net.sourceforge.ganttproject.undo.UndoableEditImpl',4977,'net.sourceforge.ganttproject.undo.UndoableEditImpl.-init-(java.lang.String,java.lang.Runnable,net.sourceforge.ganttproject.undo.UndoManagerImpl)',0,'UndoableEditImpl(String localizedName, Runnable editImpl, UndoManagerImpl manager) throws IOException {\r\n    // System.out.println (\"UndoableEditImpl : \" + localizedName);\r\n    myManager = manager;\r\n    myPresentationName = localizedName;\r\n    myEditImpl = editImpl;\r\n    myDocumentBefore = saveFile();\r\n    editImpl.run();\r\n    myDocumentAfter = saveFile();\r\n}'),(3815,'Runnable editImpl','java.lang.Runnable',0,659,'net.sourceforge.ganttproject.undo.UndoableEditImpl',4977,'net.sourceforge.ganttproject.undo.UndoableEditImpl.-init-(java.lang.String,java.lang.Runnable,net.sourceforge.ganttproject.undo.UndoManagerImpl)',0,'UndoableEditImpl(String localizedName, Runnable editImpl, UndoManagerImpl manager) throws IOException {\r\n    // System.out.println (\"UndoableEditImpl : \" + localizedName);\r\n    myManager = manager;\r\n    myPresentationName = localizedName;\r\n    myEditImpl = editImpl;\r\n    myDocumentBefore = saveFile();\r\n    editImpl.run();\r\n    myDocumentAfter = saveFile();\r\n}'),(3816,'UndoManagerImpl manager','net.sourceforge.ganttproject.undo.UndoManagerImpl',658,659,'net.sourceforge.ganttproject.undo.UndoableEditImpl',4977,'net.sourceforge.ganttproject.undo.UndoableEditImpl.-init-(java.lang.String,java.lang.Runnable,net.sourceforge.ganttproject.undo.UndoManagerImpl)',0,'UndoableEditImpl(String localizedName, Runnable editImpl, UndoManagerImpl manager) throws IOException {\r\n    // System.out.println (\"UndoableEditImpl : \" + localizedName);\r\n    myManager = manager;\r\n    myPresentationName = localizedName;\r\n    myEditImpl = editImpl;\r\n    myDocumentBefore = saveFile();\r\n    editImpl.run();\r\n    myDocumentAfter = saveFile();\r\n}'),(3817,'Document document','net.sourceforge.ganttproject.document.Document',233,659,'net.sourceforge.ganttproject.undo.UndoableEditImpl',4983,'net.sourceforge.ganttproject.undo.UndoableEditImpl.restoreDocument(net.sourceforge.ganttproject.document.Document)',0,'private void restoreDocument(Document document) throws IOException {\r\n    Document projectDocument = myManager.getProject().getDocument();\r\n    myManager.getProject().close();\r\n    document.read();\r\n    myManager.getProject().setDocument(projectDocument);\r\n}'),(3818,'String url','java.lang.String',0,660,'net.sourceforge.ganttproject.util.BrowserControl',4988,'net.sourceforge.ganttproject.util.BrowserControl.displayURL(java.lang.String)',0,'/**\r\n * Display an URL in the system browser. If you want to display a file, you\r\n * must include the absolute path name.\r\n *\r\n * @param url\r\n * 		the documents url (the url must start with either \"http://\"\r\n * 		or \"file://\").\r\n */\r\npublic static boolean displayURL(String url) {\r\n    // Opening a browser, even when running sandbox-restricted\r\n    // in JavaWebStart.\r\n    try {\r\n        Class serManClass = Class.forName(\"javax.jnlp.ServiceManager\");\r\n        Class basSerClass = Class.forName(\"javax.jnlp.BasicService\");\r\n        Class[] stringParam = new Class[]{ String.class };\r\n        Class[] urlParam = new Class[]{ URL.class };\r\n        Object basicService = serManClass.getMethod(\"lookup\", stringParam).invoke(serManClass, new Object[]{ \"javax.jnlp.BasicService\" });\r\n        basSerClass.getMethod(\"showDocument\", urlParam).invoke(basicService, new Object[]{ new URL(url) });\r\n        return true;\r\n    } catch (Exception e) {\r\n        // Not running in JavaWebStart or service is not supported.\r\n        // We continue with the methods below ...\r\n    }\r\n    String[] cmd = null;\r\n    switch (BrowserControl.getPlatform()) {\r\n        case BrowserControl.WIN_ID :\r\n            return BrowserControl.runCmdLine(BrowserControl.replaceToken(BrowserControl.WIN_CMDLINE, BrowserControl.URLTOKEN, url));\r\n        case BrowserControl.MAC_ID :\r\n            return BrowserControl.runCmdLine(BrowserControl.replaceToken(BrowserControl.MAC_CMDLINE, BrowserControl.URLTOKEN, url));\r\n        default :\r\n            for (int i = 0; i < (BrowserControl.OTHER_CMDLINES.length); i++) {\r\n                if (BrowserControl.runCmdLine(BrowserControl.replaceToken(BrowserControl.OTHER_CMDLINES[i], BrowserControl.URLTOKEN, url), BrowserControl.replaceToken(BrowserControl.OTHER_FALLBACKS[i], BrowserControl.URLTOKEN, url)))\r\n                    return true;\r\n\r\n            }\r\n    }\r\n    return false;\r\n}'),(3819,'String[] a','java.lang.String[]',0,660,'net.sourceforge.ganttproject.util.BrowserControl',4987,'net.sourceforge.ganttproject.util.BrowserControl.connectStringArray(java.lang.String[])',0,'private static String connectStringArray(String[] a) {\r\n    if (a == null)\r\n        return null;\r\n\r\n    String s = \"\";\r\n    for (int i = 0; i < (a.length); i++) {\r\n        if (i > 0)\r\n            s += \" \";\r\n\r\n        s += a[i];\r\n    }\r\n    return s;\r\n}'),(3820,'String[] target','java.lang.String[]',0,660,'net.sourceforge.ganttproject.util.BrowserControl',4990,'net.sourceforge.ganttproject.util.BrowserControl.replaceToken(java.lang.String[],java.lang.String,java.lang.String)',0,'private static String[] replaceToken(String[] target, String token, String replacement) {\r\n    if (null == target)\r\n        return null;\r\n\r\n    String[] result = new String[target.length];\r\n    for (int i = 0; i < (target.length); i++)\r\n        result[i] = target[i].replaceAll(token, replacement);\r\n\r\n    return result;\r\n}'),(3821,'String token','java.lang.String',0,660,'net.sourceforge.ganttproject.util.BrowserControl',4990,'net.sourceforge.ganttproject.util.BrowserControl.replaceToken(java.lang.String[],java.lang.String,java.lang.String)',0,'private static String[] replaceToken(String[] target, String token, String replacement) {\r\n    if (null == target)\r\n        return null;\r\n\r\n    String[] result = new String[target.length];\r\n    for (int i = 0; i < (target.length); i++)\r\n        result[i] = target[i].replaceAll(token, replacement);\r\n\r\n    return result;\r\n}'),(3822,'String replacement','java.lang.String',0,660,'net.sourceforge.ganttproject.util.BrowserControl',4990,'net.sourceforge.ganttproject.util.BrowserControl.replaceToken(java.lang.String[],java.lang.String,java.lang.String)',0,'private static String[] replaceToken(String[] target, String token, String replacement) {\r\n    if (null == target)\r\n        return null;\r\n\r\n    String[] result = new String[target.length];\r\n    for (int i = 0; i < (target.length); i++)\r\n        result[i] = target[i].replaceAll(token, replacement);\r\n\r\n    return result;\r\n}'),(3823,'String[] cmdLine','java.lang.String[]',0,660,'net.sourceforge.ganttproject.util.BrowserControl',4991,'net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(java.lang.String[])',0,'private static boolean runCmdLine(String[] cmdLine) {\r\n    return BrowserControl.runCmdLine(cmdLine, null);\r\n}'),(3824,'String[] cmdLine','java.lang.String[]',0,660,'net.sourceforge.ganttproject.util.BrowserControl',4992,'net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(java.lang.String[],java.lang.String[])',0,'private static boolean runCmdLine(String[] cmdLine, String[] fallBackCmdLine) {\r\n    try {\r\n        System.err.println(((\"Trying to invoke browser, cmd=\" + (BrowserControl.connectStringArray(cmdLine))) + \" ... \"));\r\n        Process p = Runtime.getRuntime().exec(cmdLine);\r\n        if (null != fallBackCmdLine) {\r\n            // wait for exit code -- if its 0, command worked,\r\n            // otherwise we need to start fallBackCmdLine.\r\n            int exitCode = p.waitFor();\r\n            if (exitCode != 0) {\r\n                System.err.println(exitCode);\r\n                System.err.println();\r\n                System.err.println(((\"Trying to invoke browser, cmd=\" + (BrowserControl.connectStringArray(fallBackCmdLine))) + \" ...\"));\r\n                Runtime.getRuntime().exec(fallBackCmdLine);\r\n            }\r\n        }\r\n        System.err.println();\r\n        return true;\r\n    } catch (InterruptedException e) {\r\n        System.err.println((\"Caught: \" + e));\r\n    } catch (IOException e) {\r\n        System.err.println((\"Caught: \" + e));\r\n    }\r\n    System.err.println();\r\n    return false;\r\n}'),(3825,'String[] fallBackCmdLine','java.lang.String[]',0,660,'net.sourceforge.ganttproject.util.BrowserControl',4992,'net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(java.lang.String[],java.lang.String[])',0,'private static boolean runCmdLine(String[] cmdLine, String[] fallBackCmdLine) {\r\n    try {\r\n        System.err.println(((\"Trying to invoke browser, cmd=\" + (BrowserControl.connectStringArray(cmdLine))) + \" ... \"));\r\n        Process p = Runtime.getRuntime().exec(cmdLine);\r\n        if (null != fallBackCmdLine) {\r\n            // wait for exit code -- if its 0, command worked,\r\n            // otherwise we need to start fallBackCmdLine.\r\n            int exitCode = p.waitFor();\r\n            if (exitCode != 0) {\r\n                System.err.println(exitCode);\r\n                System.err.println();\r\n                System.err.println(((\"Trying to invoke browser, cmd=\" + (BrowserControl.connectStringArray(fallBackCmdLine))) + \" ...\"));\r\n                Runtime.getRuntime().exec(fallBackCmdLine);\r\n            }\r\n        }\r\n        System.err.println();\r\n        return true;\r\n    } catch (InterruptedException e) {\r\n        System.err.println((\"Caught: \" + e));\r\n    } catch (IOException e) {\r\n        System.err.println((\"Caught: \" + e));\r\n    }\r\n    System.err.println();\r\n    return false;\r\n}'),(3826,'Color color','java.awt.Color',0,661,'net.sourceforge.ganttproject.util.ColorConvertion',4995,'net.sourceforge.ganttproject.util.ColorConvertion.getColor(java.awt.Color)',0,'/**\r\n *\r\n *\r\n * @return the color as hexadecimal version like #RRGGBB\r\n */\r\npublic static String getColor(Color color) {\r\n    String res = \"#\";\r\n    if ((color.getRed()) <= 15)\r\n        res += \"0\";\r\n\r\n    res += Integer.toHexString(color.getRed());\r\n    if ((color.getGreen()) <= 15)\r\n        res += \"0\";\r\n\r\n    res += Integer.toHexString(color.getGreen());\r\n    if ((color.getBlue()) <= 15)\r\n        res += \"0\";\r\n\r\n    res += Integer.toHexString(color.getBlue());\r\n    return res;\r\n}'),(3827,'String hexString','java.lang.String',0,661,'net.sourceforge.ganttproject.util.ColorConvertion',4994,'net.sourceforge.ganttproject.util.ColorConvertion.determineColor(java.lang.String)',0,'/**\r\n * parse a string as hew and return the corresponding color.\r\n */\r\npublic static Color determineColor(String hexString) {\r\n    if (!(Pattern.matches(\"#[0-9abcdefABCDEF]{6}+\", hexString))) {\r\n        return GanttGraphicArea.taskDefaultColor;\r\n    }\r\n    int r;\r\n    int g;\r\n    int b;\r\n    r = Integer.valueOf(hexString.substring(1, 3), 16).intValue();\r\n    g = Integer.valueOf(hexString.substring(3, 5), 16).intValue();\r\n    b = Integer.valueOf(hexString.substring(5, 7), 16).intValue();\r\n    return new Color(r, g, b);\r\n}'),(3828,'String date','java.lang.String',0,662,'net.sourceforge.ganttproject.util.DateUtils',4997,'net.sourceforge.ganttproject.util.DateUtils.parseDate(java.lang.String)',0,'/**\r\n * This method tries to parse the given date according to the given locale.\r\n * Actually, this method tries to parse the given string with several\r\n * DateFormat : Short, Medium, Long and Full. Normally if you give an\r\n * appropriate locale in relation with the string, this method will return\r\n * the correct date.\r\n *\r\n * @param date\r\n * 		String representation of a date.\r\n * @param locale\r\n * 		Locale use to parse the date with.\r\n * @return A date object.\r\n * @throws ParseException\r\n * 		Exception thrown if parsing is fruitless.\r\n */\r\npublic static Date parseDate(String date) throws ParseException {\r\n    DateFormat[] formats = new DateFormat[]{ GanttLanguage.getInstance().getShortDateFormat(), GanttLanguage.getInstance().getMediumDateFormat(), GanttLanguage.getInstance().getLongDateFormat() };\r\n    // DateFormat dfFull = DateFormat.getDateInstance(DateFormat.FULL, locale);\r\n    for (int i = 0; i < (formats.length); i++) {\r\n        try {\r\n            return formats[i].parse(date);\r\n        } catch (ParseException e) {\r\n            if ((i + 1) == (formats.length)) {\r\n                throw e;\r\n            }\r\n        } catch (IllegalArgumentException e) {\r\n            if ((i + 1) == (formats.length)) {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n    throw new ParseException((\"Failed to parse date=\" + date), 0);\r\n}'),(3829,'File file','java.io.File',0,663,'net.sourceforge.ganttproject.util.FileUtil',5000,'net.sourceforge.ganttproject.util.FileUtil.getExtension(java.io.File)',0,'public static String getExtension(File file) {\r\n    int lastDot = file.getName().lastIndexOf(FileUtil.FILE_EXTENSION_SEPARATOR);\r\n    return lastDot >= 0 ? file.getName().substring((lastDot + 1)) : file.getName();\r\n}'),(3830,'File f','java.io.File',0,663,'net.sourceforge.ganttproject.util.FileUtil',5002,'net.sourceforge.ganttproject.util.FileUtil.replaceExtension(java.io.File,java.lang.String)',0,'public static File replaceExtension(File f, String newExtension) throws IOException {\r\n    String filename = f.getName();\r\n    int i = filename.lastIndexOf(FileUtil.FILE_EXTENSION_SEPARATOR);\r\n    File containingFolder = f.getParentFile();\r\n    File result;\r\n    if ((i > 0) && (i < ((filename.length()) - 1))) {\r\n        String withoutExtension = filename.substring(0, i);\r\n        result = new File(containingFolder, ((withoutExtension + (FileUtil.FILE_EXTENSION_SEPARATOR)) + newExtension));\r\n    } else {\r\n        result = new File(containingFolder, ((filename + (FileUtil.FILE_EXTENSION_SEPARATOR)) + newExtension));\r\n    }\r\n    return result;\r\n}'),(3831,'String newExtension','java.lang.String',0,663,'net.sourceforge.ganttproject.util.FileUtil',5002,'net.sourceforge.ganttproject.util.FileUtil.replaceExtension(java.io.File,java.lang.String)',0,'public static File replaceExtension(File f, String newExtension) throws IOException {\r\n    String filename = f.getName();\r\n    int i = filename.lastIndexOf(FileUtil.FILE_EXTENSION_SEPARATOR);\r\n    File containingFolder = f.getParentFile();\r\n    File result;\r\n    if ((i > 0) && (i < ((filename.length()) - 1))) {\r\n        String withoutExtension = filename.substring(0, i);\r\n        result = new File(containingFolder, ((withoutExtension + (FileUtil.FILE_EXTENSION_SEPARATOR)) + newExtension));\r\n    } else {\r\n        result = new File(containingFolder, ((filename + (FileUtil.FILE_EXTENSION_SEPARATOR)) + newExtension));\r\n    }\r\n    return result;\r\n}'),(3832,'File f','java.io.File',0,663,'net.sourceforge.ganttproject.util.FileUtil',4999,'net.sourceforge.ganttproject.util.FileUtil.appendSuffixBeforeExtension(java.io.File,java.lang.String)',0,'public static File appendSuffixBeforeExtension(File f, String suffix) throws IOException {\r\n    String filename = f.getName();\r\n    int i = filename.lastIndexOf(FileUtil.FILE_EXTENSION_SEPARATOR);\r\n    File containingFolder = f.getParentFile();\r\n    File result;\r\n    if ((i > 0) && (i < ((filename.length()) - 1))) {\r\n        String withoutExtension = filename.substring(0, i);\r\n        String extension = filename.substring(i);\r\n        result = new File(containingFolder, ((withoutExtension + suffix) + extension));\r\n    } else {\r\n        result = new File(containingFolder, (filename + suffix));\r\n    }\r\n    if (!(result.exists())) {\r\n        result.createNewFile();\r\n    }\r\n    return result;\r\n}'),(3833,'String suffix','java.lang.String',0,663,'net.sourceforge.ganttproject.util.FileUtil',4999,'net.sourceforge.ganttproject.util.FileUtil.appendSuffixBeforeExtension(java.io.File,java.lang.String)',0,'public static File appendSuffixBeforeExtension(File f, String suffix) throws IOException {\r\n    String filename = f.getName();\r\n    int i = filename.lastIndexOf(FileUtil.FILE_EXTENSION_SEPARATOR);\r\n    File containingFolder = f.getParentFile();\r\n    File result;\r\n    if ((i > 0) && (i < ((filename.length()) - 1))) {\r\n        String withoutExtension = filename.substring(0, i);\r\n        String extension = filename.substring(i);\r\n        result = new File(containingFolder, ((withoutExtension + suffix) + extension));\r\n    } else {\r\n        result = new File(containingFolder, (filename + suffix));\r\n    }\r\n    if (!(result.exists())) {\r\n        result.createNewFile();\r\n    }\r\n    return result;\r\n}'),(3834,'File f','java.io.File',0,663,'net.sourceforge.ganttproject.util.FileUtil',5001,'net.sourceforge.ganttproject.util.FileUtil.getFilenameWithoutExtension(java.io.File)',0,'public static String getFilenameWithoutExtension(File f) {\r\n    String filename = f.getName();\r\n    int i = filename.lastIndexOf(FileUtil.FILE_EXTENSION_SEPARATOR);\r\n    return i >= 0 ? filename.substring(0, i) : filename;\r\n}'),(3835,'String text','java.lang.String',0,664,'net.sourceforge.ganttproject.util.TextLengthCalculator',5004,'net.sourceforge.ganttproject.util.TextLengthCalculator.getTextLength(java.lang.String)',0,'int getTextLength(String text);'),(3836,'Graphics g','java.awt.Graphics',0,666,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl',5005,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl.-init-(java.awt.Graphics)',0,'public TextLengthCalculatorImpl(Graphics g) {\r\n    if (g != null) {\r\n        setGraphics(g);\r\n    }\r\n}'),(3837,'Object context','java.lang.Object',0,665,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl$State',5011,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl$State.-init-(java.lang.Object,java.lang.Object)',0,'State(Object context, Object font) {\r\n    this.context = context;\r\n    this.font = font;\r\n    if (context == null) {\r\n        throw new NullPointerException();\r\n    }\r\n    if (font == null) {\r\n        throw new NullPointerException();\r\n    }\r\n}'),(3838,'Object font','java.lang.Object',0,665,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl$State',5011,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl$State.-init-(java.lang.Object,java.lang.Object)',0,'State(Object context, Object font) {\r\n    this.context = context;\r\n    this.font = font;\r\n    if (context == null) {\r\n        throw new NullPointerException();\r\n    }\r\n    if (font == null) {\r\n        throw new NullPointerException();\r\n    }\r\n}'),(3839,'Graphics g','java.awt.Graphics',0,666,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl',5008,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl.getTextLength(java.awt.Graphics,java.lang.String)',0,'public static int getTextLength(Graphics g, String text) {\r\n    if ((text.length()) == 0)\r\n        return 0;\r\n\r\n    Graphics2D g2 = ((Graphics2D) (g));\r\n    FontRenderContext frc = g2.getFontRenderContext();\r\n    Font font = g.getFont();\r\n    TextLayout layout = new TextLayout(text, font, frc);\r\n    Rectangle2D bounds = layout.getBounds();\r\n    return ((int) (bounds.getWidth())) + 1;\r\n}'),(3840,'String text','java.lang.String',0,666,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl',5008,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl.getTextLength(java.awt.Graphics,java.lang.String)',0,'public static int getTextLength(Graphics g, String text) {\r\n    if ((text.length()) == 0)\r\n        return 0;\r\n\r\n    Graphics2D g2 = ((Graphics2D) (g));\r\n    FontRenderContext frc = g2.getFontRenderContext();\r\n    Font font = g.getFont();\r\n    TextLayout layout = new TextLayout(text, font, frc);\r\n    Rectangle2D bounds = layout.getBounds();\r\n    return ((int) (bounds.getWidth())) + 1;\r\n}'),(3841,'Graphics g','java.awt.Graphics',0,666,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl',5010,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl.setGraphics(java.awt.Graphics)',0,'public void setGraphics(Graphics g) {\r\n    Graphics2D g2 = ((Graphics2D) (g));\r\n    myGraphics = g2;\r\n    myState = null;\r\n}'),(3842,'String text','java.lang.String',0,666,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl',5009,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl.getTextLength(java.lang.String)',0,'public int getTextLength(String text) {\r\n    return TextLengthCalculatorImpl.getTextLength(myGraphics, text);\r\n}'),(3843,'Object o','java.lang.Object',0,665,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl$State',5012,'net.sourceforge.ganttproject.util.TextLengthCalculatorImpl$State.equals(java.lang.Object)',0,'public boolean equals(Object o) {\r\n    TextLengthCalculatorImpl.State rvalue = ((TextLengthCalculatorImpl.State) (o));\r\n    if (rvalue == null) {\r\n        return false;\r\n    }\r\n    return (rvalue.context.equals(this.context)) && (rvalue.font.equals(this.font));\r\n}');
/*!40000 ALTER TABLE `parameters` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-05-07 15:42:43
