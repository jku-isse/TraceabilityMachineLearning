public final void mSTRING_LITERAL(boolean _createToken) throws CharStreamException, RecognitionException, TokenStreamException {
    int _ttype;
    Token _token = null;
    int _begin = text.length();
    _ttype = PGNTokenTypes.STRING_LITERAL;
    int _saveIndex;
    {
        match(");
        {
            _loop45 : do {
                if (PGNLexer._tokenSet_3.member(LA(1))) {
                    {
                        match(PGNLexer._tokenSet_3);
                    }
                } else {
                    break _loop45;
                }
            } while (true );
        }
        match(");
    }
    // Remove the leadind and trailing quote.
    String literal = new String(text.getBuffer(), _begin, ((text.length()) - _begin));
    literal = ((literal.length()) == 2) ? "" : literal.substring(1, ((literal.length()) - 2));
    text.setLength(_begin);
    text.append(literal);
    if ((_createToken && (_token == null)) && (_ttype != (Token.SKIP))) {
        _token = makeToken(_ttype);
        _token.setText(new String(text.getBuffer(), _begin, ((text.length()) - _begin)));
    }
    _returnToken = _token;
}