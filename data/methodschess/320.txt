/**
 * Run the actual test.
 */
private void boardConsistencyTest1() {
    assertTrue("Row1 complete after initial position", (((_board.getEmptySquares()) & 255L) == 0L));
    // Move the white pawn from e2 - e4
    doPly(new PlyImpl(new PositionImpl(12), new PositionImpl((12 + 16)), false));
    assertTrue("Row1 complete after e2 - e4", (((_board.getEmptySquares()) & 255L) == 0L));
    // Compute the best ply for this game position.
    Ply bestPly = _engine.computeBestPly();
    doPly(bestPly);
    assertTrue(("Row1 complete after " + (bestPly.toString())), (((_board.getEmptySquares()) & 255L) == 0L));
    // Move the white pawn from d2 - d4
    doPly(new PlyImpl(new PositionImpl(11), new PositionImpl((11 + 16)), false));
    assertTrue("Row1 complete after d2 - d4", (((_board.getEmptySquares()) & 255L) == 0L));
    // Compute the best ply for this game position.
    bestPly = _engine.computeBestPly();
    doPly(bestPly);
    assertTrue(("Row1 complete after " + (bestPly.toString())), (((_board.getEmptySquares()) & 255L) == 0L));
}