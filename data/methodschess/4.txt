/**
 * Try to interpretate a user ply, if its a castling or so.
 *
 * @param ply
 * 		The user ply.
 * @return The converted ply.
 */
private final Ply convertUserPly(Ply ply) {
    Position source = ply.getSource();
    Position destination = ply.getDestination();
    Piece piece = getBoard().getPiece(source);
    if (piece != null) {
        // Check, if the user wanted a castling.
        if ((piece.getType()) == (Piece.KING)) {
            int sourceLine = (source.getSquareIndex()) & 7;
            int destinationLine = (destination.getSquareIndex()) & 7;
            // If the castling goes to the left.
            if ((sourceLine - 2) == destinationLine) {
                return new CastlingPlyImpl(source, true);
            }
            // If the castling goes to the right.
            if ((sourceLine + 2) == destinationLine) {
                return new CastlingPlyImpl(source, false);
            }
        } else {
            // Check if this is a transformation ply
            if ((piece.getType()) == (Piece.PAWN)) {
                int destinationRow = (destination.getSquareIndex()) >> 3;
                // If the pawn reached the last row
                if (destinationRow == 7) {
                    TransformationDialog.getInstance().show();
                    byte pieceType = TransformationDialog.getInstance().getPieceType();
                    // Create and return a new transformation ply.
                    return new TransformationPlyImpl(source, destination, pieceType, ((getBoard().getPiece(destination)) != null));
                } else {
                    int sourceLine = (source.getSquareIndex()) & 7;
                    int sourceRow = (source.getSquareIndex()) >> 3;
                    int destinationLine = (destination.getSquareIndex()) & 7;
                    if (((sourceRow == 4) && (destinationRow == 5)) && (1 == (Math.abs((sourceLine - destinationLine))))) {
                        Ply lastPly = _game.getLastPly();
                        if ((((lastPly != null) && ((lastPly.getSource().getSquareIndex()) == ((destination.getSquareIndex()) + 8))) && ((lastPly.getDestination().getSquareIndex()) == ((destination.getSquareIndex()) - 8))) && ((getBoard().getPiece(lastPly.getDestination()).getType()) == (Piece.PAWN))) {
                            return new EnPassantPlyImpl(source, destination, new PositionImpl(((destination.getSquareIndex()) - 8)));
                        }
                    }
                }
            }
        }
    }
    // Set the capture flag properly.
    ((PlyImpl) (ply)).setCapture(((getBoard().getPiece(destination)) != null));
    return ply;// Return the original ply

}