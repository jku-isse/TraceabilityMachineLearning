/**
 * Return a menu from the chess engine, where the user
 * can change the settings.
 *
 * @return A menu for the engine settings.
 */
public final JMenu getMenu() {
    // Create a new menu.
    JMenu engineMenu = new JMenu("Engine");
    // Add a toggle item for to the permanent brain.
    engineMenu.add((_permanentBrainMenuItem = new JCheckBoxMenuItem("Use permanent brain", usePermanentBrain())));
    _permanentBrainMenuItem.addActionListener(this);
    // Add a menu for the maximum search time
    JMenu searchTimeMenu = new JMenu("Search time");
    // Add a sub-menu for fixed time.
    JMenu searchTimeSubMenuFix = new JMenu("Fixed time");
    // Add a sub-menu for average time.
    JMenu searchTimeSubMenuAv = new JMenu("Average time");
    // Add various options for the fixed search time
    // (maybe a user defined search time should be added, too).
    buttonGroupSearchTime = new ButtonGroup();
    _fixSearchTimeMenuItem = new JRadioButtonMenuItem[_searchTime.length];
    for (int st = 0; st < (_searchTime.length); st++) {
        _fixSearchTimeMenuItem[st] = new JRadioButtonMenuItem((("" + (_searchTime[st])) + " seconds"));
        _fixSearchTimeMenuItem[st].addActionListener(this);
        if ((_searchTime[st]) == 5) {
            // set initially 5 sec max search time:
            _fixSearchTimeMenuItem[st].setSelected(true);
            this.setMaximumSearchTime(5000);
        }
        buttonGroupSearchTime.add(_fixSearchTimeMenuItem[st]);
        // Add the current search time menu item to its menu.
        searchTimeSubMenuFix.add(_fixSearchTimeMenuItem[st]);
    }
    // Add various options for the average search time
    _avSearchTimeMenuItem = new JRadioButtonMenuItem[_searchTime.length];
    for (int st = 0; st < (_searchTime.length); st++) {
        _avSearchTimeMenuItem[st] = new JRadioButtonMenuItem((("" + (_searchTime[st])) + " seconds"));
        _avSearchTimeMenuItem[st].addActionListener(this);
        // Add the current search time menu item to its menu.
        searchTimeSubMenuAv.add(_avSearchTimeMenuItem[st]);
        buttonGroupSearchTime.add(_avSearchTimeMenuItem[st]);
    }
    searchTimeMenu.add(searchTimeSubMenuFix);
    searchTimeMenu.add(searchTimeSubMenuAv);
    // Add the search time menu to the main engine menu.
    engineMenu.add(searchTimeMenu);
    // Add a menu for the hashtable size.
    JMenu hashtableSizeMenu = new JMenu("Hashtable size");
    // Add various options for the hashtable size.
    this.buttonGroupHashSize = new ButtonGroup();
    _hashtableSizeMenuItem = new JRadioButtonMenuItem[_hashtableSizes.length];
    for (int hts = 0; hts < (_hashtableSizes.length); hts++) {
        _hashtableSizeMenuItem[hts] = new JRadioButtonMenuItem((("" + (_hashtableSizes[hts])) + " entries"));
        _hashtableSizeMenuItem[hts].addActionListener(this);
        if ((_hashtableSizes[hts]) == 10000) {
            _hashtableSizeMenuItem[hts].setSelected(true);
            getHashtable().setMaximumSize(_hashtableSizes[hts]);
        }
        // Add the current search time menu item to its menu.
        hashtableSizeMenu.add(_hashtableSizeMenuItem[hts]);
        this.buttonGroupHashSize.add(_hashtableSizeMenuItem[hts]);
    }
    // Add the search time menu to the main engine menu.
    engineMenu.add(hashtableSizeMenu);
    // Add a menu item to read openings from PGN files.
    engineMenu.addSeparator();
    engineMenu.add(new LoadOpeningsAction(getOpeningBook()));
    // Return the engine menu.
    return engineMenu;
}