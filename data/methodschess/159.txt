/**
 * Compute the best ply for the current position.
 *
 * @return The best known ply for the current position.
 */
public Ply computeBestPly() {
    _bestPly = null;// Remove ply from last computation.

    long startTime = System.currentTimeMillis();
    if (inOpeningBook()) {
        _bestPly = getOpeningBook().getOpeningBookPly();
        if ((_bestPly) == null) {
            // If theres no ply in the opening book.
            setInOpeningBook(false);
        }
    }
    if ((_bestPly) == null) {
        // If we dont have a ply yet
        start();
        try {
            Thread.sleep(getMaximumSearchTime());
            setSearchStop(true);
            // if( this.bFixedTime == false) {
            _searchThread.join();// Wait for the search thread to end the search at this search depth.

            // }
            _searchThread = null;// Remove the thread, so it can be recreated for the next move.

        } catch (InterruptedException ignored) {
        }
    }
    long usedTime = (System.currentTimeMillis()) - startTime;
    if ((_bestPly) != null) {
        if ((this._enginePanel) != null) {
            StringBuffer sOut = new StringBuffer();
            sOut.append("Best ply: ");
            sOut.append(_bestPly.getPly().toString());
            sOut.append(" with score ");
            sOut.append(_bestPly.getScore());
            sOut.append(" and search depth ");
            sOut.append(getSearchDepth());
            this._enginePanel.modifyText(sOut.toString());
            sOut = new StringBuffer();
            sOut.append("Analyzed boards: ");
            sOut.append(getAnalyzedBoards());
            sOut.append(" in ");
            sOut.append(usedTime);
            sOut.append(" ms");
            this._enginePanel.modifyText(sOut.toString());
        }
        if ((this._statusPanel) != null)
            this._statusPanel.setStatusText("Your turn...");

        return _bestPly.getPly();
    }
    return null;
}