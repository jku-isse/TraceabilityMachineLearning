/* public void testCheckAddPrescription() throws FormValidationException {
EditOfficeVisitForm frm = new EditOfficeVisitForm();
frm.setHcpID("9000000000");
frm.setPatientID("1");
frm.setVisitDate("05/02/2001");
frm.setAddMedID("5");
frm.setDosage("5");
frm.setStartDate("02/02/2007");
frm.setEndDate("02/02/2008");
frm.setOvID("9000000000");

try {
frm.setOverrideCode(null);
fail();
} catch(FormValidationException e) {

}

String[] overrideCodes = {"00001", "00002"};
frm.setOverrideCode(overrideCodes);
frm.setOverrideComment("Other reasons");
action.updateInformation(frm);


}
 */
/* public void testCheckRemoveSubaction() throws FormValidationException {
EditOfficeVisitForm frm = new EditOfficeVisitForm();
frm.setHcpID("9000000000");
frm.setPatientID("1");
frm.setVisitDate("05/02/2001");
frm.setAddDiagID("35");
frm.setRemoveDiagID("35");
action.updateInformation(frm);
}
 */
/* public void testNoAllergyPrescribe() throws FormValidationException, Exception {
gen.patient2();
gen.officeVisit2();
assertTrue(action.hasInteraction("081096", "2","2009/9/22","2009/9/22")=="");

}

public void testInteraction() throws FormValidationException, Exception {
gen.officeVisit3();
gen.ndCodes1();
gen.drugInteractions3();
assertFalse(action.hasInteraction("619580501", "1","9/22/2009","10/11/2009")=="");

}
 */
public void testMakeEmailApp() throws FormValidationException, Exception {
    gen.patient2();
    gen.hcp0();
    Email testEmail = action.makeEmailApp(9000000000L, "2", "You are allergic.");
    assertEquals("no-reply@itrust.com", testEmail.getFrom());
    assertEquals("andy.programmer@gmail.com", testEmail.getToListStr());
    assertEquals("HCP has prescribed you a potentially dangerous medication", testEmail.getSubject());
    assertEquals("Kelly Doctor has prescribed a medication that you are allergic to or that has a known interaction with a drug you are currently taking. You are allergic.", testEmail.getBody());
}