public void testEditHospitalAssignments() throws Exception {
    gen.clearAllTables();
    gen.standardData();
    // login admin
    WebConversation wc = login("9000000001", "pw");
    WebResponse wr = wc.getCurrentPage();
    assertEquals("iTrust - Admin Home", wr.getTitle());
    iTrustHTTPTest.assertLogged(TransactionType.HOME_VIEW, 9000000001L, 0L, "");
    // click on Edit HCP Assignment to Hospital
    wr = wr.getLinkWith("Edit HCP Assignment to Hospital").click();
    assertEquals("iTrust - Please Select a Personnel", wr.getTitle());
    wr.getForms()[1].setParameter("FIRST_NAME", "Kelly");
    wr.getForms()[1].setParameter("LAST_NAME", "Doctor");
    wr.getForms()[1].getButtons()[2].click();
    wr = wc.getCurrentPage();
    wr.getForms()[2].getButtons()[0].click();
    wr = wc.getCurrentPage();
    // assign hospital
    assertEquals("iTrust - Hospital Staffing Assignments", wr.getTitle());
    WebLink[] weblinks = wr.getLinks();
    for (int i = 0; i < (weblinks.length); i++) {
        if (weblinks[i].getText().equals("Assign")) {
            wr = weblinks[i].click();
            assertTrue(wr.getText().contains("HCP has been assigned"));
            iTrustHTTPTest.assertLogged(TransactionType.LHCP_ASSIGN_HOSPITAL, 9000000001L, 9000000000L, "");
            break;
        }
    }
    for (int i = 0; i < (weblinks.length); i++) {
        if (weblinks[i].getText().equals("Unassign")) {
            wr = weblinks[i].click();
            assertTrue(wr.getText().contains("HCP has been unassigned"));
            iTrustHTTPTest.assertLogged(TransactionType.LHCP_REMOVE_HOSPITAL, 9000000001L, 9000000000L, "");
            break;
        }
    }
}