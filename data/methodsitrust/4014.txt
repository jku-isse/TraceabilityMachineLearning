/* Authenticate HCP
MID 9000000000
Password: pw
Choose Chronic Disease Risks
Select and confirm patient 2.
 */
public void testDetectExistingHeartDiseaseRiskTest() throws Exception {
    // login hcp
    WebConversation wc = login("9000000000", "pw");
    WebResponse wr = wc.getCurrentPage();
    assertEquals("iTrust - HCP Home", wr.getTitle());
    iTrustHTTPTest.assertLogged(TransactionType.HOME_VIEW, 9000000000L, 0L, "");
    // click Chronic Disease Risks
    wr = wr.getLinkWith("Chronic Disease Risks").click();
    assertEquals(((iTrustHTTPTest.ADDRESS) + "auth/getPatientID.jsp?forward=hcp-uap/chronicDiseaseRisks.jsp"), wr.getURL().toString());
    // choose patient 2
    WebForm patientForm = wr.getForms()[0];
    patientForm.getScriptableObject().setParameterValue("UID_PATIENTID", "2");
    patientForm.getButtons()[1].click();
    wr = wc.getCurrentPage();
    assertEquals(((iTrustHTTPTest.ADDRESS) + "auth/hcp-uap/chronicDiseaseRisks.jsp"), wr.getURL().toString());
    iTrustHTTPTest.assertLogged(TransactionType.RISK_FACTOR_VIEW, 9000000000L, 2L, "");
    // make sure the correct factors for heart disease are displayed
    assertTrue(wr.getText().contains("Patient is male"));
    assertTrue(wr.getText().contains("Patients body mass index is over 30"));
    assertTrue(wr.getText().contains("Patient has hypertension"));
    assertTrue(wr.getText().contains("Patient has bad cholesterol"));
    assertTrue(wr.getText().contains("Patient is or was a smoker"));
    assertTrue(wr.getText().contains("Patient has had related diagnoses"));
    assertTrue(wr.getText().contains("Patient has a family history of this disease"));
}