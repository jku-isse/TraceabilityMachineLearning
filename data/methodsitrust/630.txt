/**
 *
 *
 * @param patient
 * 		
 * @param filterType
 * 		
 * @return 
 */
public String getComprehensiveMedicalInfo(PatientBean patient, MedicalReportFilter.MedicalReportFilterType filterType) {
    switch (filterType) {
        case ALLERGY :
            try {
                List<AllergyBean> allergies = aDAO.getAllergies(patient.getMID());
                String out = "";
                for (AllergyBean allergy : allergies) {
                    out += (allergy.getNDCode()) + "
";
                }
                return out;
            } catch (Exception e) {
                break;
            }
        case CURRENT_PRESCRIPTIONS :
            try {
                List<PrescriptionBean> prescriptions = pDAO.getCurrentPrescriptions(patient.getMID());
                String out = "";
                for (PrescriptionBean prescription : prescriptions) {
                    out += (prescription.getMedication().getNDCodeFormatted()) + "
";
                }
                return out;
            } catch (Exception e) {
                break;
            }
        case DIAGNOSIS_ICD_CODE :
            try {
                List<DiagnosisBean> diagnoses = pDAO.getDiagnoses(patient.getMID());
                String out = "";
                for (DiagnosisBean diagnosis : diagnoses) {
                    out += (diagnosis.getICDCode()) + "
";
                }
                return out;
            } catch (Exception e) {
                break;
            }
        case LOWER_OFFICE_VISIT_DATE :
            try {
                List<OfficeVisitBean> visits = oDAO.getAllOfficeVisits(patient.getMID());
                String out = "";
                for (OfficeVisitBean visit : visits) {
                    out += (visit.getVisitDateStr()) + "
";
                }
                return out;
            } catch (Exception e) {
                break;
            }
        case PASTCURRENT_PRESCRIPTIONS :
            try {
                List<PrescriptionBean> prescriptions = pDAO.getPrescriptions(patient.getMID());
                String out = "";
                for (PrescriptionBean prescription : prescriptions) {
                    out += (prescription.getMedication().getNDCodeFormatted()) + "
";
                }
                return out;
            } catch (Exception e) {
                break;
            }
        case PROCEDURE :
            try {
                List<ProcedureBean> procedures = pDAO.getProcedures(patient.getMID());
                String out = "";
                for (ProcedureBean procedure : procedures) {
                    out += (procedure.getCPTCode()) + "
";
                }
                return out;
            } catch (Exception e) {
                break;
            }
        default :
            break;
    }
    return null;
}