public void testProduceDataset() {
    chart = new DiagnosisTrendData();
    String diagnosisName = "Influenza";
    Calendar cal = Calendar.getInstance();
    Calendar cal2 = Calendar.getInstance();
    cal.set(2011, 10, 31);// start week

    cal2.set(2011, 11, 6);// end week

    DiagnosisStatisticsBean dsBean = new DiagnosisStatisticsBean();
    DiagnosisStatisticsBean avgBean = new DiagnosisStatisticsBean();
    dsBean.setZipStats(700);
    dsBean.setRegionStats(700);
    dsBean.setStartDate(cal.getTime());
    dsBean.setEndDate(cal2.getTime());
    avgBean.setZipStats(700);
    avgBean.setRegionStats(700);
    dsBean.setStartDate(cal.getTime());
    dsBean.setEndDate(cal.getTime());
    Map<String, String> params = new HashMap<String, String>();
    try {
        chart.initializeAvgDiagnosisStatistics(avgBean, dsBean, diagnosisName);
        DefaultCategoryDataset data = ((DefaultCategoryDataset) (chart.produceDataset(params)));
        assertEquals(700.0, data.getValue(diagnosisName, "Current Week Zipcode Cases"));
        assertEquals(700.0, data.getValue(diagnosisName, "Average Prior Zipcode Cases"));
        assertEquals(700.0, data.getValue(diagnosisName, "Current Week Region Cases"));
        assertEquals(700.0, data.getValue(diagnosisName, "Average Prior Region Cases"));
        assertTrue(chart.hasData());
    } catch (DatasetProduceException e) {
        e.printStackTrace();
        fail();
    }
}