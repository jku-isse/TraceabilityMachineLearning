/**
 * Return a list of patients with a special-diagnosis-history who
 * have the logged in HCP as a DHCP and whose medications are going to
 * expire within seven days.
 *
 * @param hcpMID
 * 		The MID of the logged in HCP
 * @return A list of patients satisfying the conditions.
 * @throws DBException
 * 		
 */
public List<PatientBean> getRenewalNeedsPatients(long hcpMID) throws DBException {
    Connection conn = null;
    PreparedStatement ps = null;
    try {
        conn = factory.getConnection();
        ps = conn.prepareStatement(("SELECT * FROM ( " + ((((((((((((((((((((((("SELECT DISTINCT patients.* From patients, declaredhcp, ovdiagnosis, officevisits, ovmedication " + "Where ") + "declaredhcp.HCPID = ? AND ") + "patients.MID = declaredhcp.PatientID AND ") + "( ") + "ovdiagnosis.VisitID = officevisits.ID AND officevisits.PatientID = declaredhcp.PatientID ") + "AND ") + "((ovdiagnosis.ICDCode >= ? AND ovdiagnosis.ICDCode < ?) ") + "OR (ovdiagnosis.ICDCode >= ? AND ovdiagnosis.ICDCode < ?) ") + "OR (ovdiagnosis.ICDCode >= ? AND ovdiagnosis.ICDCode < ?)) ") + ") ") + "UNION ALL ") + "SELECT DISTINCT patients.* From patients, declaredhcp, ovdiagnosis, officevisits, ovmedication ") + "Where ") + "declaredhcp.HCPID = ? AND ") + "patients.MID = declaredhcp.PatientID AND ") + "( ") + "declaredhcp.PatientID = officevisits.PatientID AND officevisits.ID = ovmedication.VisitID ") + "AND ") + "ovmedication.EndDate BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ") + ") ") + ") AS final ") + "GROUP BY final.MID HAVING COUNT(*) = 2 ") + "ORDER BY final.lastname ASC, final.firstname ASC")));
        ps.setLong(1, hcpMID);
        ps.setFloat(2, 250.0F);
        ps.setFloat(3, 251.0F);
        ps.setFloat(4, 493.0F);
        ps.setFloat(5, 494.0F);
        ps.setFloat(6, 390.0F);
        ps.setFloat(7, 460.99F);
        ps.setLong(8, hcpMID);
        ResultSet rs = ps.executeQuery();
        return patientLoader.loadList(rs);
    } catch (SQLException e) {
        e.printStackTrace();
        throw new DBException(e);
    } finally {
        DBUtil.closeConnection(conn, ps);
    }
}