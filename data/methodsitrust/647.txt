public void testGenerateReport() {
    List<ReportFilter> filters = new ArrayList<ReportFilter>();
    filters.add(new DemographicReportFilter(DemographicReportFilter.filterTypeFromString("DEACTIVATED"), "exclude", factory));
    filters.add(new PersonnelReportFilter(PersonnelReportFilter.filterTypeFromString("DLHCP"), "Gandalf Stormcrow", factory));
    gpga = new GroupReportGeneratorAction(factory, filters);
    gpga.generateReport();
    assertEquals(2, gpga.getReportFilterTypes().size());
    assertEquals(2, gpga.getReportFilterValues().size());
    assertEquals("DEACTIVATED", gpga.getReportFilterTypes().get(0).toString());
    assertEquals("exclude", gpga.getReportFilterValues().get(0));
    assertEquals("DECLARED HCP", gpga.getReportFilterTypes().get(1).toString());
    assertEquals("Gandalf Stormcrow", gpga.getReportFilterValues().get(1));
    int deactivatedIndex = gpga.getReportHeaders().indexOf("DEACTIVATED");
    int DHCPIndex = gpga.getReportHeaders().indexOf("DECLARED HCP");
    for (int i = 0; i < (gpga.getReportData().size()); i++) {
        assertEquals("", gpga.getReportData().get(i).get(deactivatedIndex));
        assertEquals("Gandalf Stormcrow
", gpga.getReportData().get(i).get(DHCPIndex));
    }
}