/**
 *
 *
 * @param tbList
 * 		
 * @param patientID
 * 		
 * @param sortByRole
 * 		
 * @return 
 * @throws DBException
 * 		
 */
private List<TransactionBean> addAndSortRoles(List<TransactionBean> tbList, long patientID, boolean sortByRole) throws DBException {
    Connection conn = null;
    PreparedStatement ps = null;
    try {
        conn = factory.getConnection();
        for (TransactionBean t : tbList) {
            ps = conn.prepareStatement("SELECT Role FROM users WHERE MID=?");
            ps.setLong(1, t.getLoggedInMID());
            ResultSet rs = ps.executeQuery();
            String role = "";
            if (rs.next())
                role = rs.getString("Role");

            if (role.equals("er"))
                role = "Emergency Responder";
            else
                if (role.equals("uap"))
                    role = "UAP";
                else
                    if (role.equals("hcp")) {
                        role = "LHCP";
                        ps = conn.prepareStatement("SELECT PatientID FROM declaredhcp WHERE HCPID=?");
                        ps.setLong(1, t.getLoggedInMID());
                        ResultSet rs2 = ps.executeQuery();
                        while (rs2.next()) {
                            if ((rs2.getLong("PatientID")) == patientID) {
                                role = "DLHCP";
                                break;
                            }
                        } 
                    } else
                        if (role.equals("patient")) {
                            role = "Patient";
                            ps = conn.prepareStatement("SELECT representeeMID FROM representatives WHERE representerMID=?");
                            ps.setLong(1, t.getLoggedInMID());
                            ResultSet rs2 = ps.executeQuery();
                            while (rs2.next()) {
                                if ((rs2.getLong("representeeMID")) == patientID) {
                                    role = "Personal Health Representative";
                                    break;
                                }
                            } 
                        }



            t.setRole(role);
        }
        if (sortByRole) {
            TransactionBean[] array = new TransactionBean[tbList.size()];
            array[0] = tbList.get(0);
            TransactionBean t;
            for (int i = 1; i < (tbList.size()); i++) {
                t = tbList.get(i);
                String role = t.getRole();
                int j = 0;
                while (((array[j]) != null) && ((role.compareToIgnoreCase(array[j].getRole())) >= 0))
                    j++;

                for (int k = i; k > j; k--) {
                    array[k] = array[(k - 1)];
                }
                array[j] = t;
            }
            int size = tbList.size();
            for (int i = 0; i < size; i++)
                tbList.set(i, array[i]);

        }
        return tbList;
    } catch (SQLException e) {
        e.printStackTrace();
        throw new DBException(e);
    } finally {
        DBUtil.closeConnection(conn, ps);
    }
}