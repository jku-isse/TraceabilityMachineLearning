public void testViewMonitoringList() throws Exception {
    // Sets up all preconditions listed in acceptance test
    gen.remoteMonitoring3();
    // login HCP
    WebConversation wc = login("9000000000", "pw");
    WebResponse wr = wc.getCurrentPage();
    assertEquals("iTrust - HCP Home", wr.getTitle());
    iTrustHTTPTest.assertLogged(TransactionType.HOME_VIEW, 9000000000L, 0L, "");
    wr = wr.getLinkWith("Monitor Patients").click();
    // Verify all data
    WebTable table = wr.getTableStartingWithPrefix("Patient Physiologic Statistics");
    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Date date = new Date();
    assertEquals("Random Person (MID 1)", table.getCellAsText(2, 0));
    assertTrue(table.getCellAsText(2, 1).contains(dateFormat.format(date)));
    assertTrue(table.getCellAsText(2, 1).contains("08:00:00"));
    assertEquals("160", table.getCellAsText(2, 2));
    assertEquals("110", table.getCellAsText(2, 3));
    assertEquals("60", table.getCellAsText(2, 4));
    assertEquals("Andy Programmer", table.getCellAsText(2, 5));
    // Highlighting for abnormal data
    assertEquals("#ffff00", table.getRows()[2].getAttribute("bgcolor"));
    assertEquals("Random Person (MID 1)", table.getCellAsText(3, 0));
    assertTrue(table.getCellAsText(3, 1).contains(dateFormat.format(date)));
    assertTrue(table.getCellAsText(3, 1).contains("07:15:00"));
    assertEquals("100", table.getCellAsText(3, 2));
    assertEquals("70", table.getCellAsText(3, 3));
    assertEquals("90", table.getCellAsText(3, 4));
    assertEquals("FirstUAP LastUAP", table.getCellAsText(3, 5));
    assertEquals("Random Person (MID 1)", table.getCellAsText(4, 0));
    assertTrue(table.getCellAsText(4, 1).contains(dateFormat.format(date)));
    assertTrue(table.getCellAsText(4, 1).contains("05:30:00"));
    assertEquals("90", table.getCellAsText(4, 2));
    assertEquals("60", table.getCellAsText(4, 3));
    assertEquals("80", table.getCellAsText(4, 4));
    assertEquals("Random Person", table.getCellAsText(4, 5));
    assertEquals("Baby Programmer (MID 5)", table.getCellAsText(5, 0));
    assertEquals("No Information Provided", table.getCellAsText(5, 1));
    assertEquals("", table.getCellAsText(5, 2));
    assertEquals("", table.getCellAsText(5, 3));
    assertEquals("", table.getCellAsText(5, 4));
    assertEquals("", table.getCellAsText(5, 5));
    // Highlighting for no entry
    assertEquals("#ff6666", table.getRows()[5].getAttribute("bgcolor"));
    iTrustHTTPTest.assertLogged(TransactionType.TELEMEDICINE_DATA_VIEW, 9000000000L, 0L, "");
}