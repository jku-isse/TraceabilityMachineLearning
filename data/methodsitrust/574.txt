public void testGetConflicts() throws Exception {
    TestDataGenerator gen = new TestDataGenerator();
    gen.clearAllTables();
    gen.hcp0();
    gen.patient2();
    gen.appointmentType();
    Calendar startDate = Calendar.getInstance();
    startDate.set(Calendar.HOUR, 0);
    startDate.setTimeInMillis(((startDate.getTimeInMillis()) + (((1000 * 60) * 60) * 24)));
    ApptBean b = new ApptBean();
    b.setApptType("General Checkup");
    b.setHcp(hcpId);
    b.setPatient(mId);
    b.setDate(new Timestamp(((startDate.getTimeInMillis()) + ((10 * 60) * 1000))));
    b.setComment(null);
    AddApptAction schedAction = new AddApptAction(factory, hcpId);
    try {
        assertTrue(schedAction.addAppt(b, true).startsWith("Success"));
    } catch (FormValidationException e1) {
        fail();
    }
    b = new ApptBean();
    b.setApptType("Physical");
    b.setHcp(hcpId);
    b.setPatient(1L);
    b.setDate(new Timestamp(((startDate.getTimeInMillis()) + ((20 * 60) * 1000))));
    b.setComment(null);
    try {
        assertTrue(schedAction.addAppt(b, true).startsWith("Success"));
    } catch (FormValidationException e) {
        fail();
    }
    b = new ApptBean();
    b.setApptType("Colonoscopy");
    b.setHcp(hcpId);
    b.setPatient(mId);
    b.setDate(new Timestamp(((startDate.getTimeInMillis()) + ((60 * 60) * 1000))));
    b.setComment(null);
    try {
        assertTrue(schedAction.addAppt(b, true).startsWith("Success"));
    } catch (FormValidationException e) {
        fail();
    }
    this.action = new GenerateCalendarAction(factory, hcpId);
    action.getApptsTable(startDate.get(Calendar.MONTH), startDate.get(Calendar.YEAR));
    boolean[] conflicts = action.getConflicts();
    assertTrue(conflicts[0]);
    assertTrue(conflicts[1]);
    assertFalse(conflicts[2]);
}