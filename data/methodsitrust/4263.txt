/**
 *
 */
@Override
public List<PatientBean> filter(List<PatientBean> patients) {
    List<PatientBean> prunedList = new ArrayList<PatientBean>();
    boolean add = ((filterValue) != null) && (!(filterValue.isEmpty()));
    if (add) {
        for (PatientBean patient : patients) {
            add = false;
            switch (filterType) {
                case MID :
                    add = filterValue.equalsIgnoreCase(Long.toString(patient.getMID()));
                    break;
                case GENDER :
                    add = filterValue.equalsIgnoreCase(patient.getGender().toString());
                    break;
                case LAST_NAME :
                    add = patient.getLastName().equalsIgnoreCase(filterValue);
                    break;
                case FIRST_NAME :
                    add = patient.getFirstName().equalsIgnoreCase(filterValue);
                    break;
                case CONTACT_EMAIL :
                    add = patient.getEmail().equalsIgnoreCase(filterValue);
                    break;
                case STREET_ADDR :
                    add = ((patient.getStreetAddress1().equalsIgnoreCase(filterValue)) || (patient.getStreetAddress2().equalsIgnoreCase(filterValue))) || ((((patient.getStreetAddress1()) + " ") + (patient.getStreetAddress2())).equalsIgnoreCase(filterValue));
                    break;
                case CITY :
                    add = patient.getCity().equalsIgnoreCase(filterValue);
                    break;
                case STATE :
                    add = patient.getState().equalsIgnoreCase(filterValue);
                    break;
                case ZIP :
                    add = patient.getZip().contains(filterValue);
                    break;
                case PHONE :
                    add = patient.getPhone().equalsIgnoreCase(filterValue);
                    break;
                case EMER_CONTACT_NAME :
                    add = patient.getEmergencyName().equalsIgnoreCase(filterValue);
                    break;
                case EMER_CONTACT_PHONE :
                    add = patient.getEmergencyPhone().equalsIgnoreCase(filterValue);
                    break;
                case INSURE_NAME :
                    add = patient.getIcName().equalsIgnoreCase(filterValue);
                    break;
                case INSURE_ADDR :
                    add = ((patient.getIcAddress1().equalsIgnoreCase(filterValue)) || (patient.getIcAddress2().equalsIgnoreCase(filterValue))) || ((((patient.getIcAddress1()) + " ") + (patient.getIcAddress2())).equalsIgnoreCase(filterValue));
                    break;
                case INSURE_CITY :
                    add = patient.getIcCity().equalsIgnoreCase(filterValue);
                    break;
                case INSURE_STATE :
                    add = patient.getIcState().equalsIgnoreCase(filterValue);
                    break;
                case INSURE_ZIP :
                    add = patient.getIcZip().equalsIgnoreCase(filterValue);
                    break;
                case INSURE_PHONE :
                    add = patient.getIcPhone().equalsIgnoreCase(filterValue);
                    break;
                case INSURE_ID :
                    add = patient.getIcID().equalsIgnoreCase(filterValue);
                    break;
                case PARENT_FIRST_NAME :
                    try {
                        List<FamilyMemberBean> parents = fDAO.getParents(patient.getMID());
                        for (FamilyMemberBean parent : parents) {
                            if (filterValue.equalsIgnoreCase(parent.getFirstName())) {
                                add = true;
                                break;
                            }
                        }
                    } catch (Exception e) {
                        break;
                    }
                    break;
                case PARENT_LAST_NAME :
                    try {
                        List<FamilyMemberBean> parents = fDAO.getParents(patient.getMID());
                        for (FamilyMemberBean parent : parents) {
                            if (parent.getLastName().equals(filterValue)) {
                                add = true;
                                break;
                            }
                        }
                    } catch (Exception e) {
                        break;
                    }
                    break;
                case CHILD_FIRST_NAME :
                    try {
                        List<FamilyMemberBean> children = fDAO.getChildren(patient.getMID());
                        for (FamilyMemberBean child : children) {
                            if (child.getFirstName().equals(filterValue)) {
                                add = true;
                                break;
                            }
                        }
                    } catch (Exception e) {
                        break;
                    }
                    break;
                case CHILD_LAST_NAME :
                    try {
                        List<FamilyMemberBean> children = fDAO.getChildren(patient.getMID());
                        for (FamilyMemberBean child : children) {
                            if (child.getLastName().equals(filterValue)) {
                                add = true;
                                break;
                            }
                        }
                    } catch (Exception e) {
                        break;
                    }
                    break;
                case SIBLING_FIRST_NAME :
                    try {
                        List<FamilyMemberBean> siblings = fDAO.getSiblings(patient.getMID());
                        for (FamilyMemberBean sibling : siblings) {
                            if (sibling.getFirstName().equals(filterValue)) {
                                add = true;
                                break;
                            }
                        }
                    } catch (Exception e) {
                        break;
                    }
                    break;
                case SIBLING_LAST_NAME :
                    try {
                        List<FamilyMemberBean> siblings = fDAO.getSiblings(patient.getMID());
                        for (FamilyMemberBean sibling : siblings) {
                            if (sibling.getLastName().equals(filterValue)) {
                                add = true;
                                break;
                            }
                        }
                    } catch (Exception e) {
                        break;
                    }
                    break;
                    // case DOB:
                    // String dates[] = filterValue.split("-");
                    // if (dates.length != 2)
                    // break;
                    // try {
                    // SimpleDateFormat frmt = new SimpleDateFormat("MM/dd/yyyy");
                    // Date d1 = frmt.parse(dates[0]);
                    // Date d2 = frmt.parse(dates[1]);
                    // add = patient.getDateOfBirth().compareTo(d1) >= 0 && patient.getDateOfBirth().compareTo(d2)
                    // <= 0;
                    // } catch (Exception e) {
                    // break;
                    // }
                    // break;
                case LOWER_AGE_LIMIT :
                    int lalval = Integer.parseInt(filterValue);
                    if (lalval < 0) {
                        throw new NumberFormatException("Age must be GTE 0!");
                    }
                    add = lalval <= (patient.getAge());
                    break;
                case UPPER_AGE_LIMIT :
                    int ualval = Integer.parseInt(filterValue);
                    if (ualval < 0) {
                        throw new NumberFormatException("Age must be GTE 0!");
                    }
                    add = ((patient.getAge()) > 0) && (ualval >= (patient.getAge()));
                    break;
                case DEACTIVATED :
                    if (filterValue.equals("exclude")) {
                        add = patient.getDateOfDeactivationStr().equals("");
                    } else
                        if (filterValue.equals("only")) {
                            add = !(patient.getDateOfDeactivationStr().equals(""));
                        } else {
                            add = true;
                        }

                    break;
                default :
                    break;
            }
            if (add) {
                prunedList.add(patient);
            }
        }
    }
    return prunedList;
}