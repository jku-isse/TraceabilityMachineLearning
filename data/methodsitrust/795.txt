/**
 * Method used to add a report to the data base
 *
 * @param aeBean
 * 		The adverse event to add
 * @return a string for testing purposes only
 * @throws iTrustException
 * 		
 * @throws FormValidationException
 * 		
 * @throws DBException
 * 		
 */
public String addReport(AdverseEventBean aeBean) throws DBException, FormValidationException, iTrustException {
    try {
        validator.validate(aeBean);
    } catch (FormValidationException e) {
        e.printStackTrace();
        return e.getMessage();
    }
    try {
        adverseEventDAO.addReport(aeBean, hcpID);
    } catch (DBException e) {
        throw new iTrustException(e.getMessage());
    }
    /**
     * Old code used to send a single e-mail. Keep for reference
     * Email email = new Email();
     * String senderName;
     * String fromEmail;
     * email.setFrom("noreply@itrust.com");
     * List<String> toList = new ArrayList<String>();
     *
     * PatientBean sender = patientDAO.getPatient(loggedInMID);
     * PersonnelBean receiver = personnelDAO.getPersonnel(hcpID);
     *
     * toList.add(receiver.getEmail());
     * senderName = sender.getFullName();
     * fromEmail = sender.getEmail();
     *
     * email.setToList(toList);
     * email.setFrom(fromEmail);
     * email.setSubject(String.format("Adverse Event Report"));
     * email.setBody(String.format(
     * " Patient: " + patientDAO.getName(Long.parseLong(aeBean.getMID()))
     * + " (MID " + aeBean.getMID() + ") Has Reported the following adverse event(s)" +
     * " Drug: " + aeBean.getDrug() + "(" + aeBean.getCode() + ") Description: " + aeBean.getDescription()
     * ));
     * emailer.sendEmail(email);
     */
    return "";
}