public PreparedStatement loadParameters(PreparedStatement ps, PatientBean p) throws SQLException {
    int i = 1;
    ps.setString((i++), p.getFirstName());
    ps.setString((i++), p.getLastName());
    ps.setString((i++), p.getEmail());
    // ps.setString(i++, p.getSecurityQuestion());
    // ps.setString(i++, p.getSecurityAnswer());
    ps.setString((i++), p.getStreetAddress1());
    ps.setString((i++), p.getStreetAddress2());
    ps.setString((i++), p.getCity());
    ps.setString((i++), p.getState());
    ps.setString((i++), p.getZip());
    ps.setString((i++), p.getPhone());
    ps.setString((i++), p.getEmergencyName());
    ps.setString((i++), p.getEmergencyPhone());
    ps.setString((i++), p.getIcName());
    ps.setString((i++), p.getIcAddress1());
    ps.setString((i++), p.getIcAddress2());
    ps.setString((i++), p.getIcCity());
    ps.setString((i++), p.getIcState());
    ps.setString((i++), p.getIcZip());
    ps.setString((i++), p.getIcPhone());
    ps.setString((i++), p.getIcID());
    Date date = null;
    try {
        date = new Date(DATE_FORMAT.parse(p.getDateOfBirthStr()).getTime());
    } catch (ParseException e) {
        e.printStackTrace();
    }
    ps.setDate((i++), date);
    date = null;
    try {
        date = new Date(DATE_FORMAT.parse(p.getDateOfDeathStr()).getTime());
    } catch (ParseException e) {
        if ("".equals(p.getDateOfDeathStr())) {
            date = null;
        } else {
            e.printStackTrace();
        }
    }
    ps.setDate((i++), date);
    ps.setString((i++), p.getCauseOfDeath());
    ps.setString((i++), p.getMotherMID());
    ps.setString((i++), p.getFatherMID());
    ps.setString((i++), p.getBloodType().getName());
    ps.setString((i++), p.getEthnicity().getName());
    ps.setString((i++), p.getGender().getName());
    ps.setString((i++), p.getTopicalNotes());
    ps.setString((i++), p.getCreditCardType());
    ps.setString((i++), p.getCreditCardNumber());
    ps.setString((i++), p.getDirectionsToHome());
    ps.setString((i++), p.getReligion());
    ps.setString((i++), p.getLanguage());
    ps.setString((i++), p.getSpiritualPractices());
    ps.setString((i++), p.getAlternateName());
    date = null;
    try {
        date = new Date(DATE_FORMAT.parse(p.getDateOfDeactivationStr()).getTime());
    } catch (ParseException e) {
        if ("".equals(p.getDateOfDeactivationStr())) {
            date = null;
        } else {
            e.printStackTrace();
        }
    } catch (NullPointerException e) {
        if ("".equals(p.getDateOfDeactivationStr())) {
            date = null;
        } else {
            e.printStackTrace();
        }
    }
    ps.setDate((i++), date);
    return ps;
}