public void testToString() {
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.LAST_NAME, "val", factory);
    String expected = "Filter by LAST NAME with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.CHILD_FIRST_NAME, "val", factory);
    expected = "Filter by CHILDS FIRST NAME with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.CHILD_LAST_NAME, "val", factory);
    expected = "Filter by CHILDS LAST NAME with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.CITY, "val", factory);
    expected = "Filter by CITY with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.CONTACT_EMAIL, "val", factory);
    expected = "Filter by CONTACT EMAIL with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.EMER_CONTACT_NAME, "val", factory);
    expected = "Filter by EMERGENCY CONTACT NAME with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.EMER_CONTACT_PHONE, "val", factory);
    expected = "Filter by EMERGENCY CONTACT PHONE # with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.FIRST_NAME, "val", factory);
    expected = "Filter by FIRST NAME with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.INSURE_ADDR, "val", factory);
    expected = "Filter by INSURANCE COMPANY ADDRESS with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.INSURE_CITY, "val", factory);
    expected = "Filter by INSURANCE COMPANY CITY with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.INSURE_ID, "val", factory);
    expected = "Filter by INSURANCE COMPANY ID with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.INSURE_NAME, "val", factory);
    expected = "Filter by INSURANCE COMPANY NAME with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.INSURE_PHONE, "val", factory);
    expected = "Filter by INSURANCE COMPANY PHONE # with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.INSURE_STATE, "val", factory);
    expected = "Filter by INSURANCE COMPANY STATE with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.INSURE_ZIP, "val", factory);
    expected = "Filter by INSURANCE COMPANY ZIPCODE with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.PARENT_FIRST_NAME, "val", factory);
    expected = "Filter by PARENTS FIRST NAME with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.PARENT_LAST_NAME, "val", factory);
    expected = "Filter by PARENTS LAST NAME with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.PHONE, "val", factory);
    expected = "Filter by PHONE # with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.SIBLING_FIRST_NAME, "val", factory);
    expected = "Filter by SIBLINGS FIRST NAME with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.SIBLING_LAST_NAME, "val", factory);
    expected = "Filter by SIBLINGS LAST NAME with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.STATE, "val", factory);
    expected = "Filter by STATE with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.STREET_ADDR, "val", factory);
    expected = "Filter by STREET ADDRESS with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.ZIP, "val", factory);
    expected = "Filter by ZIPCODE with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.GENDER, "val", factory);
    expected = "Filter by GENDER with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.LOWER_AGE_LIMIT, "val", factory);
    expected = "Filter by LOWER AGE LIMIT with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.UPPER_AGE_LIMIT, "val", factory);
    expected = "Filter by UPPER AGE LIMIT with value val";
    assertEquals(expected, filter.toString());
    filter = new DemographicReportFilter(DemographicReportFilter.DemographicReportFilterType.MID, "val", factory);
    expected = "Filter by MID with value val";
    assertEquals(expected, filter.toString());
}