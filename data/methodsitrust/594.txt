/**
 * Checks to see if a patient needs the Haemophilus Infulenzae immunization
 *
 * @param count
 * 		which immunization they are on
 * @param patientAge
 * 		how old the patient is
 * @param time
 * 		what the current date is
 * @return when the immunization should be given
 */
public static String testHaemoFlu(int count, Date patientDOB, long time, long firstDoseTime) {
    String reason = "";
    long weeks = ((Calendar.getInstance().getTimeInMillis()) - time) / (GetVisitRemindersAction.WEEK_IN_MILLIS);
    Date firstDose = new Date(firstDoseTime);
    // long ageFirst = patientAge - (firstDoseTime / (1000 * 60 * 60 * 24 * 7));
    if (0 == count) {
        if (GetVisitRemindersAction.olderThan(patientDOB, 0, 0, 6))
            reason += "90645 Haemophilus influenzae (6 weeks), ";

    } else
        if (1 == count) {
            if (((GetVisitRemindersAction.olderThan(patientDOB, 0, 4, 0)) && (!(GetVisitRemindersAction.firstDoseAfter(patientDOB, firstDose, 1, 0, 0)))) && (4 <= weeks))
                reason += "90645 Haemophilus influenzae (4 months), ";
            else
                if ((((GetVisitRemindersAction.olderThan(patientDOB, 0, 4, 0)) && (GetVisitRemindersAction.firstDoseAfter(patientDOB, firstDose, 1, 0, 0))) && (!(GetVisitRemindersAction.firstDoseAfter(patientDOB, firstDose, 1, 2, 0)))) && (8 <= weeks))
                    reason += "90645 Haemophilus influenzae (4 months), ";


        } else
            if (2 == count) {
                if (((GetVisitRemindersAction.olderThan(patientDOB, 0, 6, 0)) && (4 <= weeks)) && (!(GetVisitRemindersAction.firstDoseAfter(patientDOB, firstDose, 1, 0, 0))))
                    reason += "90645 Haemophilus influenzae (6 months), ";

            }


    return reason;
}