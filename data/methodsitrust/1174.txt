// /**
// * Approves a report request from the list.  E-mail is sent when the request is approved.
// *
// * @param ID id of the request
// * @throws iTrustException
// */
// public void approveReportRequest(long ID) throws iTrustException {
// ReportRequestBean rr = reportRequestDAO.getReportRequest(ID);
// reportRequestDAO.approveReportRequest(ID, loggedInMID, Calendar.getInstance().getTime());
// new EmailUtil(factory).sendEmail(makeEmailApp(loggedInMID, rr.getRequesterMID(), rr.getPatientMID()));
// 
// }
// /**
// *
// * Sends e-mail regarding the approved request.
// *
// * @param adminID admin who approved the request
// * @param hcpID HCP the request is for
// * @param pid ID of the patient the report is about
// * @return the sent e-mail
// * @throws DBException
// */
// private Email makeEmailApp(long adminID, long hcpID, long pid) throws DBException {
// 
// PatientBean p = new PatientDAO(factory).getPatient(pid);
// 
// Email email = new Email();
// email.setFrom("no-reply@itrust.com");
// email.setToList(Arrays.asList(p.getEmail()));
// email.setSubject("A Report has been generated in iTrust");
// email
// .setBody(String
// .format(
// "Dear %s, 
 The iTrust Health Care Provider (%s) submitted a request to view your full medical records.  The iTrust administrator (%s) approved a one-time viewing of this report.  You will be notified when the HCP chooses to view it.",
// p.getFullName(), hcpID, adminID));
// return email;
// }
// /**
// * Rejects a request from the list.
// *
// * @param ID id of the rejected request
// * @param comment why the request was rejected
// * @throws iTrustException
// */
// public void rejectReportRequest(long ID, String comment) throws iTrustException {
// reportRequestDAO.rejectReportRequest(ID, loggedInMID, Calendar.getInstance().getTime(), comment);
// }
/**
 * Returns the requested report
 *
 * @param ID
 * 		id of the requested report
 * @return the requested report
 * @throws iTrustException
 * 		
 */
public ReportRequestBean getReportRequest(int ID) throws iTrustException {
    return reportRequestDAO.getReportRequest(ID);
}