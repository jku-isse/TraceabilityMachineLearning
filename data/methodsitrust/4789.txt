public void testPatientAllErrors() throws Exception {
    PatientBean p = new PatientBean();
    p.setFirstName("Person5");
    p.setLastName("LastName5");
    p.setDateOfBirthStr("10/ 10/2005");
    p.setDateOfDeathStr("05-19-1984");
    p.setCauseOfDeath("Q150");
    p.setEmail("andy.programmer?gmail.com");
    p.setStreetAddress1("344 East < Ave.");
    p.setStreetAddress2("?");
    p.setCity("Wr0ng");
    p.setState("Pa");
    p.setZip("17534-");
    p.setPhone("555");
    p.setEmergencyName("Tow #ater");
    p.setEmergencyPhone("(809)");
    p.setIcName("Dewie Che@tum and Howe the 2nd");
    p.setIcAddress1("458 Ripoff Blvd?");
    p.setIcAddress2("Greedy Suite                        ");
    p.setIcCity("%");
    p.setIcState("mI");
    p.setIcZip("48169-0000 ");
    p.setIcPhone(" 666-059-4023 ");
    p.setIcID("$$");
    p.setMotherMID("-1");
    p.setFatherMID("-2");
    p.setBloodTypeStr("AB");
    p.setEthnicityStr("Caucasion");
    p.setGenderStr("female");
    p.setTopicalNotes("<script>alert(hello);</script>");
    p.setPassword("toooooooooooooooooooooooooo long password");
    p.setPassword("toooooooooooooooooooooooooo long password");
    try {
        new PatientValidator().validate(p);
        fail("exception should have been thrown");
    } catch (FormValidationException e) {
        assertEquals(("First name: " + (ValidationFormat.NAME.getDescription())), e.getErrorList().get(0));
        assertEquals(("Last name: " + (ValidationFormat.NAME.getDescription())), e.getErrorList().get(1));
        assertEquals("Date of Birth: MM/DD/YYYY", e.getErrorList().get(3));
        assertEquals("Date of Death: MM/DD/YYYY", e.getErrorList().get(4));
        assertEquals("Cause of Death cannot be specified without Date of Death!", e.getErrorList().get(5));
        assertEquals("Cause of Death: xxx.xx", e.getErrorList().get(6));
        assertEquals(false, val.validateEmail("andy.programmer?gmail.com"));
        assertEquals(("Street Address 1: " + (ValidationFormat.ADDRESS.getDescription())), e.getErrorList().get(7));
        assertEquals(("Street Address 2: " + (ValidationFormat.ADDRESS.getDescription())), e.getErrorList().get(8));
        assertEquals(("City: " + (ValidationFormat.CITY.getDescription())), e.getErrorList().get(9));
        assertEquals(("State: " + (ValidationFormat.STATE.getDescription())), e.getErrorList().get(10));
        assertEquals(("Zip Code: " + (ValidationFormat.ZIPCODE.getDescription())), e.getErrorList().get(11));
        assertEquals(("Phone Number: " + (ValidationFormat.PHONE_NUMBER.getDescription())), e.getErrorList().get(12));
        assertEquals(("Emergency Contact Name: " + (ValidationFormat.NAME.getDescription())), e.getErrorList().get(13));
        assertEquals(("Emergency Contact Phone: " + (ValidationFormat.PHONE_NUMBER.getDescription())), e.getErrorList().get(14));
        assertEquals(("Insurance Company Name: " + (ValidationFormat.NAME.getDescription())), e.getErrorList().get(15));
        assertEquals(("Insurance Company Address 1: " + (ValidationFormat.ADDRESS.getDescription())), e.getErrorList().get(16));
        assertEquals(("Insurance Company Address 2: " + (ValidationFormat.ADDRESS.getDescription())), e.getErrorList().get(17));
        assertEquals(("Insurance Company City: " + (ValidationFormat.CITY.getDescription())), e.getErrorList().get(18));
        assertEquals(("Insurance Company State: " + (ValidationFormat.STATE.getDescription())), e.getErrorList().get(19));
        assertEquals(("Insurance Company Zip: " + (ValidationFormat.ZIPCODE.getDescription())), e.getErrorList().get(20));
        assertEquals(("Insurance Company Phone: " + (ValidationFormat.PHONE_NUMBER.getDescription())), e.getErrorList().get(21));
        assertEquals(("Insurance Company ID: " + (ValidationFormat.INSURANCE_ID.getDescription())), e.getErrorList().get(22));
        assertEquals(("Mother MID: " + (ValidationFormat.NPMID.getDescription())), e.getErrorList().get(23));
        assertEquals(("Father MID: " + (ValidationFormat.NPMID.getDescription())), e.getErrorList().get(24));
        assertEquals(("Topical Notes: " + (ValidationFormat.NOTES.getDescription())), e.getErrorList().get(25));
        assertEquals("number of errors", 26, e.getErrorList().size());
    }
}