/**
 * Method that parses the request parameters to create the filter list in order to run report.
 *
 * @param request
 * 		with form parameters to create the filter list
 */
private void parseFilters(HttpServletRequest request) {
    boolean hasDeactivatedFilter = false;
    if (((request.getParameter("demoparams")) != null) && (!(request.getParameter("demoparams").isEmpty()))) {
        String demoparams = request.getParameter("demoparams");
        String[] demoFilters = demoparams.split(" ");
        for (String filter : demoFilters) {
            if (((request.getParameter(filter)) != null) && (!(request.getParameter(filter).isEmpty()))) {
                DemographicReportFilter.DemographicReportFilterType filterType = DemographicReportFilter.filterTypeFromString(filter);
                if (filterType.toString().equals("DEACTIVATED")) {
                    hasDeactivatedFilter = true;
                }
                DemographicReportFilter fil = new DemographicReportFilter(filterType, request.getParameter(filter), factory);
                filters.add(fil);
            }
        }
    }
    if (!hasDeactivatedFilter) {
        filters.add(new DemographicReportFilter(DemographicReportFilter.filterTypeFromString("DEACTIVATED"), "exclude", factory));
    }
    if (((request.getParameter("medparams")) != null) && (!(request.getParameter("medparams").isEmpty()))) {
        String medparams = request.getParameter("medparams");
        String[] medFilters = medparams.split(" ");
        for (String filter : medFilters) {
            if (((request.getParameter(filter)) != null) && (!(request.getParameter(filter).isEmpty()))) {
                MedicalReportFilter.MedicalReportFilterType filterType = MedicalReportFilter.filterTypeFromString(filter);
                if ((((((filterType == (MedicalReportFilter.MedicalReportFilterType.DIAGNOSIS_ICD_CODE)) || (filterType == (MedicalReportFilter.MedicalReportFilterType.MISSING_DIAGNOSIS_ICD_CODE))) || (filterType == (MedicalReportFilter.MedicalReportFilterType.ALLERGY))) || (filterType == (MedicalReportFilter.MedicalReportFilterType.CURRENT_PRESCRIPTIONS))) || (filterType == (MedicalReportFilter.MedicalReportFilterType.PASTCURRENT_PRESCRIPTIONS))) || (filterType == (MedicalReportFilter.MedicalReportFilterType.PROCEDURE))) {
                    String[] vals = request.getParameterValues(filter);
                    for (String val : vals) {
                        MedicalReportFilter fil = new MedicalReportFilter(filterType, val, factory);
                        filters.add(fil);
                    }
                } else {
                    MedicalReportFilter fil = new MedicalReportFilter(filterType, request.getParameter(filter), factory);
                    filters.add(fil);
                }
            }
        }
    }
    if (((request.getParameter("persparams")) != null) && (!(request.getParameter("persparams").isEmpty()))) {
        String persparams = request.getParameter("persparams");
        String[] personnelFilters = persparams.split(" ");
        for (String filter : personnelFilters) {
            if (((request.getParameter(filter)) != null) && (!(request.getParameter(filter).isEmpty()))) {
                PersonnelReportFilter.PersonnelReportFilterType filterType = PersonnelReportFilter.filterTypeFromString(filter);
                if (filterType == (PersonnelReportFilter.PersonnelReportFilterType.DLHCP)) {
                    String[] vals = request.getParameterValues(filter);
                    for (String val : vals) {
                        PersonnelReportFilter fil = new PersonnelReportFilter(filterType, val, factory);
                        filters.add(fil);
                    }
                } else {
                    PersonnelReportFilter fil = new PersonnelReportFilter(filterType, request.getParameter(filter), factory);
                    filters.add(fil);
                }
            }
        }
    }
}