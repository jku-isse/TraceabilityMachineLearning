/**
 * This method is called from within the constructor to
 * initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is
 * always regenerated by the Form Editor.
 */
// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
private void initComponents() {
    GridBagConstraints gridBagConstraints;
    bgColorButtonGroup = new ButtonGroup();
    colorLabel = new JLabel();
    colorButton = new JButton();
    opacityLabel = new JLabel();
    opacityField = new JAttributeTextField<Double>();
    opacityPopupButton = new JPopupButton();
    setLayout(new GridBagLayout());
    colorLabel.setText(labels.getString("attribute.canvasFillColor.text"));// NOI18N

    colorLabel.setToolTipText(labels.getString("attribute.backgroundColor.toolTipText"));// NOI18N

    add(colorLabel, new GridBagConstraints());
    colorButton.setText(" ");
    colorButton.setToolTipText(labels.getString("attribute.backgroundColor.toolTipText"));// NOI18N

    colorButton.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            colorButtonPerformed(evt);
        }
    });
    add(colorButton, new GridBagConstraints());
    opacityLabel.setIcon(new ImageIcon(getClass().getResource("/org/jhotdraw/draw/action/images/attributeOpacity.png")));// NOI18N

    opacityLabel.setToolTipText(labels.getString("attribute.opacity.toolTipText"));// NOI18N

    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.insets = new Insets(0, 10, 0, 0);
    add(opacityLabel, gridBagConstraints);
    opacityField.setColumns(3);
    add(opacityField, new GridBagConstraints());
    opacityPopupButton.setIcon(new ImageIcon(getClass().getResource("/org/jhotdraw/draw/action/images/popupIcon.png")));// NOI18N

    opacityPopupButton.setToolTipText(labels.getString("attribute.opacity.toolTipText"));// NOI18N

    add(opacityPopupButton, new GridBagConstraints());
}// </editor-fold>//GEN-END:initComponents
