public static AbstractButton createZoomButton(final DrawingView view, double[] factors) {
    ResourceBundleUtil labels = ResourceBundleUtil.getBundle("org.jhotdraw.draw.Labels");
    final JPopupButton zoomPopupButton = new JPopupButton();
    labels.configureToolBarButton(zoomPopupButton, "view.zoomFactor");
    zoomPopupButton.setFocusable(false);
    zoomPopupButton.setText((((int) ((view.getScaleFactor()) * 100)) + " %"));
    view.addPropertyChangeListener(new PropertyChangeListener() {
        public void propertyChange(PropertyChangeEvent evt) {
            // String constants are interned
            if ((evt.getPropertyName()) == "scaleFactor") {
                zoomPopupButton.setText((((int) ((view.getScaleFactor()) * 100)) + " %"));
            }
        }
    });
    for (int i = 0; i < (factors.length); i++) {
        zoomPopupButton.add(new ZoomAction(view, factors[i], zoomPopupButton) {
            @Override
            public void actionPerformed(ActionEvent e) {
                super.actionPerformed(e);
                zoomPopupButton.setText((((int) ((view.getScaleFactor()) * 100)) + " %"));
            }
        });
    }
    // zoomPopupButton.setPreferredSize(new Dimension(16,16));
    zoomPopupButton.setFocusable(false);
    return zoomPopupButton;
}