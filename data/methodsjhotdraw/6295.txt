/**
 * Invokes the specified accessible parameterless method if it exists.
 *
 * @param clazz
 * 		The class on which to invoke the method.
 * @param methodName
 * 		The name of the method.
 * @return The return value of the method or METHOD_NOT_FOUND.
 * @return NoSuchMethodException if the method does not exist or is not accessible.
 */
public static Object invokeStatic(Class clazz, String methodName) throws NoSuchMethodException {
    try {
        Method method = clazz.getMethod(methodName, new Class[0]);
        Object result = method.invoke(null, new Object[0]);
        return result;
    } catch (IllegalAccessException e) {
        throw new NoSuchMethodException((methodName + " is not accessible"));
    } catch (InvocationTargetException e) {
        // The method is not supposed to throw exceptions
        throw new InternalError(e.getMessage());
    }
}