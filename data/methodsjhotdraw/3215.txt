private static Method raiseToPublicClass(Method m) {
    Class c = m.getDeclaringClass();
    if ((Modifier.isPublic(m.getModifiers())) && (Modifier.isPublic(c.getModifiers())))
        return m;
    // yes!

    // search for a public version which m overrides
    Class sc = c.getSuperclass();
    if (sc != null) {
        Method sm = GenericListener.raiseToPublicClass(m, sc);
        if (sm != null)
            return sm;

    }
    Class[] ints = c.getInterfaces();
    for (int i = 0; i < (ints.length); i++) {
        Method im = GenericListener.raiseToPublicClass(m, ints[i]);
        if (im != null)
            return im;

    }
    // no public version of m here
    return null;
}