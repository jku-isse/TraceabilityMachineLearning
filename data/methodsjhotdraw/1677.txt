/**
 * Updates the view translation taking into account the current dimension
 * of the view JComponent, the size of the drawing, and the scale factor.
 */
private void validateViewTranslation() {
    if ((getDrawing()) == null) {
        translate.x = translate.y = 0;
        return;
    }
    Point2D.Double oldTranslate = ((Point2D.Double) (translate.clone()));
    int width = getWidth();
    int height = getHeight();
    Insets insets = getInsets();
    Rectangle2D.Double r = getDrawingArea();
    Double cw = AttributeKeys.CANVAS_WIDTH.get(getDrawing());
    Double ch = AttributeKeys.CANVAS_HEIGHT.get(getDrawing());
    if ((cw == null) || (ch == null)) {
        // The canvas size is not specified.
        // Place the drawing at the top left corner.
        translate.x = Math.min(0, r.x);
        translate.y = Math.min(0, r.y);
    } else {
        // The canvas size is not specified.
        // Place the canvas at the center
        Dimension preferred = getPreferredSize();
        if ((cw != null) && (ch != null)) {
            if ((cw * (scaleFactor)) < width) {
                translate.x = ((width / (scaleFactor)) - cw) / (-2.0);
            }
            if ((ch * (scaleFactor)) < height) {
                translate.y = ((height / (scaleFactor)) - ch) / (-2.0);
            }
        }
        if (((r.y) - (translate.y)) < ((insets.top) / (scaleFactor))) {
            // We cut off the upper part of the drawing -> shift the canvas down
            translate.y = r.y;
        } else
            if ((((r.y) - (translate.y)) + (r.height)) > ((height - (insets.bottom)) / (scaleFactor))) {
                // We cut off the lower part of the drawing -> shift the canvas up
                translate.y = ((r.y) + (r.height)) - ((height - (insets.bottom)) / (scaleFactor));
            }

        if (((r.x) - (translate.x)) < ((insets.left) / (scaleFactor))) {
            // We cut off the left part of the drawing -> shift the canvas right
            translate.x = r.x;
        } else
            if ((((r.x) - (translate.x)) + (r.width)) > ((width - (insets.right)) / (scaleFactor))) {
                // We cut off the right part of the drawing -> shift the canvas left
                translate.x = ((r.x) + (r.width)) - ((width - (insets.right)) / (scaleFactor));
            }

    }
    // Move the canvas out of the center if needed
    if (!(oldTranslate.equals(translate))) {
        fireViewTransformChanged();
        repaint();
    }
}