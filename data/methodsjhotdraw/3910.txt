/**
 * Displays a custom file chooser sheet with a custom approve button.
 *
 * @param parent
 * 		the parent component of the dialog;
 * 		can be <code>null</code>
 * @param approveButtonText
 * 		the text of the <code>ApproveButton</code>
 * @param listener
 * 		The listener for SheetEvents.
 */
public static void showSheet(final JFileChooser chooser, Component parent, String approveButtonText, SheetListener listener) {
    if (approveButtonText != null) {
        chooser.setApproveButtonText(approveButtonText);
        chooser.setDialogType(JFileChooser.CUSTOM_DIALOG);
    }
    // Begin Create Dialog
    Frame frame = (parent instanceof Frame) ? ((Frame) (parent)) : ((Frame) (SwingUtilities.getAncestorOfClass(Frame.class, parent)));
    String title = chooser.getUI().getDialogTitle(chooser);
    chooser.getAccessibleContext().setAccessibleDescription(title);
    final JSheet sheet = new JSheet(frame);
    sheet.addSheetListener(listener);
    Container contentPane = sheet.getContentPane();
    contentPane.setLayout(new BorderLayout());
    contentPane.add(chooser, BorderLayout.CENTER);
    // End Create Dialog
    final ActionListener actionListener = new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            int option;
            if (evt.getActionCommand().equals("ApproveSelection")) {
                option = JFileChooser.APPROVE_OPTION;
            } else {
                option = JFileChooser.CANCEL_OPTION;
            }
            sheet.hide();
            sheet.fireOptionSelected(chooser, option);
            chooser.removeActionListener(this);
        }
    };
    chooser.addActionListener(actionListener);
    sheet.addWindowListener(new WindowAdapter() {
        public void windowClosing(WindowEvent e) {
            sheet.fireOptionSelected(chooser, JFileChooser.CANCEL_OPTION);
            chooser.removeActionListener(actionListener);
        }
    });
    chooser.rescanCurrentDirectory();
    sheet.pack();
    sheet.show();
    sheet.toFront();
}