/**
 * Use least-squares method to find Bezier control points for region.
 *
 * @param d
 * 		Array of digitized points.
 * @param first
 * 		Indice of first point in d.
 * @param last
 * 		Indice of last point in d.
 * @param uPrime
 * 		Parameter values for region .
 * @param tHat1
 * 		Unit tangent vectors at start point.
 * @param tHat2
 * 		Unit tanget vector at end point.
 * @return A cubic bezier curve consisting of 4 control points.
 */
private static Point2D.Double[] generateBezier(ArrayList<Point2D.Double> d, int first, int last, double[] uPrime, Point2D.Double tHat1, Point2D.Double tHat2) {
    Point2D.Double[] bezCurve;
    bezCurve = new Point2D.Double[4];
    for (int i = 0; i < (bezCurve.length); i++) {
        bezCurve[i] = new Point2D.Double();
    }
    /* Use the Wu/Barsky heuristic */
    double dist = (Bezier.v2DistanceBetween2Points(d.get(last), d.get(first))) / 3.0;
    bezCurve[0] = d.get(first);
    bezCurve[3] = d.get(last);
    Bezier.v2Add(bezCurve[0], Bezier.v2Scale(tHat1, dist), bezCurve[1]);
    Bezier.v2Add(bezCurve[3], Bezier.v2Scale(tHat2, dist), bezCurve[2]);
    return bezCurve;
}