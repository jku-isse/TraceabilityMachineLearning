/**
 * Hook method which can be overriden by subclasses to provide
 * specialised behaviour in the event of a double click.
 */
protected void handleDoubleClick(MouseEvent evt) {
    if (DelegationSelectionTool.DEBUG) {
        System.out.println(("DelegationSelectionTool.handleDoubleClick " + evt));
    }
    DrawingView v = getView();
    Point pos = new Point(evt.getX(), evt.getY());
    Handle handle = v.findHandle(pos);
    if (handle != null) {
        if (DelegationSelectionTool.DEBUG) {
            System.out.println("DelegationSelectionTool.handleDoubleClick by handle");
        }
        handle.trackDoubleClick(pos, evt.getModifiersEx());
    } else {
        Point2D.Double p = viewToDrawing(pos);
        // Note: The search sequence used here, must be
        // consistent with the search sequence used by the
        // HandleTracker, the SelectAreaTracker and SelectionTool.
        // If possible, continue to work with the current selection
        Figure figure = null;
        if (isSelectBehindEnabled()) {
            for (Figure f : v.getSelectedFigures()) {
                if (f.contains(p)) {
                    figure = f;
                    break;
                }
            }
        }
        // If the point is not contained in the current selection,
        // search for a figure in the drawing.
        if (figure == null) {
            figure = v.findFigure(pos);
        }
        Figure outerFigure = figure;
        if ((figure != null) && (figure.isSelectable())) {
            if (DelegationSelectionTool.DEBUG) {
                System.out.println("DelegationSelectionTool.handleDoubleClick by figure");
            }
            Tool figureTool = figure.getTool(p);
            if (figureTool == null) {
                figure = getDrawing().findFigureInside(p);
                if (figure != null) {
                    figureTool = figure.getTool(p);
                }
            }
            if (figureTool != null) {
                setTracker(figureTool);
                figureTool.mousePressed(evt);
            } else {
                if (outerFigure.handleMouseClick(p, evt, getView())) {
                    v.clearSelection();
                    v.addToSelection(outerFigure);
                } else {
                    v.clearSelection();
                    v.addToSelection(outerFigure);
                    v.setHandleDetailLevel(((v.getHandleDetailLevel()) + 1));
                }
            }
        }
    }
    evt.consume();
}