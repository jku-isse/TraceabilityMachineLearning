/**
 * Decodes data from Base64 notation, automatically
 * detecting gzip-compressed data and decompressing it.
 *
 * @param s
 * 		the string to decode
 * @return the decoded data
 * @since 1.4
 */
public static byte[] decode(String s) {
    byte[] bytes;
    try {
        bytes = s.getBytes(Base64.PREFERRED_ENCODING);
    }// end try
     catch (UnsupportedEncodingException uee) {
        bytes = s.getBytes();
    }// end catch

    // </change>
    // Decode
    bytes = Base64.decode(bytes, 0, bytes.length);
    // Check to see if its gzip-compressed
    // GZIP Magic Two-Byte Number: 0x8b1f (35615)
    if ((bytes != null) && ((bytes.length) >= 4)) {
        int head = (((int) (bytes[0])) & 255) | (((bytes[1]) << 8) & 65280);
        if ((GZIPInputStream.GZIP_MAGIC) == head) {
            ByteArrayInputStream bais = null;
            GZIPInputStream gzis = null;
            ByteArrayOutputStream baos = null;
            byte[] buffer = new byte[2048];
            int length = 0;
            // end catch
            try {
                baos = new ByteArrayOutputStream();
                bais = new ByteArrayInputStream(bytes);
                gzis = new GZIPInputStream(bais);
                while ((length = gzis.read(buffer)) >= 0) {
                    baos.write(buffer, 0, length);
                } // end while: reading input

                // No error? Get new bytes.
                bytes = baos.toByteArray();
            }// end try
             catch (IOException e) {
                // Just return originally-decoded bytes
            } finally {
                try {
                    baos.close();
                } catch (Exception e) {
                }
                try {
                    gzis.close();
                } catch (Exception e) {
                }
                try {
                    bais.close();
                } catch (Exception e) {
                }
            }// end finally

        }// end if: gzipped

    }// end if: bytes.length >= 2

    return bytes;
}// end decode
