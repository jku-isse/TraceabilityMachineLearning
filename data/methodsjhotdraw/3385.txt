public Rectangle2D.Double getBounds2D() {
    if ((bounds) == null) {
        double x1;
        double y1;
        double x2;
        double y2;
        int size = size();
        if (size == 0) {
            x1 = y1 = x2 = y2 = 0.0F;
        } else {
            double x;
            double y;
            // handle first node
            BezierPath.Node node = get(0);
            y1 = y2 = node.y[0];
            x1 = x2 = node.x[0];
            if ((isClosed) && (((node.mask) & (BezierPath.C1_MASK)) != 0)) {
                y = node.y[1];
                x = node.x[1];
                if (x < x1) {
                    x1 = x;
                }
                if (y < y1) {
                    y1 = y;
                }
                if (x > x2) {
                    x2 = x;
                }
                if (y > y2) {
                    y2 = y;
                }
            }
            if (((node.mask) & (BezierPath.C2_MASK)) != 0) {
                y = node.y[2];
                x = node.x[2];
                if (x < x1) {
                    x1 = x;
                }
                if (y < y1) {
                    y1 = y;
                }
                if (x > x2) {
                    x2 = x;
                }
                if (y > y2) {
                    y2 = y;
                }
            }
            // handle last node
            node = get((size - 1));
            y = node.y[0];
            x = node.x[0];
            if (x < x1) {
                x1 = x;
            }
            if (y < y1) {
                y1 = y;
            }
            if (x > x2) {
                x2 = x;
            }
            if (y > y2) {
                y2 = y;
            }
            if (((node.mask) & (BezierPath.C1_MASK)) != 0) {
                y = node.y[1];
                x = node.x[1];
                if (x < x1) {
                    x1 = x;
                }
                if (y < y1) {
                    y1 = y;
                }
                if (x > x2) {
                    x2 = x;
                }
                if (y > y2) {
                    y2 = y;
                }
            }
            if ((isClosed) && (((node.mask) & (BezierPath.C2_MASK)) != 0)) {
                y = node.y[2];
                x = node.x[2];
                if (x < x1) {
                    x1 = x;
                }
                if (y < y1) {
                    y1 = y;
                }
                if (x > x2) {
                    x2 = x;
                }
                if (y > y2) {
                    y2 = y;
                }
            }
            // handle all other nodes
            for (int i = 1, n = size - 1; i < n; i++) {
                node = get(i);
                y = node.y[0];
                x = node.x[0];
                if (x < x1) {
                    x1 = x;
                }
                if (y < y1) {
                    y1 = y;
                }
                if (x > x2) {
                    x2 = x;
                }
                if (y > y2) {
                    y2 = y;
                }
                if (((node.mask) & (BezierPath.C1_MASK)) != 0) {
                    y = node.y[1];
                    x = node.x[1];
                    if (x < x1) {
                        x1 = x;
                    }
                    if (y < y1) {
                        y1 = y;
                    }
                    if (x > x2) {
                        x2 = x;
                    }
                    if (y > y2) {
                        y2 = y;
                    }
                }
                if (((node.mask) & (BezierPath.C2_MASK)) != 0) {
                    y = node.y[2];
                    x = node.x[2];
                    if (x < x1) {
                        x1 = x;
                    }
                    if (y < y1) {
                        y1 = y;
                    }
                    if (x > x2) {
                        x2 = x;
                    }
                    if (y > y2) {
                        y2 = y;
                    }
                }
            }
        }
        bounds = new Rectangle2D.Double(x1, y1, (x2 - x1), (y2 - y1));
    }
    return ((Rectangle2D.Double) (bounds.clone()));
}