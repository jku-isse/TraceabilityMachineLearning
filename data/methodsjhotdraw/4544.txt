/**
 * This method is called from within the constructor to
 * initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is
 * always regenerated by the Form Editor.
 */
// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
@SuppressWarnings("unchecked")
private void initComponents() {
    GridBagConstraints gridBagConstraints;
    jPanel1 = new JPanel();
    toleranceLabel = new JLabel();
    zoomSlider = new JSlider();
    showDigitizedCheck = new JCheckBox();
    showPreprocessedCheck = new JCheckBox();
    showPolylineCheck = new JCheckBox();
    showBezierCheck = new JCheckBox();
    showControlsCheck = new JCheckBox();
    eraseButton = new JButton();
    dumpButton = new JButton();
    setLayout(new BorderLayout());
    jPanel1.setBorder(BorderFactory.createEmptyBorder(12, 20, 20, 20));
    jPanel1.setLayout(new GridBagLayout());
    toleranceLabel.setText("Zoom:");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    jPanel1.add(toleranceLabel, gridBagConstraints);
    zoomSlider.setMaximum(800);
    zoomSlider.setMinimum(100);
    zoomSlider.addChangeListener(new ChangeListener() {
        public void stateChanged(ChangeEvent evt) {
            zoomChanged(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel1.add(zoomSlider, gridBagConstraints);
    showDigitizedCheck.setText("Show Source Points");
    showDigitizedCheck.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            checkboxPerformed(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    jPanel1.add(showDigitizedCheck, gridBagConstraints);
    showPreprocessedCheck.setText("Show Preprocessed Points");
    showPreprocessedCheck.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            checkboxPerformed(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    jPanel1.add(showPreprocessedCheck, gridBagConstraints);
    showPolylineCheck.setSelected(true);
    showPolylineCheck.setText("Show Polyline");
    showPolylineCheck.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            checkboxPerformed(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    gridBagConstraints.insets = new Insets(0, 20, 0, 0);
    jPanel1.add(showPolylineCheck, gridBagConstraints);
    showBezierCheck.setSelected(true);
    showBezierCheck.setText("Show Bezier Path");
    showBezierCheck.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            checkboxPerformed(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    gridBagConstraints.insets = new Insets(0, 20, 0, 0);
    jPanel1.add(showBezierCheck, gridBagConstraints);
    showControlsCheck.setText("Show Bezier Controls");
    showControlsCheck.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            checkboxPerformed(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    jPanel1.add(showControlsCheck, gridBagConstraints);
    eraseButton.setText("Erase");
    eraseButton.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            eraseButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = GridBagConstraints.EAST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new Insets(6, 0, 0, 0);
    jPanel1.add(eraseButton, gridBagConstraints);
    dumpButton.setText("Dump");
    dumpButton.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            dumpButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = GridBagConstraints.EAST;
    gridBagConstraints.insets = new Insets(6, 0, 0, 0);
    jPanel1.add(dumpButton, gridBagConstraints);
    add(jPanel1, BorderLayout.NORTH);
}// </editor-fold>//GEN-END:initComponents
