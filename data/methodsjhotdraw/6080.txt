/**
 * This method is called from within the constructor to
 * initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is
 * always regenerated by the Form Editor.
 */
// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
private void initComponents() {
    GridBagConstraints gridBagConstraints;
    findLabel = new JLabel();
    replaceLabel = new JLabel();
    buttonPanel = new JPanel();
    replaceAllButton = new JButton();
    replaceButton = new JButton();
    replaceAndFindButton = new JButton();
    previousButton = new JButton();
    nextButton = new JButton();
    optionsPanel = new JPanel();
    ignoreCaseCheck = new JCheckBox();
    wrapAroundCheck = new JCheckBox();
    modeCombo = new JComboBox();
    findScrollPane = new JScrollPane();
    findField = new JTextArea();
    replaceScrollPane = new JScrollPane();
    replaceField = new JTextArea();
    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Find");
    findLabel.setText(labels.getString("find.findLabel.text"));// NOI18N

    replaceLabel.setText(labels.getString("find.replaceWithLabel.text"));// NOI18N

    buttonPanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 0));
    replaceAllButton.setText(labels.getString("find.replaceAll.text"));// NOI18N

    replaceAllButton.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            replaceAll(evt);
        }
    });
    buttonPanel.add(replaceAllButton);
    replaceButton.setText(labels.getString("find.replace.text"));// NOI18N

    replaceButton.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            replace(evt);
        }
    });
    buttonPanel.add(replaceButton);
    replaceAndFindButton.setText(labels.getString("find.replaceAndFind.text"));// NOI18N

    replaceAndFindButton.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            replaceAndFind(evt);
        }
    });
    buttonPanel.add(replaceAndFindButton);
    previousButton.setText(labels.getString("find.previous.text"));// NOI18N

    previousButton.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            previous(evt);
        }
    });
    buttonPanel.add(previousButton);
    nextButton.setText(labels.getString("find.next.text"));// NOI18N

    nextButton.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            next(evt);
        }
    });
    buttonPanel.add(nextButton);
    optionsPanel.setLayout(new GridBagLayout());
    ignoreCaseCheck.setText(labels.getString("find.ignoreCase.text"));// NOI18N

    ignoreCaseCheck.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            ignoreCasePerformed(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.anchor = GridBagConstraints.EAST;
    gridBagConstraints.weightx = 1.0;
    optionsPanel.add(ignoreCaseCheck, gridBagConstraints);
    wrapAroundCheck.setText(labels.getString("find.wrapAround.text"));// NOI18N

    wrapAroundCheck.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            wrapAroundPerformed(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.insets = new Insets(0, 10, 0, 0);
    optionsPanel.add(wrapAroundCheck, gridBagConstraints);
    modeCombo.setModel(new DefaultComboBoxModel(new String[]{ "Contains", "Starts with", "Word" }));
    modeCombo.addItemListener(new ItemListener() {
        public void itemStateChanged(ItemEvent evt) {
            modeChanged(evt);
        }
    });
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.insets = new Insets(0, 10, 0, 0);
    optionsPanel.add(modeCombo, gridBagConstraints);
    findField.setLineWrap(true);
    findField.setRows(2);
    findScrollPane.setViewportView(findField);
    replaceField.setLineWrap(true);
    replaceField.setRows(2);
    replaceScrollPane.setViewportView(replaceField);
    GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout).add(layout.createSequentialGroup().add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout).add(layout.createSequentialGroup().addContainerGap().add(buttonPanel, org.jdesktop.layout.GroupLayout, 684, Short.MAX_VALUE)).add(layout.createSequentialGroup().add(11, 11, 11).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout).add(replaceLabel).add(findLabel)).addPreferredGap(RELATED).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout).add(optionsPanel, org.jdesktop.layout.GroupLayout, 600, Short.MAX_VALUE).add(replaceScrollPane).add(findScrollPane)))).addContainerGap()));
    layout.setVerticalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout).add(layout.createSequentialGroup().addContainerGap().add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout).add(findLabel).add(findScrollPane, org.jdesktop.layout.GroupLayout, org.jdesktop.layout.GroupLayout, org.jdesktop.layout.GroupLayout)).addPreferredGap(RELATED).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout).add(replaceLabel).add(replaceScrollPane, org.jdesktop.layout.GroupLayout, org.jdesktop.layout.GroupLayout, org.jdesktop.layout.GroupLayout)).addPreferredGap(RELATED).add(optionsPanel, org.jdesktop.layout.GroupLayout, org.jdesktop.layout.GroupLayout, org.jdesktop.layout.GroupLayout).add(14, 14, 14).add(buttonPanel, org.jdesktop.layout.GroupLayout, org.jdesktop.layout.GroupLayout, org.jdesktop.layout.GroupLayout).addContainerGap(30, Short.MAX_VALUE)));
    pack();
}// </editor-fold>//GEN-END:initComponents
