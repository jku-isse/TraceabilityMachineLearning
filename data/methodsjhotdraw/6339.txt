/**
 * Installs an intenal frame preferences handler.
 * On first run, sets the frame to its preferred size at the top left
 * corner of the desktop pane.
 * On subsequent runs, sets the frame the last size and location where
 * the user had placed it before.
 *
 * @param prefs
 * 		Preferences for storing/retrieving preferences values.
 * @param name
 * 		Base name of the preference.
 * @param window
 * 		The window for which to track preferences.
 */
public static void installInternalFramePrefsHandler(final Preferences prefs, final String name, JInternalFrame window, JDesktopPane desktop) {
    Rectangle screenBounds = desktop.getBounds();
    screenBounds.setLocation(0, 0);
    Insets screenInsets = desktop.getInsets();
    screenBounds.x += screenInsets.left;
    screenBounds.y += screenInsets.top;
    screenBounds.width -= (screenInsets.left) + (screenInsets.right);
    screenBounds.height -= (screenInsets.top) + (screenInsets.bottom);
    Dimension preferredSize = window.getPreferredSize();
    Dimension minSize = window.getMinimumSize();
    Rectangle bounds = new Rectangle(prefs.getInt((name + ".x"), 0), prefs.getInt((name + ".y"), 0), Math.max(minSize.width, prefs.getInt((name + ".width"), preferredSize.width)), Math.max(minSize.height, prefs.getInt((name + ".height"), preferredSize.height)));
    if (!(screenBounds.contains(bounds))) {
        bounds.x = (screenBounds.x) + (((screenBounds.width) - (bounds.width)) / 2);
        bounds.y = (screenBounds.y) + (((screenBounds.height) - (bounds.height)) / 2);
        Rectangle.intersect(screenBounds, bounds, bounds);
    }
    window.setBounds(bounds);
    window.addComponentListener(new ComponentAdapter() {
        public void componentMoved(ComponentEvent evt) {
            prefs.putInt((name + ".x"), evt.getComponent().getX());
            prefs.putInt((name + ".y"), evt.getComponent().getY());
        }

        public void componentResized(ComponentEvent evt) {
            prefs.putInt((name + ".width"), evt.getComponent().getWidth());
            prefs.putInt((name + ".height"), evt.getComponent().getHeight());
        }
    });
}