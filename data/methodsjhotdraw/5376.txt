// DRAWING
@Override
public void draw(Graphics2D g) {
    // super.draw(g);
    double opacity = SVGAttributeKeys.OPACITY.get(this);
    opacity = Math.min(Math.max(0.0, opacity), 1.0);
    if (opacity != 0.0) {
        Composite savedComposite = g.getComposite();
        if (opacity != 1.0) {
            g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ((float) (opacity))));
        }
        BufferedImage image = getBufferedImage();
        if (image != null) {
            if ((AttributeKeys.TRANSFORM.get(this)) != null) {
                // FIXME - We should cache the transformed image.
                // Drawing a transformed image appears to be very slow.
                Graphics2D gx = ((Graphics2D) (g.create()));
                // Use same rendering hints like parent graphics
                gx.setRenderingHints(g.getRenderingHints());
                gx.transform(AttributeKeys.TRANSFORM.get(this));
                gx.drawImage(image, ((int) (rectangle.x)), ((int) (rectangle.y)), ((int) (rectangle.width)), ((int) (rectangle.height)), null);
                gx.dispose();
            } else {
                g.drawImage(image, ((int) (rectangle.x)), ((int) (rectangle.y)), ((int) (rectangle.width)), ((int) (rectangle.height)), null);
            }
        } else {
            Shape shape = getTransformedShape();
            g.setColor(Color.red);
            g.setStroke(new BasicStroke());
            g.draw(shape);
        }
        if (opacity != 1.0) {
            g.setComposite(savedComposite);
        }
    }
}