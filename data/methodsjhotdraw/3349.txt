/**
 * Removes sequences of coincident points.
 * <p>
 * The purpose of this method, is to clean up a list of digitized points
 * for later processing using method {@link #splitAtCorners}.
 * <p>
 * Use this method only, if you know that the digitized points contain no
 * quantization errors - which is never the case, unless you want to debug
 * the curve fitting algorithm of this class.
 *
 * @param digitizedPoints
 * 		Digitized points
 * @return Digitized points without subsequent duplicates.
 */
private static ArrayList<Point2D.Double> removeCoincidentPoints(List<Point2D.Double> digitizedPoints) {
    ArrayList<Point2D.Double> cleaned = new ArrayList<Point2D.Double>();
    if ((digitizedPoints.size()) > 0) {
        Point2D.Double prev = digitizedPoints.get(0);
        cleaned.add(prev);
        for (Point2D.Double p : digitizedPoints) {
            if (!(prev.equals(p))) {
                cleaned.add(p);
                prev = p;
            }
        }
    }
    return cleaned;
}