/**
 * Convenience method for reading a base64-encoded
 * file and decoding it.
 *
 * @param filename
 * 		Filename for reading encoded data
 * @return decoded byte array or null if unsuccessful
 * @since 2.1
 */
public static byte[] decodeFromFile(String filename) {
    byte[] decodedData = null;
    Base64.InputStream bis = null;
    // end catch: IOException
    try {
        // Set up some useful variables
        File file = new File(filename);
        byte[] buffer = null;
        int length = 0;
        int numBytes = 0;
        // Check for size of file
        if ((file.length()) > (Integer.MAX_VALUE)) {
            System.err.println((("File is too big for this convenience method (" + (file.length())) + " bytes)."));
            return null;
        }// end if: file too big for int index

        buffer = new byte[((int) (file.length()))];
        // Open a stream
        bis = new Base64.InputStream(new BufferedInputStream(new FileInputStream(file)), Base64.DECODE);
        // Read until done
        while ((numBytes = bis.read(buffer, length, 4096)) >= 0)
            length += numBytes;

        // Save in a variable to return
        decodedData = new byte[length];
        System.arraycopy(buffer, 0, decodedData, 0, length);
    }// end try
     catch (IOException e) {
        System.err.println(("Error decoding from file " + filename));
    } finally {
        try {
            bis.close();
        } catch (Exception e) {
        }
    }// end finally

    return decodedData;
}// end decodeFromFile
