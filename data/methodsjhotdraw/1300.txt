public void mouseReleased(MouseEvent evt) {
    if (BezierTool.DEBUG) {
        System.out.println(("BezierTool.mouseReleased " + evt));
    }
    isWorking = false;
    if ((createdFigure.getNodeCount()) > ((nodeCountBeforeDrag) + 1)) {
        createdFigure.willChange();
        BezierPath figurePath = createdFigure.getBezierPath();
        BezierPath digitizedPath = new BezierPath();
        for (int i = (nodeCountBeforeDrag) - 1, n = figurePath.size(); i < n; i++) {
            digitizedPath.add(figurePath.get(((nodeCountBeforeDrag) - 1)));
            figurePath.remove(((nodeCountBeforeDrag) - 1));
        }
        BezierPath fittedPath = calculateFittedCurve(digitizedPath);
        // figurePath.addAll(digitizedPath);
        figurePath.addAll(fittedPath);
        createdFigure.setBezierPath(figurePath);
        createdFigure.changed();
        nodeCountBeforeDrag = createdFigure.getNodeCount();
    }
    if ((finishWhenMouseReleased) == (Boolean.TRUE)) {
        if ((createdFigure.getNodeCount()) > 1) {
            finishCreation(createdFigure, creationView);
            createdFigure = null;
            finishWhenMouseReleased = null;
            return;
        }
    } else
        if ((finishWhenMouseReleased) == null) {
            finishWhenMouseReleased = Boolean.FALSE;
        }

    // repaint dotted line
    Rectangle r = new Rectangle(anchor);
    r.add(mouseLocation);
    r.add(evt.getPoint());
    r.grow(1, 1);
    fireAreaInvalidated(r);
    anchor.x = evt.getX();
    anchor.y = evt.getY();
    mouseLocation = evt.getPoint();
}