public boolean contains(Point2D.Double p) {
    getPath();
    if ((AttributeKeys.TRANSFORM.get(this)) != null) {
        try {
            p = ((Point2D.Double) (AttributeKeys.TRANSFORM.get(this).inverseTransform(p, new Point2D.Double())));
        } catch (NoninvertibleTransformException ex) {
            ex.printStackTrace();
        }
    }
    boolean isClosed = AttributeKeys.CLOSED.get(getChild(0));
    if ((isClosed && ((AttributeKeys.FILL_COLOR.get(this)) == null)) && ((SVGAttributeKeys.FILL_GRADIENT.get(this)) == null)) {
        return getHitShape().contains(p);
    }
    /* return cachedPath.contains(p2); */
    double tolerance = Math.max(2.0F, ((AttributeKeys.getStrokeTotalWidth(this)) / 2.0));
    if ((isClosed || ((AttributeKeys.FILL_COLOR.get(this)) != null)) || ((SVGAttributeKeys.FILL_GRADIENT.get(this)) != null)) {
        if (getPath().contains(p)) {
            return true;
        }
        /**
         * 2d
         */
        double grow = AttributeKeys.getPerpendicularHitGrowth(this);
        GrowStroke gs = new GrowStroke(((float) (grow)), ((float) ((AttributeKeys.getStrokeTotalWidth(this)) * (AttributeKeys.STROKE_MITER_LIMIT.get(this)))));
        if (gs.createStrokedShape(getPath()).contains(p)) {
            return true;
        } else {
            if (isClosed) {
                return false;
            }
        }
    }
    if (!isClosed) {
        if (Shapes.outlineContains(getPath(), p, tolerance)) {
            return true;
        }
    }
    return false;
}