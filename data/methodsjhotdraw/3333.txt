/**
 * Evaluate a Bezier curve at a particular parameter value.
 *
 * @param degree
 * 		The degree of the bezier curve.
 * @param V
 * 		Array of control points.
 * @param t
 * 		Parametric value to find point for.
 */
private static Point2D.Double bezierII(int degree, Point2D.Double[] V, double t) {
    int i;
    int j;
    Point2D.Double q;/* Point on curve at parameter t */

    Point2D.Double[] vTemp;/* Local copy of control points */

    /* Copy array */
    vTemp = new Point2D.Double[degree + 1];
    for (i = 0; i <= degree; i++) {
        vTemp[i] = ((Point2D.Double) (V[i].clone()));
    }
    /* Triangle computation */
    for (i = 1; i <= degree; i++) {
        for (j = 0; j <= (degree - i); j++) {
            vTemp[j].x = ((1.0 - t) * (vTemp[j].x)) + (t * (vTemp[(j + 1)].x));
            vTemp[j].y = ((1.0 - t) * (vTemp[j].y)) + (t * (vTemp[(j + 1)].y));
        }
    }
    q = vTemp[0];
    return q;
}