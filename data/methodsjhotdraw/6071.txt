public void fetchAvailableCharSets() {
    if ((CharacterSetAccessory.availableCharSets) == null) {
        new Worker() {
            public Object construct() {
                SortedMap<String, Charset> sm = Charset.availableCharsets();
                LinkedList<String> list = new LinkedList<String>();
                for (String key : sm.keySet()) {
                    if (!(key.startsWith("x-"))) {
                        list.add(key);
                    }
                }
                CharacterSetAccessory.availableCharSets = list.toArray();
                Arrays.sort(CharacterSetAccessory.availableCharSets);
                return null;
            }

            public void finished(Object value) {
                Object selectedItem = charSetCombo.getSelectedItem();
                charSetCombo.setModel(new DefaultComboBoxModel(CharacterSetAccessory.availableCharSets));
                charSetCombo.setSelectedItem(selectedItem);
                charSetCombo.setEnabled(true);
            }
        }.start();
    } else {
        Object selectedItem = charSetCombo.getSelectedItem();
        charSetCombo.setModel(new DefaultComboBoxModel(CharacterSetAccessory.availableCharSets));
        charSetCombo.setSelectedItem(selectedItem);
        charSetCombo.setEnabled(true);
    }
}