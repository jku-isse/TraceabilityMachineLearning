/**
 * Creates a menu bar.
 *
 * @param p
 * 		The view for which the menu bar is created. This may be
 * 		<code>null</code> if the menu bar is attached to an application
 * 		component, such as the screen menu bar or a floating palette window.
 */
protected JMenuBar createMenuBar(View p) {
    JMenuBar mb = new JMenuBar();
    mb.add(createFileMenu(p));
    for (JMenu mm : getModel().createMenus(this, p)) {
        mb.add(mm);
    }
    // Determine the index of the help menu, if one has been provided
    // Merge the help menu if one has been provided by the application model,
    // otherwise just add it.
    String helpMenuText = labels.getString("help.text");
    int index = mb.getComponentCount();
    for (int i = 0, n = mb.getComponentCount(); i < n; i++) {
        JMenu m = ((JMenu) (mb.getComponent(i)));
        if (((m.getText()) != null) && (m.getText().equals(helpMenuText))) {
            index = i;
            break;
        }
    }
    mb.add(createWindowMenu(p), index);
    return mb;
}