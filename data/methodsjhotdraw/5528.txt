/**
 * Transforms the figure.
 *
 * @param tx
 * 		the transformation.
 */
public void transform(AffineTransform tx) {
    if (((AttributeKeys.TRANSFORM.get(this)) != null) || (((tx.getType()) & (AffineTransform.TYPE_TRANSLATION)) != (tx.getType()))) {
        if ((AttributeKeys.TRANSFORM.get(this)) == null) {
            AttributeKeys.TRANSFORM.basicSet(this, ((AffineTransform) (tx.clone())));
        } else {
            AffineTransform t = AttributeKeys.TRANSFORM.getClone(this);
            t.preConcatenate(tx);
            AttributeKeys.TRANSFORM.basicSet(this, t);
        }
    } else {
        Point2D.Double anchor = getStartPoint();
        Point2D.Double lead = getEndPoint();
        setBounds(((Point2D.Double) (tx.transform(anchor, anchor))), ((Point2D.Double) (tx.transform(lead, lead))));
        if (((SVGAttributeKeys.FILL_GRADIENT.get(this)) != null) && (!(SVGAttributeKeys.FILL_GRADIENT.get(this).isRelativeToFigureBounds()))) {
            Gradient g = SVGAttributeKeys.FILL_GRADIENT.getClone(this);
            g.transform(tx);
            SVGAttributeKeys.FILL_GRADIENT.basicSet(this, g);
        }
        if (((SVGAttributeKeys.STROKE_GRADIENT.get(this)) != null) && (!(SVGAttributeKeys.STROKE_GRADIENT.get(this).isRelativeToFigureBounds()))) {
            Gradient g = SVGAttributeKeys.STROKE_GRADIENT.getClone(this);
            g.transform(tx);
            SVGAttributeKeys.STROKE_GRADIENT.basicSet(this, g);
        }
    }
    invalidate();
}