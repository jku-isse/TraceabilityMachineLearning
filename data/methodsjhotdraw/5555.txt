private Shape getTextShape() {
    if ((cachedTextShape) == null) {
        String text = getText();
        if ((text == null) || ((text.length()) == 0)) {
            text = " ";
        }
        FontRenderContext frc = getFontRenderContext();
        HashMap<TextAttribute, Object> textAttributes = new HashMap<TextAttribute, Object>();
        textAttributes.put(TextAttribute.FONT, getFont());
        if (AttributeKeys.FONT_UNDERLINE.get(this)) {
            textAttributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        }
        TextLayout textLayout = new TextLayout(text, textAttributes, frc);
        AffineTransform tx = new AffineTransform();
        tx.translate(coordinates[0].x, coordinates[0].y);
        switch (SVGAttributeKeys.TEXT_ANCHOR.get(this)) {
            case END :
                tx.translate((-(textLayout.getAdvance())), 0);
                break;
            case MIDDLE :
                tx.translate(((-(textLayout.getAdvance())) / 2.0), 0);
                break;
            case START :
                break;
        }
        tx.rotate(rotates[0]);
        /* if (TRANSFORM.get(this) != null) {
        tx.preConcatenate(TRANSFORM.get(this));
        }
         */
        cachedTextShape = tx.createTransformedShape(textLayout.getOutline(tx));
        cachedTextShape = textLayout.getOutline(tx);
    }
    return cachedTextShape;
}