/**
 * A <draw:custom-shape> represents a shape that is capable of rendering
 * complex figures. It is offering font work and extrusion functiona-
 * lity. A custom shape may have a geometry that influences its shape.
 * This geometry may be visualized in office application user
 * interfaces, for instance by displaying interaction handles, that
 * provide a simple way to modify the geometry.
 */
private ODGFigure readCustomShapeElement(IXMLElement elem) throws IOException {
    String styleName = elem.getAttribute("style-name", ODGConstants.DRAWING_NAMESPACE, null);
    Map<AttributeKey, Object> a = styles.getAttributes(styleName, "graphic");
    Rectangle2D.Double figureBounds = new Rectangle2D.Double(toLength(elem.getAttribute("x", ODGConstants.SVG_NAMESPACE, "0"), 1), toLength(elem.getAttribute("y", ODGConstants.SVG_NAMESPACE, "0"), 1), toLength(elem.getAttribute("width", ODGConstants.SVG_NAMESPACE, "0"), 1), toLength(elem.getAttribute("height", ODGConstants.SVG_NAMESPACE, "0"), 1));
    ODGFigure figure = null;
    for (IXMLElement child : elem.getChildrenNamed("enhanced-geometry", ODGConstants.DRAWING_NAMESPACE)) {
        figure = readEnhancedGeometryElement(child, a, figureBounds);
    }
    return figure;
}