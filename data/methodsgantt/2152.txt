public void fireDelayObservation() {
    // System.err.println("fireDelayObservation");
    myToday = new Date();
    if (ourCriticProcess) {
        ourCriticProcess = false;
        myTaskManager.processCriticalPath(myRoot);
        ArrayList projectTasks = myTree.getProjectTasks();
        if ((projectTasks.size()) != 0)
            for (int i = 0; i < (projectTasks.size()); i++)
                myTaskManager.processCriticalPath(((TaskNode) (projectTasks.get(i))));


        // System.out.println("critical path processed");
    }
    Iterator itTasks = Arrays.asList(myTaskManager.getTasks()).iterator();
    while (itTasks.hasNext()) {
        Task task = ((Task) (itTasks.next()));
        Delay delay = calculateDelay(task);
        Iterator itObservers = myObservers.iterator();
        while (itObservers.hasNext()) {
            DelayObserver observer = ((DelayObserver) (itObservers.next()));
            observer.setDelay(task, delay);
            // System.out.println("delay " + delay.getType() + " (critical = "+delay.CRITICAL+")");
        } 
    } 
}