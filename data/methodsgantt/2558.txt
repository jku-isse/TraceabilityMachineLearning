public GanttDialogDate(JDialog parent, GanttCalendar date, boolean showFixedDateCheckBox) {
    super(parent, GanttLanguage.getInstance().getText("chooseDate"), true);
    myFixedDate = date.isFixed();
    setResizable(false);
    panel = new GanttPanelDate(date);
    // Container contentPane = getContentPane();
    JComponent contentPane = Box.createVerticalBox();
    // contentPane.setLayout(new GridLayout(3,1, 5, 5));
    JPanel p = new JPanel();
    JButton ok = new JButton(language.getText("ok"));
    getRootPane().setDefaultButton(ok);
    p.add(ok);
    ok.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            setVisible(false);
            value = GanttDialogDate.OK;
        }
    });
    JButton cancel = new JButton(language.getText("cancel"));
    p.add(cancel);
    cancel.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            setVisible(false);
            panel.cancel();
        }
    });
    contentPane.add(panel);
    if (showFixedDateCheckBox) {
        final JCheckBox fixedDate = new JCheckBox(language.getText("fixedDate"));
        fixedDate.setSelected(myFixedDate);
        fixedDate.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                myFixedDate = fixedDate.isSelected();
            }
        });
        contentPane.add(fixedDate);
    }
    contentPane.add(p);
    getContentPane().add(contentPane);
    addWindowListener(new WindowAdapter() {
        public void windowClosing(WindowEvent arg0) {
            panel.cancel();
        }
    });
    pack();
    setResizable(false);
    DialogAligner.center(this, getParent());
    applyComponentOrientation(language.getComponentOrientation());
}