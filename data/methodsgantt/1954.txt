/**
 * Renders prevLoad, with curLoad serving as a load right border marker and style hint
 */
private void renderLoads(LoadDistribution.Load prevLoad, LoadDistribution.Load curLoad, LinkedList offsets, /* <Offset> */
int ypos, String suffix) {
    final Date prevEnd = curLoad.startDate;
    final Date prevStart = prevLoad.startDate;
    GraphicPrimitiveContainer.Rectangle nextRect = createRectangle(offsets, prevStart, prevEnd, ypos);
    if (nextRect == null) {
        return;
    }
    String style;
    if (prevLoad.isResourceUnavailable()) {
        style = "dayoff";
    } else {
        suffix += ((curLoad.load) == 0) ? ".last" : "";
        if ((prevLoad.load) < 100.0F) {
            style = "load.underload";
        } else
            if ((prevLoad.load) > 100.0F) {
                style = "load.overload";
            } else {
                style = "load.normal";
            }

        style += suffix;
    }
    nextRect.setStyle(style);
    nextRect.setModelObject(new ResourceLoadRenderer.ResourceLoad(prevLoad.load));
}