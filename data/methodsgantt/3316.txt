private void initComponents() {
    this.titles = new Vector(3);
    this.titles.add(CustomColumnsPanel.language.getText("name"));
    this.titles.add(CustomColumnsPanel.language.getText("typeClass"));
    this.titles.add(CustomColumnsPanel.language.getText("default"));
    final CustomColumnsPanel.CustomColumnTableModel model = new CustomColumnsPanel.CustomColumnTableModel(customColumnStorage);
    table = new JNTable(model);
    table.setPreferredVisibleRowCount(10);
    this.add(table);
    table.getColumn(((String) (titles.get(0)))).setPreferredWidth(150);
    table.getColumn(((String) (titles.get(1)))).setPreferredWidth(150);
    table.getColumn(((String) (titles.get(2)))).setPreferredWidth(200);
    table.setHighlighters(new org.jdesktop.swing.decorator.HighlighterPipeline(new Highlighter[]{ AlternateRowHighlighter.floralWhite, AlternateRowHighlighter.quickSilver }));
    table.getTable().setSortable(false);
    buttonAdd = new JButton(CustomColumnsPanel.language.getText("add"));
    buttonAdd.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            myUIfacade.getUndoManager().undoableEdit("TaskPropertyNewColumn", new Runnable() {
                public void run() {
                    CustomColumn customColumn = new CustomColumn();
                    GanttDialogCustomColumn d = new GanttDialogCustomColumn(myUIfacade, customColumn);
                    d.setVisible(true);
                    if (d.isOk()) {
                        myColumnManager.addNewCustomColumn(customColumn);
                        model.refreshData(customColumnStorage);
                        repaint();
                    }
                }
            });
        }
    });
    this.add(buttonAdd, BorderLayout.EAST);
    buttonDel = new JButton(CustomColumnsPanel.language.getText("delete"));
    buttonDel.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            int[] selectedRowsIndexes = table.getTable().getSelectedRows();
            for (int i = 0; i < (selectedRowsIndexes.length); i++) {
                String nameToDel = ((String) (model.getValueAt(selectedRowsIndexes[i], 0)));
                myColumnManager.deleteCustomColumn(nameToDel);
            }
            model.refreshData(customColumnStorage);
            repaint();
        }
    });
    this.add(buttonDel, BorderLayout.EAST);
}