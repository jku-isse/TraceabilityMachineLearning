private boolean _isLooping(TaskDependency dep, Set tasksInvolved) {
    Task dependant = dep.getDependant();
    if (tasksInvolved.contains(dependant)) {
        return true;
    }
    for (Iterator tasks = tasksInvolved.iterator(); tasks.hasNext();) {
        Task nextInvolved = ((Task) (tasks.next()));
        if (false == (getTaskHierarchy().areUnrelated(nextInvolved, dependant))) {
            return true;
        }
    }
    tasksInvolved.add(dependant);
    {
        TaskDependency[] nextDeps = dependant.getDependenciesAsDependee().toArray();
        for (int i = 0; i < (nextDeps.length); i++) {
            if (_isLooping(nextDeps[i], tasksInvolved)) {
                return true;
            }
        }
    }
    Task[] nestedTasks = getTaskHierarchy().getNestedTasks(dependant);
    for (int i = 0; i < (nestedTasks.length); i++) {
        tasksInvolved.add(nestedTasks[i]);
        TaskDependency[] nextDeps = nestedTasks[i].getDependenciesAsDependee().toArray();
        for (int j = 0; j < (nextDeps.length); j++) {
            if (_isLooping(nextDeps[j], tasksInvolved)) {
                return true;
            }
        }
    }
    tasksInvolved.remove(dependant);
    return false;
}