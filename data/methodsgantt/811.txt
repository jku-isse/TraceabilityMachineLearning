public void dragGestureRecognized(DragGestureEvent dge) {
    Point ptDragOrigin = dge.getDragOrigin();
    TreePath path = treetable.getTree().getPathForLocation(ptDragOrigin.x, ptDragOrigin.y);
    if (path == null) {
        return;
    }
    // Work out the offset of the drag point from the TreePath bounding
    // rectangle origin
    Rectangle raPath = treetable.getTree().getPathBounds(path);
    offsetPoint.setLocation(((ptDragOrigin.x) - (raPath.x)), ((ptDragOrigin.y) - (raPath.y)));
    // Get the cell renderer (which is a JLabel) for the path being dragged
    // JLabel lbl = (JLabel)
    // treetable.getTree().getCellRenderer().getTreeCellRendererComponent
    // (
    // treetable, // tree
    // path.getLastPathComponent(), // value
    // false, // isSelected (dont want a colored background)
    // treetable.getTree().isExpanded(path), // isExpanded
    // ((DefaultTreeTableModel)treetable.getModel()).isLeaf(path.getLastPathComponent()),
    // // isLeaf
    // 0, // row (not important for rendering)
    // false // hasFocus (dont want a focus rectangle)
    // );
    JLabel lbl = null;
    lbl.setSize(((int) (raPath.getWidth())), ((int) (raPath.getHeight())));// <--

    // The
    // layout
    // manager
    // would
    // normally
    // do
    // this
    // Get a buffered image of the selection for dragging a ghost image
    ghostImage = new BufferedImage(((int) (raPath.getWidth())), ((int) (raPath.getHeight())), BufferedImage.TYPE_INT_ARGB_PRE);
    Graphics2D g2 = ghostImage.createGraphics();
    // Ask the cell renderer to paint itself into the BufferedImage
    g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC, 0.5F));// Make

    // the
    // image
    // ghostlike
    lbl.paint(g2);
    // Now paint a gradient UNDER the ghosted JLabel text (but not under the
    // icon if any)
    // Note: this will need tweaking if your icon is not positioned to the
    // left of the text
    Icon icon = lbl.getIcon();
    int nStartOfText = (icon == null) ? 0 : (icon.getIconWidth()) + (lbl.getIconTextGap());
    g2.setComposite(AlphaComposite.getInstance(AlphaComposite.DST_OVER, 0.5F));// Make the gradient ghostlike

    g2.setPaint(new GradientPaint(nStartOfText, 0, SystemColor.controlShadow, getWidth(), 0, new Color(255, 255, 255, 0)));
    g2.fillRect(nStartOfText, 0, getWidth(), ghostImage.getHeight());
    g2.dispose();
    treetable.getTree().setSelectionPath(path);// Select this path in the

    // tree
    // Wrap the path being transferred into a Transferable object
    Transferable transferable = new GanttTree2.GanttTransferableTreePath(path);
    // Remember the path being dragged (because if it is being moved, we
    // will have to delete it later)
    dragPath = path;
    // We pass our drag image just in case it IS supported by the platform
    dge.startDrag(null, ghostImage, new Point(5, 5), transferable, this);
}