/**
 * Delete the currant task
 *
 * @param confirmation
 * 		TODO
 */
public void deleteTasks(boolean confirmation) {
    getTabs().setSelectedIndex(UIFacade.GANTT_INDEX);
    final DefaultMutableTreeNode[] cdmtn = tree.getSelectedNodes();
    if ((cdmtn == null) || ((cdmtn.length) == 0)) {
        getUIFacade().setStatusText(language.getText("msg21"));
        return;
    }
    UIFacade.Choice choice = getUIFacade().showConfirmationDialog(language.getText("msg19"), language.getText("question"));
    if (choice == (UIFacade.Choice.YES)) {
        getUndoManager().undoableEdit("Task removed", new Runnable() {
            public void run() {
                ArrayList fathers = new ArrayList();
                tree.stopEditing();
                for (int i = 0; i < (cdmtn.length); i++) {
                    if (((cdmtn[i]) != null) && ((cdmtn[i]) instanceof TaskNode)) {
                        Task ttask = ((Task) (cdmtn[i].getUserObject()));
                        getTaskManager().deleteTask(ttask);
                        ttask.delete();
                        DefaultMutableTreeNode father = tree.getFatherNode(ttask);
                        tree.removeCurrentNode(cdmtn[i]);
                        if (father != null) {
                            GanttTask taskFather = ((GanttTask) (father.getUserObject()));
                            AdjustTaskBoundsAlgorithm alg = getTaskManager().getAlgorithmCollection().getAdjustTaskBoundsAlgorithm();
                            alg.run(taskFather);
                            // taskFather.refreshDateAndAdvancement(tree);
                            father.setUserObject(taskFather);
                            fathers.add(father);
                        }
                    } else
                        if (((cdmtn[i]) != null) && ((cdmtn[i]) instanceof BlankLineNode)) {
                            ((GanttTreeTableModel) (tree.getTreeTable().getTreeTableModel())).removeNodeFromParent(cdmtn[i]);
                        }

                }
                for (int i = 0; i < (fathers.size()); i++) {
                    DefaultMutableTreeNode father = ((DefaultMutableTreeNode) (fathers.get(i)));
                    if ((father.getChildCount()) == 0)
                        ((Task) (father.getUserObject())).setProjectTask(false);

                }
            }
        });
        refreshProjectInfos();
        area.repaint();
        this.repaint2();
        getResourcePanel().area.repaint();
        setAskForSave(true);
        // setQuickSave (true);
        // quickSave("deleteTasks");
    }
}