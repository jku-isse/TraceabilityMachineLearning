public ChartModelBase.Offset[] calculateOffsets(TimeFrame timeFrame, TimeUnit frameBottomUnit, Date bottomUnitStartDate, TimeUnit offsetUnit, int frameBottomUnitWidth) {
    ChartModelBase.Offset[] result;
    // Date bottomUnitEndDate = timeFrame.getUnitFinish(frameBottomUnit, unitIndex);
    if (offsetUnit.equals(frameBottomUnit)) {
        result = new ChartModelBase.Offset[]{ new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, bottomUnitStartDate, 0, null) };
    } else
        if (frameBottomUnit.isConstructedFrom(offsetUnit)) {
            // java.util.List buf = new ArrayList();
            int outerFrameUnitCount = timeFrame.getUnitCount(offsetUnit);
            TimeFrame innerFrame = myStack.createTimeFrame(bottomUnitStartDate, frameBottomUnit, offsetUnit);
            int offsetUnitCount = innerFrame.getUnitCount(offsetUnit);
            result = new ChartModelBase.Offset[offsetUnitCount];
            for (int i = 0; i < offsetUnitCount; i++) {
                Date offsetEnd = innerFrame.getUnitFinish(offsetUnit, i);
                int offsetPixels = ((i + 1) * frameBottomUnitWidth) / outerFrameUnitCount;
                result[i] = new ChartModelBase.Offset(offsetUnit, bottomUnitStartDate, offsetEnd, offsetPixels, null);
            }
        } else {
            throw new RuntimeException("We should not be here");
        }

    return result;
}