public void changeDefaultValue(String colName, Object newDefaultValue) throws CustomColumnsException {
    // if (customColumns.containsKey(colName))
    // {
    // CustomColumn cc = (CustomColumn) customColumns.get(colName);
    // cc.setDefaultValue(newDefaultValue);
    // ((CustomColumn)
    // mapIdCustomColum.get(cc.getId())).setDefaultValue(newDefaultValue);
    // }
    String id = getIdFromName(colName);
    if (id != null) {
        CustomColumn cc = ((CustomColumn) (mapIdCustomColum.get(id)));
        if (newDefaultValue.getClass().isAssignableFrom(cc.getType()))
            cc.setDefaultValue(newDefaultValue);
        else {
            try {
                if (cc.getType().equals(Boolean.class))
                    cc.setDefaultValue(Boolean.valueOf(newDefaultValue.toString()));
                else
                    if (cc.getType().equals(Integer.class)) {
                        try {
                            cc.setDefaultValue(Integer.valueOf(newDefaultValue.toString()));
                        } catch (NumberFormatException e) {
                            cc.setDefaultValue(null);
                        }
                    } else
                        if (cc.getType().equals(Double.class)) {
                            try {
                                cc.setDefaultValue(Double.valueOf(newDefaultValue.toString()));
                            } catch (NumberFormatException e) {
                                cc.setDefaultValue(null);
                            }
                        } else
                            if (GregorianCalendar.class.isAssignableFrom(cc.getType())) {
                                try {
                                    Date dateValue = DateUtils.parseDate(newDefaultValue.toString());
                                    cc.setDefaultValue(new GanttCalendar(dateValue));
                                } catch (ParseException e) {
                                    cc.setDefaultValue(null);
                                }
                            }



            } catch (Exception ee) {
                throw new CustomColumnsException(ee);
            }
        }
    }
}