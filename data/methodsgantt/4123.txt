/**
 * Set the value for the customColumn whose name is given.
 *
 * @param customColName
 * 		The name of the CustomColumn.
 * @param value
 * 		The associated value.
 * @throws CustomColumnsException
 * 		Throws if <code>customColName</code> does not exist or
 * 		<code>value</code> class does not match the CustomColum
 * 		class.
 */
public void setValue(String customColName, Object value) throws CustomColumnsException {
    if (!(myColumnStorage.exists(customColName)))
        throw new CustomColumnsException(CustomColumnsException.DO_NOT_EXIST, customColName);

    Class c1 = myColumnStorage.getCustomColumn(customColName).getType();
    if (value == null) {
        mapCustomColumnValue.remove(customColName);
        return;
    }
    Class c2 = value.getClass();
    // System.out.println(c1 +" - " + c2);
    if ((value != null) && (!(c1.isAssignableFrom(c2))))
        throw new CustomColumnsException(CustomColumnsException.CLASS_MISMATCH, null);
    else
        mapCustomColumnValue.put(customColName, value);

}