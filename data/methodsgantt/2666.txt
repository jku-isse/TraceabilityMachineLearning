/**
 * Construct the general panel
 */
private void constructGeneralPanel() {
    generalPanel = new JPanel(new GridBagLayout());
    // first row
    nameLabel1 = new JLabel(((language.getText("name")) + ":"));
    nameField1 = new JTextField(20);
    nameField1.setName("name_of_task");
    if (!(onlyOneTask)) {
        nameLabel1.setVisible(false);
        nameField1.setVisible(false);
    }
    durationLabel1 = new JLabel(((language.getText("length")) + ":"));
    durationField1 = new JTextField(8);
    durationField1.setName("length");
    firstRowPanel1 = new JPanel(flowL);
    setFirstRow(firstRowPanel1, gbc, nameLabel1, nameField1, durationLabel1, durationField1);
    // second row
    percentCompleteLabel1 = new JLabel(language.getText("advancement"));// Progress

    SpinnerNumberModel spinnerModel = new SpinnerNumberModel(0, 0, 100, 1);
    percentCompleteSlider = new JSpinner(spinnerModel);
    secondRowPanel1 = new JPanel(flowL);
    secondRowPanel1.add(percentCompleteLabel1);
    // secondRowPanel1.add(percentCompleteField1);
    secondRowPanel1.add(percentCompleteSlider);
    priorityLabel1 = new JLabel(language.getText("priority"));
    secondRowPanel1.add(priorityLabel1);
    priorityComboBox = new JComboBox();
    priorityComboBox.addItem(language.getText("low"));
    priorityComboBox.addItem(language.getText("normal"));
    priorityComboBox.addItem(language.getText("hight"));
    priorityComboBox.setEditable(false);
    secondRowPanel1.add(priorityComboBox);
    // third row
    startDateLabel1 = new JLabel(((language.getText("dateOfBegining")) + ":"));
    startDateField1 = new JTextField(12);
    startDateField1.setEditable(false);
    finishDateLabel1 = new JLabel(((language.getText("dateOfEnd")) + ":"));
    finishDateField1 = new JTextField(12);
    finishDateField1.setEditable(false);
    thirdDateComboBox = new JComboBox();
    thirdDateComboBox.addItem("");
    thirdDateComboBox.addItem(language.getText("earliestBegin"));
    thirdDateComboBox.setName("third");
    thirdDateComboBox.setSelectedIndex(selectedTasks[0].getThirdDateConstraint());
    thirdDateField1 = new JTextField(12);
    thirdDateField1.setEditable(false);
    ImageIcon icon = new ImageIcon(getClass().getResource("/icons/calendar_16.gif"));
    startDateButton1 = new TestGanttRolloverButton(icon);
    startDateButton1.setName("start");
    startDateButton1.setToolTipText(GanttProject.getToolTip(language.getText("chooseDate")));
    finishDateButton1 = new TestGanttRolloverButton(icon);
    finishDateButton1.setName("finish");
    finishDateButton1.setToolTipText(GanttProject.getToolTip(language.getText("chooseDate")));
    thirdDateButton1 = new TestGanttRolloverButton(icon);
    thirdDateButton1.setName("third");
    thirdDateButton1.setToolTipText(GanttProject.getToolTip(language.getText("chooseDate")));
    if ((selectedTasks[0].getThirdDateConstraint()) == 0)
        thirdDateButton1.setEnabled(false);

    thirdRowPanel1 = new JPanel(flowL);
    thirdRowPanel1.setBorder(new TitledBorder(new EtchedBorder(), language.getText("date")));
    JPanel startDatePanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 5, 0));
    startDatePanel.add(startDateLabel1);
    myStartDatePicker = createDatePicker(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            setStart(new GanttCalendar(((org.jdesktop.swing.JXDatePicker) (e.getSource())).getDate()), false);
        }
    });
    startDatePanel.add(myStartDatePicker);
    // startDatePanel.add(startDateButton1);
    JPanel finishDatePanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 5, 0));
    finishDatePanel.add(finishDateLabel1);
    myEndDatePicker = createDatePicker(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            setEnd(new GanttCalendar(((org.jdesktop.swing.JXDatePicker) (e.getSource())).getDate()), false);
        }
    });
    finishDatePanel.add(myEndDatePicker);
    // finishDatePanel.add(finishDateButton1);
    JPanel thirdDatePanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 5, 0));
    thirdDatePanel.add(thirdDateComboBox);
    myThirdDatePicker = createDatePicker(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            setThird(new GanttCalendar(((org.jdesktop.swing.JXDatePicker) (e.getSource())).getDate()), false);
        }
    });
    thirdDatePanel.add(myThirdDatePicker);
    // thirdDatePanel.add(thirdDateButton1);
    // thirdRowPanel1.add(startDatePanel);
    // thirdRowPanel1.add(finishDatePanel);
    // thirdRowPanel1.add(thirdDatePanel);
    addUsingGBL(thirdRowPanel1, startDatePanel, gbc, 0, 0, 1, 1);
    addUsingGBL(thirdRowPanel1, finishDatePanel, gbc, 0, 1, 1, 1);
    addUsingGBL(thirdRowPanel1, thirdDatePanel, gbc, 0, 2, 1, 1);
    // fourth row
    JCheckBox checkBox = constructCheckBox();
    lastRowPanel1 = new JPanel(flowL);
    if (checkBox != null)
        lastRowPanel1.add(checkBox);

    JPanel shapePanel = new JPanel();
    shapePanel.setLayout(new BorderLayout());
    JLabel lshape = new JLabel((("  " + (language.getText("shape"))) + " "));
    shapeComboBox = new JPaintCombo(ShapeConstants.PATTERN_LIST);
    shapePanel.add(lshape, BorderLayout.WEST);
    shapePanel.add(shapeComboBox, BorderLayout.CENTER);
    colorButton = new JButton(language.getText("colorButton"));
    colorButton.setBackground(selectedTasks[0].getColor());
    final String colorChooserTitle = language.getText("selectColor");
    colorButton.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            JDialog dialog;
            dialog = JColorChooser.createDialog(GanttTaskPropertiesBean.this, colorChooserTitle, true, GanttDialogProperties.colorChooser, new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    colorButton.setBackground(GanttDialogProperties.colorChooser.getColor());
                    isColorChanged = true;
                }
            }, new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    // nothing to do for "Cancel"
                }
            });
            /* AbstractColorChooserPanel[] panels =
            GanttDialogProperties.colorChooser.getChooserPanels();
            GanttDialogProperties.colorChooser.removeChooserPanel(panels[0]);
            GanttDialogProperties.colorChooser.addChooserPanel(panels[0]);
             */
            GanttDialogProperties.colorChooser.setColor(colorButton.getBackground());
            dialog.show();
        }
    });
    colorSpace = new JButton(language.getText("defaultColor"));
    colorSpace.setBackground(GanttGraphicArea.taskDefaultColor);
    colorSpace.setToolTipText(GanttProject.getToolTip(language.getText("resetColor")));
    colorSpace.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            colorButton.setBackground(GanttGraphicArea.taskDefaultColor);
            isColorChanged = true;
        }
    });
    colorPanel = new JPanel();
    colorPanel.setLayout(new BorderLayout());
    colorPanel.add(colorButton, "West");
    colorPanel.add(colorSpace, "Center");
    colorPanel.add(shapePanel, BorderLayout.EAST);
    lastRowPanel1.add(colorPanel);
    // ---Set GridBagConstraints constant
    gbc.anchor = GridBagConstraints.WEST;
    gbc.insets.right = 15;
    gbc.insets.left = 10;
    gbc.insets.top = 10;
    addUsingGBL(generalPanel, firstRowPanel1, gbc, 0, 0, 1, 1);
    addUsingGBL(generalPanel, secondRowPanel1, gbc, 0, 1, 1, 1);
    addUsingGBL(generalPanel, thirdRowPanel1, gbc, 0, 2, 1, 1);
    gbc.gridx = 0;
    gbc.gridy = 3;
    gbc.gridwidth = 1;
    gbc.gridheight = GridBagConstraints.RELATIVE;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.weighty = 1;
    generalPanel.add(lastRowPanel1, gbc);
    // The panel for the web link
    webLinkPanel = new JPanel(flowL);
    lblWebLink = new JLabel(language.getText("webLink"));
    webLinkPanel.add(lblWebLink);
    tfWebLink = new JTextField(30);
    webLinkPanel.add(tfWebLink);
    bWebLink = new TestGanttRolloverButton(new ImageIcon(getClass().getResource("/icons/web_16.gif")));
    bWebLink.setToolTipText(GanttProject.getToolTip(language.getText("openWebLink")));
    webLinkPanel.add(bWebLink);
    bWebLink.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            // link to open the web link
            try {
                if (!(BrowserControl.displayURL(tfWebLink.getText()))) {
                    GanttDialogInfo gdi = new GanttDialogInfo(null, GanttDialogInfo.ERROR, GanttDialogInfo.YES_OPTION, language.getText("msg4"), language.getText("error"));
                    gdi.show();
                }
            } catch (Exception ex) {
            }
        }
    });
    gbc.gridy = 4;
    generalPanel.add(webLinkPanel, gbc);
}