TimeFrameImpl(Date baseDate, TimeUnit topUnit, TimeUnit bottomUnit) {
    // if (!topUnit.isConstructedFrom(bottomUnit)) {
    // throw new RuntimeException("Top unit="+topUnit+" is not constructed
    // from bottom unit="+bottomUnit);
    // }
    if (topUnit instanceof TimeUnitFunctionOfDate) {
        topUnit = ((TimeUnitFunctionOfDate) (topUnit)).createTimeUnit(baseDate);
    }
    myBaseDate = baseDate;
    myHighestFrameable = calculateHighestFrameableUnit(topUnit, bottomUnit);
    myLowestFrameable = calculateLowestFrameableUnit(topUnit, bottomUnit);
    // if (myHighestFrameable!=topUnit || myLowestFrameable!=bottomUnit) {
    // throw new RuntimeException("Current implementation requires all units
    // to be frameable. myHighestFrameable="+myHighestFrameable+"
    // myLowestFrameable="+myLowestFrameable);
    // }
    myTopUnit = topUnit;
    myBottomUnit = bottomUnit;
    myCalendar = CalendarFactory.newCalendar();
    myCalendar.setTime(myBaseDate);
    if ((myLowestFrameable) == null) {
        throw new RuntimeException("Failed to find any time frameable unit :(");
    }
    myStartDate = myLowestFrameable.adjustLeft(myBaseDate);
    if (myStartDate.after(myBaseDate)) {
        throw new IllegalStateException("Start date is after base date");
    }
    // System.err.println("TimeFrame.init: myStartDate="+myStartDate+"
    // myBaseDate="+myBaseDate);
    // myEndDate = calculateEndDate();
    // myNextFrameStartDate = shiftDate(myBaseDate, myTopUnit, 1);
}