public Shape(boolean compactDisplay) {
    this.compactDisplay = compactDisplay;
    JPanel choicePanel = new JPanel(new BorderLayout(4, 4));
    preview = new PreviewPanel();
    if (compactDisplay) {
        JPanel prompts = new JPanel(new GridLayout(3, 1, 4, 4));
        prompts.add(new JLabel("Pattern:", JLabel.RIGHT));
        prompts.add(new JLabel("Foreground:", JLabel.RIGHT));
        prompts.add(new JLabel("Background:", JLabel.RIGHT));
        JPanel menus = new JPanel(new GridLayout(3, 1, 4, 4));
        menus.add((patternCombo = new JPaintCombo(ShapeConstants.PATTERN_LIST)));
        menus.add((foregroundCombo = new JPaintCombo(ColorConstants.SHORT_LIST)));
        menus.add((backgroundCombo = new JPaintCombo(ColorConstants.SHORT_LIST)));
        patternCombo.addActionListener(this);
        foregroundCombo.addActionListener(this);
        backgroundCombo.addActionListener(this);
        choicePanel.add(BorderLayout.WEST, prompts);
        choicePanel.add(BorderLayout.CENTER, menus);
        preview.setPattern(((ShapePaint) (patternCombo.getSelectedPaint())));
    } else {
        JPanel labels = new JPanel(new GridLayout(1, 3, 4, 4));
        labels.add(new JLabel("Pattern:"));
        labels.add(new JLabel("Foreground:"));
        labels.add(new JLabel("Background:"));
        patternList = new JPaintList(ShapeConstants.PATTERN_LIST);
        foregroundList = new JPaintList(ColorConstants.SHORT_LIST);
        backgroundList = new JPaintList(ColorConstants.SHORT_LIST);
        JPanel lists = new JPanel(new GridLayout(1, 3, 4, 4));
        lists.add(new JScrollPane(patternList, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER));
        lists.add(new JScrollPane(foregroundList, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER));
        lists.add(new JScrollPane(backgroundList, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER));
        patternList.addListSelectionListener(this);
        foregroundList.addListSelectionListener(this);
        backgroundList.addListSelectionListener(this);
        choicePanel.add(BorderLayout.NORTH, labels);
        choicePanel.add(BorderLayout.CENTER, lists);
        preview.setPattern(((ShapePaint) (patternList.getSelectedPaint())));
    }
    setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
    setLayout(new BorderLayout(8, 8));
    add(BorderLayout.NORTH, choicePanel);
    add(BorderLayout.CENTER, preview);
}