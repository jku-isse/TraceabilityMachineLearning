private void openDocument(Document document) throws IOException {
    if ((document.getDescription().toLowerCase().endsWith(".xml")) || (document.getDescription().toLowerCase().endsWith(".gan"))) {
        boolean locked = document.acquireLock();
        if (!locked) {
            getUIFacade().logErrorMessage(new Exception(language.getText("msg13")));
        }
        document.read();
        if (documentsMRU.add(document)) {
            updateMenuMRU();
        }
        if (locked) {
            projectDocument = document;
        }
        this.setTitle(((((language.getText("appliTitle")) + " [") + (document.getDescription())) + "]"));
        setAskForSave(false);
        if ((myPreviousStates.size()) != 0) {
            bComparePrev.setEnabled(true);
        }
    } else {
        String errorMessage = ((language.getText("msg2")) + "
") + (document.getDescription());
        throw new IOException(errorMessage);
    }
    Chart[] charts = Mediator.getPluginManager().getCharts();
    for (int i = 0; i < (charts.length); i++) {
        charts[i].setTaskManager(myTaskManager);
        charts[i].reset();
    }
    // myDelayManager.fireDelayObservation(); // it is done in repaint2
    addMouseListenerToAllContainer(this.getComponents());
    getTaskManager().processCriticalPath(((TaskNode) (tree.getRoot())));
    ArrayList projectTasks = tree.getProjectTasks();
    if ((projectTasks.size()) != 0)
        for (int i = 0; i < (projectTasks.size()); i++)
            getTaskManager().processCriticalPath(((TaskNode) (projectTasks.get(i))));


    // repaint2();
}