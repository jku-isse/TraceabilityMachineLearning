/**
 * set the maximum size for all strings.
 */
void getMaxSize() {
    /* <String> */
    List customFields = myProject.getCustomColumnsStorage().getCustomColumnsNames();
    iMaxSize = 0;
    for (int i = 0; i < (myTasks.length); i++) {
        Task task = myTasks[i];
        if (csvOptions.bExportTaskID) {
            String s = "" + (task.getTaskID());
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportTaskName) {
            String s = "" + (getName(task));
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportTaskStartDate) {
            String s = "" + (task.getStart());
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportTaskEndDate) {
            String s = "" + (task.getEnd());
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportTaskDuration) {
            String s = "" + (task.getDuration().getLength());
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportTaskPercent) {
            String s = "" + (task.getCompletionPercentage());
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportTaskWebLink) {
            String s = "" + (getWebLink(((GanttTask) (task))));
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportTaskResources) {
            String s = "" + (getAssignments(task));
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportTaskNotes) {
            String s = "" + (task.getNotes());
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        CustomColumnsValues customValues = task.getCustomValues();
        for (int j = 0; j < (customFields.size()); j++) {
            Object nextCustomFieldValue = customValues.getValue(String.valueOf(customFields.get(j)));
            String nextValueAsString = String.valueOf(nextCustomFieldValue);
            if ((nextValueAsString.length()) > (iMaxSize)) {
                iMaxSize = nextValueAsString.length();
            }
        }
    }
    // parse all resources
    for (int i = 0; i < (resources.size()); i++) {
        HumanResource p = ((HumanResource) (resources.get(i)));
        if (csvOptions.bExportResourceID) {
            String s = "" + (p.getId());
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportResourceName) {
            String s = "" + (p.getName());
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportResourceMail) {
            String s = "" + (p.getMail());
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportResourcePhone) {
            String s = "" + (p.getPhone());
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        if (csvOptions.bExportResourceRole) {
            Role role = p.getRole();
            String sRoleID = "0";
            if (role != null)
                sRoleID = role.getPersistentID();

            String s = "" + sRoleID;
            if ((s.length()) > (iMaxSize))
                iMaxSize = s.length();

        }
        List customProps = p.getCustomProperties();
        for (int j = 0; j < (customProps.size()); j++) {
            CustomProperty nextProperty = ((CustomProperty) (customProps.get(j)));
            if ((nextProperty.getValueAsString().length()) > (iMaxSize)) {
                iMaxSize = nextProperty.getValueAsString().length();
            }
        }
    }
}// get maxIndentation end
