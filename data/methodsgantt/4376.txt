public void setDuration(final TaskLength length) {
    // If duration of task was set to 0 or less do not change it
    if ((length.getLength()) <= 0) {
        return;
    }
    if ((myDurationChange) == null) {
        myDurationChange = new TaskImpl.DurationChange();
        myDurationChange.myEventSender = myPropertiesEventSender;
        myDurationChange.setValue(length);
    } else {
        TaskLength currentLength = ((TaskLength) (myDurationChange.myFieldValue));
        if (((currentLength.getLength()) - (length.getLength())) == 0) {
            return;
        }
    }
    TaskLength prevLength = ((TaskLength) (myDurationChange.myFieldValue));
    // System.err.println("new duration="+length+"
    // previous="+prevLength);
    // Date prevEnd =
    // myDurationChange.getCachedDate((int)prevLength.getLength());
    Date prevEnd = null;
    // System.err.println("previously cached shift="+prevEnd);
    myDurationChange.setValue(length);
    GanttCalendar newEnd;
    Date shifted;
    if (prevEnd == null) {
        // System.err.println("no prev, length="+length.getLength());
        shifted = this.shiftDate(getStart().getTime(), length);
    } else {
        // System.err.println("yes prev,
        // length="+(length.getLength()-prevLength.getLength()));
        shifted = this.shiftDate(prevEnd, getManager().createLength(length.getTimeUnit(), ((length.getLength()) - (prevLength.getLength()))));
    }
    // System.err.println("caching shift="+shifted+" for
    // duration="+length);
    // myDurationChange.cacheDate(shifted, (int)length.getLength());
    newEnd = new GanttCalendar(shifted);
    setEnd(newEnd);
    myActivities = null;
}