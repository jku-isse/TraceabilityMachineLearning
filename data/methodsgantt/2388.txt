/* public void doExport() {
try {
doExport(myExportFileInfo);
} catch (Exception e) {
e.printStackTrace();
getUIFacade().showErrorDialog(e);
}
}

private void doExport(ExportFileInfo info) throws Exception {
Exporter[] exporters = Mediator.getPluginManager().getExporters();
for (int i=0; i<exporters.length; i++) {
Exporter next = exporters[i];
Collection extensions = Arrays.asList(next.getFileExtensions());
if (extensions.contains(info.getFileExtension())) {
next.setContext(myProject, myUIFacade);
next.run(info.myFile);
continue;
}
}
switch (info.myFormat) {
case ExportFileInfo.FORMAT_XFIG: {
// show a message on the status bar
setStatusText(getLanguage().getText("xfigexport"));
String filename = info.myFile.toString();
if (!filename.toUpperCase().endsWith(".FIG"))
filename += ".fig";

GanttXFIGSaver saver = new GanttXFIGSaver(myProject);
saver.save(new FileOutputStream(new File(filename)));
break;
}

case ExportFileInfo.FORMAT_CSV: {
// show a message on the status bar
setStatusText(getLanguage().getText("csvexport"));
String filename = info.myFile.toString();
if (!filename.toUpperCase().endsWith(".CSV"))
filename += ".csv";

GanttCSVExport saver = new GanttCSVExport(myProject, myOptions
.getCSVOptions());
saver.save(new FileOutputStream(new File(filename)));
break;
}
}
}
 */
private GanttLanguage getLanguage() {
    return GanttLanguage.getInstance();
}