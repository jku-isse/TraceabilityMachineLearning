private void scroll() {
    GanttCalendar min = null;
    GanttCalendar max = null;
    Date scrollDate = null;
    Iterator it = null;
    if (myTaskSelectionManager.getSelectedTasks().isEmpty()) {
        // scrollDate = getTaskManager().getProjectStart();
        it = Arrays.asList(getTaskManager().getTasks()).iterator();
    } else {
        it = myTaskSelectionManager.getSelectedTasks().iterator();
    }
    while (it.hasNext()) {
        Task t = ((Task) (it.next()));
        GanttCalendar dStart = t.getStart();
        GanttCalendar dEnd = t.getEnd();
        min = (min == null) ? dStart.Clone() : (min.compareTo(dStart)) > 0 ? dStart.Clone() : min;
        max = (max == null) ? dEnd.Clone() : (max.compareTo(dEnd)) < 0 ? dEnd.Clone() : max;
    } 
    // no tasks defined, nothing to do
    if ((min == null) || (max == null))
        return;

    TimeUnit defaultUnit = getTimeUnitStack().getDefaultTimeUnit();
    final TaskLength selectionLength = getTaskManager().createLength(defaultUnit, min.getTime(), max.getTime());
    final TaskLength viewLength = getChartModel().getVisibleLength();
    float viewLengthInDefaultUnits = viewLength.getLength(defaultUnit);
    // if selection is shorter than view well scroll right,
    // otherwise well scroll left
    // delta is measured in the bottom line time units
    final float delta = ((selectionLength.getValue()) - viewLengthInDefaultUnits) / 2;
    scrollDate = GPCalendar.PLAIN.shiftDate(min.getTime(), getTaskManager().createLength(defaultUnit, delta));
    myScrollingManager.scrollLeft(scrollDate);
}