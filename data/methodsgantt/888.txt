public String getToolTip(Task task, int type) {
    String res = "<html><body bgcolor=#EAEAEA>";
    res += ((("<b>" + (task.toString())) + "</b>") + "<br>") + (task.getStart());
    if (type != 1) {
        res += "  -  " + (task.getEnd());
    }
    if (type == 1) {
        res += "<br>" + (language.getText("meetingPoint"));
    }
    res += "<br><b>Pri</b> " + ((task.getPriority()) == 0 ? language.getText("low") : (task.getPriority()) == 1 ? language.getText("normal") : language.getText("hight"));
    ResourceAssignment[] assignments = task.getAssignments();
    if ((assignments.length) > 0) {
        res += "<br><b>Assign to </b><br>";
        for (int j = 0; j < (assignments.length); j++) {
            res += ("&nbsp;&nbsp;" + (assignments[j].getResource().getName())) + "<br>";
        }
    }
    if (((task.getNotes()) != null) && (!(task.getNotes().equals("")))) {
        String notes = task.getNotes();
        res += "<br><b>Notes </b>: ";
        int maxLength = 150;
        if ((notes.length()) > maxLength) {
            notes = notes.substring(0, maxLength);
            int i = maxLength - 1;
            for (; (i >= 0) && ((notes.charAt(i)) !=  ); i--);
            notes = notes.substring(0, i);
            notes += " <b>( . . . )</b>";
        }
        notes = notes.replaceAll("
", "<br>");
        res += ("<font size="-2">" + notes) + "</font>";
    }
    res += "</body></html>";
    return res;
}