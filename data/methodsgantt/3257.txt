WeekendConfigurationPage(GPCalendar calendar, I18N i18n, IGanttProject project) throws Exception {
    myCalendar = calendar;
    myCalendar.getPublicHolidays().clear();
    myProject = ((GanttProject) (project));
    myI18N = i18n;
    String[] dayNames = myI18N.getDayNames();
    myPanel = new JPanel(new BorderLayout());
    choosePublicHoliday = new JLabel(GanttLanguage.getInstance().getText("choosePublicHoliday"));
    chooseWeekend = new JLabel(GanttLanguage.getInstance().getText("chooseWeekend"));
    JCCalendar = new JComboBox();
    JCCalendar.addItem(GanttLanguage.getInstance().getText("none"));
    XMLCalendarOpen open = new XMLCalendarOpen();
    open.setCalendars();
    String[] labels = open.getLabels();
    calendars = open.getCalendarResources();
    for (int i = 0; i < (labels.length); i++)
        JCCalendar.addItem(labels[i]);

    JCCalendar.addActionListener(this);
    JPanel publicHolidayPanel = new JPanel(new BorderLayout());
    publicHolidayPanel.add(choosePublicHoliday, BorderLayout.WEST);
    publicHolidayPanel.add(JCCalendar);
    myBox.add(publicHolidayPanel);
    myBox.add(new JPanel());
    Box cb = Box.createVerticalBox();
    /* Table to keep all the JCheckBoxes with days of the week.
    It is used to check if in project creation dialog all days are marked as weekend. If they are, day selected 
    last will be unmarked. See class CheckBoxAction.

    If you know better solution, do not hesitate to replace this code.
     */
    JCheckBox[] allCheckBoxes = new JCheckBox[7];
    cb.add(chooseWeekend);
    int nextDay = Calendar.MONDAY;
    for (int i = 0; i < 7; i++) {
        JCheckBox nextCheckBox = new JCheckBox();
        nextCheckBox.setSelected(((calendar.getWeekDayType(nextDay)) == (GPCalendar.DayType.WEEKEND)));
        nextCheckBox.setAction(new WeekendConfigurationPage.CheckBoxAction(nextDay, dayNames[(nextDay - 1)], nextCheckBox.getModel(), allCheckBoxes));
        cb.add(nextCheckBox);
        allCheckBoxes[i] = nextCheckBox;
        if ((++nextDay) >= 8) {
            nextDay = 1;
        }
    }
    JPanel weekendPanel = new JPanel(new BorderLayout());
    weekendPanel.add(cb, BorderLayout.WEST);
    myBox.add(weekendPanel);
    myBox.add(new JPanel());
    JPanel projectPanel = new JPanel(new BorderLayout());
    projectPanel.add(myBox, BorderLayout.NORTH);
    myPanel.add(projectPanel);
    // addUsingGBL(myPanel, myBox, gbc, 0, 1, 4, 4);
}